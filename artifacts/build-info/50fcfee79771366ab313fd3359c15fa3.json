{
	"id": "50fcfee79771366ab313fd3359c15fa3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"TokenDetArrayLib.sol": {
				"content": "pragma solidity ^0.5.17;\npragma experimental ABIEncoderV2;\n\n// librray for TokenDets\nlibrary TokenDetArrayLib {\n    // Using for array of strcutres for storing mintable address and token id\n    using TokenDetArrayLib for TokenDets;\n\n    struct TokenDet {\n        address NFTAddress;\n        uint256 tokenID;\n    }\n\n    // custom type array TokenDets\n    struct TokenDets {\n        TokenDet[] array;\n    }\n\n    struct NewTokenDets {\n\n    mapping(address => bool) NFTAddressNew;\n    mapping(uint => bool) tokenIDNew;\n    }\n\n    function addTokenDet(\n        TokenDets storage self,\n        TokenDet memory _tokenDet\n        // address _mintableAddress,\n        // uint256 _tokenID\n    ) public {\n        if (!self.exists(_tokenDet)) {\n            self.array.push(_tokenDet);\n        }\n    }\n\n    function getIndexByTokenDet(\n        TokenDets storage self,\n        TokenDet memory _tokenDet\n        \n    ) internal view returns (uint256, bool) {\n        uint256 index;\n        bool tokenExists = false;\n        for (uint256 i = 0; i < self.array.length; i++) {\n            if (\n                self.array[i].NFTAddress == _tokenDet.NFTAddress &&\n                self.array[i].tokenID == _tokenDet.tokenID \n            ) {\n                index = i;\n                tokenExists = true;\n                break;\n            }\n        }\n        return (index, tokenExists);\n    }\n\n    function removeTokenDet(\n        TokenDets storage self,\n        TokenDet memory _tokenDet\n    ) internal returns (bool) {\n        (uint256 i, bool tokenExists) = self.getIndexByTokenDet(_tokenDet);\n        if (tokenExists == true) {\n            self.array[i] = self.array[self.array.length - 1];\n            self.array.pop();\n            return true;\n        }\n        return false;\n    }\n\n    function exists(\n        TokenDets storage self,\n        TokenDet memory _tokenDet\n    ) internal view returns (bool) {\n        for (uint256 i = 0; i < self.array.length; i++) {\n            if (\n                self.array[i].NFTAddress == _tokenDet.NFTAddress &&\n                self.array[i].tokenID == _tokenDet.tokenID\n            ) {\n                return true;\n            }\n        }\n        return false;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"TokenDetArrayLib.sol": {
				"TokenDetArrayLib": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"TokenDetArrayLib.sol\":85:2193  library TokenDetArrayLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"TokenDetArrayLib.sol\":85:2193  library TokenDetArrayLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xfd7c9a15\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"TokenDetArrayLib.sol\":526:788  function addTokenDet(... */\n    tag_2:\n      dup2\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_3\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_3:\n        /* \"TokenDetArrayLib.sol\":526:788  function addTokenDet(... */\n      pop\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      tag_5\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      jump(tag_6)\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n    tag_7:\n        /* \"TokenDetArrayLib.sol\":707:729  self.exists(_tokenDet) */\n      tag_9\n        /* \"TokenDetArrayLib.sol\":719:728  _tokenDet */\n      dup2\n        /* \"TokenDetArrayLib.sol\":707:711  self */\n      dup4\n        /* \"TokenDetArrayLib.sol\":707:718  self.exists */\n      tag_10\n      swap1\n        /* \"TokenDetArrayLib.sol\":707:729  self.exists(_tokenDet) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_9:\n        /* \"TokenDetArrayLib.sol\":702:782  if (!self.exists(_tokenDet)) {... */\n      tag_11\n      jumpi\n        /* \"TokenDetArrayLib.sol\":745:749  self */\n      dup2\n        /* \"TokenDetArrayLib.sol\":745:755  self.array */\n      0x00\n      add\n        /* \"TokenDetArrayLib.sol\":761:770  _tokenDet */\n      dup2\n        /* \"TokenDetArrayLib.sol\":745:771  self.array.push(_tokenDet) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x01\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"TokenDetArrayLib.sol\":745:771  self.array.push(_tokenDet) */\n      swap1\n      0x01\n      dup3\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      pop\n      pop\n      pop\n        /* \"TokenDetArrayLib.sol\":702:782  if (!self.exists(_tokenDet)) {... */\n    tag_11:\n        /* \"TokenDetArrayLib.sol\":526:788  function addTokenDet(... */\n      pop\n      pop\n      jump\t// out\n        /* \"TokenDetArrayLib.sol\":1773:2191  function exists(... */\n    tag_10:\n        /* \"TokenDetArrayLib.sol\":1885:1889  bool */\n      0x00\n        /* \"TokenDetArrayLib.sol\":1906:1915  uint256 i */\n      dup1\n        /* \"TokenDetArrayLib.sol\":1918:1919  0 */\n      0x00\n        /* \"TokenDetArrayLib.sol\":1906:1919  uint256 i = 0 */\n      swap1\n      pop\n        /* \"TokenDetArrayLib.sol\":1901:2163  for (uint256 i = 0; i < self.array.length; i++) {... */\n    tag_14:\n        /* \"TokenDetArrayLib.sol\":1925:1929  self */\n      dup4\n        /* \"TokenDetArrayLib.sol\":1925:1935  self.array */\n      0x00\n      add\n        /* \"TokenDetArrayLib.sol\":1925:1942  self.array.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"TokenDetArrayLib.sol\":1921:1922  i */\n      dup2\n        /* \"TokenDetArrayLib.sol\":1921:1942  i < self.array.length */\n      lt\n        /* \"TokenDetArrayLib.sol\":1901:2163  for (uint256 i = 0; i < self.array.length; i++) {... */\n      iszero\n      tag_15\n      jumpi\n        /* \"TokenDetArrayLib.sol\":2012:2021  _tokenDet */\n      dup3\n        /* \"TokenDetArrayLib.sol\":2012:2032  _tokenDet.NFTAddress */\n      0x00\n      add\n      mload\n        /* \"TokenDetArrayLib.sol\":1984:2032  self.array[i].NFTAddress == _tokenDet.NFTAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenDetArrayLib.sol\":1984:1988  self */\n      dup5\n        /* \"TokenDetArrayLib.sol\":1984:1994  self.array */\n      0x00\n      add\n        /* \"TokenDetArrayLib.sol\":1995:1996  i */\n      dup3\n        /* \"TokenDetArrayLib.sol\":1984:1997  self.array[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_17\n      jumpi\n      invalid\n    tag_17:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"TokenDetArrayLib.sol\":1984:2008  self.array[i].NFTAddress */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenDetArrayLib.sol\":1984:2032  self.array[i].NFTAddress == _tokenDet.NFTAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"TokenDetArrayLib.sol\":1984:2094  self.array[i].NFTAddress == _tokenDet.NFTAddress &&... */\n      dup1\n      iszero\n      tag_19\n      jumpi\n      pop\n        /* \"TokenDetArrayLib.sol\":2077:2086  _tokenDet */\n      dup3\n        /* \"TokenDetArrayLib.sol\":2077:2094  _tokenDet.tokenID */\n      0x20\n      add\n      mload\n        /* \"TokenDetArrayLib.sol\":2052:2056  self */\n      dup5\n        /* \"TokenDetArrayLib.sol\":2052:2062  self.array */\n      0x00\n      add\n        /* \"TokenDetArrayLib.sol\":2063:2064  i */\n      dup3\n        /* \"TokenDetArrayLib.sol\":2052:2065  self.array[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_20\n      jumpi\n      invalid\n    tag_20:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"TokenDetArrayLib.sol\":2052:2073  self.array[i].tokenID */\n      0x01\n      add\n      sload\n        /* \"TokenDetArrayLib.sol\":2052:2094  self.array[i].tokenID == _tokenDet.tokenID */\n      eq\n        /* \"TokenDetArrayLib.sol\":1984:2094  self.array[i].NFTAddress == _tokenDet.NFTAddress &&... */\n    tag_19:\n        /* \"TokenDetArrayLib.sol\":1963:2153  if (... */\n      iszero\n      tag_22\n      jumpi\n        /* \"TokenDetArrayLib.sol\":2134:2138  true */\n      0x01\n        /* \"TokenDetArrayLib.sol\":2127:2138  return true */\n      swap2\n      pop\n      pop\n      jump(tag_13)\n        /* \"TokenDetArrayLib.sol\":1963:2153  if (... */\n    tag_22:\n        /* \"TokenDetArrayLib.sol\":1944:1947  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"TokenDetArrayLib.sol\":1901:2163  for (uint256 i = 0; i < self.array.length; i++) {... */\n      jump(tag_14)\n    tag_15:\n      pop\n        /* \"TokenDetArrayLib.sol\":2179:2184  false */\n      0x00\n        /* \"TokenDetArrayLib.sol\":2172:2184  return false */\n      swap1\n      pop\n        /* \"TokenDetArrayLib.sol\":1773:2191  function exists(... */\n    tag_13:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":5:135   */\n    tag_24:\n      0x00\n        /* \"--CODEGEN--\":85:91   */\n      dup2\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":63:92   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":97:130   */\n      tag_25\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      jump(tag_26)\n    tag_25:\n        /* \"--CODEGEN--\":57:135   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":181:656   */\n    tag_27:\n      0x00\n        /* \"--CODEGEN--\":294:298   */\n      0x40\n        /* \"--CODEGEN--\":282:291   */\n      dup3\n        /* \"--CODEGEN--\":277:280   */\n      dup5\n        /* \"--CODEGEN--\":273:292   */\n      sub\n        /* \"--CODEGEN--\":269:299   */\n      slt\n        /* \"--CODEGEN--\":266:268   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":312:313   */\n      0x00\n        /* \"--CODEGEN--\":309:310   */\n      dup1\n        /* \"--CODEGEN--\":302:314   */\n      revert\n        /* \"--CODEGEN--\":266:268   */\n    tag_28:\n        /* \"--CODEGEN--\":330:350   */\n      tag_29\n        /* \"--CODEGEN--\":345:349   */\n      0x40\n        /* \"--CODEGEN--\":330:350   */\n      jump(tag_30)\n    tag_29:\n        /* \"--CODEGEN--\":321:350   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":406:407   */\n      0x00\n        /* \"--CODEGEN--\":438:487   */\n      tag_31\n        /* \"--CODEGEN--\":483:486   */\n      dup5\n        /* \"--CODEGEN--\":474:480   */\n      dup3\n        /* \"--CODEGEN--\":463:472   */\n      dup6\n        /* \"--CODEGEN--\":459:481   */\n      add\n        /* \"--CODEGEN--\":438:487   */\n      jump(tag_24)\n    tag_31:\n        /* \"--CODEGEN--\":431:435   */\n      0x00\n        /* \"--CODEGEN--\":424:429   */\n      dup4\n        /* \"--CODEGEN--\":420:436   */\n      add\n        /* \"--CODEGEN--\":413:488   */\n      mstore\n        /* \"--CODEGEN--\":360:499   */\n      pop\n        /* \"--CODEGEN--\":552:554   */\n      0x20\n        /* \"--CODEGEN--\":585:634   */\n      tag_32\n        /* \"--CODEGEN--\":630:633   */\n      dup5\n        /* \"--CODEGEN--\":621:627   */\n      dup3\n        /* \"--CODEGEN--\":610:619   */\n      dup6\n        /* \"--CODEGEN--\":606:628   */\n      add\n        /* \"--CODEGEN--\":585:634   */\n      jump(tag_33)\n    tag_32:\n        /* \"--CODEGEN--\":578:582   */\n      0x20\n        /* \"--CODEGEN--\":571:576   */\n      dup4\n        /* \"--CODEGEN--\":567:583   */\n      add\n        /* \"--CODEGEN--\":560:635   */\n      mstore\n        /* \"--CODEGEN--\":509:646   */\n      pop\n        /* \"--CODEGEN--\":260:656   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":663:845   */\n    tag_34:\n      0x00\n        /* \"--CODEGEN--\":769:775   */\n      dup2\n        /* \"--CODEGEN--\":756:776   */\n      calldataload\n        /* \"--CODEGEN--\":747:776   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":781:840   */\n      tag_35\n        /* \"--CODEGEN--\":834:839   */\n      dup2\n        /* \"--CODEGEN--\":781:840   */\n      jump(tag_36)\n    tag_35:\n        /* \"--CODEGEN--\":741:845   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":852:982   */\n    tag_33:\n      0x00\n        /* \"--CODEGEN--\":932:938   */\n      dup2\n        /* \"--CODEGEN--\":919:939   */\n      calldataload\n        /* \"--CODEGEN--\":910:939   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":944:977   */\n      tag_37\n        /* \"--CODEGEN--\":971:976   */\n      dup2\n        /* \"--CODEGEN--\":944:977   */\n      jump(tag_38)\n    tag_37:\n        /* \"--CODEGEN--\":904:982   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":989:1455   */\n    tag_6:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":1160:1162   */\n      0x60\n        /* \"--CODEGEN--\":1148:1157   */\n      dup4\n        /* \"--CODEGEN--\":1139:1146   */\n      dup6\n        /* \"--CODEGEN--\":1135:1158   */\n      sub\n        /* \"--CODEGEN--\":1131:1163   */\n      slt\n        /* \"--CODEGEN--\":1128:1130   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":1176:1177   */\n      0x00\n        /* \"--CODEGEN--\":1173:1174   */\n      dup1\n        /* \"--CODEGEN--\":1166:1178   */\n      revert\n        /* \"--CODEGEN--\":1128:1130   */\n    tag_39:\n        /* \"--CODEGEN--\":1211:1212   */\n      0x00\n        /* \"--CODEGEN--\":1228:1307   */\n      tag_40\n        /* \"--CODEGEN--\":1299:1306   */\n      dup6\n        /* \"--CODEGEN--\":1290:1296   */\n      dup3\n        /* \"--CODEGEN--\":1279:1288   */\n      dup7\n        /* \"--CODEGEN--\":1275:1297   */\n      add\n        /* \"--CODEGEN--\":1228:1307   */\n      jump(tag_34)\n    tag_40:\n        /* \"--CODEGEN--\":1218:1307   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":1190:1313   */\n      pop\n        /* \"--CODEGEN--\":1344:1346   */\n      0x20\n        /* \"--CODEGEN--\":1362:1439   */\n      tag_41\n        /* \"--CODEGEN--\":1431:1438   */\n      dup6\n        /* \"--CODEGEN--\":1422:1428   */\n      dup3\n        /* \"--CODEGEN--\":1411:1420   */\n      dup7\n        /* \"--CODEGEN--\":1407:1429   */\n      add\n        /* \"--CODEGEN--\":1362:1439   */\n      jump(tag_27)\n    tag_41:\n        /* \"--CODEGEN--\":1352:1439   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":1323:1445   */\n      pop\n        /* \"--CODEGEN--\":1122:1455   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":1462:1718   */\n    tag_30:\n      0x00\n        /* \"--CODEGEN--\":1524:1526   */\n      0x40\n        /* \"--CODEGEN--\":1518:1527   */\n      mload\n        /* \"--CODEGEN--\":1508:1527   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1562:1566   */\n      dup2\n        /* \"--CODEGEN--\":1554:1560   */\n      dup2\n        /* \"--CODEGEN--\":1550:1567   */\n      add\n        /* \"--CODEGEN--\":1661:1667   */\n      dup2\n        /* \"--CODEGEN--\":1649:1659   */\n      dup2\n        /* \"--CODEGEN--\":1646:1668   */\n      lt\n        /* \"--CODEGEN--\":1625:1643   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":1613:1623   */\n      dup3\n        /* \"--CODEGEN--\":1610:1644   */\n      gt\n        /* \"--CODEGEN--\":1607:1669   */\n      or\n        /* \"--CODEGEN--\":1604:1606   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":1682:1683   */\n      0x00\n        /* \"--CODEGEN--\":1679:1680   */\n      dup1\n        /* \"--CODEGEN--\":1672:1684   */\n      revert\n        /* \"--CODEGEN--\":1604:1606   */\n    tag_42:\n        /* \"--CODEGEN--\":1702:1712   */\n      dup1\n        /* \"--CODEGEN--\":1698:1700   */\n      0x40\n        /* \"--CODEGEN--\":1691:1713   */\n      mstore\n        /* \"--CODEGEN--\":1502:1718   */\n      pop\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":1725:1816   */\n    tag_43:\n      0x00\n        /* \"--CODEGEN--\":1787:1811   */\n      tag_44\n        /* \"--CODEGEN--\":1805:1810   */\n      dup3\n        /* \"--CODEGEN--\":1787:1811   */\n      jump(tag_45)\n    tag_44:\n        /* \"--CODEGEN--\":1776:1811   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1770:1816   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":1823:1921   */\n    tag_46:\n      0x00\n        /* \"--CODEGEN--\":1911:1916   */\n      dup2\n        /* \"--CODEGEN--\":1900:1916   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1894:1921   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":1928:2049   */\n    tag_45:\n      0x00\n        /* \"--CODEGEN--\":2001:2043   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":1994:1999   */\n      dup3\n        /* \"--CODEGEN--\":1990:2044   */\n      and\n        /* \"--CODEGEN--\":1979:2044   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1973:2049   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":2056:2128   */\n    tag_47:\n      0x00\n        /* \"--CODEGEN--\":2118:2123   */\n      dup2\n        /* \"--CODEGEN--\":2107:2123   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2101:2128   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":2135:2252   */\n    tag_26:\n        /* \"--CODEGEN--\":2204:2228   */\n      tag_48\n        /* \"--CODEGEN--\":2222:2227   */\n      dup2\n        /* \"--CODEGEN--\":2204:2228   */\n      jump(tag_43)\n    tag_48:\n        /* \"--CODEGEN--\":2197:2202   */\n      dup2\n        /* \"--CODEGEN--\":2194:2229   */\n      eq\n        /* \"--CODEGEN--\":2184:2186   */\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":2243:2244   */\n      0x00\n        /* \"--CODEGEN--\":2240:2241   */\n      dup1\n        /* \"--CODEGEN--\":2233:2245   */\n      revert\n        /* \"--CODEGEN--\":2184:2186   */\n    tag_49:\n        /* \"--CODEGEN--\":2178:2252   */\n      pop\n      jump\n        /* \"--CODEGEN--\":2259:2428   */\n    tag_36:\n        /* \"--CODEGEN--\":2354:2404   */\n      tag_50\n        /* \"--CODEGEN--\":2398:2403   */\n      dup2\n        /* \"--CODEGEN--\":2354:2404   */\n      jump(tag_46)\n    tag_50:\n        /* \"--CODEGEN--\":2347:2352   */\n      dup2\n        /* \"--CODEGEN--\":2344:2405   */\n      eq\n        /* \"--CODEGEN--\":2334:2336   */\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":2419:2420   */\n      0x00\n        /* \"--CODEGEN--\":2416:2417   */\n      dup1\n        /* \"--CODEGEN--\":2409:2421   */\n      revert\n        /* \"--CODEGEN--\":2334:2336   */\n    tag_51:\n        /* \"--CODEGEN--\":2328:2428   */\n      pop\n      jump\n        /* \"--CODEGEN--\":2435:2552   */\n    tag_38:\n        /* \"--CODEGEN--\":2504:2528   */\n      tag_52\n        /* \"--CODEGEN--\":2522:2527   */\n      dup2\n        /* \"--CODEGEN--\":2504:2528   */\n      jump(tag_47)\n    tag_52:\n        /* \"--CODEGEN--\":2497:2502   */\n      dup2\n        /* \"--CODEGEN--\":2494:2529   */\n      eq\n        /* \"--CODEGEN--\":2484:2486   */\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":2543:2544   */\n      0x00\n        /* \"--CODEGEN--\":2540:2541   */\n      dup1\n        /* \"--CODEGEN--\":2533:2545   */\n      revert\n        /* \"--CODEGEN--\":2484:2486   */\n    tag_53:\n        /* \"--CODEGEN--\":2478:2552   */\n      pop\n      jump\n\n    auxdata: 0xa365627a7a723158205793941a81fbb89973b5f34056c5d6d2c32f4f300afcf97dcb6f4dc29d7346066c6578706572696d656e74616cf564736f6c63430005110040\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6103a6610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063fd7c9a151461003a575b600080fd5b81801561004657600080fd5b50610061600480360361005c919081019061026f565b610063565b005b610076818361010390919063ffffffff16565b6100ff5781600001819080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101555050505b5050565b600080600090505b83600001805490508110156101d857826000015173ffffffffffffffffffffffffffffffffffffffff1684600001828154811061014457fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156101bc575082602001518460000182815481106101a857fe5b906000526020600020906002020160010154145b156101cb5760019150506101de565b808060010191505061010b565b50600090505b92915050565b6000813590506101f38161031e565b92915050565b60006040828403121561020b57600080fd5b61021560406102ab565b90506000610225848285016101e4565b60008301525060206102398482850161025a565b60208301525092915050565b60008135905061025481610335565b92915050565b6000813590506102698161034c565b92915050565b6000806060838503121561028257600080fd5b600061029085828601610245565b92505060206102a1858286016101f9565b9150509250929050565b6000604051905081810181811067ffffffffffffffff821117156102ce57600080fd5b8060405250919050565b60006102e3826102f4565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610327816102d8565b811461033257600080fd5b50565b61033e816102ea565b811461034957600080fd5b50565b61035581610314565b811461036057600080fd5b5056fea365627a7a723158205793941a81fbb89973b5f34056c5d6d2c32f4f300afcf97dcb6f4dc29d7346066c6578706572696d656e74616cf564736f6c63430005110040",
							"opcodes": "PUSH2 0x3A6 PUSH2 0x26 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x19 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFD7C9A15 EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x61 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x5C SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x26F JUMP JUMPDEST PUSH2 0x63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 DUP2 DUP4 PUSH2 0x103 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xFF JUMPI DUP2 PUSH1 0x0 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1D8 JUMPI DUP3 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x144 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1BC JUMPI POP DUP3 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1A8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1CB JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x1DE JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x10B JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F3 DUP2 PUSH2 0x31E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x215 PUSH1 0x40 PUSH2 0x2AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x225 DUP5 DUP3 DUP6 ADD PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x239 DUP5 DUP3 DUP6 ADD PUSH2 0x25A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x254 DUP2 PUSH2 0x335 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x269 DUP2 PUSH2 0x34C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x290 DUP6 DUP3 DUP7 ADD PUSH2 0x245 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A1 DUP6 DUP3 DUP7 ADD PUSH2 0x1F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E3 DUP3 PUSH2 0x2F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x327 DUP2 PUSH2 0x2D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x33E DUP2 PUSH2 0x2EA JUMP JUMPDEST DUP2 EQ PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x355 DUP2 PUSH2 0x314 JUMP JUMPDEST DUP2 EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 JUMPI SWAP4 SWAP5 BYTE DUP2 0xFB 0xB8 SWAP10 PUSH20 0xB5F34056C5D6D2C32F4F300AFCF97DCB6F4DC29D PUSH20 0x46066C6578706572696D656E74616CF564736F6C PUSH4 0x43000511 STOP BLOCKHASH ",
							"sourceMap": "85:2108:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063fd7c9a151461003a575b600080fd5b81801561004657600080fd5b50610061600480360361005c919081019061026f565b610063565b005b610076818361010390919063ffffffff16565b6100ff5781600001819080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101555050505b5050565b600080600090505b83600001805490508110156101d857826000015173ffffffffffffffffffffffffffffffffffffffff1684600001828154811061014457fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156101bc575082602001518460000182815481106101a857fe5b906000526020600020906002020160010154145b156101cb5760019150506101de565b808060010191505061010b565b50600090505b92915050565b6000813590506101f38161031e565b92915050565b60006040828403121561020b57600080fd5b61021560406102ab565b90506000610225848285016101e4565b60008301525060206102398482850161025a565b60208301525092915050565b60008135905061025481610335565b92915050565b6000813590506102698161034c565b92915050565b6000806060838503121561028257600080fd5b600061029085828601610245565b92505060206102a1858286016101f9565b9150509250929050565b6000604051905081810181811067ffffffffffffffff821117156102ce57600080fd5b8060405250919050565b60006102e3826102f4565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610327816102d8565b811461033257600080fd5b50565b61033e816102ea565b811461034957600080fd5b50565b61035581610314565b811461036057600080fd5b5056fea365627a7a723158205793941a81fbb89973b5f34056c5d6d2c32f4f300afcf97dcb6f4dc29d7346066c6578706572696d656e74616cf564736f6c63430005110040",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFD7C9A15 EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x61 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x5C SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x26F JUMP JUMPDEST PUSH2 0x63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 DUP2 DUP4 PUSH2 0x103 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xFF JUMPI DUP2 PUSH1 0x0 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1D8 JUMPI DUP3 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x144 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1BC JUMPI POP DUP3 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1A8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x1CB JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x1DE JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x10B JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F3 DUP2 PUSH2 0x31E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x215 PUSH1 0x40 PUSH2 0x2AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x225 DUP5 DUP3 DUP6 ADD PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x239 DUP5 DUP3 DUP6 ADD PUSH2 0x25A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x254 DUP2 PUSH2 0x335 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x269 DUP2 PUSH2 0x34C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x290 DUP6 DUP3 DUP7 ADD PUSH2 0x245 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A1 DUP6 DUP3 DUP7 ADD PUSH2 0x1F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E3 DUP3 PUSH2 0x2F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x327 DUP2 PUSH2 0x2D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x33E DUP2 PUSH2 0x2EA JUMP JUMPDEST DUP2 EQ PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x355 DUP2 PUSH2 0x314 JUMP JUMPDEST DUP2 EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 JUMPI SWAP4 SWAP5 BYTE DUP2 0xFB 0xB8 SWAP10 PUSH20 0xB5F34056C5D6D2C32F4F300AFCF97DCB6F4DC29D PUSH20 0x46066C6578706572696D656E74616CF564736F6C PUSH4 0x43000511 STOP BLOCKHASH ",
							"sourceMap": "85:2108:0:-;;;;;;;;;;;;;;;;;;;;;;;;526:262;;8:9:-1;5:2;;;30:1;27;20:12;5:2;526:262:0;;;;;;;;;;;;;;;;:::i;:::-;;;707:22;719:9;707:4;:11;;:22;;;;:::i;:::-;702:80;;745:4;:10;;761:9;745:26;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;745:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;702:80;526:262;;:::o;1773:418::-;1885:4;1906:9;1918:1;1906:13;;1901:262;1925:4;:10;;:17;;;;1921:1;:21;1901:262;;;2012:9;:20;;;1984:48;;:4;:10;;1995:1;1984:13;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:48;;;:110;;;;;2077:9;:17;;;2052:4;:10;;2063:1;2052:13;;;;;;;;;;;;;;;;;;:21;;;:42;1984:110;1963:190;;;2134:4;2127:11;;;;;1963:190;1944:3;;;;;;;1901:262;;;;2179:5;2172:12;;1773:418;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;181:475;;294:4;282:9;277:3;273:19;269:30;266:2;;;312:1;309;302:12;266:2;330:20;345:4;330:20;;;321:29;;406:1;438:49;483:3;474:6;463:9;459:22;438:49;;;431:4;424:5;420:16;413:75;360:139;552:2;585:49;630:3;621:6;610:9;606:22;585:49;;;578:4;571:5;567:16;560:75;509:137;260:396;;;;;663:182;;769:6;756:20;747:29;;781:59;834:5;781:59;;;741:104;;;;;852:130;;932:6;919:20;910:29;;944:33;971:5;944:33;;;904:78;;;;;989:466;;;1160:2;1148:9;1139:7;1135:23;1131:32;1128:2;;;1176:1;1173;1166:12;1128:2;1211:1;1228:79;1299:7;1290:6;1279:9;1275:22;1228:79;;;1218:89;;1190:123;1344:2;1362:77;1431:7;1422:6;1411:9;1407:22;1362:77;;;1352:87;;1323:122;1122:333;;;;;;1462:256;;1524:2;1518:9;1508:19;;1562:4;1554:6;1550:17;1661:6;1649:10;1646:22;1625:18;1613:10;1610:34;1607:62;1604:2;;;1682:1;1679;1672:12;1604:2;1702:10;1698:2;1691:22;1502:216;;;;;1725:91;;1787:24;1805:5;1787:24;;;1776:35;;1770:46;;;;1823:98;;1911:5;1900:16;;1894:27;;;;1928:121;;2001:42;1994:5;1990:54;1979:65;;1973:76;;;;2056:72;;2118:5;2107:16;;2101:27;;;;2135:117;2204:24;2222:5;2204:24;;;2197:5;2194:35;2184:2;;2243:1;2240;2233:12;2184:2;2178:74;;2259:169;2354:50;2398:5;2354:50;;;2347:5;2344:61;2334:2;;2419:1;2416;2409:12;2334:2;2328:100;;2435:117;2504:24;2522:5;2504:24;;;2497:5;2494:35;2484:2;;2543:1;2540;2533:12;2484:2;2478:74;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "186800",
								"executionCost": "257",
								"totalCost": "187057"
							},
							"external": {
								"addTokenDet(TokenDetArrayLib.TokenDets storage,TokenDetArrayLib.TokenDet)": "infinite"
							},
							"internal": {
								"exists(struct TokenDetArrayLib.TokenDets storage pointer,struct TokenDetArrayLib.TokenDet memory)": "infinite",
								"getIndexByTokenDet(struct TokenDetArrayLib.TokenDets storage pointer,struct TokenDetArrayLib.TokenDet memory)": "infinite",
								"removeTokenDet(struct TokenDetArrayLib.TokenDets storage pointer,struct TokenDetArrayLib.TokenDet memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 85,
									"end": 2193,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 85,
									"end": 2193,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a365627a7a723158205793941a81fbb89973b5f34056c5d6d2c32f4f300afcf97dcb6f4dc29d7346066c6578706572696d656e74616cf564736f6c63430005110040",
									".code": [
										{
											"begin": 85,
											"end": 2193,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "ADDRESS"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "EQ"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "MSTORE"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "LT"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "JUMPI"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "SHR"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "DUP1"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "PUSH",
											"value": "FD7C9A15"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "EQ"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "JUMPI"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "JUMPDEST"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "DUP1"
										},
										{
											"begin": 85,
											"end": 2193,
											"name": "REVERT"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "JUMPDEST"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "DUP2"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "POP"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "DUP1"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "SUB"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "SWAP2"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "SWAP1"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "DUP2"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "ADD"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "SWAP1"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "JUMP"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "JUMPDEST"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "JUMPDEST"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "STOP"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "JUMPDEST"
										},
										{
											"begin": 707,
											"end": 729,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 719,
											"end": 728,
											"name": "DUP2"
										},
										{
											"begin": 707,
											"end": 711,
											"name": "DUP4"
										},
										{
											"begin": 707,
											"end": 718,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 707,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 707,
											"end": 729,
											"name": "SWAP2"
										},
										{
											"begin": 707,
											"end": 729,
											"name": "SWAP1"
										},
										{
											"begin": 707,
											"end": 729,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 707,
											"end": 729,
											"name": "AND"
										},
										{
											"begin": 707,
											"end": 729,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 707,
											"end": 729,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 707,
											"end": 729,
											"name": "JUMPDEST"
										},
										{
											"begin": 702,
											"end": 782,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 702,
											"end": 782,
											"name": "JUMPI"
										},
										{
											"begin": 745,
											"end": 749,
											"name": "DUP2"
										},
										{
											"begin": 745,
											"end": 755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 745,
											"end": 755,
											"name": "ADD"
										},
										{
											"begin": 761,
											"end": 770,
											"name": "DUP2"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SWAP1"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SWAP1"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "DUP3"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SUB"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SWAP1"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "MSTORE"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "KECCAK256"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SWAP1"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "MUL"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "ADD"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SWAP1"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SWAP2"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SWAP3"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SWAP1"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SWAP2"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SWAP1"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SWAP2"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "POP"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "DUP3"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "ADD"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "MLOAD"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "DUP2"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "ADD"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "EXP"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "DUP2"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SLOAD"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "DUP2"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "MUL"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "NOT"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "AND"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SWAP1"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "DUP4"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "AND"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "MUL"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "OR"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SWAP1"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SSTORE"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "POP"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "DUP3"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "ADD"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "MLOAD"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "DUP2"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "ADD"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "SSTORE"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "POP"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "POP"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "POP"
										},
										{
											"begin": 702,
											"end": 782,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 702,
											"end": 782,
											"name": "JUMPDEST"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "POP"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "POP"
										},
										{
											"begin": 526,
											"end": 788,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1773,
											"end": 2191,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1773,
											"end": 2191,
											"name": "JUMPDEST"
										},
										{
											"begin": 1885,
											"end": 1889,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1915,
											"name": "DUP1"
										},
										{
											"begin": 1918,
											"end": 1919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1906,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1901,
											"end": 2163,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1901,
											"end": 2163,
											"name": "JUMPDEST"
										},
										{
											"begin": 1925,
											"end": 1929,
											"name": "DUP4"
										},
										{
											"begin": 1925,
											"end": 1935,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1935,
											"name": "ADD"
										},
										{
											"begin": 1925,
											"end": 1942,
											"name": "DUP1"
										},
										{
											"begin": 1925,
											"end": 1942,
											"name": "SLOAD"
										},
										{
											"begin": 1925,
											"end": 1942,
											"name": "SWAP1"
										},
										{
											"begin": 1925,
											"end": 1942,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1922,
											"name": "DUP2"
										},
										{
											"begin": 1921,
											"end": 1942,
											"name": "LT"
										},
										{
											"begin": 1901,
											"end": 2163,
											"name": "ISZERO"
										},
										{
											"begin": 1901,
											"end": 2163,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1901,
											"end": 2163,
											"name": "JUMPI"
										},
										{
											"begin": 2012,
											"end": 2021,
											"name": "DUP3"
										},
										{
											"begin": 2012,
											"end": 2032,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2032,
											"name": "ADD"
										},
										{
											"begin": 2012,
											"end": 2032,
											"name": "MLOAD"
										},
										{
											"begin": 1984,
											"end": 2032,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1984,
											"end": 2032,
											"name": "AND"
										},
										{
											"begin": 1984,
											"end": 1988,
											"name": "DUP5"
										},
										{
											"begin": 1984,
											"end": 1994,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1984,
											"end": 1994,
											"name": "ADD"
										},
										{
											"begin": 1995,
											"end": 1996,
											"name": "DUP3"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "DUP2"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "SLOAD"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "DUP2"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "LT"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "JUMPI"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "INVALID"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "JUMPDEST"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "SWAP1"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "MSTORE"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "KECCAK256"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "SWAP1"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "MUL"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "ADD"
										},
										{
											"begin": 1984,
											"end": 2008,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1984,
											"end": 2008,
											"name": "ADD"
										},
										{
											"begin": 1984,
											"end": 2008,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1984,
											"end": 2008,
											"name": "SWAP1"
										},
										{
											"begin": 1984,
											"end": 2008,
											"name": "SLOAD"
										},
										{
											"begin": 1984,
											"end": 2008,
											"name": "SWAP1"
										},
										{
											"begin": 1984,
											"end": 2008,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1984,
											"end": 2008,
											"name": "EXP"
										},
										{
											"begin": 1984,
											"end": 2008,
											"name": "SWAP1"
										},
										{
											"begin": 1984,
											"end": 2008,
											"name": "DIV"
										},
										{
											"begin": 1984,
											"end": 2008,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1984,
											"end": 2008,
											"name": "AND"
										},
										{
											"begin": 1984,
											"end": 2032,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1984,
											"end": 2032,
											"name": "AND"
										},
										{
											"begin": 1984,
											"end": 2032,
											"name": "EQ"
										},
										{
											"begin": 1984,
											"end": 2094,
											"name": "DUP1"
										},
										{
											"begin": 1984,
											"end": 2094,
											"name": "ISZERO"
										},
										{
											"begin": 1984,
											"end": 2094,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1984,
											"end": 2094,
											"name": "JUMPI"
										},
										{
											"begin": 1984,
											"end": 2094,
											"name": "POP"
										},
										{
											"begin": 2077,
											"end": 2086,
											"name": "DUP3"
										},
										{
											"begin": 2077,
											"end": 2094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2077,
											"end": 2094,
											"name": "ADD"
										},
										{
											"begin": 2077,
											"end": 2094,
											"name": "MLOAD"
										},
										{
											"begin": 2052,
											"end": 2056,
											"name": "DUP5"
										},
										{
											"begin": 2052,
											"end": 2062,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2062,
											"name": "ADD"
										},
										{
											"begin": 2063,
											"end": 2064,
											"name": "DUP3"
										},
										{
											"begin": 2052,
											"end": 2065,
											"name": "DUP2"
										},
										{
											"begin": 2052,
											"end": 2065,
											"name": "SLOAD"
										},
										{
											"begin": 2052,
											"end": 2065,
											"name": "DUP2"
										},
										{
											"begin": 2052,
											"end": 2065,
											"name": "LT"
										},
										{
											"begin": 2052,
											"end": 2065,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2065,
											"name": "JUMPI"
										},
										{
											"begin": 2052,
											"end": 2065,
											"name": "INVALID"
										},
										{
											"begin": 2052,
											"end": 2065,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2065,
											"name": "JUMPDEST"
										},
										{
											"begin": 2052,
											"end": 2065,
											"name": "SWAP1"
										},
										{
											"begin": 2052,
											"end": 2065,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2065,
											"name": "MSTORE"
										},
										{
											"begin": 2052,
											"end": 2065,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2065,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2065,
											"name": "KECCAK256"
										},
										{
											"begin": 2052,
											"end": 2065,
											"name": "SWAP1"
										},
										{
											"begin": 2052,
											"end": 2065,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2052,
											"end": 2065,
											"name": "MUL"
										},
										{
											"begin": 2052,
											"end": 2065,
											"name": "ADD"
										},
										{
											"begin": 2052,
											"end": 2073,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2052,
											"end": 2073,
											"name": "ADD"
										},
										{
											"begin": 2052,
											"end": 2073,
											"name": "SLOAD"
										},
										{
											"begin": 2052,
											"end": 2094,
											"name": "EQ"
										},
										{
											"begin": 1984,
											"end": 2094,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1984,
											"end": 2094,
											"name": "JUMPDEST"
										},
										{
											"begin": 1963,
											"end": 2153,
											"name": "ISZERO"
										},
										{
											"begin": 1963,
											"end": 2153,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1963,
											"end": 2153,
											"name": "JUMPI"
										},
										{
											"begin": 2134,
											"end": 2138,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2127,
											"end": 2138,
											"name": "SWAP2"
										},
										{
											"begin": 2127,
											"end": 2138,
											"name": "POP"
										},
										{
											"begin": 2127,
											"end": 2138,
											"name": "POP"
										},
										{
											"begin": 2127,
											"end": 2138,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2127,
											"end": 2138,
											"name": "JUMP"
										},
										{
											"begin": 1963,
											"end": 2153,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1963,
											"end": 2153,
											"name": "JUMPDEST"
										},
										{
											"begin": 1944,
											"end": 1947,
											"name": "DUP1"
										},
										{
											"begin": 1944,
											"end": 1947,
											"name": "DUP1"
										},
										{
											"begin": 1944,
											"end": 1947,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1944,
											"end": 1947,
											"name": "ADD"
										},
										{
											"begin": 1944,
											"end": 1947,
											"name": "SWAP2"
										},
										{
											"begin": 1944,
											"end": 1947,
											"name": "POP"
										},
										{
											"begin": 1944,
											"end": 1947,
											"name": "POP"
										},
										{
											"begin": 1901,
											"end": 2163,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1901,
											"end": 2163,
											"name": "JUMP"
										},
										{
											"begin": 1901,
											"end": 2163,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1901,
											"end": 2163,
											"name": "JUMPDEST"
										},
										{
											"begin": 1901,
											"end": 2163,
											"name": "POP"
										},
										{
											"begin": 2179,
											"end": 2184,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2184,
											"name": "SWAP1"
										},
										{
											"begin": 2172,
											"end": 2184,
											"name": "POP"
										},
										{
											"begin": 1773,
											"end": 2191,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1773,
											"end": 2191,
											"name": "JUMPDEST"
										},
										{
											"begin": 1773,
											"end": 2191,
											"name": "SWAP3"
										},
										{
											"begin": 1773,
											"end": 2191,
											"name": "SWAP2"
										},
										{
											"begin": 1773,
											"end": 2191,
											"name": "POP"
										},
										{
											"begin": 1773,
											"end": 2191,
											"name": "POP"
										},
										{
											"begin": 1773,
											"end": 2191,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "JUMPDEST"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP2"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 63,
											"end": 92,
											"name": "SWAP1"
										},
										{
											"begin": 63,
											"end": 92,
											"name": "POP"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST"
										},
										{
											"begin": 57,
											"end": 135,
											"name": "SWAP3"
										},
										{
											"begin": 57,
											"end": 135,
											"name": "SWAP2"
										},
										{
											"begin": 57,
											"end": 135,
											"name": "POP"
										},
										{
											"begin": 57,
											"end": 135,
											"name": "POP"
										},
										{
											"begin": 57,
											"end": 135,
											"name": "JUMP"
										},
										{
											"begin": 181,
											"end": 656,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 181,
											"end": 656,
											"name": "JUMPDEST"
										},
										{
											"begin": 181,
											"end": 656,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 294,
											"end": 298,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 282,
											"end": 291,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 280,
											"name": "DUP5"
										},
										{
											"begin": 273,
											"end": 292,
											"name": "SUB"
										},
										{
											"begin": 269,
											"end": 299,
											"name": "SLT"
										},
										{
											"begin": 266,
											"end": 268,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 268,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 266,
											"end": 268,
											"name": "JUMPI"
										},
										{
											"begin": 312,
											"end": 313,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 309,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 302,
											"end": 314,
											"name": "REVERT"
										},
										{
											"begin": 266,
											"end": 268,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 266,
											"end": 268,
											"name": "JUMPDEST"
										},
										{
											"begin": 330,
											"end": 350,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 345,
											"end": 349,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 330,
											"end": 350,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 330,
											"end": 350,
											"name": "JUMP"
										},
										{
											"begin": 330,
											"end": 350,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 330,
											"end": 350,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 350,
											"name": "SWAP1"
										},
										{
											"begin": 321,
											"end": 350,
											"name": "POP"
										},
										{
											"begin": 406,
											"end": 407,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 438,
											"end": 487,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 483,
											"end": 486,
											"name": "DUP5"
										},
										{
											"begin": 474,
											"end": 480,
											"name": "DUP3"
										},
										{
											"begin": 463,
											"end": 472,
											"name": "DUP6"
										},
										{
											"begin": 459,
											"end": 481,
											"name": "ADD"
										},
										{
											"begin": 438,
											"end": 487,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 438,
											"end": 487,
											"name": "JUMP"
										},
										{
											"begin": 438,
											"end": 487,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 438,
											"end": 487,
											"name": "JUMPDEST"
										},
										{
											"begin": 431,
											"end": 435,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 424,
											"end": 429,
											"name": "DUP4"
										},
										{
											"begin": 420,
											"end": 436,
											"name": "ADD"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MSTORE"
										},
										{
											"begin": 360,
											"end": 499,
											"name": "POP"
										},
										{
											"begin": 552,
											"end": 554,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 585,
											"end": 634,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 630,
											"end": 633,
											"name": "DUP5"
										},
										{
											"begin": 621,
											"end": 627,
											"name": "DUP3"
										},
										{
											"begin": 610,
											"end": 619,
											"name": "DUP6"
										},
										{
											"begin": 606,
											"end": 628,
											"name": "ADD"
										},
										{
											"begin": 585,
											"end": 634,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 585,
											"end": 634,
											"name": "JUMP"
										},
										{
											"begin": 585,
											"end": 634,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 585,
											"end": 634,
											"name": "JUMPDEST"
										},
										{
											"begin": 578,
											"end": 582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP4"
										},
										{
											"begin": 567,
											"end": 583,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 635,
											"name": "MSTORE"
										},
										{
											"begin": 509,
											"end": 646,
											"name": "POP"
										},
										{
											"begin": 260,
											"end": 656,
											"name": "SWAP3"
										},
										{
											"begin": 260,
											"end": 656,
											"name": "SWAP2"
										},
										{
											"begin": 260,
											"end": 656,
											"name": "POP"
										},
										{
											"begin": 260,
											"end": 656,
											"name": "POP"
										},
										{
											"begin": 260,
											"end": 656,
											"name": "JUMP"
										},
										{
											"begin": 663,
											"end": 845,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 663,
											"end": 845,
											"name": "JUMPDEST"
										},
										{
											"begin": 663,
											"end": 845,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 769,
											"end": 775,
											"name": "DUP2"
										},
										{
											"begin": 756,
											"end": 776,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 747,
											"end": 776,
											"name": "SWAP1"
										},
										{
											"begin": 747,
											"end": 776,
											"name": "POP"
										},
										{
											"begin": 781,
											"end": 840,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 834,
											"end": 839,
											"name": "DUP2"
										},
										{
											"begin": 781,
											"end": 840,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 781,
											"end": 840,
											"name": "JUMP"
										},
										{
											"begin": 781,
											"end": 840,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 781,
											"end": 840,
											"name": "JUMPDEST"
										},
										{
											"begin": 741,
											"end": 845,
											"name": "SWAP3"
										},
										{
											"begin": 741,
											"end": 845,
											"name": "SWAP2"
										},
										{
											"begin": 741,
											"end": 845,
											"name": "POP"
										},
										{
											"begin": 741,
											"end": 845,
											"name": "POP"
										},
										{
											"begin": 741,
											"end": 845,
											"name": "JUMP"
										},
										{
											"begin": 852,
											"end": 982,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 852,
											"end": 982,
											"name": "JUMPDEST"
										},
										{
											"begin": 852,
											"end": 982,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 932,
											"end": 938,
											"name": "DUP2"
										},
										{
											"begin": 919,
											"end": 939,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 910,
											"end": 939,
											"name": "SWAP1"
										},
										{
											"begin": 910,
											"end": 939,
											"name": "POP"
										},
										{
											"begin": 944,
											"end": 977,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 971,
											"end": 976,
											"name": "DUP2"
										},
										{
											"begin": 944,
											"end": 977,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 944,
											"end": 977,
											"name": "JUMP"
										},
										{
											"begin": 944,
											"end": 977,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 944,
											"end": 977,
											"name": "JUMPDEST"
										},
										{
											"begin": 904,
											"end": 982,
											"name": "SWAP3"
										},
										{
											"begin": 904,
											"end": 982,
											"name": "SWAP2"
										},
										{
											"begin": 904,
											"end": 982,
											"name": "POP"
										},
										{
											"begin": 904,
											"end": 982,
											"name": "POP"
										},
										{
											"begin": 904,
											"end": 982,
											"name": "JUMP"
										},
										{
											"begin": 989,
											"end": 1455,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 989,
											"end": 1455,
											"name": "JUMPDEST"
										},
										{
											"begin": 989,
											"end": 1455,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1455,
											"name": "DUP1"
										},
										{
											"begin": 1160,
											"end": 1162,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "DUP4"
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP6"
										},
										{
											"begin": 1135,
											"end": 1158,
											"name": "SUB"
										},
										{
											"begin": 1131,
											"end": 1163,
											"name": "SLT"
										},
										{
											"begin": 1128,
											"end": 1130,
											"name": "ISZERO"
										},
										{
											"begin": 1128,
											"end": 1130,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1128,
											"end": 1130,
											"name": "JUMPI"
										},
										{
											"begin": 1176,
											"end": 1177,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1174,
											"name": "DUP1"
										},
										{
											"begin": 1166,
											"end": 1178,
											"name": "REVERT"
										},
										{
											"begin": 1128,
											"end": 1130,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1128,
											"end": 1130,
											"name": "JUMPDEST"
										},
										{
											"begin": 1211,
											"end": 1212,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1307,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1299,
											"end": 1306,
											"name": "DUP6"
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "DUP3"
										},
										{
											"begin": 1279,
											"end": 1288,
											"name": "DUP7"
										},
										{
											"begin": 1275,
											"end": 1297,
											"name": "ADD"
										},
										{
											"begin": 1228,
											"end": 1307,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1228,
											"end": 1307,
											"name": "JUMP"
										},
										{
											"begin": 1228,
											"end": 1307,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 1307,
											"name": "JUMPDEST"
										},
										{
											"begin": 1218,
											"end": 1307,
											"name": "SWAP3"
										},
										{
											"begin": 1218,
											"end": 1307,
											"name": "POP"
										},
										{
											"begin": 1190,
											"end": 1313,
											"name": "POP"
										},
										{
											"begin": 1344,
											"end": 1346,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1362,
											"end": 1439,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1431,
											"end": 1438,
											"name": "DUP6"
										},
										{
											"begin": 1422,
											"end": 1428,
											"name": "DUP3"
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "DUP7"
										},
										{
											"begin": 1407,
											"end": 1429,
											"name": "ADD"
										},
										{
											"begin": 1362,
											"end": 1439,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1362,
											"end": 1439,
											"name": "JUMP"
										},
										{
											"begin": 1362,
											"end": 1439,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1362,
											"end": 1439,
											"name": "JUMPDEST"
										},
										{
											"begin": 1352,
											"end": 1439,
											"name": "SWAP2"
										},
										{
											"begin": 1352,
											"end": 1439,
											"name": "POP"
										},
										{
											"begin": 1323,
											"end": 1445,
											"name": "POP"
										},
										{
											"begin": 1122,
											"end": 1455,
											"name": "SWAP3"
										},
										{
											"begin": 1122,
											"end": 1455,
											"name": "POP"
										},
										{
											"begin": 1122,
											"end": 1455,
											"name": "SWAP3"
										},
										{
											"begin": 1122,
											"end": 1455,
											"name": "SWAP1"
										},
										{
											"begin": 1122,
											"end": 1455,
											"name": "POP"
										},
										{
											"begin": 1122,
											"end": 1455,
											"name": "JUMP"
										},
										{
											"begin": 1462,
											"end": 1718,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1462,
											"end": 1718,
											"name": "JUMPDEST"
										},
										{
											"begin": 1462,
											"end": 1718,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1518,
											"end": 1527,
											"name": "MLOAD"
										},
										{
											"begin": 1508,
											"end": 1527,
											"name": "SWAP1"
										},
										{
											"begin": 1508,
											"end": 1527,
											"name": "POP"
										},
										{
											"begin": 1562,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1554,
											"end": 1560,
											"name": "DUP2"
										},
										{
											"begin": 1550,
											"end": 1567,
											"name": "ADD"
										},
										{
											"begin": 1661,
											"end": 1667,
											"name": "DUP2"
										},
										{
											"begin": 1649,
											"end": 1659,
											"name": "DUP2"
										},
										{
											"begin": 1646,
											"end": 1668,
											"name": "LT"
										},
										{
											"begin": 1625,
											"end": 1643,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1613,
											"end": 1623,
											"name": "DUP3"
										},
										{
											"begin": 1610,
											"end": 1644,
											"name": "GT"
										},
										{
											"begin": 1607,
											"end": 1669,
											"name": "OR"
										},
										{
											"begin": 1604,
											"end": 1606,
											"name": "ISZERO"
										},
										{
											"begin": 1604,
											"end": 1606,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1604,
											"end": 1606,
											"name": "JUMPI"
										},
										{
											"begin": 1682,
											"end": 1683,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1680,
											"name": "DUP1"
										},
										{
											"begin": 1672,
											"end": 1684,
											"name": "REVERT"
										},
										{
											"begin": 1604,
											"end": 1606,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1604,
											"end": 1606,
											"name": "JUMPDEST"
										},
										{
											"begin": 1702,
											"end": 1712,
											"name": "DUP1"
										},
										{
											"begin": 1698,
											"end": 1700,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1691,
											"end": 1713,
											"name": "MSTORE"
										},
										{
											"begin": 1502,
											"end": 1718,
											"name": "POP"
										},
										{
											"begin": 1502,
											"end": 1718,
											"name": "SWAP2"
										},
										{
											"begin": 1502,
											"end": 1718,
											"name": "SWAP1"
										},
										{
											"begin": 1502,
											"end": 1718,
											"name": "POP"
										},
										{
											"begin": 1502,
											"end": 1718,
											"name": "JUMP"
										},
										{
											"begin": 1725,
											"end": 1816,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 1725,
											"end": 1816,
											"name": "JUMPDEST"
										},
										{
											"begin": 1725,
											"end": 1816,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "DUP3"
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "JUMP"
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "JUMPDEST"
										},
										{
											"begin": 1776,
											"end": 1811,
											"name": "SWAP1"
										},
										{
											"begin": 1776,
											"end": 1811,
											"name": "POP"
										},
										{
											"begin": 1770,
											"end": 1816,
											"name": "SWAP2"
										},
										{
											"begin": 1770,
											"end": 1816,
											"name": "SWAP1"
										},
										{
											"begin": 1770,
											"end": 1816,
											"name": "POP"
										},
										{
											"begin": 1770,
											"end": 1816,
											"name": "JUMP"
										},
										{
											"begin": 1823,
											"end": 1921,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1823,
											"end": 1921,
											"name": "JUMPDEST"
										},
										{
											"begin": 1823,
											"end": 1921,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1916,
											"name": "DUP2"
										},
										{
											"begin": 1900,
											"end": 1916,
											"name": "SWAP1"
										},
										{
											"begin": 1900,
											"end": 1916,
											"name": "POP"
										},
										{
											"begin": 1894,
											"end": 1921,
											"name": "SWAP2"
										},
										{
											"begin": 1894,
											"end": 1921,
											"name": "SWAP1"
										},
										{
											"begin": 1894,
											"end": 1921,
											"name": "POP"
										},
										{
											"begin": 1894,
											"end": 1921,
											"name": "JUMP"
										},
										{
											"begin": 1928,
											"end": 2049,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1928,
											"end": 2049,
											"name": "JUMPDEST"
										},
										{
											"begin": 1928,
											"end": 2049,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2043,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1994,
											"end": 1999,
											"name": "DUP3"
										},
										{
											"begin": 1990,
											"end": 2044,
											"name": "AND"
										},
										{
											"begin": 1979,
											"end": 2044,
											"name": "SWAP1"
										},
										{
											"begin": 1979,
											"end": 2044,
											"name": "POP"
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "SWAP2"
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "SWAP1"
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "POP"
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "JUMP"
										},
										{
											"begin": 2056,
											"end": 2128,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2056,
											"end": 2128,
											"name": "JUMPDEST"
										},
										{
											"begin": 2056,
											"end": 2128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2123,
											"name": "DUP2"
										},
										{
											"begin": 2107,
											"end": 2123,
											"name": "SWAP1"
										},
										{
											"begin": 2107,
											"end": 2123,
											"name": "POP"
										},
										{
											"begin": 2101,
											"end": 2128,
											"name": "SWAP2"
										},
										{
											"begin": 2101,
											"end": 2128,
											"name": "SWAP1"
										},
										{
											"begin": 2101,
											"end": 2128,
											"name": "POP"
										},
										{
											"begin": 2101,
											"end": 2128,
											"name": "JUMP"
										},
										{
											"begin": 2135,
											"end": 2252,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2135,
											"end": 2252,
											"name": "JUMPDEST"
										},
										{
											"begin": 2204,
											"end": 2228,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2222,
											"end": 2227,
											"name": "DUP2"
										},
										{
											"begin": 2204,
											"end": 2228,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2204,
											"end": 2228,
											"name": "JUMP"
										},
										{
											"begin": 2204,
											"end": 2228,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 2204,
											"end": 2228,
											"name": "JUMPDEST"
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "DUP2"
										},
										{
											"begin": 2194,
											"end": 2229,
											"name": "EQ"
										},
										{
											"begin": 2184,
											"end": 2186,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 2184,
											"end": 2186,
											"name": "JUMPI"
										},
										{
											"begin": 2243,
											"end": 2244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2241,
											"name": "DUP1"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "REVERT"
										},
										{
											"begin": 2184,
											"end": 2186,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 2184,
											"end": 2186,
											"name": "JUMPDEST"
										},
										{
											"begin": 2178,
											"end": 2252,
											"name": "POP"
										},
										{
											"begin": 2178,
											"end": 2252,
											"name": "JUMP"
										},
										{
											"begin": 2259,
											"end": 2428,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2259,
											"end": 2428,
											"name": "JUMPDEST"
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2398,
											"end": 2403,
											"name": "DUP2"
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "JUMP"
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2354,
											"end": 2404,
											"name": "JUMPDEST"
										},
										{
											"begin": 2347,
											"end": 2352,
											"name": "DUP2"
										},
										{
											"begin": 2344,
											"end": 2405,
											"name": "EQ"
										},
										{
											"begin": 2334,
											"end": 2336,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2334,
											"end": 2336,
											"name": "JUMPI"
										},
										{
											"begin": 2419,
											"end": 2420,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2417,
											"name": "DUP1"
										},
										{
											"begin": 2409,
											"end": 2421,
											"name": "REVERT"
										},
										{
											"begin": 2334,
											"end": 2336,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2334,
											"end": 2336,
											"name": "JUMPDEST"
										},
										{
											"begin": 2328,
											"end": 2428,
											"name": "POP"
										},
										{
											"begin": 2328,
											"end": 2428,
											"name": "JUMP"
										},
										{
											"begin": 2435,
											"end": 2552,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2435,
											"end": 2552,
											"name": "JUMPDEST"
										},
										{
											"begin": 2504,
											"end": 2528,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2522,
											"end": 2527,
											"name": "DUP2"
										},
										{
											"begin": 2504,
											"end": 2528,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2504,
											"end": 2528,
											"name": "JUMP"
										},
										{
											"begin": 2504,
											"end": 2528,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2504,
											"end": 2528,
											"name": "JUMPDEST"
										},
										{
											"begin": 2497,
											"end": 2502,
											"name": "DUP2"
										},
										{
											"begin": 2494,
											"end": 2529,
											"name": "EQ"
										},
										{
											"begin": 2484,
											"end": 2486,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2484,
											"end": 2486,
											"name": "JUMPI"
										},
										{
											"begin": 2543,
											"end": 2544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2541,
											"name": "DUP1"
										},
										{
											"begin": 2533,
											"end": 2545,
											"name": "REVERT"
										},
										{
											"begin": 2484,
											"end": 2486,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2484,
											"end": 2486,
											"name": "JUMPDEST"
										},
										{
											"begin": 2478,
											"end": 2552,
											"name": "POP"
										},
										{
											"begin": 2478,
											"end": 2552,
											"name": "JUMP"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addTokenDet(TokenDetArrayLib.TokenDets storage,TokenDetArrayLib.TokenDet)": "fd7c9a15"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"TokenDetArrayLib.sol\":\"TokenDetArrayLib\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TokenDetArrayLib.sol\":{\"keccak256\":\"0x459b6777d937e52fb786b56ca3469b9291eaddd1009ae3c812964cdc891b3a19\",\"urls\":[\"bzz-raw://1dce017d48e148405bcb346749678309a446a004f98c1b35c95f3a54c8a79031\",\"dweb:/ipfs/Qmbs5zwxchqRxap897cKx7AiVy8j95nfha3TTtztbCPF6u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "TokenDetArrayLib.sol:2:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.\npragma experimental ABIEncoderV2;\n^-------------------------------^\n",
				"message": "Experimental features are turned on. Do not use experimental features on live deployments.",
				"severity": "warning",
				"sourceLocation": {
					"end": 58,
					"file": "TokenDetArrayLib.sol",
					"start": 25
				},
				"type": "Warning"
			}
		],
		"sources": {
			"TokenDetArrayLib.sol": {
				"ast": {
					"absolutePath": "TokenDetArrayLib.sol",
					"exportedSymbols": {
						"TokenDetArrayLib": [
							209
						]
					},
					"id": 210,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"id": 2,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "25:33:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 209,
							"linearizedBaseContracts": [
								209
							],
							"name": "TokenDetArrayLib",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 5,
									"libraryName": {
										"contractScope": null,
										"id": 3,
										"name": "TokenDetArrayLib",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 209,
										"src": "200:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_TokenDetArrayLib_$209",
											"typeString": "library TokenDetArrayLib"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "194:37:0",
									"typeName": {
										"contractScope": null,
										"id": 4,
										"name": "TokenDets",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 14,
										"src": "221:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
											"typeString": "struct TokenDetArrayLib.TokenDets"
										}
									}
								},
								{
									"canonicalName": "TokenDetArrayLib.TokenDet",
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 7,
											"name": "NFTAddress",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "263:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 6,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "263:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"name": "tokenID",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "291:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 8,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "291:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "TokenDet",
									"nodeType": "StructDefinition",
									"scope": 209,
									"src": "237:76:0",
									"visibility": "public"
								},
								{
									"canonicalName": "TokenDetArrayLib.TokenDets",
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"name": "array",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "381:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_TokenDet_$10_storage_$dyn_storage_ptr",
												"typeString": "struct TokenDetArrayLib.TokenDet[]"
											},
											"typeName": {
												"baseType": {
													"contractScope": null,
													"id": 11,
													"name": "TokenDet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 10,
													"src": "381:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDet_$10_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDet"
													}
												},
												"id": 12,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "381:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenDet_$10_storage_$dyn_storage_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDet[]"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "TokenDets",
									"nodeType": "StructDefinition",
									"scope": 209,
									"src": "354:50:0",
									"visibility": "public"
								},
								{
									"canonicalName": "TokenDetArrayLib.NewTokenDets",
									"id": 23,
									"members": [
										{
											"constant": false,
											"id": 18,
											"name": "NFTAddressNew",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "437:38:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "437:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "456:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 22,
											"name": "tokenIDNew",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "481:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"typeName": {
												"id": 21,
												"keyType": {
													"id": 19,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "489:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "481:21:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
													"typeString": "mapping(uint256 => bool)"
												},
												"valueType": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "497:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "NewTokenDets",
									"nodeType": "StructDefinition",
									"scope": 209,
									"src": "410:110:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "692:96:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "706:23:0",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 32,
																"name": "_tokenDet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "719:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenDet_$10_memory_ptr",
																	"typeString": "struct TokenDetArrayLib.TokenDet memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_TokenDet_$10_memory_ptr",
																	"typeString": "struct TokenDetArrayLib.TokenDet memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 30,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "707:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
																	"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																}
															},
															"id": 31,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "exists",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 208,
															"src": "707:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_TokenDets_$14_storage_ptr_$_t_struct$_TokenDet_$10_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_TokenDets_$14_storage_ptr_$",
																"typeString": "function (struct TokenDetArrayLib.TokenDets storage pointer,struct TokenDetArrayLib.TokenDet memory) view returns (bool)"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "707:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 44,
												"nodeType": "IfStatement",
												"src": "702:80:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "731:51:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 40,
																		"name": "_tokenDet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "761:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenDet_$10_memory_ptr",
																			"typeString": "struct TokenDetArrayLib.TokenDet memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_TokenDet_$10_memory_ptr",
																			"typeString": "struct TokenDetArrayLib.TokenDet memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 35,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "745:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
																				"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																			}
																		},
																		"id": 38,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "array",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 13,
																		"src": "745:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TokenDet_$10_storage_$dyn_storage",
																			"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
																		}
																	},
																	"id": 39,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "745:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_TokenDet_$10_storage_$returns$_t_uint256_$",
																		"typeString": "function (struct TokenDetArrayLib.TokenDet storage ref) returns (uint256)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "745:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 42,
															"nodeType": "ExpressionStatement",
															"src": "745:26:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addTokenDet",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "556:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDets"
												},
												"typeName": {
													"contractScope": null,
													"id": 24,
													"name": "TokenDets",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 14,
													"src": "556:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDets"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"name": "_tokenDet",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "588:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenDet_$10_memory_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDet"
												},
												"typeName": {
													"contractScope": null,
													"id": 26,
													"name": "TokenDet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 10,
													"src": "588:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDet_$10_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "546:138:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "692:0:0"
									},
									"scope": 209,
									"src": "526:262:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "942:430:0",
										"statements": [
											{
												"assignments": [
													58
												],
												"declarations": [
													{
														"constant": false,
														"id": 58,
														"name": "index",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "952:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 57,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "952:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 59,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "952:13:0"
											},
											{
												"assignments": [
													61
												],
												"declarations": [
													{
														"constant": false,
														"id": 61,
														"name": "tokenExists",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "975:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 60,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "975:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 63,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "66616c7365",
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "994:5:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "975:24:0"
											},
											{
												"body": {
													"id": 104,
													"nodeType": "Block",
													"src": "1057:272:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 76,
																					"name": "self",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 48,
																					"src": "1092:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
																						"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																					}
																				},
																				"id": 77,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "array",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 13,
																				"src": "1092:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_TokenDet_$10_storage_$dyn_storage",
																					"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
																				}
																			},
																			"id": 79,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 78,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 65,
																				"src": "1103:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1092:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDet_$10_storage",
																				"typeString": "struct TokenDetArrayLib.TokenDet storage ref"
																			}
																		},
																		"id": 80,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "NFTAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 7,
																		"src": "1092:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 81,
																			"name": "_tokenDet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 50,
																			"src": "1120:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDet_$10_memory_ptr",
																				"typeString": "struct TokenDetArrayLib.TokenDet memory"
																			}
																		},
																		"id": 82,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "NFTAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 7,
																		"src": "1120:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "1092:48:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 84,
																					"name": "self",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 48,
																					"src": "1160:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
																						"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																					}
																				},
																				"id": 85,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "array",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 13,
																				"src": "1160:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_TokenDet_$10_storage_$dyn_storage",
																					"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
																				}
																			},
																			"id": 87,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 86,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 65,
																				"src": "1171:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1160:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDet_$10_storage",
																				"typeString": "struct TokenDetArrayLib.TokenDet storage ref"
																			}
																		},
																		"id": 88,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenID",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 9,
																		"src": "1160:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 89,
																			"name": "_tokenDet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 50,
																			"src": "1185:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDet_$10_memory_ptr",
																				"typeString": "struct TokenDetArrayLib.TokenDet memory"
																			}
																		},
																		"id": 90,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenID",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 9,
																		"src": "1185:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1160:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1092:110:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 103,
															"nodeType": "IfStatement",
															"src": "1071:248:0",
															"trueBody": {
																"id": 102,
																"nodeType": "Block",
																"src": "1218:101:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 95,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 93,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 58,
																				"src": "1236:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 94,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 65,
																				"src": "1244:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1236:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 96,
																		"nodeType": "ExpressionStatement",
																		"src": "1236:9:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 99,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 97,
																				"name": "tokenExists",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 61,
																				"src": "1263:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "74727565",
																				"id": 98,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1277:4:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "1263:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 100,
																		"nodeType": "ExpressionStatement",
																		"src": "1263:18:0"
																	},
																	{
																		"id": 101,
																		"nodeType": "Break",
																		"src": "1299:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 68,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "1029:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 69,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "1033:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
																	"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "array",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 13,
															"src": "1033:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenDet_$10_storage_$dyn_storage",
																"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1033:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1029:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 105,
												"initializationExpression": {
													"assignments": [
														65
													],
													"declarations": [
														{
															"constant": false,
															"id": 65,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 105,
															"src": "1014:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 64,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1014:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 67,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1026:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1014:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1052:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 73,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "1052:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 75,
													"nodeType": "ExpressionStatement",
													"src": "1052:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1009:320:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 106,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "1346:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 107,
															"name": "tokenExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "1353:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 108,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1345:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,bool)"
													}
												},
												"functionReturnParameters": 56,
												"id": 109,
												"nodeType": "Return",
												"src": "1338:27:0"
											}
										]
									},
									"documentation": null,
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIndexByTokenDet",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "831:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDets"
												},
												"typeName": {
													"contractScope": null,
													"id": 47,
													"name": "TokenDets",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 14,
													"src": "831:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDets"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"name": "_tokenDet",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "863:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenDet_$10_memory_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDet"
												},
												"typeName": {
													"contractScope": null,
													"id": 49,
													"name": "TokenDet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 10,
													"src": "863:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDet_$10_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "821:82:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "927:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "936:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 54,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "936:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "926:15:0"
									},
									"scope": 209,
									"src": "794:578:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "1499:268:0",
										"statements": [
											{
												"assignments": [
													121,
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 121,
														"name": "i",
														"nodeType": "VariableDeclaration",
														"scope": 160,
														"src": "1510:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 120,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1510:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 123,
														"name": "tokenExists",
														"nodeType": "VariableDeclaration",
														"scope": 160,
														"src": "1521:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 122,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1521:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 128,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 126,
															"name": "_tokenDet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "1565:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenDet_$10_memory_ptr",
																"typeString": "struct TokenDetArrayLib.TokenDet memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_TokenDet_$10_memory_ptr",
																"typeString": "struct TokenDetArrayLib.TokenDet memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 124,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
																"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
															}
														},
														"id": 125,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getIndexByTokenDet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 111,
														"src": "1541:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_TokenDets_$14_storage_ptr_$_t_struct$_TokenDet_$10_memory_ptr_$returns$_t_uint256_$_t_bool_$bound_to$_t_struct$_TokenDets_$14_storage_ptr_$",
															"typeString": "function (struct TokenDetArrayLib.TokenDets storage pointer,struct TokenDetArrayLib.TokenDet memory) view returns (uint256,bool)"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1541:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1509:66:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 129,
														"name": "tokenExists",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1589:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1604:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1589:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 157,
												"nodeType": "IfStatement",
												"src": "1585:154:0",
												"trueBody": {
													"id": 156,
													"nodeType": "Block",
													"src": "1610:129:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 132,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 113,
																			"src": "1624:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
																				"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																			}
																		},
																		"id": 135,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "array",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 13,
																		"src": "1624:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TokenDet_$10_storage_$dyn_storage",
																			"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
																		}
																	},
																	"id": 136,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 134,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 121,
																		"src": "1635:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1624:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenDet_$10_storage",
																		"typeString": "struct TokenDetArrayLib.TokenDet storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 137,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 113,
																			"src": "1640:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
																				"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																			}
																		},
																		"id": 138,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "array",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 13,
																		"src": "1640:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TokenDet_$10_storage_$dyn_storage",
																			"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
																		}
																	},
																	"id": 144,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 139,
																					"name": "self",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 113,
																					"src": "1651:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
																						"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																					}
																				},
																				"id": 140,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "array",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 13,
																				"src": "1651:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_TokenDet_$10_storage_$dyn_storage",
																					"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
																				}
																			},
																			"id": 141,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "1651:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1671:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1651:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1640:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenDet_$10_storage",
																		"typeString": "struct TokenDetArrayLib.TokenDet storage ref"
																	}
																},
																"src": "1624:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenDet_$10_storage",
																	"typeString": "struct TokenDetArrayLib.TokenDet storage ref"
																}
															},
															"id": 146,
															"nodeType": "ExpressionStatement",
															"src": "1624:49:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 147,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 113,
																			"src": "1687:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
																				"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																			}
																		},
																		"id": 150,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "array",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 13,
																		"src": "1687:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TokenDet_$10_storage_$dyn_storage",
																			"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
																		}
																	},
																	"id": 151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1687:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1687:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 153,
															"nodeType": "ExpressionStatement",
															"src": "1687:16:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1724:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 119,
															"id": 155,
															"nodeType": "Return",
															"src": "1717:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "66616c7365",
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1755:5:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 119,
												"id": 159,
												"nodeType": "Return",
												"src": "1748:12:0"
											}
										]
									},
									"documentation": null,
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeTokenDet",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1411:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDets"
												},
												"typeName": {
													"contractScope": null,
													"id": 112,
													"name": "TokenDets",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 14,
													"src": "1411:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDets"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"name": "_tokenDet",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1443:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenDet_$10_memory_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDet"
												},
												"typeName": {
													"contractScope": null,
													"id": 114,
													"name": "TokenDet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 10,
													"src": "1443:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDet_$10_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1401:73:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1493:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 117,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1493:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1492:6:0"
									},
									"scope": 209,
									"src": "1378:389:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "1891:300:0",
										"statements": [
											{
												"body": {
													"id": 203,
													"nodeType": "Block",
													"src": "1949:214:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 182,
																					"name": "self",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 163,
																					"src": "1984:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
																						"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																					}
																				},
																				"id": 183,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "array",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 13,
																				"src": "1984:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_TokenDet_$10_storage_$dyn_storage",
																					"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
																				}
																			},
																			"id": 185,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 184,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 171,
																				"src": "1995:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1984:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDet_$10_storage",
																				"typeString": "struct TokenDetArrayLib.TokenDet storage ref"
																			}
																		},
																		"id": 186,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "NFTAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 7,
																		"src": "1984:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 187,
																			"name": "_tokenDet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 165,
																			"src": "2012:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDet_$10_memory_ptr",
																				"typeString": "struct TokenDetArrayLib.TokenDet memory"
																			}
																		},
																		"id": 188,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "NFTAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 7,
																		"src": "2012:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "1984:48:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 190,
																					"name": "self",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 163,
																					"src": "2052:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
																						"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																					}
																				},
																				"id": 191,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "array",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 13,
																				"src": "2052:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_TokenDet_$10_storage_$dyn_storage",
																					"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
																				}
																			},
																			"id": 193,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 192,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 171,
																				"src": "2063:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2052:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDet_$10_storage",
																				"typeString": "struct TokenDetArrayLib.TokenDet storage ref"
																			}
																		},
																		"id": 194,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenID",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 9,
																		"src": "2052:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 195,
																			"name": "_tokenDet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 165,
																			"src": "2077:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDet_$10_memory_ptr",
																				"typeString": "struct TokenDetArrayLib.TokenDet memory"
																			}
																		},
																		"id": 196,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenID",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 9,
																		"src": "2077:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2052:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1984:110:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 202,
															"nodeType": "IfStatement",
															"src": "1963:190:0",
															"trueBody": {
																"id": 201,
																"nodeType": "Block",
																"src": "2109:44:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"hexValue": "74727565",
																			"id": 199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2134:4:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 169,
																		"id": 200,
																		"nodeType": "Return",
																		"src": "2127:11:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1921:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 175,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "1925:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
																	"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																}
															},
															"id": 176,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "array",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 13,
															"src": "1925:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenDet_$10_storage_$dyn_storage",
																"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1925:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1921:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 204,
												"initializationExpression": {
													"assignments": [
														171
													],
													"declarations": [
														{
															"constant": false,
															"id": 171,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 204,
															"src": "1906:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 170,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1906:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 173,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1918:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1906:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1944:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 179,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "1944:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 181,
													"nodeType": "ExpressionStatement",
													"src": "1944:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1901:262:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "66616c7365",
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2179:5:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 169,
												"id": 206,
												"nodeType": "Return",
												"src": "2172:12:0"
											}
										]
									},
									"documentation": null,
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exists",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1798:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDets"
												},
												"typeName": {
													"contractScope": null,
													"id": 162,
													"name": "TokenDets",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 14,
													"src": "1798:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDets_$14_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDets"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"name": "_tokenDet",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1830:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenDet_$10_memory_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDet"
												},
												"typeName": {
													"contractScope": null,
													"id": 164,
													"name": "TokenDet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 10,
													"src": "1830:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDet_$10_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1788:73:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1885:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 167,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1885:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1884:6:0"
									},
									"scope": 209,
									"src": "1773:418:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 210,
							"src": "85:2108:0"
						}
					],
					"src": "0:2193:0"
				},
				"id": 0
			}
		}
	}
}