{
	"id": "86a1e469ae0e99f8777deaa5e6e25074",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"Storage.sol": {
				"content": "pragma solidity ^0.5.17;\npragma experimental ABIEncoderV2;\nimport \"./TokenDetArrayLib.sol\";\nimport \"./ownable.sol\";\nimport \"./ERC20Addresses.sol\";\n\ninterface IERC20 {\n\n    function approve(address spender, uint256 value) external;\n\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    function decreaseApproval(address _spender, uint256 _subtractedValue)\n        external;\n\n    function increaseApproval(address spender, uint256 addedValue) external;\n\n    function increaseAllowance(address spender, uint256 addedValue) external;\n\n    function decreaseAllowance(address spender, uint256 subtractedValue)\n        external;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n\n}\n\ncontract IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes memory data\n    ) public returns (bytes4);\n}\n\ncontract ERC721Holder is IERC721Receiver {\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n\ncontract IMintableToken {\n    // Required methods\n    function ownerOf(uint256 _tokenId) external view returns (address owner);\n\n    function royalities(uint256 _tokenId) public view returns (uint256);\n\n    function creators(uint256 _tokenId) public view returns (address payable);\n\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public;\n\n    function getApproved(uint256 tokenId)\n        public\n        view\n        returns (address operator);\n        \n    function isApprovedForAll(address owner, address operator)\n        public\n        view\n        returns (bool);\n\n    // Events\n    event Transfer(address from, address to, uint256 tokenId);\n    event Approval(address owner, address approved, uint256 tokenId);\n\n    // ERC-165 Compatibility (https://github.com/ethereum/EIPs/issues/165)\n    function supportsInterface(bytes4 _interfaceID)\n        external\n        view\n        returns (bool);\n}\n\n\ncontract Storage is Ownable {\n    using TokenDetArrayLib for TokenDetArrayLib.TokenDets;\n    using ERC20Addresses for ERC20Addresses.erc20Addresses;\n    // address owner;\n    // address owner;\n    uint16 public rewardDistributionPercentage;\n    uint16 public platFormFeePercentage;   \n    uint16 public lpStakefeepercentage; \n    // uint16 public brokerage;\n    uint256 public updateClosingTime;\n\n    mapping(address => mapping(uint256 => bool)) tokenOpenForSale;\n    mapping(address => TokenDetArrayLib.TokenDets) tokensForSalePerUser;\n    TokenDetArrayLib.TokenDets fixedPriceTokens;\n    TokenDetArrayLib.TokenDets auctionTokens;\n\n    //auction type :\n    // 1 : only direct buy\n    // 2 : only bid\n    // 3 : both buy and bid\n\n    struct auction {\n        address payable lastOwner;\n        uint256 currentBid;\n        address payable highestBidder;\n        uint256 auctionType;\n        uint256 startingPrice;\n        uint256 buyPrice;\n        bool buyer;\n        uint256 startingTime;\n        uint256 closingTime;\n        address erc20Token;\n    }\n\n    struct OfferDetails {\n        address offerer;\n        uint256 amount;\n    }\n    \n    /** Offer mapping\n     * {\n     *      ERC721Address:{\n     *          tokenId:{\n     *               ERC20Address{\n     *                   offerer: Address of offerer,\n     *                   amount: Offer in this currency\n     *               }\n     *           }\n     *       }   \n     * }\n     */\n    mapping(\n        address => mapping( \n            uint256 => mapping(\n                address => OfferDetails\n            )\n        )\n    ) public offerprice;\n\n    mapping(address => mapping(uint256 => auction)) public auctions;\n\n    mapping(address=>mapping(uint256 => mapping(address => mapping(uint256 => OfferDetails)))) bidOffers;\n\n    TokenDetArrayLib.TokenDets tokensForSale;\n    ERC20Addresses.erc20Addresses erc20TokensArray;\n\n    address public WETHAddress;\n    address public StakeAddress;\n    address public LPStakeAddress;\n    function getErc20Tokens()\n        public\n        view\n        returns (ERC20Addresses.erc20Addresses memory)\n    {\n        return erc20TokensArray;\n    }\n\n    function getTokensForSale()\n        public\n        view\n        returns (TokenDetArrayLib.TokenDet[] memory)\n    {\n        return tokensForSale.array;\n    }\n\n    function getFixedPriceTokensForSale()\n        public\n        view\n        returns (TokenDetArrayLib.TokenDet[] memory)\n    {\n        return fixedPriceTokens.array;\n    }\n\n    function getAuctionTokensForSale()\n        public\n        view\n        returns (TokenDetArrayLib.TokenDet[] memory)\n    {\n        return auctionTokens.array;\n    }\n\n    function getTokensForSalePerUser(address _user)\n        public\n        view\n        returns (TokenDetArrayLib.TokenDet[] memory)\n    {\n        return tokensForSalePerUser[_user].array;\n    }\n\n    // function setBrokerage(uint16 _brokerage) public onlyOwner {\n    //     brokerage = _brokerage;\n    // }\n\n\n      function setBrokerage(address _rewardDistributionAddress,address _lpStakeAddress ,uint16 _lpStakefeepercentage, uint16 _rewardDistributionPercentage, uint16 _platFormFeePercentage) public onlyOwner {\n        require(_rewardDistributionAddress != address(0) &&_lpStakeAddress!=address(0), \"Address is Zero\");\n        require(_rewardDistributionPercentage >= 0 && _platFormFeePercentage >= 0 &&_lpStakefeepercentage>=0, \"should be greater than zero\");\n        require(_rewardDistributionPercentage <= 1000 && _platFormFeePercentage <= 1000 && _lpStakefeepercentage<=1000, \"should be greater than zero\");\n        rewardDistributionPercentage = _rewardDistributionPercentage;\n        platFormFeePercentage = _platFormFeePercentage;\n        lpStakefeepercentage=_lpStakefeepercentage;\n        StakeAddress = _rewardDistributionAddress;\n        LPStakeAddress = _lpStakeAddress;\n    }\n\n    function setUpdatedClosingTime(uint256 _updateTime) public onlyOwner {\n        updateClosingTime = _updateTime;\n    }\n\n    function setAddress(address _weth, address _rewardDistributionAddress) external onlyOwner {\n        WETHAddress =_weth;\n        StakeAddress = _rewardDistributionAddress;\n    }\n}"
			},
			"ERC20Addresses.sol": {
				"content": "pragma solidity ^0.5.17;\n\n// library for erc20address array \nlibrary ERC20Addresses {\n    using ERC20Addresses for erc20Addresses;\n\n    struct erc20Addresses {\n        address[] array;\n    }\n\n    function addERC20Tokens(erc20Addresses storage self, address erc20address)\n        external\n    {\n        self.array.push(erc20address);\n    }\n\n    function getIndexByERC20Token(\n        erc20Addresses storage self,\n        address _ercTokenAddress\n    ) internal view returns (uint256, bool) {\n        uint256 index;\n        bool exists;\n\n        for (uint256 i = 0; i < self.array.length; i++) {\n            if (self.array[i] == _ercTokenAddress) {\n                index = i;\n                exists = true;\n\n                break;\n            }\n        }\n        return (index, exists);\n    }\n\n    function removeERC20Token(\n        erc20Addresses storage self,\n        address _ercTokenAddress\n    ) internal {\n        if (self.array.length > 1){\n            for (uint256 i = 0; i < self.array.length; i++) {\n                    if (\n                        self.array[i] == _ercTokenAddress \n                    ) {\n                        delete self.array[i];\n                    }\n                }\n        }\n        else{\n            self.array.length = 0;\n        }\n    }\n    function exists(\n        erc20Addresses storage self,\n        address _ercTokenAddress\n    ) internal view returns (bool) {\n        for (uint256 i = 0; i < self.array.length; i++) {\n            if (\n                self.array[i] == _ercTokenAddress \n            ) {\n                return true;\n            }\n        }\n        return false;\n    }\n}"
			},
			"ownable.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable {\n    address private _owner;\n\n    // event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        // address msgSender = _msgSender();\n        _owner = msg.sender;\n        // emit OwnershipTransferred(address(0), msg.sender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(isOwner(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Returns true if the caller is the current owner.\n     */\n    function isOwner() public view returns (bool) {\n        return msg.sender == _owner;\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        // emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n\n}"
			},
			"TokenDetArrayLib.sol": {
				"content": "pragma solidity ^0.5.17;\npragma experimental ABIEncoderV2;\n\n// librray for TokenDets\nlibrary TokenDetArrayLib {\n    // Using for array of strcutres for storing mintable address and token id\n    using TokenDetArrayLib for TokenDets;\n\n    struct TokenDet {\n        address NFTAddress;\n        uint256 tokenID;\n    }\n\n    // custom type array TokenDets\n    struct TokenDets {\n        TokenDet[] array;\n    }\n\n    function addTokenDet(\n        TokenDets storage self,\n        TokenDet memory _tokenDet\n        // address _mintableAddress,\n        // uint256 _tokenID\n    ) public {\n        if (!self.exists(_tokenDet)) {\n            self.array.push(_tokenDet);\n        }\n    }\n\n    function getIndexByTokenDet(\n        TokenDets storage self,\n        TokenDet memory _tokenDet\n    ) internal view returns (uint256, bool) {\n        uint256 index;\n        bool tokenExists = false;\n        for (uint256 i = 0; i < self.array.length; i++) {\n            if (\n                self.array[i].NFTAddress == _tokenDet.NFTAddress &&\n                self.array[i].tokenID == _tokenDet.tokenID \n            ) {\n                index = i;\n                tokenExists = true;\n                break;\n            }\n        }\n        return (index, tokenExists);\n    }\n\n    function removeTokenDet(\n        TokenDets storage self,\n        TokenDet memory _tokenDet\n    ) internal returns (bool) {\n        (uint256 i, bool tokenExists) = self.getIndexByTokenDet(_tokenDet);\n        if (tokenExists == true) {\n            self.array[i] = self.array[self.array.length - 1];\n            self.array.pop();\n            return true;\n        }\n        return false;\n    }\n\n    function exists(\n        TokenDets storage self,\n        TokenDet memory _tokenDet\n    ) internal view returns (bool) {\n        for (uint256 i = 0; i < self.array.length; i++) {\n            if (\n                self.array[i].NFTAddress == _tokenDet.NFTAddress &&\n                self.array[i].tokenID == _tokenDet.tokenID\n            ) {\n                return true;\n            }\n        }\n        return false;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ERC20Addresses.sol": {
				"ERC20Addresses": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"ERC20Addresses.sol\":61:1629  library ERC20Addresses {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20Addresses.sol\":61:1629  library ERC20Addresses {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x581455e9\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"ERC20Addresses.sol\":196:338  function addERC20Tokens(erc20Addresses storage self, address erc20address)... */\n    tag_2:\n      dup2\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_3\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_3:\n        /* \"ERC20Addresses.sol\":196:338  function addERC20Tokens(erc20Addresses storage self, address erc20address)... */\n      pop\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_5:\n      pop\n        /* \"ERC20Addresses.sol\":196:338  function addERC20Tokens(erc20Addresses storage self, address erc20address)... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_6\n      jump\t// in\n    tag_4:\n      stop\n    tag_6:\n        /* \"--CODEGEN--\":27:37   */\n      dup2\n      sload\n        /* \"--CODEGEN--\":39:40   */\n      0x01\n        /* \"--CODEGEN--\":23:41   */\n      dup2\n      add\n        /* \"--CODEGEN--\":45:68   */\n      dup4\n      sstore\n      0x00\n        /* \"ERC20Addresses.sol\":302:331  self.array.push(erc20address) */\n      swap3\n      dup4\n      mstore\n      0x20\n      swap1\n      swap3\n      keccak256\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"ERC20Addresses.sol\":196:338  function addERC20Tokens(erc20Addresses storage self, address erc20address)... */\n      jump\t// out\n\n    auxdata: 0xa265627a7a723158204195c86653aca5b10856f37b43e79243506c99ea7b2c7e6353d53711e3aa659164736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60d8610025600b82828239805160001a60731461001857fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063581455e9146038575b600080fd5b818015604357600080fd5b50606d60048036036040811015605857600080fd5b50803590602001356001600160a01b0316606f565b005b81546001810183556000928352602090922090910180546001600160a01b0319166001600160a01b0390921691909117905556fea265627a7a723158204195c86653aca5b10856f37b43e79243506c99ea7b2c7e6353d53711e3aa659164736f6c63430005110032",
							"opcodes": "PUSH1 0xD8 PUSH2 0x25 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x18 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x581455E9 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH1 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH1 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6F JUMP JUMPDEST STOP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 SWAP1 SWAP3 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 COINBASE SWAP6 0xC8 PUSH7 0x53ACA5B10856F3 PUSH28 0x43E79243506C99EA7B2C7E6353D53711E3AA659164736F6C63430005 GT STOP ORIGIN ",
							"sourceMap": "61:1568:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063581455e9146038575b600080fd5b818015604357600080fd5b50606d60048036036040811015605857600080fd5b50803590602001356001600160a01b0316606f565b005b81546001810183556000928352602090922090910180546001600160a01b0319166001600160a01b0390921691909117905556fea265627a7a723158204195c86653aca5b10856f37b43e79243506c99ea7b2c7e6353d53711e3aa659164736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x581455E9 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH1 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH1 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6F JUMP JUMPDEST STOP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 SWAP1 SWAP3 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 COINBASE SWAP6 0xC8 PUSH7 0x53ACA5B10856F3 PUSH28 0x43E79243506C99EA7B2C7E6353D53711E3AA659164736F6C63430005 GT STOP ORIGIN ",
							"sourceMap": "61:1568:0:-;;;;;;;;;;;;;;;;;;;;;;;;196:142;;8:9:-1;5:2;;;30:1;27;20:12;5:2;196:142:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;196:142:0;;;;;;-1:-1:-1;;;;;196:142:0;;:::i;:::-;;;27:10:-1;;39:1;23:18;;45:23;;-1:-1;302:29:0;;;;;;;;;;;;-1:-1:-1;;;;;;302:29:0;-1:-1:-1;;;;;302:29:0;;;;;;;;;196:142::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "43200",
								"executionCost": "121",
								"totalCost": "43321"
							},
							"external": {
								"addERC20Tokens(ERC20Addresses.erc20Addresses storage,address)": "41950"
							},
							"internal": {
								"exists(struct ERC20Addresses.erc20Addresses storage pointer,address)": "infinite",
								"getIndexByERC20Token(struct ERC20Addresses.erc20Addresses storage pointer,address)": "infinite",
								"removeERC20Token(struct ERC20Addresses.erc20Addresses storage pointer,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 1629,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 1629,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158204195c86653aca5b10856f37b43e79243506c99ea7b2c7e6353d53711e3aa659164736f6c63430005110032",
									".code": [
										{
											"begin": 61,
											"end": 1629,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "ADDRESS"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "EQ"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "MSTORE"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "LT"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "JUMPI"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "SHR"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "PUSH",
											"value": "581455E9"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "EQ"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "JUMPI"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "JUMPDEST"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 1629,
											"name": "REVERT"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "DUP2"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "ADD"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "AND"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "STOP"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "JUMPDEST"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "DUP2"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "DUP4"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "SWAP3"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "DUP4"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "MSTORE"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "SWAP1"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "SWAP3"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "KECCAK256"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "SWAP1"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "SWAP2"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "ADD"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "DUP1"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "SWAP1"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "SWAP3"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "AND"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "SWAP2"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "SWAP1"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "SWAP2"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "OR"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "SWAP1"
										},
										{
											"begin": 302,
											"end": 331,
											"name": "SSTORE"
										},
										{
											"begin": 196,
											"end": 338,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addERC20Tokens(ERC20Addresses.erc20Addresses storage,address)": "581455e9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ERC20Addresses.sol\":\"ERC20Addresses\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20Addresses.sol\":{\"keccak256\":\"0x3ce0eddfaea69964074e7db8a0dbfaa2d01856d10d0c120516115c76f735b032\",\"urls\":[\"bzz-raw://0e7d74a18eb9d1c18e0db1011b431fb3b85a0663a68f9d3e7987f494b16e9078\",\"dweb:/ipfs/QmXcGYSwBpVjTZgoehqZq1YqpVuVdyHF9v7zXDesFHc4kb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"Storage.sol": {
				"ERC721Holder": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Storage.sol\":1305:1537  contract ERC721Holder is IERC721Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Storage.sol\":1305:1537  contract ERC721Holder is IERC721Receiver {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Storage.sol\":1305:1537  contract ERC721Holder is IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"Storage.sol\":1305:1537  contract ERC721Holder is IERC721Receiver {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Storage.sol\":1352:1535  function onERC721Received(... */\n    tag_3:\n      tag_4\n      tag_5\n      calldatasize\n      0x04\n      jump(tag_6)\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      jump(tag_9)\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n      shl(0xe1, 0x0a85bd01)\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":5:135   */\n    tag_12:\n        /* \"--CODEGEN--\":72:92   */\n      dup1\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_13\n        /* \"--CODEGEN--\":72:92   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      jump(tag_14)\n    tag_13:\n        /* \"--CODEGEN--\":57:135   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":143:583   */\n    tag_15:\n      0x00\n        /* \"--CODEGEN--\":244:247   */\n      dup3\n        /* \"--CODEGEN--\":237:241   */\n      0x1f\n        /* \"--CODEGEN--\":229:235   */\n      dup4\n        /* \"--CODEGEN--\":225:242   */\n      add\n        /* \"--CODEGEN--\":221:248   */\n      slt\n        /* \"--CODEGEN--\":211:213   */\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":262:263   */\n      0x00\n        /* \"--CODEGEN--\":259:260   */\n      dup1\n        /* \"--CODEGEN--\":252:264   */\n      revert\n        /* \"--CODEGEN--\":211:213   */\n    tag_16:\n        /* \"--CODEGEN--\":299:305   */\n      dup2\n        /* \"--CODEGEN--\":286:306   */\n      calldataload\n        /* \"--CODEGEN--\":321:385   */\n      tag_17\n        /* \"--CODEGEN--\":336:384   */\n      tag_18\n        /* \"--CODEGEN--\":377:383   */\n      dup3\n        /* \"--CODEGEN--\":336:384   */\n      jump(tag_19)\n    tag_18:\n        /* \"--CODEGEN--\":321:385   */\n      jump(tag_20)\n    tag_17:\n        /* \"--CODEGEN--\":312:385   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":405:411   */\n      dup1\n        /* \"--CODEGEN--\":398:403   */\n      dup3\n        /* \"--CODEGEN--\":391:412   */\n      mstore\n        /* \"--CODEGEN--\":441:445   */\n      0x20\n        /* \"--CODEGEN--\":433:439   */\n      dup4\n        /* \"--CODEGEN--\":429:446   */\n      add\n        /* \"--CODEGEN--\":474:478   */\n      0x20\n        /* \"--CODEGEN--\":467:472   */\n      dup4\n        /* \"--CODEGEN--\":463:479   */\n      add\n        /* \"--CODEGEN--\":509:512   */\n      dup6\n        /* \"--CODEGEN--\":500:506   */\n      dup4\n        /* \"--CODEGEN--\":495:498   */\n      dup4\n        /* \"--CODEGEN--\":491:507   */\n      add\n        /* \"--CODEGEN--\":488:513   */\n      gt\n        /* \"--CODEGEN--\":485:487   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":526:527   */\n      0x00\n        /* \"--CODEGEN--\":523:524   */\n      dup1\n        /* \"--CODEGEN--\":516:528   */\n      revert\n        /* \"--CODEGEN--\":485:487   */\n    tag_21:\n        /* \"--CODEGEN--\":536:577   */\n      tag_22\n        /* \"--CODEGEN--\":570:576   */\n      dup4\n        /* \"--CODEGEN--\":565:568   */\n      dup3\n        /* \"--CODEGEN--\":560:563   */\n      dup5\n        /* \"--CODEGEN--\":536:577   */\n      jump(tag_23)\n    tag_22:\n        /* \"--CODEGEN--\":204:583   */\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":591:721   */\n    tag_24:\n        /* \"--CODEGEN--\":658:678   */\n      dup1\n      calldataload\n        /* \"--CODEGEN--\":683:716   */\n      tag_13\n        /* \"--CODEGEN--\":658:678   */\n      dup2\n        /* \"--CODEGEN--\":683:716   */\n      jump(tag_26)\n        /* \"--CODEGEN--\":728:1449   */\n    tag_6:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"--CODEGEN--\":892:895   */\n      0x80\n        /* \"--CODEGEN--\":880:889   */\n      dup6\n        /* \"--CODEGEN--\":871:878   */\n      dup8\n        /* \"--CODEGEN--\":867:890   */\n      sub\n        /* \"--CODEGEN--\":863:896   */\n      slt\n        /* \"--CODEGEN--\":860:862   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":909:910   */\n      0x00\n        /* \"--CODEGEN--\":906:907   */\n      dup1\n        /* \"--CODEGEN--\":899:911   */\n      revert\n        /* \"--CODEGEN--\":860:862   */\n    tag_27:\n        /* \"--CODEGEN--\":944:945   */\n      0x00\n        /* \"--CODEGEN--\":961:1014   */\n      tag_28\n        /* \"--CODEGEN--\":1006:1013   */\n      dup8\n        /* \"--CODEGEN--\":986:995   */\n      dup8\n        /* \"--CODEGEN--\":961:1014   */\n      jump(tag_12)\n    tag_28:\n        /* \"--CODEGEN--\":951:1014   */\n      swap5\n      pop\n        /* \"--CODEGEN--\":923:1020   */\n      pop\n        /* \"--CODEGEN--\":1051:1053   */\n      0x20\n        /* \"--CODEGEN--\":1069:1122   */\n      tag_29\n        /* \"--CODEGEN--\":1114:1121   */\n      dup8\n        /* \"--CODEGEN--\":1105:1111   */\n      dup3\n        /* \"--CODEGEN--\":1094:1103   */\n      dup9\n        /* \"--CODEGEN--\":1090:1112   */\n      add\n        /* \"--CODEGEN--\":1069:1122   */\n      jump(tag_12)\n    tag_29:\n        /* \"--CODEGEN--\":1059:1122   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":1030:1128   */\n      pop\n        /* \"--CODEGEN--\":1159:1161   */\n      0x40\n        /* \"--CODEGEN--\":1177:1230   */\n      tag_30\n        /* \"--CODEGEN--\":1222:1229   */\n      dup8\n        /* \"--CODEGEN--\":1213:1219   */\n      dup3\n        /* \"--CODEGEN--\":1202:1211   */\n      dup9\n        /* \"--CODEGEN--\":1198:1220   */\n      add\n        /* \"--CODEGEN--\":1177:1230   */\n      jump(tag_24)\n    tag_30:\n        /* \"--CODEGEN--\":1167:1230   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":1138:1236   */\n      pop\n        /* \"--CODEGEN--\":1295:1297   */\n      0x60\n        /* \"--CODEGEN--\":1284:1293   */\n      dup6\n        /* \"--CODEGEN--\":1280:1298   */\n      add\n        /* \"--CODEGEN--\":1267:1299   */\n      calldataload\n        /* \"--CODEGEN--\":1319:1337   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":1311:1317   */\n      dup2\n        /* \"--CODEGEN--\":1308:1338   */\n      gt\n        /* \"--CODEGEN--\":1305:1307   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":1351:1352   */\n      0x00\n        /* \"--CODEGEN--\":1348:1349   */\n      dup1\n        /* \"--CODEGEN--\":1341:1353   */\n      revert\n        /* \"--CODEGEN--\":1305:1307   */\n    tag_31:\n        /* \"--CODEGEN--\":1371:1433   */\n      tag_32\n        /* \"--CODEGEN--\":1425:1432   */\n      dup8\n        /* \"--CODEGEN--\":1416:1422   */\n      dup3\n        /* \"--CODEGEN--\":1405:1414   */\n      dup9\n        /* \"--CODEGEN--\":1401:1423   */\n      add\n        /* \"--CODEGEN--\":1371:1433   */\n      jump(tag_15)\n    tag_32:\n        /* \"--CODEGEN--\":1361:1433   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":1246:1439   */\n      pop\n        /* \"--CODEGEN--\":854:1449   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\n        /* \"--CODEGEN--\":1456:1566   */\n    tag_33:\n        /* \"--CODEGEN--\":1537:1560   */\n      tag_34\n        /* \"--CODEGEN--\":1554:1559   */\n      dup2\n        /* \"--CODEGEN--\":1537:1560   */\n      jump(tag_35)\n    tag_34:\n        /* \"--CODEGEN--\":1532:1535   */\n      dup3\n        /* \"--CODEGEN--\":1525:1561   */\n      mstore\n        /* \"--CODEGEN--\":1519:1566   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1573:1782   */\n    tag_9:\n        /* \"--CODEGEN--\":1689:1691   */\n      0x20\n        /* \"--CODEGEN--\":1674:1692   */\n      dup2\n      add\n        /* \"--CODEGEN--\":1703:1772   */\n      tag_13\n        /* \"--CODEGEN--\":1678:1687   */\n      dup3\n        /* \"--CODEGEN--\":1745:1751   */\n      dup5\n        /* \"--CODEGEN--\":1703:1772   */\n      jump(tag_33)\n        /* \"--CODEGEN--\":1789:2045   */\n    tag_20:\n        /* \"--CODEGEN--\":1851:1853   */\n      0x40\n        /* \"--CODEGEN--\":1845:1854   */\n      mload\n        /* \"--CODEGEN--\":1877:1894   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":1952:1970   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":1937:1971   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":1973:1995   */\n      dup3\n      dup3\n      lt\n        /* \"--CODEGEN--\":1934:1996   */\n      or\n        /* \"--CODEGEN--\":1931:1933   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":2009:2010   */\n      0x00\n        /* \"--CODEGEN--\":2006:2007   */\n      dup1\n        /* \"--CODEGEN--\":1999:2011   */\n      revert\n        /* \"--CODEGEN--\":1931:1933   */\n    tag_37:\n        /* \"--CODEGEN--\":2025:2027   */\n      0x40\n        /* \"--CODEGEN--\":2018:2040   */\n      mstore\n        /* \"--CODEGEN--\":1829:2045   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":2052:2373   */\n    tag_19:\n      0x00\n        /* \"--CODEGEN--\":2195:2213   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":2187:2193   */\n      dup3\n        /* \"--CODEGEN--\":2184:2214   */\n      gt\n        /* \"--CODEGEN--\":2181:2183   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":2227:2228   */\n      0x00\n        /* \"--CODEGEN--\":2224:2225   */\n      dup1\n        /* \"--CODEGEN--\":2217:2229   */\n      revert\n        /* \"--CODEGEN--\":2181:2183   */\n    tag_38:\n      pop\n        /* \"--CODEGEN--\":2358:2362   */\n      0x20\n        /* \"--CODEGEN--\":2294:2298   */\n      0x1f\n        /* \"--CODEGEN--\":2271:2288   */\n      swap2\n      swap1\n      swap2\n      add\n      not(0x1f)\n        /* \"--CODEGEN--\":2267:2300   */\n      and\n        /* \"--CODEGEN--\":2348:2363   */\n      add\n      swap1\n        /* \"--CODEGEN--\":2118:2373   */\n      jump\n        /* \"--CODEGEN--\":2380:2471   */\n    tag_39:\n      0x00\n        /* \"--CODEGEN--\":2442:2466   */\n      tag_13\n        /* \"--CODEGEN--\":2460:2465   */\n      dup3\n        /* \"--CODEGEN--\":2442:2466   */\n      jump(tag_41)\n        /* \"--CODEGEN--\":2478:2622   */\n    tag_35:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"--CODEGEN--\":2539:2617   */\n      and\n      swap1\n        /* \"--CODEGEN--\":2522:2622   */\n      jump\n        /* \"--CODEGEN--\":2629:2750   */\n    tag_41:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":2691:2745   */\n      and\n      swap1\n        /* \"--CODEGEN--\":2674:2750   */\n      jump\n        /* \"--CODEGEN--\":2757:2829   */\n    tag_42:\n        /* \"--CODEGEN--\":2819:2824   */\n      swap1\n        /* \"--CODEGEN--\":2802:2829   */\n      jump\n        /* \"--CODEGEN--\":2837:2982   */\n    tag_23:\n        /* \"--CODEGEN--\":2918:2924   */\n      dup3\n        /* \"--CODEGEN--\":2913:2916   */\n      dup2\n        /* \"--CODEGEN--\":2908:2911   */\n      dup4\n        /* \"--CODEGEN--\":2895:2925   */\n      calldatacopy\n      pop\n        /* \"--CODEGEN--\":2974:2975   */\n      0x00\n        /* \"--CODEGEN--\":2956:2972   */\n      swap2\n      add\n        /* \"--CODEGEN--\":2949:2976   */\n      mstore\n        /* \"--CODEGEN--\":2888:2982   */\n      jump\n        /* \"--CODEGEN--\":2990:3107   */\n    tag_14:\n        /* \"--CODEGEN--\":3059:3083   */\n      tag_43\n        /* \"--CODEGEN--\":3077:3082   */\n      dup2\n        /* \"--CODEGEN--\":3059:3083   */\n      jump(tag_39)\n    tag_43:\n        /* \"--CODEGEN--\":3052:3057   */\n      dup2\n        /* \"--CODEGEN--\":3049:3084   */\n      eq\n        /* \"--CODEGEN--\":3039:3041   */\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":3098:3099   */\n      0x00\n        /* \"--CODEGEN--\":3095:3096   */\n      dup1\n        /* \"--CODEGEN--\":3088:3100   */\n      revert\n        /* \"--CODEGEN--\":3039:3041   */\n    tag_44:\n        /* \"--CODEGEN--\":3033:3107   */\n      pop\n      jump\n        /* \"--CODEGEN--\":3114:3231   */\n    tag_26:\n        /* \"--CODEGEN--\":3183:3207   */\n      tag_43\n        /* \"--CODEGEN--\":3201:3206   */\n      dup2\n        /* \"--CODEGEN--\":3183:3207   */\n      jump(tag_42)\n\n    auxdata: 0xa365627a7a72315820d28818471e1a16ce15d3bfa705bd503cfcac4afaad2c2f9840886088463a173d6c6578706572696d656e74616cf564736f6c63430005110040\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610254806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004361003e3660046100d9565b610059565b6040516100509190610161565b60405180910390f35b630a85bd0160e11b949350505050565b8035610074816101f1565b92915050565b600082601f83011261008b57600080fd5b813561009e61009982610196565b61016f565b915080825260208301602083018583830111156100ba57600080fd5b6100c58382846101e5565b50505092915050565b803561007481610208565b600080600080608085870312156100ef57600080fd5b60006100fb8787610069565b945050602061010c87828801610069565b935050604061011d878288016100ce565b925050606085013567ffffffffffffffff81111561013a57600080fd5b6101468782880161007a565b91505092959194509250565b61015b816101c9565b82525050565b602081016100748284610152565b60405181810167ffffffffffffffff8111828210171561018e57600080fd5b604052919050565b600067ffffffffffffffff8211156101ad57600080fd5b506020601f91909101601f19160190565b6000610074826101d6565b6001600160e01b03191690565b6001600160a01b031690565b90565b82818337506000910152565b6101fa816101be565b811461020557600080fd5b50565b6101fa816101e256fea365627a7a72315820d28818471e1a16ce15d3bfa705bd503cfcac4afaad2c2f9840886088463a173d6c6578706572696d656e74616cf564736f6c63430005110040",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x254 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0xD9 JUMP JUMPDEST PUSH2 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x74 DUP2 PUSH2 0x1F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9E PUSH2 0x99 DUP3 PUSH2 0x196 JUMP JUMPDEST PUSH2 0x16F JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC5 DUP4 DUP3 DUP5 PUSH2 0x1E5 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x74 DUP2 PUSH2 0x208 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFB DUP8 DUP8 PUSH2 0x69 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x10C DUP8 DUP3 DUP9 ADD PUSH2 0x69 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x11D DUP8 DUP3 DUP9 ADD PUSH2 0xCE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x146 DUP8 DUP3 DUP9 ADD PUSH2 0x7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x15B DUP2 PUSH2 0x1C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x74 DUP3 DUP5 PUSH2 0x152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74 DUP3 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x1FA DUP2 PUSH2 0x1BE JUMP JUMPDEST DUP2 EQ PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1FA DUP2 PUSH2 0x1E2 JUMP INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 0xD2 DUP9 XOR SELFBALANCE 0x1E BYTE AND 0xCE ISZERO 0xD3 0xBF 0xA7 SDIV 0xBD POP EXTCODECOPY 0xFC 0xAC 0x4A STATICCALL 0xAD 0x2C 0x2F SWAP9 BLOCKHASH DUP9 PUSH1 0x88 CHAINID GASPRICE OR RETURNDATASIZE PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP SDIV GT STOP BLOCKHASH ",
							"sourceMap": "1305:232:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1305:232:1;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004361003e3660046100d9565b610059565b6040516100509190610161565b60405180910390f35b630a85bd0160e11b949350505050565b8035610074816101f1565b92915050565b600082601f83011261008b57600080fd5b813561009e61009982610196565b61016f565b915080825260208301602083018583830111156100ba57600080fd5b6100c58382846101e5565b50505092915050565b803561007481610208565b600080600080608085870312156100ef57600080fd5b60006100fb8787610069565b945050602061010c87828801610069565b935050604061011d878288016100ce565b925050606085013567ffffffffffffffff81111561013a57600080fd5b6101468782880161007a565b91505092959194509250565b61015b816101c9565b82525050565b602081016100748284610152565b60405181810167ffffffffffffffff8111828210171561018e57600080fd5b604052919050565b600067ffffffffffffffff8211156101ad57600080fd5b506020601f91909101601f19160190565b6000610074826101d6565b6001600160e01b03191690565b6001600160a01b031690565b90565b82818337506000910152565b6101fa816101be565b811461020557600080fd5b50565b6101fa816101e256fea365627a7a72315820d28818471e1a16ce15d3bfa705bd503cfcac4afaad2c2f9840886088463a173d6c6578706572696d656e74616cf564736f6c63430005110040",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0xD9 JUMP JUMPDEST PUSH2 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x74 DUP2 PUSH2 0x1F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9E PUSH2 0x99 DUP3 PUSH2 0x196 JUMP JUMPDEST PUSH2 0x16F JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC5 DUP4 DUP3 DUP5 PUSH2 0x1E5 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x74 DUP2 PUSH2 0x208 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFB DUP8 DUP8 PUSH2 0x69 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x10C DUP8 DUP3 DUP9 ADD PUSH2 0x69 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x11D DUP8 DUP3 DUP9 ADD PUSH2 0xCE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x146 DUP8 DUP3 DUP9 ADD PUSH2 0x7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x15B DUP2 PUSH2 0x1C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x74 DUP3 DUP5 PUSH2 0x152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74 DUP3 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x1FA DUP2 PUSH2 0x1BE JUMP JUMPDEST DUP2 EQ PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1FA DUP2 PUSH2 0x1E2 JUMP INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 0xD2 DUP9 XOR SELFBALANCE 0x1E BYTE AND 0xCE ISZERO 0xD3 0xBF 0xA7 SDIV 0xBD POP EXTCODECOPY 0xFC 0xAC 0x4A STATICCALL 0xAD 0x2C 0x2F SWAP9 BLOCKHASH DUP9 PUSH1 0x88 CHAINID GASPRICE OR RETURNDATASIZE PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP SDIV GT STOP BLOCKHASH ",
							"sourceMap": "1305:232:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1305:232:1;;;;;;;;;;;;;;;;;;;1352:183;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;1352:183:1;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;;57:78;;;;;143:440;;244:3;237:4;229:6;225:17;221:27;211:2;;262:1;259;252:12;211:2;299:6;286:20;321:64;336:48;377:6;336:48;;;321:64;;;312:73;;405:6;398:5;391:21;441:4;433:6;429:17;474:4;467:5;463:16;509:3;500:6;495:3;491:16;488:25;485:2;;;526:1;523;516:12;485:2;536:41;570:6;565:3;560;536:41;;;204:379;;;;;;;;591:130;658:20;;683:33;658:20;683:33;;728:721;;;;;892:3;880:9;871:7;867:23;863:33;860:2;;;909:1;906;899:12;860:2;944:1;961:53;1006:7;986:9;961:53;;;951:63;;923:97;1051:2;1069:53;1114:7;1105:6;1094:9;1090:22;1069:53;;;1059:63;;1030:98;1159:2;1177:53;1222:7;1213:6;1202:9;1198:22;1177:53;;;1167:63;;1138:98;1295:2;1284:9;1280:18;1267:32;1319:18;1311:6;1308:30;1305:2;;;1351:1;1348;1341:12;1305:2;1371:62;1425:7;1416:6;1405:9;1401:22;1371:62;;;1361:72;;1246:193;854:595;;;;;;;;1456:110;1537:23;1554:5;1537:23;;;1532:3;1525:36;1519:47;;;1573:209;1689:2;1674:18;;1703:69;1678:9;1745:6;1703:69;;1789:256;1851:2;1845:9;1877:17;;;1952:18;1937:34;;1973:22;;;1934:62;1931:2;;;2009:1;2006;1999:12;1931:2;2025;2018:22;1829:216;;-1:-1;1829:216;2052:321;;2195:18;2187:6;2184:30;2181:2;;;2227:1;2224;2217:12;2181:2;-1:-1;2358:4;2294;2271:17;;;;-1:-1;;2267:33;2348:15;;2118:255;2380:91;;2442:24;2460:5;2442:24;;2478:144;-1:-1;;;;;;2539:78;;2522:100;2629:121;-1:-1;;;;;2691:54;;2674:76;2757:72;2819:5;2802:27;2837:145;2918:6;2913:3;2908;2895:30;-1:-1;2974:1;2956:16;;2949:27;2888:94;2990:117;3059:24;3077:5;3059:24;;;3052:5;3049:35;3039:2;;3098:1;3095;3088:12;3039:2;3033:74;;3114:117;3183:24;3201:5;3183:24;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "119200",
								"executionCost": "165",
								"totalCost": "119365"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1305,
									"end": 1537,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1305,
									"end": 1537,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1305,
									"end": 1537,
									"name": "MSTORE"
								},
								{
									"begin": 1305,
									"end": 1537,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1305,
									"end": 1537,
									"name": "POP"
								},
								{
									"begin": 1305,
									"end": 1537,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1305,
									"end": 1537,
									"name": "DUP1"
								},
								{
									"begin": 1305,
									"end": 1537,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1305,
									"end": 1537,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1305,
									"end": 1537,
									"name": "CODECOPY"
								},
								{
									"begin": 1305,
									"end": 1537,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1305,
									"end": 1537,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a365627a7a72315820d28818471e1a16ce15d3bfa705bd503cfcac4afaad2c2f9840886088463a173d6c6578706572696d656e74616cf564736f6c63430005110040",
									".code": [
										{
											"begin": 1305,
											"end": 1537,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "MSTORE"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "POP"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "LT"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "JUMPI"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "SHR"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "DUP1"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "PUSH",
											"value": "150B7A02"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "EQ"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "JUMPI"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "JUMPDEST"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "DUP1"
										},
										{
											"begin": 1305,
											"end": 1537,
											"name": "REVERT"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "JUMPDEST"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "JUMP"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "JUMPDEST"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "JUMPDEST"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "MLOAD"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "SWAP2"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "SWAP1"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "JUMP"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "JUMPDEST"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "MLOAD"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "DUP1"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "SWAP2"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "SUB"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "SWAP1"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "RETURN"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "SWAP5"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "SWAP4"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "POP"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "POP"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "POP"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "POP"
										},
										{
											"begin": 1352,
											"end": 1535,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "JUMPDEST"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "DUP2"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST"
										},
										{
											"begin": 57,
											"end": 135,
											"name": "SWAP3"
										},
										{
											"begin": 57,
											"end": 135,
											"name": "SWAP2"
										},
										{
											"begin": 57,
											"end": 135,
											"name": "POP"
										},
										{
											"begin": 57,
											"end": 135,
											"name": "POP"
										},
										{
											"begin": 57,
											"end": 135,
											"name": "JUMP"
										},
										{
											"begin": 143,
											"end": 583,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 143,
											"end": 583,
											"name": "JUMPDEST"
										},
										{
											"begin": 143,
											"end": 583,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 244,
											"end": 247,
											"name": "DUP3"
										},
										{
											"begin": 237,
											"end": 241,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 229,
											"end": 235,
											"name": "DUP4"
										},
										{
											"begin": 225,
											"end": 242,
											"name": "ADD"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "SLT"
										},
										{
											"begin": 211,
											"end": 213,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 211,
											"end": 213,
											"name": "JUMPI"
										},
										{
											"begin": 262,
											"end": 263,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 259,
											"end": 260,
											"name": "DUP1"
										},
										{
											"begin": 252,
											"end": 264,
											"name": "REVERT"
										},
										{
											"begin": 211,
											"end": 213,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 211,
											"end": 213,
											"name": "JUMPDEST"
										},
										{
											"begin": 299,
											"end": 305,
											"name": "DUP2"
										},
										{
											"begin": 286,
											"end": 306,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 321,
											"end": 385,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 336,
											"end": 384,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 377,
											"end": 383,
											"name": "DUP3"
										},
										{
											"begin": 336,
											"end": 384,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 336,
											"end": 384,
											"name": "JUMP"
										},
										{
											"begin": 336,
											"end": 384,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 336,
											"end": 384,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 385,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 321,
											"end": 385,
											"name": "JUMP"
										},
										{
											"begin": 321,
											"end": 385,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 321,
											"end": 385,
											"name": "JUMPDEST"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "SWAP2"
										},
										{
											"begin": 312,
											"end": 385,
											"name": "POP"
										},
										{
											"begin": 405,
											"end": 411,
											"name": "DUP1"
										},
										{
											"begin": 398,
											"end": 403,
											"name": "DUP3"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "MSTORE"
										},
										{
											"begin": 441,
											"end": 445,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 433,
											"end": 439,
											"name": "DUP4"
										},
										{
											"begin": 429,
											"end": 446,
											"name": "ADD"
										},
										{
											"begin": 474,
											"end": 478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP4"
										},
										{
											"begin": 463,
											"end": 479,
											"name": "ADD"
										},
										{
											"begin": 509,
											"end": 512,
											"name": "DUP6"
										},
										{
											"begin": 500,
											"end": 506,
											"name": "DUP4"
										},
										{
											"begin": 495,
											"end": 498,
											"name": "DUP4"
										},
										{
											"begin": 491,
											"end": 507,
											"name": "ADD"
										},
										{
											"begin": 488,
											"end": 513,
											"name": "GT"
										},
										{
											"begin": 485,
											"end": 487,
											"name": "ISZERO"
										},
										{
											"begin": 485,
											"end": 487,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 485,
											"end": 487,
											"name": "JUMPI"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 523,
											"end": 524,
											"name": "DUP1"
										},
										{
											"begin": 516,
											"end": 528,
											"name": "REVERT"
										},
										{
											"begin": 485,
											"end": 487,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 485,
											"end": 487,
											"name": "JUMPDEST"
										},
										{
											"begin": 536,
											"end": 577,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 570,
											"end": 576,
											"name": "DUP4"
										},
										{
											"begin": 565,
											"end": 568,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 563,
											"name": "DUP5"
										},
										{
											"begin": 536,
											"end": 577,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 536,
											"end": 577,
											"name": "JUMP"
										},
										{
											"begin": 536,
											"end": 577,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 536,
											"end": 577,
											"name": "JUMPDEST"
										},
										{
											"begin": 204,
											"end": 583,
											"name": "POP"
										},
										{
											"begin": 204,
											"end": 583,
											"name": "POP"
										},
										{
											"begin": 204,
											"end": 583,
											"name": "POP"
										},
										{
											"begin": 204,
											"end": 583,
											"name": "SWAP3"
										},
										{
											"begin": 204,
											"end": 583,
											"name": "SWAP2"
										},
										{
											"begin": 204,
											"end": 583,
											"name": "POP"
										},
										{
											"begin": 204,
											"end": 583,
											"name": "POP"
										},
										{
											"begin": 204,
											"end": 583,
											"name": "JUMP"
										},
										{
											"begin": 591,
											"end": 721,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 591,
											"end": 721,
											"name": "JUMPDEST"
										},
										{
											"begin": 658,
											"end": 678,
											"name": "DUP1"
										},
										{
											"begin": 658,
											"end": 678,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 683,
											"end": 716,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 658,
											"end": 678,
											"name": "DUP2"
										},
										{
											"begin": 683,
											"end": 716,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 683,
											"end": 716,
											"name": "JUMP"
										},
										{
											"begin": 728,
											"end": 1449,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 728,
											"end": 1449,
											"name": "JUMPDEST"
										},
										{
											"begin": 728,
											"end": 1449,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 728,
											"end": 1449,
											"name": "DUP1"
										},
										{
											"begin": 728,
											"end": 1449,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 728,
											"end": 1449,
											"name": "DUP1"
										},
										{
											"begin": 892,
											"end": 895,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 880,
											"end": 889,
											"name": "DUP6"
										},
										{
											"begin": 871,
											"end": 878,
											"name": "DUP8"
										},
										{
											"begin": 867,
											"end": 890,
											"name": "SUB"
										},
										{
											"begin": 863,
											"end": 896,
											"name": "SLT"
										},
										{
											"begin": 860,
											"end": 862,
											"name": "ISZERO"
										},
										{
											"begin": 860,
											"end": 862,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 860,
											"end": 862,
											"name": "JUMPI"
										},
										{
											"begin": 909,
											"end": 910,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 906,
											"end": 907,
											"name": "DUP1"
										},
										{
											"begin": 899,
											"end": 911,
											"name": "REVERT"
										},
										{
											"begin": 860,
											"end": 862,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 860,
											"end": 862,
											"name": "JUMPDEST"
										},
										{
											"begin": 944,
											"end": 945,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1006,
											"end": 1013,
											"name": "DUP8"
										},
										{
											"begin": 986,
											"end": 995,
											"name": "DUP8"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "JUMP"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "JUMPDEST"
										},
										{
											"begin": 951,
											"end": 1014,
											"name": "SWAP5"
										},
										{
											"begin": 951,
											"end": 1014,
											"name": "POP"
										},
										{
											"begin": 923,
											"end": 1020,
											"name": "POP"
										},
										{
											"begin": 1051,
											"end": 1053,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1069,
											"end": 1122,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1114,
											"end": 1121,
											"name": "DUP8"
										},
										{
											"begin": 1105,
											"end": 1111,
											"name": "DUP3"
										},
										{
											"begin": 1094,
											"end": 1103,
											"name": "DUP9"
										},
										{
											"begin": 1090,
											"end": 1112,
											"name": "ADD"
										},
										{
											"begin": 1069,
											"end": 1122,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1069,
											"end": 1122,
											"name": "JUMP"
										},
										{
											"begin": 1069,
											"end": 1122,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1069,
											"end": 1122,
											"name": "JUMPDEST"
										},
										{
											"begin": 1059,
											"end": 1122,
											"name": "SWAP4"
										},
										{
											"begin": 1059,
											"end": 1122,
											"name": "POP"
										},
										{
											"begin": 1030,
											"end": 1128,
											"name": "POP"
										},
										{
											"begin": 1159,
											"end": 1161,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1230,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1222,
											"end": 1229,
											"name": "DUP8"
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "DUP3"
										},
										{
											"begin": 1202,
											"end": 1211,
											"name": "DUP9"
										},
										{
											"begin": 1198,
											"end": 1220,
											"name": "ADD"
										},
										{
											"begin": 1177,
											"end": 1230,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1177,
											"end": 1230,
											"name": "JUMP"
										},
										{
											"begin": 1177,
											"end": 1230,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1177,
											"end": 1230,
											"name": "JUMPDEST"
										},
										{
											"begin": 1167,
											"end": 1230,
											"name": "SWAP3"
										},
										{
											"begin": 1167,
											"end": 1230,
											"name": "POP"
										},
										{
											"begin": 1138,
											"end": 1236,
											"name": "POP"
										},
										{
											"begin": 1295,
											"end": 1297,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1284,
											"end": 1293,
											"name": "DUP6"
										},
										{
											"begin": 1280,
											"end": 1298,
											"name": "ADD"
										},
										{
											"begin": 1267,
											"end": 1299,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1311,
											"end": 1317,
											"name": "DUP2"
										},
										{
											"begin": 1308,
											"end": 1338,
											"name": "GT"
										},
										{
											"begin": 1305,
											"end": 1307,
											"name": "ISZERO"
										},
										{
											"begin": 1305,
											"end": 1307,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1305,
											"end": 1307,
											"name": "JUMPI"
										},
										{
											"begin": 1351,
											"end": 1352,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1349,
											"name": "DUP1"
										},
										{
											"begin": 1341,
											"end": 1353,
											"name": "REVERT"
										},
										{
											"begin": 1305,
											"end": 1307,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1305,
											"end": 1307,
											"name": "JUMPDEST"
										},
										{
											"begin": 1371,
											"end": 1433,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1425,
											"end": 1432,
											"name": "DUP8"
										},
										{
											"begin": 1416,
											"end": 1422,
											"name": "DUP3"
										},
										{
											"begin": 1405,
											"end": 1414,
											"name": "DUP9"
										},
										{
											"begin": 1401,
											"end": 1423,
											"name": "ADD"
										},
										{
											"begin": 1371,
											"end": 1433,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1371,
											"end": 1433,
											"name": "JUMP"
										},
										{
											"begin": 1371,
											"end": 1433,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1371,
											"end": 1433,
											"name": "JUMPDEST"
										},
										{
											"begin": 1361,
											"end": 1433,
											"name": "SWAP2"
										},
										{
											"begin": 1361,
											"end": 1433,
											"name": "POP"
										},
										{
											"begin": 1246,
											"end": 1439,
											"name": "POP"
										},
										{
											"begin": 854,
											"end": 1449,
											"name": "SWAP3"
										},
										{
											"begin": 854,
											"end": 1449,
											"name": "SWAP6"
										},
										{
											"begin": 854,
											"end": 1449,
											"name": "SWAP2"
										},
										{
											"begin": 854,
											"end": 1449,
											"name": "SWAP5"
										},
										{
											"begin": 854,
											"end": 1449,
											"name": "POP"
										},
										{
											"begin": 854,
											"end": 1449,
											"name": "SWAP3"
										},
										{
											"begin": 854,
											"end": 1449,
											"name": "POP"
										},
										{
											"begin": 854,
											"end": 1449,
											"name": "JUMP"
										},
										{
											"begin": 1456,
											"end": 1566,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1456,
											"end": 1566,
											"name": "JUMPDEST"
										},
										{
											"begin": 1537,
											"end": 1560,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1554,
											"end": 1559,
											"name": "DUP2"
										},
										{
											"begin": 1537,
											"end": 1560,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1537,
											"end": 1560,
											"name": "JUMP"
										},
										{
											"begin": 1537,
											"end": 1560,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1537,
											"end": 1560,
											"name": "JUMPDEST"
										},
										{
											"begin": 1532,
											"end": 1535,
											"name": "DUP3"
										},
										{
											"begin": 1525,
											"end": 1561,
											"name": "MSTORE"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "JUMP"
										},
										{
											"begin": 1573,
											"end": 1782,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1573,
											"end": 1782,
											"name": "JUMPDEST"
										},
										{
											"begin": 1689,
											"end": 1691,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1674,
											"end": 1692,
											"name": "DUP2"
										},
										{
											"begin": 1674,
											"end": 1692,
											"name": "ADD"
										},
										{
											"begin": 1703,
											"end": 1772,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1678,
											"end": 1687,
											"name": "DUP3"
										},
										{
											"begin": 1745,
											"end": 1751,
											"name": "DUP5"
										},
										{
											"begin": 1703,
											"end": 1772,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1703,
											"end": 1772,
											"name": "JUMP"
										},
										{
											"begin": 1789,
											"end": 2045,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1789,
											"end": 2045,
											"name": "JUMPDEST"
										},
										{
											"begin": 1851,
											"end": 1853,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 1854,
											"name": "MLOAD"
										},
										{
											"begin": 1877,
											"end": 1894,
											"name": "DUP2"
										},
										{
											"begin": 1877,
											"end": 1894,
											"name": "DUP2"
										},
										{
											"begin": 1877,
											"end": 1894,
											"name": "ADD"
										},
										{
											"begin": 1952,
											"end": 1970,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1937,
											"end": 1971,
											"name": "DUP2"
										},
										{
											"begin": 1937,
											"end": 1971,
											"name": "GT"
										},
										{
											"begin": 1973,
											"end": 1995,
											"name": "DUP3"
										},
										{
											"begin": 1973,
											"end": 1995,
											"name": "DUP3"
										},
										{
											"begin": 1973,
											"end": 1995,
											"name": "LT"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "OR"
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "ISZERO"
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "JUMPI"
										},
										{
											"begin": 2009,
											"end": 2010,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2007,
											"name": "DUP1"
										},
										{
											"begin": 1999,
											"end": 2011,
											"name": "REVERT"
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1931,
											"end": 1933,
											"name": "JUMPDEST"
										},
										{
											"begin": 2025,
											"end": 2027,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2018,
											"end": 2040,
											"name": "MSTORE"
										},
										{
											"begin": 1829,
											"end": 2045,
											"name": "SWAP2"
										},
										{
											"begin": 1829,
											"end": 2045,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1829,
											"end": 2045,
											"name": "JUMP"
										},
										{
											"begin": 2052,
											"end": 2373,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2052,
											"end": 2373,
											"name": "JUMPDEST"
										},
										{
											"begin": 2052,
											"end": 2373,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2213,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2187,
											"end": 2193,
											"name": "DUP3"
										},
										{
											"begin": 2184,
											"end": 2214,
											"name": "GT"
										},
										{
											"begin": 2181,
											"end": 2183,
											"name": "ISZERO"
										},
										{
											"begin": 2181,
											"end": 2183,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2181,
											"end": 2183,
											"name": "JUMPI"
										},
										{
											"begin": 2227,
											"end": 2228,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2225,
											"name": "DUP1"
										},
										{
											"begin": 2217,
											"end": 2229,
											"name": "REVERT"
										},
										{
											"begin": 2181,
											"end": 2183,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2181,
											"end": 2183,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2358,
											"end": 2362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2294,
											"end": 2298,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2271,
											"end": 2288,
											"name": "SWAP2"
										},
										{
											"begin": 2271,
											"end": 2288,
											"name": "SWAP1"
										},
										{
											"begin": 2271,
											"end": 2288,
											"name": "SWAP2"
										},
										{
											"begin": 2271,
											"end": 2288,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 2267,
											"end": 2300,
											"name": "AND"
										},
										{
											"begin": 2348,
											"end": 2363,
											"name": "ADD"
										},
										{
											"begin": 2348,
											"end": 2363,
											"name": "SWAP1"
										},
										{
											"begin": 2118,
											"end": 2373,
											"name": "JUMP"
										},
										{
											"begin": 2380,
											"end": 2471,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2380,
											"end": 2471,
											"name": "JUMPDEST"
										},
										{
											"begin": 2380,
											"end": 2471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2466,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2460,
											"end": 2465,
											"name": "DUP3"
										},
										{
											"begin": 2442,
											"end": 2466,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2442,
											"end": 2466,
											"name": "JUMP"
										},
										{
											"begin": 2478,
											"end": 2622,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2478,
											"end": 2622,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 2539,
											"end": 2617,
											"name": "AND"
										},
										{
											"begin": 2539,
											"end": 2617,
											"name": "SWAP1"
										},
										{
											"begin": 2522,
											"end": 2622,
											"name": "JUMP"
										},
										{
											"begin": 2629,
											"end": 2750,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2629,
											"end": 2750,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2691,
											"end": 2745,
											"name": "AND"
										},
										{
											"begin": 2691,
											"end": 2745,
											"name": "SWAP1"
										},
										{
											"begin": 2674,
											"end": 2750,
											"name": "JUMP"
										},
										{
											"begin": 2757,
											"end": 2829,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2757,
											"end": 2829,
											"name": "JUMPDEST"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "SWAP1"
										},
										{
											"begin": 2802,
											"end": 2829,
											"name": "JUMP"
										},
										{
											"begin": 2837,
											"end": 2982,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 2837,
											"end": 2982,
											"name": "JUMPDEST"
										},
										{
											"begin": 2918,
											"end": 2924,
											"name": "DUP3"
										},
										{
											"begin": 2913,
											"end": 2916,
											"name": "DUP2"
										},
										{
											"begin": 2908,
											"end": 2911,
											"name": "DUP4"
										},
										{
											"begin": 2895,
											"end": 2925,
											"name": "CALLDATACOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2974,
											"end": 2975,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2972,
											"name": "SWAP2"
										},
										{
											"begin": 2956,
											"end": 2972,
											"name": "ADD"
										},
										{
											"begin": 2949,
											"end": 2976,
											"name": "MSTORE"
										},
										{
											"begin": 2888,
											"end": 2982,
											"name": "JUMP"
										},
										{
											"begin": 2990,
											"end": 3107,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2990,
											"end": 3107,
											"name": "JUMPDEST"
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 3077,
											"end": 3082,
											"name": "DUP2"
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "JUMP"
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "JUMPDEST"
										},
										{
											"begin": 3052,
											"end": 3057,
											"name": "DUP2"
										},
										{
											"begin": 3049,
											"end": 3084,
											"name": "EQ"
										},
										{
											"begin": 3039,
											"end": 3041,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 3039,
											"end": 3041,
											"name": "JUMPI"
										},
										{
											"begin": 3098,
											"end": 3099,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3096,
											"name": "DUP1"
										},
										{
											"begin": 3088,
											"end": 3100,
											"name": "REVERT"
										},
										{
											"begin": 3039,
											"end": 3041,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 3039,
											"end": 3041,
											"name": "JUMPDEST"
										},
										{
											"begin": 3033,
											"end": 3107,
											"name": "POP"
										},
										{
											"begin": 3033,
											"end": 3107,
											"name": "JUMP"
										},
										{
											"begin": 3114,
											"end": 3231,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 3114,
											"end": 3231,
											"name": "JUMPDEST"
										},
										{
											"begin": 3183,
											"end": 3207,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 3201,
											"end": 3206,
											"name": "DUP2"
										},
										{
											"begin": 3183,
											"end": 3207,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 3183,
											"end": 3207,
											"name": "JUMP"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Storage.sol\":\"ERC721Holder\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20Addresses.sol\":{\"keccak256\":\"0x3ce0eddfaea69964074e7db8a0dbfaa2d01856d10d0c120516115c76f735b032\",\"urls\":[\"bzz-raw://0e7d74a18eb9d1c18e0db1011b431fb3b85a0663a68f9d3e7987f494b16e9078\",\"dweb:/ipfs/QmXcGYSwBpVjTZgoehqZq1YqpVuVdyHF9v7zXDesFHc4kb\"]},\"Storage.sol\":{\"keccak256\":\"0x36ba8991c7139fc506e3763edbb3380a09f03ff0ec73857ee50c125344cb478d\",\"urls\":[\"bzz-raw://01ae6907d95b200a9aa3a6f7a692e7bbf48a99f25f382c1c938657db2356b178\",\"dweb:/ipfs/QmXfhVwKRxBKqmBaRT9xoppouerTzToZtp47LBwt348tmM\"]},\"TokenDetArrayLib.sol\":{\"keccak256\":\"0xad54f8987c2e69b06d230e919032195c0bdcd5c55f8631b4f3029341283bbd39\",\"urls\":[\"bzz-raw://83c8ef60f2a600a8d52f0e6dac10055f048d26aae10f0d41a32ffa76fbe4ff1b\",\"dweb:/ipfs/QmTnQN2phQhvTppESRTsPxhn7TfRRWpv21doNiaECAp7NJ\"]},\"ownable.sol\":{\"keccak256\":\"0x5e2a25e49436a7b8c68d3c6cb9b59163d895311bec3677a30bfad13aef6bd011\",\"urls\":[\"bzz-raw://1a4a466535e13aa58e660cfefff3fdb66d22ed46d7a6524feab4910c8d0826a1\",\"dweb:/ipfs/QmNmdXMZSUthj7iH71HYqGE5atx1F3jhdXQ6P6hF72eoBi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseApproval",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseApproval",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"decreaseApproval(address,uint256)": "66188463",
							"increaseAllowance(address,uint256)": "39509351",
							"increaseApproval(address,uint256)": "d73dd623",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Storage.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20Addresses.sol\":{\"keccak256\":\"0x3ce0eddfaea69964074e7db8a0dbfaa2d01856d10d0c120516115c76f735b032\",\"urls\":[\"bzz-raw://0e7d74a18eb9d1c18e0db1011b431fb3b85a0663a68f9d3e7987f494b16e9078\",\"dweb:/ipfs/QmXcGYSwBpVjTZgoehqZq1YqpVuVdyHF9v7zXDesFHc4kb\"]},\"Storage.sol\":{\"keccak256\":\"0x36ba8991c7139fc506e3763edbb3380a09f03ff0ec73857ee50c125344cb478d\",\"urls\":[\"bzz-raw://01ae6907d95b200a9aa3a6f7a692e7bbf48a99f25f382c1c938657db2356b178\",\"dweb:/ipfs/QmXfhVwKRxBKqmBaRT9xoppouerTzToZtp47LBwt348tmM\"]},\"TokenDetArrayLib.sol\":{\"keccak256\":\"0xad54f8987c2e69b06d230e919032195c0bdcd5c55f8631b4f3029341283bbd39\",\"urls\":[\"bzz-raw://83c8ef60f2a600a8d52f0e6dac10055f048d26aae10f0d41a32ffa76fbe4ff1b\",\"dweb:/ipfs/QmTnQN2phQhvTppESRTsPxhn7TfRRWpv21doNiaECAp7NJ\"]},\"ownable.sol\":{\"keccak256\":\"0x5e2a25e49436a7b8c68d3c6cb9b59163d895311bec3677a30bfad13aef6bd011\",\"urls\":[\"bzz-raw://1a4a466535e13aa58e660cfefff3fdb66d22ed46d7a6524feab4910c8d0826a1\",\"dweb:/ipfs/QmNmdXMZSUthj7iH71HYqGE5atx1F3jhdXQ6P6hF72eoBi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Storage.sol\":\"IERC721Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20Addresses.sol\":{\"keccak256\":\"0x3ce0eddfaea69964074e7db8a0dbfaa2d01856d10d0c120516115c76f735b032\",\"urls\":[\"bzz-raw://0e7d74a18eb9d1c18e0db1011b431fb3b85a0663a68f9d3e7987f494b16e9078\",\"dweb:/ipfs/QmXcGYSwBpVjTZgoehqZq1YqpVuVdyHF9v7zXDesFHc4kb\"]},\"Storage.sol\":{\"keccak256\":\"0x36ba8991c7139fc506e3763edbb3380a09f03ff0ec73857ee50c125344cb478d\",\"urls\":[\"bzz-raw://01ae6907d95b200a9aa3a6f7a692e7bbf48a99f25f382c1c938657db2356b178\",\"dweb:/ipfs/QmXfhVwKRxBKqmBaRT9xoppouerTzToZtp47LBwt348tmM\"]},\"TokenDetArrayLib.sol\":{\"keccak256\":\"0xad54f8987c2e69b06d230e919032195c0bdcd5c55f8631b4f3029341283bbd39\",\"urls\":[\"bzz-raw://83c8ef60f2a600a8d52f0e6dac10055f048d26aae10f0d41a32ffa76fbe4ff1b\",\"dweb:/ipfs/QmTnQN2phQhvTppESRTsPxhn7TfRRWpv21doNiaECAp7NJ\"]},\"ownable.sol\":{\"keccak256\":\"0x5e2a25e49436a7b8c68d3c6cb9b59163d895311bec3677a30bfad13aef6bd011\",\"urls\":[\"bzz-raw://1a4a466535e13aa58e660cfefff3fdb66d22ed46d7a6524feab4910c8d0826a1\",\"dweb:/ipfs/QmNmdXMZSUthj7iH71HYqGE5atx1F3jhdXQ6P6hF72eoBi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IMintableToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "creators",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "royalities",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"creators(uint256)": "cd53d08e",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"royalities(uint256)": "b5004f01",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"creators\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"royalities\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Storage.sol\":\"IMintableToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20Addresses.sol\":{\"keccak256\":\"0x3ce0eddfaea69964074e7db8a0dbfaa2d01856d10d0c120516115c76f735b032\",\"urls\":[\"bzz-raw://0e7d74a18eb9d1c18e0db1011b431fb3b85a0663a68f9d3e7987f494b16e9078\",\"dweb:/ipfs/QmXcGYSwBpVjTZgoehqZq1YqpVuVdyHF9v7zXDesFHc4kb\"]},\"Storage.sol\":{\"keccak256\":\"0x36ba8991c7139fc506e3763edbb3380a09f03ff0ec73857ee50c125344cb478d\",\"urls\":[\"bzz-raw://01ae6907d95b200a9aa3a6f7a692e7bbf48a99f25f382c1c938657db2356b178\",\"dweb:/ipfs/QmXfhVwKRxBKqmBaRT9xoppouerTzToZtp47LBwt348tmM\"]},\"TokenDetArrayLib.sol\":{\"keccak256\":\"0xad54f8987c2e69b06d230e919032195c0bdcd5c55f8631b4f3029341283bbd39\",\"urls\":[\"bzz-raw://83c8ef60f2a600a8d52f0e6dac10055f048d26aae10f0d41a32ffa76fbe4ff1b\",\"dweb:/ipfs/QmTnQN2phQhvTppESRTsPxhn7TfRRWpv21doNiaECAp7NJ\"]},\"ownable.sol\":{\"keccak256\":\"0x5e2a25e49436a7b8c68d3c6cb9b59163d895311bec3677a30bfad13aef6bd011\",\"urls\":[\"bzz-raw://1a4a466535e13aa58e660cfefff3fdb66d22ed46d7a6524feab4910c8d0826a1\",\"dweb:/ipfs/QmNmdXMZSUthj7iH71HYqGE5atx1F3jhdXQ6P6hF72eoBi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Storage": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "LPStakeAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "StakeAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "WETHAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "auctions",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "lastOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentBid",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "highestBidder",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "auctionType",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startingPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "buyPrice",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "buyer",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "startingTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "closingTime",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "erc20Token",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getAuctionTokensForSale",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "NFTAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenID",
											"type": "uint256"
										}
									],
									"internalType": "struct TokenDetArrayLib.TokenDet[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getErc20Tokens",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address[]",
											"name": "array",
											"type": "address[]"
										}
									],
									"internalType": "struct ERC20Addresses.erc20Addresses",
									"name": "",
									"type": "tuple"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getFixedPriceTokensForSale",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "NFTAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenID",
											"type": "uint256"
										}
									],
									"internalType": "struct TokenDetArrayLib.TokenDet[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getTokensForSale",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "NFTAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenID",
											"type": "uint256"
										}
									],
									"internalType": "struct TokenDetArrayLib.TokenDet[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getTokensForSalePerUser",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "NFTAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenID",
											"type": "uint256"
										}
									],
									"internalType": "struct TokenDetArrayLib.TokenDet[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lpStakefeepercentage",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "offerprice",
							"outputs": [
								{
									"internalType": "address",
									"name": "offerer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "platFormFeePercentage",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardDistributionPercentage",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_weth",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardDistributionAddress",
									"type": "address"
								}
							],
							"name": "setAddress",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardDistributionAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_lpStakeAddress",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_lpStakefeepercentage",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "_rewardDistributionPercentage",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "_platFormFeePercentage",
									"type": "uint16"
								}
							],
							"name": "setBrokerage",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_updateTime",
									"type": "uint256"
								}
							],
							"name": "setUpdatedClosingTime",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "updateClosingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"Storage.sol\":2498:6649  contract Storage is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"ownable.sol\":706:712  _owner */\n  0x00\n    /* \"ownable.sol\":706:725  _owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"ownable.sol\":715:725  msg.sender */\n  caller\n    /* \"ownable.sol\":706:725  _owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"Storage.sol\":2498:6649  contract Storage is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Storage.sol\":2498:6649  contract Storage is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"Storage.sol\":2498:6649  contract Storage is Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc1a8bdbc\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xf09856f3\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xf09856f3\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf26f8494\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf5a0c9b8\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf7f17488\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0xc1a8bdbc\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc52ea52e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd2abc517\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd3c9080a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd4739cca\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x6d036535\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x6d036535\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7f494852\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8bae5f4f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x0af88b24\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3b58524d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x44f91c1e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x45ce7db9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x65e4e1c0\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Storage.sol\":4388:4414  address public WETHAddress */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      jump(tag_29)\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Storage.sol\":6471:6647  function setAddress(address _weth, address _rewardDistributionAddress) external onlyOwner {... */\n    tag_4:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      jump(tag_32)\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"Storage.sol\":4112:4175  mapping(address => mapping(uint256 => auction)) public auctions */\n    tag_5:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      jump(tag_36)\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_28\n      swap11\n      swap10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      jump(tag_39)\n        /* \"Storage.sol\":4420:4447  address public StakeAddress */\n    tag_6:\n      tag_26\n      tag_41\n      jump\t// in\n        /* \"Storage.sol\":4647:4803  function getTokensForSale()... */\n    tag_7:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      jump(tag_46)\n        /* \"Storage.sol\":4488:4641  function getErc20Tokens()... */\n    tag_8:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      jump(tag_50)\n        /* \"Storage.sol\":2860:2892  uint256 public updateClosingTime */\n    tag_9:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      jump(tag_54)\n        /* \"Storage.sol\":4453:4482  address public LPStakeAddress */\n    tag_10:\n      tag_26\n      tag_56\n      jump\t// in\n        /* \"ownable.sol\":870:947  function owner() public view returns (address) {... */\n    tag_11:\n      tag_26\n      tag_59\n      jump\t// in\n        /* \"ownable.sol\":1221:1311  function isOwner() public view returns (bool) {... */\n    tag_12:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      jump(tag_64)\n        /* \"Storage.sol\":5464:6342  function setBrokerage(address _rewardDistributionAddress,address _lpStakeAddress ,uint16 _lpStakefeepercentage, uint16 _rewardDistributionPercentage, uint16 _platFormFeePercentage) public onlyOwner {... */\n    tag_13:\n      tag_30\n      tag_66\n      calldatasize\n      0x04\n      jump(tag_67)\n    tag_66:\n      tag_68\n      jump\t// in\n        /* \"Storage.sol\":2695:2737  uint16 public rewardDistributionPercentage */\n    tag_14:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      jump(tag_72)\n        /* \"Storage.sol\":2787:2821  uint16 public lpStakefeepercentage */\n    tag_15:\n      tag_69\n      tag_74\n      jump\t// in\n        /* \"Storage.sol\":4809:4978  function getFixedPriceTokensForSale()... */\n    tag_16:\n      tag_43\n      tag_77\n      jump\t// in\n        /* \"Storage.sol\":5153:5343  function getTokensForSalePerUser(address _user)... */\n    tag_17:\n      tag_43\n      tag_80\n      calldatasize\n      0x04\n      jump(tag_81)\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \"Storage.sol\":3948:4105  mapping(... */\n    tag_18:\n      tag_84\n      tag_85\n      calldatasize\n      0x04\n      jump(tag_86)\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_28\n      swap3\n      swap2\n      swap1\n      jump(tag_89)\n        /* \"Storage.sol\":2743:2778  uint16 public platFormFeePercentage */\n    tag_19:\n      tag_69\n      tag_91\n      jump\t// in\n        /* \"ownable.sol\":1460:1695  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_20:\n      tag_30\n      tag_94\n      calldatasize\n      0x04\n      jump(tag_81)\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"Storage.sol\":6348:6465  function setUpdatedClosingTime(uint256 _updateTime) public onlyOwner {... */\n    tag_21:\n      tag_30\n      tag_97\n      calldatasize\n      0x04\n      jump(tag_98)\n    tag_97:\n      tag_99\n      jump\t// in\n        /* \"Storage.sol\":4984:5147  function getAuctionTokensForSale()... */\n    tag_22:\n      tag_43\n      tag_101\n      jump\t// in\n        /* \"Storage.sol\":4388:4414  address public WETHAddress */\n    tag_27:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0b))\n      dup2\n      jump\t// out\n        /* \"Storage.sol\":6471:6647  function setAddress(address _weth, address _rewardDistributionAddress) external onlyOwner {... */\n    tag_33:\n        /* \"ownable.sol\":1074:1083  isOwner() */\n      tag_104\n        /* \"ownable.sol\":1074:1081  isOwner */\n      tag_62\n        /* \"ownable.sol\":1074:1083  isOwner() */\n      jump\t// in\n    tag_104:\n        /* \"ownable.sol\":1066:1120  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      jump(tag_107)\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"Storage.sol\":6571:6582  WETHAddress */\n      0x0b\n        /* \"Storage.sol\":6571:6589  WETHAddress =_weth */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Storage.sol\":6599:6611  StakeAddress */\n      0x0c\n        /* \"Storage.sol\":6599:6640  StakeAddress = _rewardDistributionAddress */\n      dup1\n      sload\n      swap3\n      swap1\n      swap4\n      and\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"Storage.sol\":6471:6647  function setAddress(address _weth, address _rewardDistributionAddress) external onlyOwner {... */\n      jump\t// out\n        /* \"Storage.sol\":4112:4175  mapping(address => mapping(uint256 => auction)) public auctions */\n    tag_37:\n      0x07\n      0x20\n      dup2\n      dup2\n      mstore\n      0x00\n      swap4\n      dup5\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap2\n      dup4\n      mstore\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      0x05\n      dup7\n      add\n      sload\n      0x06\n      dup8\n      add\n      sload\n      swap8\n      dup8\n      add\n      sload\n      0x08\n      dup9\n      add\n      sload\n      0x09\n      swap1\n      swap9\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap8\n      dup9\n      and\n      swap10\n      swap7\n      swap9\n      swap6\n      dup9\n      and\n      swap8\n      swap5\n      swap7\n      swap4\n      swap6\n      swap3\n      swap5\n      0xff\n      swap1\n      swap5\n      and\n      swap4\n      swap2\n      swap3\n      swap2\n      and\n      dup11\n      jump\t// out\n        /* \"Storage.sol\":4420:4447  address public StakeAddress */\n    tag_41:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0c))\n      dup2\n      jump\t// out\n        /* \"Storage.sol\":4647:4803  function getTokensForSale()... */\n    tag_44:\n        /* \"Storage.sol\":4720:4754  TokenDetArrayLib.TokenDet[] memory */\n      0x60\n        /* \"Storage.sol\":4777:4790  tokensForSale */\n      0x09\n        /* \"Storage.sol\":4777:4796  tokensForSale.array */\n      0x00\n      add\n        /* \"Storage.sol\":4770:4796  return tokensForSale.array */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_110:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup5\n      dup2\n      mstore\n      0x20\n      swap1\n      dup2\n      swap1\n      keccak256\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x02\n      dup6\n      mul\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup3\n      mstore\n      0x01\n      swap1\n      dup2\n      add\n      sload\n      dup3\n      dup5\n      add\n      mstore\n      swap1\n      dup4\n      mstore\n      swap1\n      swap3\n      add\n      swap2\n      add\n      jump(tag_110)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Storage.sol\":4647:4803  function getTokensForSale()... */\n      swap1\n      jump\t// out\n        /* \"Storage.sol\":4488:4641  function getErc20Tokens()... */\n    tag_48:\n        /* \"Storage.sol\":4559:4595  ERC20Addresses.erc20Addresses memory */\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"Storage.sol\":4611:4634  return erc20TokensArray */\n      0x40\n      dup1\n      mload\n        /* \"Storage.sol\":4618:4634  erc20TokensArray */\n      0x0a\n        /* \"Storage.sol\":4611:4634  return erc20TokensArray */\n      dup1\n      sload\n      0x20\n      dup2\n      dup2\n      mul\n      dup5\n      add\n      dup6\n      add\n      dup6\n      mstore\n      dup4\n      add\n      dup2\n      dup2\n      mstore\n      swap3\n      swap4\n        /* \"Storage.sol\":4618:4634  erc20TokensArray */\n      swap2\n      swap3\n        /* \"Storage.sol\":4611:4634  return erc20TokensArray */\n      dup5\n      swap3\n      swap1\n      swap2\n        /* \"Storage.sol\":4618:4634  erc20TokensArray */\n      dup5\n      swap2\n        /* \"Storage.sol\":4611:4634  return erc20TokensArray */\n      dup5\n      add\n        /* \"Storage.sol\":4618:4634  erc20TokensArray */\n      dup3\n        /* \"Storage.sol\":4611:4634  return erc20TokensArray */\n      dup3\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_117:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_117\n      jumpi\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Storage.sol\":4488:4641  function getErc20Tokens()... */\n      swap1\n      jump\t// out\n        /* \"Storage.sol\":2860:2892  uint256 public updateClosingTime */\n    tag_52:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"Storage.sol\":4453:4482  address public LPStakeAddress */\n    tag_56:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n      dup2\n      jump\t// out\n        /* \"ownable.sol\":870:947  function owner() public view returns (address) {... */\n    tag_59:\n        /* \"ownable.sol\":908:915  address */\n      0x00\n        /* \"ownable.sol\":934:940  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ownable.sol\":870:947  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ownable.sol\":1221:1311  function isOwner() public view returns (bool) {... */\n    tag_62:\n        /* \"ownable.sol\":1261:1265  bool */\n      0x00\n        /* \"ownable.sol\":1298:1304  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ownable.sol\":1284:1294  msg.sender */\n      caller\n        /* \"ownable.sol\":1284:1304  msg.sender == _owner */\n      eq\n      swap1\n        /* \"ownable.sol\":1221:1311  function isOwner() public view returns (bool) {... */\n      jump\t// out\n        /* \"Storage.sol\":5464:6342  function setBrokerage(address _rewardDistributionAddress,address _lpStakeAddress ,uint16 _lpStakefeepercentage, uint16 _rewardDistributionPercentage, uint16 _platFormFeePercentage) public onlyOwner {... */\n    tag_68:\n        /* \"ownable.sol\":1074:1083  isOwner() */\n      tag_121\n        /* \"ownable.sol\":1074:1081  isOwner */\n      tag_62\n        /* \"ownable.sol\":1074:1083  isOwner() */\n      jump\t// in\n    tag_121:\n        /* \"ownable.sol\":1066:1120  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      jump(tag_107)\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Storage.sol\":5680:5720  _rewardDistributionAddress != address(0) */\n      dup6\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"Storage.sol\":5680:5750  _rewardDistributionAddress != address(0) &&_lpStakeAddress!=address(0) */\n      tag_125\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Storage.sol\":5723:5750  _lpStakeAddress!=address(0) */\n      dup5\n      and\n      iszero\n      iszero\n        /* \"Storage.sol\":5680:5750  _rewardDistributionAddress != address(0) &&_lpStakeAddress!=address(0) */\n    tag_125:\n        /* \"Storage.sol\":5672:5770  require(_rewardDistributionAddress != address(0) &&_lpStakeAddress!=address(0), \"Address is Zero\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      jump(tag_128)\n    tag_126:\n        /* \"Storage.sol\":5963:5967  1000 */\n      0x03e8\n        /* \"Storage.sol\":5930:5959  _rewardDistributionPercentage */\n      dup3\n        /* \"Storage.sol\":5930:5967  _rewardDistributionPercentage <= 1000 */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"Storage.sol\":5930:6001  _rewardDistributionPercentage <= 1000 && _platFormFeePercentage <= 1000 */\n      dup1\n      iszero\n      tag_134\n      jumpi\n      pop\n        /* \"Storage.sol\":5997:6001  1000 */\n      0x03e8\n        /* \"Storage.sol\":5971:5993  _platFormFeePercentage */\n      dup2\n        /* \"Storage.sol\":5971:6001  _platFormFeePercentage <= 1000 */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"Storage.sol\":5930:6001  _rewardDistributionPercentage <= 1000 && _platFormFeePercentage <= 1000 */\n    tag_134:\n        /* \"Storage.sol\":5930:6032  _rewardDistributionPercentage <= 1000 && _platFormFeePercentage <= 1000 && _lpStakefeepercentage<=1000 */\n      dup1\n      iszero\n      tag_135\n      jumpi\n      pop\n        /* \"Storage.sol\":6028:6032  1000 */\n      0x03e8\n        /* \"Storage.sol\":6005:6026  _lpStakefeepercentage */\n      dup4\n        /* \"Storage.sol\":6005:6032  _lpStakefeepercentage<=1000 */\n      0xffff\n      and\n      gt\n      iszero\n        /* \"Storage.sol\":5930:6032  _rewardDistributionPercentage <= 1000 && _platFormFeePercentage <= 1000 && _lpStakefeepercentage<=1000 */\n    tag_135:\n        /* \"Storage.sol\":5922:6064  require(_rewardDistributionPercentage <= 1000 && _platFormFeePercentage <= 1000 && _lpStakefeepercentage<=1000, \"should be greater than zero\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      jump(tag_133)\n    tag_136:\n        /* \"Storage.sol\":6074:6102  rewardDistributionPercentage */\n      0x00\n        /* \"Storage.sol\":6074:6134  rewardDistributionPercentage = _rewardDistributionPercentage */\n      dup1\n      sload\n      not(shl(0xa0, 0xffff))\n      and\n      shl(0xa0, 0x01)\n      0xffff\n      swap5\n      dup6\n      and\n      mul\n      or\n      not(shl(0xb0, 0xffff))\n        /* \"Storage.sol\":6144:6190  platFormFeePercentage = _platFormFeePercentage */\n      and\n      shl(0xb0, 0x01)\n      swap3\n      dup5\n      and\n      swap3\n      swap1\n      swap3\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      not(shl(0xc0, 0xffff))\n        /* \"Storage.sol\":6200:6242  lpStakefeepercentage=_lpStakefeepercentage */\n      and\n      shl(0xc0, 0x01)\n      swap4\n      swap1\n      swap3\n      and\n      swap3\n      swap1\n      swap3\n      mul\n      or\n      swap1\n      sstore\n        /* \"Storage.sol\":6252:6264  StakeAddress */\n      0x0c\n        /* \"Storage.sol\":6252:6293  StakeAddress = _rewardDistributionAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Storage.sol\":6303:6317  LPStakeAddress */\n      0x0d\n        /* \"Storage.sol\":6303:6335  LPStakeAddress = _lpStakeAddress */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"Storage.sol\":5464:6342  function setBrokerage(address _rewardDistributionAddress,address _lpStakeAddress ,uint16 _lpStakefeepercentage, uint16 _rewardDistributionPercentage, uint16 _platFormFeePercentage) public onlyOwner {... */\n      jump\t// out\n        /* \"Storage.sol\":2695:2737  uint16 public rewardDistributionPercentage */\n    tag_70:\n      sload(0x00)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xffff\n      and\n      dup2\n      jump\t// out\n        /* \"Storage.sol\":2787:2821  uint16 public lpStakefeepercentage */\n    tag_74:\n      sload(0x00)\n      shl(0xc0, 0x01)\n      swap1\n      div\n      0xffff\n      and\n      dup2\n      jump\t// out\n        /* \"Storage.sol\":4809:4978  function getFixedPriceTokensForSale()... */\n    tag_77:\n        /* \"Storage.sol\":4949:4965  fixedPriceTokens */\n      0x04\n        /* \"Storage.sol\":4942:4971  return fixedPriceTokens.array */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup5\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"Storage.sol\":4892:4926  TokenDetArrayLib.TokenDet[] memory */\n      0x60\n      swap4\n        /* \"Storage.sol\":4942:4971  return fixedPriceTokens.array */\n      swap1\n      swap3\n        /* \"Storage.sol\":4949:4965  fixedPriceTokens */\n      swap1\n      swap2\n        /* \"Storage.sol\":4949:4971  fixedPriceTokens.array */\n      0x00\n      swap1\n        /* \"Storage.sol\":4942:4971  return fixedPriceTokens.array */\n      dup5\n      add\n      dup3\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup5\n      dup2\n      mstore\n      0x20\n      swap1\n      dup2\n      swap1\n      keccak256\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x02\n      dup6\n      mul\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup3\n      mstore\n      0x01\n      swap1\n      dup2\n      add\n      sload\n      dup3\n      dup5\n      add\n      mstore\n      swap1\n      dup4\n      mstore\n      swap1\n      swap3\n      add\n      swap2\n      add\n      jump(tag_110)\n        /* \"Storage.sol\":5153:5343  function getTokensForSalePerUser(address _user)... */\n    tag_82:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Storage.sol\":5303:5330  tokensForSalePerUser[_user] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Storage.sol\":5303:5323  tokensForSalePerUser */\n      0x03\n        /* \"Storage.sol\":5303:5330  tokensForSalePerUser[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Storage.sol\":5296:5336  return tokensForSalePerUser[_user].array */\n      dup1\n      sload\n      dup3\n      mload\n      dup2\n      dup6\n      mul\n      dup2\n      add\n      dup6\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      dup4\n      mstore\n        /* \"Storage.sol\":5246:5280  TokenDetArrayLib.TokenDet[] memory */\n      0x60\n      swap5\n        /* \"Storage.sol\":5296:5336  return tokensForSalePerUser[_user].array */\n      swap3\n      swap4\n        /* \"Storage.sol\":5303:5330  tokensForSalePerUser[_user] */\n      swap2\n      swap3\n        /* \"Storage.sol\":5296:5336  return tokensForSalePerUser[_user].array */\n      swap1\n      swap2\n      dup5\n      add\n    tag_143:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup5\n      dup2\n      mstore\n      0x20\n      swap1\n      dup2\n      swap1\n      keccak256\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x02\n      dup6\n      mul\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup3\n      mstore\n      0x01\n      swap1\n      dup2\n      add\n      sload\n      dup3\n      dup5\n      add\n      mstore\n      swap1\n      dup4\n      mstore\n      swap1\n      swap3\n      add\n      swap2\n      add\n      jump(tag_143)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Storage.sol\":5153:5343  function getTokensForSalePerUser(address _user)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Storage.sol\":3948:4105  mapping(... */\n    tag_87:\n      0x06\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap4\n      dup5\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      dup3\n      mstore\n      swap3\n      dup5\n      mstore\n      dup3\n      dup5\n      keccak256\n      swap1\n      mstore\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap1\n      dup3\n      jump\t// out\n        /* \"Storage.sol\":2743:2778  uint16 public platFormFeePercentage */\n    tag_91:\n      sload(0x00)\n      shl(0xb0, 0x01)\n      swap1\n      div\n      0xffff\n      and\n      dup2\n      jump\t// out\n        /* \"ownable.sol\":1460:1695  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_95:\n        /* \"ownable.sol\":1074:1083  isOwner() */\n      tag_147\n        /* \"ownable.sol\":1074:1081  isOwner */\n      tag_62\n        /* \"ownable.sol\":1074:1083  isOwner() */\n      jump\t// in\n    tag_147:\n        /* \"ownable.sol\":1066:1120  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      jump(tag_107)\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ownable.sol\":1540:1562  newOwner != address(0) */\n      dup2\n      and\n        /* \"ownable.sol\":1532:1605  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      jump(tag_153)\n    tag_151:\n        /* \"ownable.sol\":1671:1677  _owner */\n      0x00\n        /* \"ownable.sol\":1671:1688  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"ownable.sol\":1460:1695  function transferOwnership(address newOwner) public onlyOwner {... */\n      jump\t// out\n        /* \"Storage.sol\":6348:6465  function setUpdatedClosingTime(uint256 _updateTime) public onlyOwner {... */\n    tag_99:\n        /* \"ownable.sol\":1074:1083  isOwner() */\n      tag_155\n        /* \"ownable.sol\":1074:1081  isOwner */\n      tag_62\n        /* \"ownable.sol\":1074:1083  isOwner() */\n      jump\t// in\n    tag_155:\n        /* \"ownable.sol\":1066:1120  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      jump(tag_107)\n    tag_156:\n        /* \"Storage.sol\":6427:6444  updateClosingTime */\n      0x01\n        /* \"Storage.sol\":6427:6458  updateClosingTime = _updateTime */\n      sstore\n        /* \"Storage.sol\":6348:6465  function setUpdatedClosingTime(uint256 _updateTime) public onlyOwner {... */\n      jump\t// out\n        /* \"Storage.sol\":4984:5147  function getAuctionTokensForSale()... */\n    tag_101:\n        /* \"Storage.sol\":5121:5134  auctionTokens */\n      0x05\n        /* \"Storage.sol\":5114:5140  return auctionTokens.array */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup5\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"Storage.sol\":5064:5098  TokenDetArrayLib.TokenDet[] memory */\n      0x60\n      swap4\n        /* \"Storage.sol\":5114:5140  return auctionTokens.array */\n      swap1\n      swap3\n        /* \"Storage.sol\":5121:5134  auctionTokens */\n      swap1\n      swap2\n        /* \"Storage.sol\":5121:5140  auctionTokens.array */\n      0x00\n      swap1\n        /* \"Storage.sol\":5114:5140  return auctionTokens.array */\n      dup5\n      add\n      dup3\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup5\n      dup2\n      mstore\n      0x20\n      swap1\n      dup2\n      swap1\n      keccak256\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x02\n      dup6\n      mul\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup3\n      mstore\n      0x01\n      swap1\n      dup2\n      add\n      sload\n      dup3\n      dup5\n      add\n      mstore\n      swap1\n      dup4\n      mstore\n      swap1\n      swap3\n      add\n      swap2\n      add\n      jump(tag_110)\n        /* \"Storage.sol\":2498:6649  contract Storage is Ownable {... */\n    tag_114:\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x60\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"--CODEGEN--\":5:135   */\n    tag_164:\n        /* \"--CODEGEN--\":72:92   */\n      dup1\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_165\n        /* \"--CODEGEN--\":72:92   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      jump(tag_166)\n    tag_165:\n        /* \"--CODEGEN--\":57:135   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":142:270   */\n    tag_167:\n        /* \"--CODEGEN--\":208:228   */\n      dup1\n      calldataload\n        /* \"--CODEGEN--\":233:265   */\n      tag_165\n        /* \"--CODEGEN--\":208:228   */\n      dup2\n        /* \"--CODEGEN--\":233:265   */\n      jump(tag_169)\n        /* \"--CODEGEN--\":277:407   */\n    tag_170:\n        /* \"--CODEGEN--\":344:364   */\n      dup1\n      calldataload\n        /* \"--CODEGEN--\":369:402   */\n      tag_165\n        /* \"--CODEGEN--\":344:364   */\n      dup2\n        /* \"--CODEGEN--\":369:402   */\n      jump(tag_172)\n        /* \"--CODEGEN--\":414:655   */\n    tag_81:\n      0x00\n        /* \"--CODEGEN--\":518:520   */\n      0x20\n        /* \"--CODEGEN--\":506:515   */\n      dup3\n        /* \"--CODEGEN--\":497:504   */\n      dup5\n        /* \"--CODEGEN--\":493:516   */\n      sub\n        /* \"--CODEGEN--\":489:521   */\n      slt\n        /* \"--CODEGEN--\":486:488   */\n      iszero\n      tag_173\n      jumpi\n        /* \"--CODEGEN--\":534:535   */\n      0x00\n        /* \"--CODEGEN--\":531:532   */\n      dup1\n        /* \"--CODEGEN--\":524:536   */\n      revert\n        /* \"--CODEGEN--\":486:488   */\n    tag_173:\n        /* \"--CODEGEN--\":569:570   */\n      0x00\n        /* \"--CODEGEN--\":586:639   */\n      tag_174\n        /* \"--CODEGEN--\":631:638   */\n      dup5\n        /* \"--CODEGEN--\":611:620   */\n      dup5\n        /* \"--CODEGEN--\":586:639   */\n      jump(tag_164)\n    tag_174:\n        /* \"--CODEGEN--\":576:639   */\n      swap5\n        /* \"--CODEGEN--\":480:655   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":662:1028   */\n    tag_32:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":783:785   */\n      0x40\n        /* \"--CODEGEN--\":771:780   */\n      dup4\n        /* \"--CODEGEN--\":762:769   */\n      dup6\n        /* \"--CODEGEN--\":758:781   */\n      sub\n        /* \"--CODEGEN--\":754:786   */\n      slt\n        /* \"--CODEGEN--\":751:753   */\n      iszero\n      tag_175\n      jumpi\n        /* \"--CODEGEN--\":799:800   */\n      0x00\n        /* \"--CODEGEN--\":796:797   */\n      dup1\n        /* \"--CODEGEN--\":789:801   */\n      revert\n        /* \"--CODEGEN--\":751:753   */\n    tag_175:\n        /* \"--CODEGEN--\":834:835   */\n      0x00\n        /* \"--CODEGEN--\":851:904   */\n      tag_176\n        /* \"--CODEGEN--\":896:903   */\n      dup6\n        /* \"--CODEGEN--\":876:885   */\n      dup6\n        /* \"--CODEGEN--\":851:904   */\n      jump(tag_164)\n    tag_176:\n        /* \"--CODEGEN--\":841:904   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":813:910   */\n      pop\n        /* \"--CODEGEN--\":941:943   */\n      0x20\n        /* \"--CODEGEN--\":959:1012   */\n      tag_177\n        /* \"--CODEGEN--\":1004:1011   */\n      dup6\n        /* \"--CODEGEN--\":995:1001   */\n      dup3\n        /* \"--CODEGEN--\":984:993   */\n      dup7\n        /* \"--CODEGEN--\":980:1002   */\n      add\n        /* \"--CODEGEN--\":959:1012   */\n      jump(tag_164)\n    tag_177:\n        /* \"--CODEGEN--\":949:1012   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":920:1018   */\n      pop\n        /* \"--CODEGEN--\":745:1028   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":1035:1772   */\n    tag_67:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":1204:1207   */\n      0xa0\n        /* \"--CODEGEN--\":1192:1201   */\n      dup7\n        /* \"--CODEGEN--\":1183:1190   */\n      dup9\n        /* \"--CODEGEN--\":1179:1202   */\n      sub\n        /* \"--CODEGEN--\":1175:1208   */\n      slt\n        /* \"--CODEGEN--\":1172:1174   */\n      iszero\n      tag_178\n      jumpi\n        /* \"--CODEGEN--\":1221:1222   */\n      0x00\n        /* \"--CODEGEN--\":1218:1219   */\n      dup1\n        /* \"--CODEGEN--\":1211:1223   */\n      revert\n        /* \"--CODEGEN--\":1172:1174   */\n    tag_178:\n        /* \"--CODEGEN--\":1256:1257   */\n      0x00\n        /* \"--CODEGEN--\":1273:1326   */\n      tag_179\n        /* \"--CODEGEN--\":1318:1325   */\n      dup9\n        /* \"--CODEGEN--\":1298:1307   */\n      dup9\n        /* \"--CODEGEN--\":1273:1326   */\n      jump(tag_164)\n    tag_179:\n        /* \"--CODEGEN--\":1263:1326   */\n      swap6\n      pop\n        /* \"--CODEGEN--\":1235:1332   */\n      pop\n        /* \"--CODEGEN--\":1363:1365   */\n      0x20\n        /* \"--CODEGEN--\":1381:1434   */\n      tag_180\n        /* \"--CODEGEN--\":1426:1433   */\n      dup9\n        /* \"--CODEGEN--\":1417:1423   */\n      dup3\n        /* \"--CODEGEN--\":1406:1415   */\n      dup10\n        /* \"--CODEGEN--\":1402:1424   */\n      add\n        /* \"--CODEGEN--\":1381:1434   */\n      jump(tag_164)\n    tag_180:\n        /* \"--CODEGEN--\":1371:1434   */\n      swap5\n      pop\n        /* \"--CODEGEN--\":1342:1440   */\n      pop\n        /* \"--CODEGEN--\":1471:1473   */\n      0x40\n        /* \"--CODEGEN--\":1489:1541   */\n      tag_181\n        /* \"--CODEGEN--\":1533:1540   */\n      dup9\n        /* \"--CODEGEN--\":1524:1530   */\n      dup3\n        /* \"--CODEGEN--\":1513:1522   */\n      dup10\n        /* \"--CODEGEN--\":1509:1531   */\n      add\n        /* \"--CODEGEN--\":1489:1541   */\n      jump(tag_167)\n    tag_181:\n        /* \"--CODEGEN--\":1479:1541   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":1450:1547   */\n      pop\n        /* \"--CODEGEN--\":1578:1580   */\n      0x60\n        /* \"--CODEGEN--\":1596:1648   */\n      tag_182\n        /* \"--CODEGEN--\":1640:1647   */\n      dup9\n        /* \"--CODEGEN--\":1631:1637   */\n      dup3\n        /* \"--CODEGEN--\":1620:1629   */\n      dup10\n        /* \"--CODEGEN--\":1616:1638   */\n      add\n        /* \"--CODEGEN--\":1596:1648   */\n      jump(tag_167)\n    tag_182:\n        /* \"--CODEGEN--\":1586:1648   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":1557:1654   */\n      pop\n        /* \"--CODEGEN--\":1685:1688   */\n      0x80\n        /* \"--CODEGEN--\":1704:1756   */\n      tag_183\n        /* \"--CODEGEN--\":1748:1755   */\n      dup9\n        /* \"--CODEGEN--\":1739:1745   */\n      dup3\n        /* \"--CODEGEN--\":1728:1737   */\n      dup10\n        /* \"--CODEGEN--\":1724:1746   */\n      add\n        /* \"--CODEGEN--\":1704:1756   */\n      jump(tag_167)\n    tag_183:\n        /* \"--CODEGEN--\":1694:1756   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":1664:1762   */\n      pop\n        /* \"--CODEGEN--\":1166:1772   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\n        /* \"--CODEGEN--\":1779:2145   */\n    tag_36:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":1900:1902   */\n      0x40\n        /* \"--CODEGEN--\":1888:1897   */\n      dup4\n        /* \"--CODEGEN--\":1879:1886   */\n      dup6\n        /* \"--CODEGEN--\":1875:1898   */\n      sub\n        /* \"--CODEGEN--\":1871:1903   */\n      slt\n        /* \"--CODEGEN--\":1868:1870   */\n      iszero\n      tag_184\n      jumpi\n        /* \"--CODEGEN--\":1916:1917   */\n      0x00\n        /* \"--CODEGEN--\":1913:1914   */\n      dup1\n        /* \"--CODEGEN--\":1906:1918   */\n      revert\n        /* \"--CODEGEN--\":1868:1870   */\n    tag_184:\n        /* \"--CODEGEN--\":1951:1952   */\n      0x00\n        /* \"--CODEGEN--\":1968:2021   */\n      tag_185\n        /* \"--CODEGEN--\":2013:2020   */\n      dup6\n        /* \"--CODEGEN--\":1993:2002   */\n      dup6\n        /* \"--CODEGEN--\":1968:2021   */\n      jump(tag_164)\n    tag_185:\n        /* \"--CODEGEN--\":1958:2021   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":1930:2027   */\n      pop\n        /* \"--CODEGEN--\":2058:2060   */\n      0x20\n        /* \"--CODEGEN--\":2076:2129   */\n      tag_177\n        /* \"--CODEGEN--\":2121:2128   */\n      dup6\n        /* \"--CODEGEN--\":2112:2118   */\n      dup3\n        /* \"--CODEGEN--\":2101:2110   */\n      dup7\n        /* \"--CODEGEN--\":2097:2119   */\n      add\n        /* \"--CODEGEN--\":2076:2129   */\n      jump(tag_170)\n        /* \"--CODEGEN--\":2152:2643   */\n    tag_86:\n      0x00\n      dup1\n      0x00\n        /* \"--CODEGEN--\":2290:2292   */\n      0x60\n        /* \"--CODEGEN--\":2278:2287   */\n      dup5\n        /* \"--CODEGEN--\":2269:2276   */\n      dup7\n        /* \"--CODEGEN--\":2265:2288   */\n      sub\n        /* \"--CODEGEN--\":2261:2293   */\n      slt\n        /* \"--CODEGEN--\":2258:2260   */\n      iszero\n      tag_187\n      jumpi\n        /* \"--CODEGEN--\":2306:2307   */\n      0x00\n        /* \"--CODEGEN--\":2303:2304   */\n      dup1\n        /* \"--CODEGEN--\":2296:2308   */\n      revert\n        /* \"--CODEGEN--\":2258:2260   */\n    tag_187:\n        /* \"--CODEGEN--\":2341:2342   */\n      0x00\n        /* \"--CODEGEN--\":2358:2411   */\n      tag_188\n        /* \"--CODEGEN--\":2403:2410   */\n      dup7\n        /* \"--CODEGEN--\":2383:2392   */\n      dup7\n        /* \"--CODEGEN--\":2358:2411   */\n      jump(tag_164)\n    tag_188:\n        /* \"--CODEGEN--\":2348:2411   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":2320:2417   */\n      pop\n        /* \"--CODEGEN--\":2448:2450   */\n      0x20\n        /* \"--CODEGEN--\":2466:2519   */\n      tag_189\n        /* \"--CODEGEN--\":2511:2518   */\n      dup7\n        /* \"--CODEGEN--\":2502:2508   */\n      dup3\n        /* \"--CODEGEN--\":2491:2500   */\n      dup8\n        /* \"--CODEGEN--\":2487:2509   */\n      add\n        /* \"--CODEGEN--\":2466:2519   */\n      jump(tag_170)\n    tag_189:\n        /* \"--CODEGEN--\":2456:2519   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":2427:2525   */\n      pop\n        /* \"--CODEGEN--\":2556:2558   */\n      0x40\n        /* \"--CODEGEN--\":2574:2627   */\n      tag_190\n        /* \"--CODEGEN--\":2619:2626   */\n      dup7\n        /* \"--CODEGEN--\":2610:2616   */\n      dup3\n        /* \"--CODEGEN--\":2599:2608   */\n      dup8\n        /* \"--CODEGEN--\":2595:2617   */\n      add\n        /* \"--CODEGEN--\":2574:2627   */\n      jump(tag_164)\n    tag_190:\n        /* \"--CODEGEN--\":2564:2627   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":2535:2633   */\n      pop\n        /* \"--CODEGEN--\":2252:2643   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\n        /* \"--CODEGEN--\":2650:2891   */\n    tag_98:\n      0x00\n        /* \"--CODEGEN--\":2754:2756   */\n      0x20\n        /* \"--CODEGEN--\":2742:2751   */\n      dup3\n        /* \"--CODEGEN--\":2733:2740   */\n      dup5\n        /* \"--CODEGEN--\":2729:2752   */\n      sub\n        /* \"--CODEGEN--\":2725:2757   */\n      slt\n        /* \"--CODEGEN--\":2722:2724   */\n      iszero\n      tag_191\n      jumpi\n        /* \"--CODEGEN--\":2770:2771   */\n      0x00\n        /* \"--CODEGEN--\":2767:2768   */\n      dup1\n        /* \"--CODEGEN--\":2760:2772   */\n      revert\n        /* \"--CODEGEN--\":2722:2724   */\n    tag_191:\n        /* \"--CODEGEN--\":2805:2806   */\n      0x00\n        /* \"--CODEGEN--\":2822:2875   */\n      tag_174\n        /* \"--CODEGEN--\":2867:2874   */\n      dup5\n        /* \"--CODEGEN--\":2847:2856   */\n      dup5\n        /* \"--CODEGEN--\":2822:2875   */\n      jump(tag_170)\n        /* \"--CODEGEN--\":2899:3072   */\n    tag_193:\n      0x00\n        /* \"--CODEGEN--\":2986:3032   */\n      tag_194\n        /* \"--CODEGEN--\":3028:3031   */\n      dup4\n        /* \"--CODEGEN--\":3020:3026   */\n      dup4\n        /* \"--CODEGEN--\":2986:3032   */\n      jump(tag_199)\n    tag_194:\n      pop\n      pop\n        /* \"--CODEGEN--\":3061:3065   */\n      0x20\n        /* \"--CODEGEN--\":3052:3066   */\n      add\n      swap1\n        /* \"--CODEGEN--\":2979:3072   */\n      jump\n        /* \"--CODEGEN--\":3081:3342   */\n    tag_196:\n      0x00\n        /* \"--CODEGEN--\":3210:3302   */\n      tag_197\n        /* \"--CODEGEN--\":3298:3301   */\n      dup4\n        /* \"--CODEGEN--\":3290:3296   */\n      dup4\n        /* \"--CODEGEN--\":3210:3302   */\n      jump(tag_198)\n    tag_197:\n      pop\n      pop\n        /* \"--CODEGEN--\":3331:3335   */\n      0x40\n        /* \"--CODEGEN--\":3322:3336   */\n      add\n      swap1\n        /* \"--CODEGEN--\":3203:3342   */\n      jump\n        /* \"--CODEGEN--\":3350:3487   */\n    tag_199:\n        /* \"--CODEGEN--\":3449:3481   */\n      tag_200\n        /* \"--CODEGEN--\":3475:3480   */\n      dup2\n        /* \"--CODEGEN--\":3449:3481   */\n      jump(tag_203)\n    tag_200:\n        /* \"--CODEGEN--\":3444:3447   */\n      dup3\n        /* \"--CODEGEN--\":3437:3482   */\n      mstore\n        /* \"--CODEGEN--\":3431:3487   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":3755:4409   */\n    tag_206:\n      0x00\n        /* \"--CODEGEN--\":3886:3936   */\n      tag_207\n        /* \"--CODEGEN--\":3930:3935   */\n      dup3\n        /* \"--CODEGEN--\":3886:3936   */\n      jump(tag_208)\n    tag_207:\n        /* \"--CODEGEN--\":3949:4025   */\n      tag_209\n        /* \"--CODEGEN--\":4018:4024   */\n      dup2\n        /* \"--CODEGEN--\":4013:4016   */\n      dup6\n        /* \"--CODEGEN--\":3949:4025   */\n      jump(tag_210)\n    tag_209:\n        /* \"--CODEGEN--\":3942:4025   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":4046:4098   */\n      tag_211\n        /* \"--CODEGEN--\":4092:4097   */\n      dup4\n        /* \"--CODEGEN--\":4046:4098   */\n      jump(tag_212)\n    tag_211:\n        /* \"--CODEGEN--\":4118:4125   */\n      dup1\n        /* \"--CODEGEN--\":4146:4147   */\n      0x00\n        /* \"--CODEGEN--\":4131:4387   */\n    tag_213:\n        /* \"--CODEGEN--\":4156:4162   */\n      dup4\n        /* \"--CODEGEN--\":4153:4154   */\n      dup2\n        /* \"--CODEGEN--\":4150:4163   */\n      lt\n        /* \"--CODEGEN--\":4131:4387   */\n      iszero\n      tag_215\n      jumpi\n        /* \"--CODEGEN--\":4223:4229   */\n      dup2\n        /* \"--CODEGEN--\":4217:4230   */\n      mload\n        /* \"--CODEGEN--\":4244:4307   */\n      tag_216\n        /* \"--CODEGEN--\":4303:4306   */\n      dup9\n        /* \"--CODEGEN--\":4288:4301   */\n      dup3\n        /* \"--CODEGEN--\":4244:4307   */\n      jump(tag_193)\n    tag_216:\n        /* \"--CODEGEN--\":4237:4307   */\n      swap8\n      pop\n        /* \"--CODEGEN--\":4324:4380   */\n      tag_217\n        /* \"--CODEGEN--\":4373:4379   */\n      dup4\n        /* \"--CODEGEN--\":4324:4380   */\n      jump(tag_212)\n    tag_217:\n        /* \"--CODEGEN--\":4314:4380   */\n      swap3\n      pop\n      pop\n        /* \"--CODEGEN--\":4178:4179   */\n      0x01\n        /* \"--CODEGEN--\":4171:4180   */\n      add\n        /* \"--CODEGEN--\":4131:4387   */\n      jump(tag_213)\n    tag_215:\n      pop\n        /* \"--CODEGEN--\":4400:4403   */\n      swap5\n      swap6\n        /* \"--CODEGEN--\":3865:4409   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":4498:5356   */\n    tag_219:\n      0x00\n        /* \"--CODEGEN--\":4685:4760   */\n      tag_220\n        /* \"--CODEGEN--\":4754:4759   */\n      dup3\n        /* \"--CODEGEN--\":4685:4760   */\n      jump(tag_208)\n    tag_220:\n        /* \"--CODEGEN--\":4773:4880   */\n      tag_222\n        /* \"--CODEGEN--\":4873:4879   */\n      dup2\n        /* \"--CODEGEN--\":4868:4871   */\n      dup6\n        /* \"--CODEGEN--\":4773:4880   */\n      jump(tag_210)\n    tag_222:\n        /* \"--CODEGEN--\":4766:4880   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":4901:4978   */\n      tag_224\n        /* \"--CODEGEN--\":4972:4977   */\n      dup4\n        /* \"--CODEGEN--\":4901:4978   */\n      jump(tag_212)\n    tag_224:\n        /* \"--CODEGEN--\":4998:5005   */\n      dup1\n        /* \"--CODEGEN--\":5026:5027   */\n      0x00\n        /* \"--CODEGEN--\":5011:5334   */\n    tag_226:\n        /* \"--CODEGEN--\":5036:5042   */\n      dup4\n        /* \"--CODEGEN--\":5033:5034   */\n      dup2\n        /* \"--CODEGEN--\":5030:5043   */\n      lt\n        /* \"--CODEGEN--\":5011:5334   */\n      iszero\n      tag_215\n      jumpi\n        /* \"--CODEGEN--\":5103:5109   */\n      dup2\n        /* \"--CODEGEN--\":5097:5110   */\n      mload\n        /* \"--CODEGEN--\":5124:5229   */\n      tag_229\n        /* \"--CODEGEN--\":5225:5228   */\n      dup9\n        /* \"--CODEGEN--\":5210:5223   */\n      dup3\n        /* \"--CODEGEN--\":5124:5229   */\n      jump(tag_196)\n    tag_229:\n        /* \"--CODEGEN--\":5117:5229   */\n      swap8\n      pop\n        /* \"--CODEGEN--\":5246:5327   */\n      tag_230\n        /* \"--CODEGEN--\":5320:5326   */\n      dup4\n        /* \"--CODEGEN--\":5246:5327   */\n      jump(tag_212)\n    tag_230:\n        /* \"--CODEGEN--\":5236:5327   */\n      swap3\n      pop\n      pop\n        /* \"--CODEGEN--\":5058:5059   */\n      0x01\n        /* \"--CODEGEN--\":5051:5060   */\n      add\n        /* \"--CODEGEN--\":5011:5334   */\n      jump(tag_226)\n        /* \"--CODEGEN--\":5364:5468   */\n    tag_232:\n        /* \"--CODEGEN--\":5441:5462   */\n      tag_200\n        /* \"--CODEGEN--\":5456:5461   */\n      dup2\n        /* \"--CODEGEN--\":5441:5462   */\n      jump(tag_234)\n        /* \"--CODEGEN--\":5476:5851   */\n    tag_235:\n      0x00\n        /* \"--CODEGEN--\":5636:5703   */\n      tag_236\n        /* \"--CODEGEN--\":5700:5702   */\n      0x26\n        /* \"--CODEGEN--\":5695:5698   */\n      dup4\n        /* \"--CODEGEN--\":5636:5703   */\n      jump(tag_210)\n    tag_236:\n        /* \"--CODEGEN--\":5736:5770   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"--CODEGEN--\":5716:5771   */\n      dup2\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"--CODEGEN--\":5800:5802   */\n      0x20\n        /* \"--CODEGEN--\":5791:5803   */\n      dup3\n      add\n        /* \"--CODEGEN--\":5784:5814   */\n      mstore\n        /* \"--CODEGEN--\":5842:5844   */\n      0x40\n        /* \"--CODEGEN--\":5833:5845   */\n      add\n      swap3\n        /* \"--CODEGEN--\":5622:5851   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":5860:6175   */\n    tag_238:\n      0x00\n        /* \"--CODEGEN--\":6020:6087   */\n      tag_239\n        /* \"--CODEGEN--\":6084:6086   */\n      0x0f\n        /* \"--CODEGEN--\":6079:6082   */\n      dup4\n        /* \"--CODEGEN--\":6020:6087   */\n      jump(tag_210)\n    tag_239:\n      shl(0x88, 0x41646472657373206973205a65726f)\n        /* \"--CODEGEN--\":6100:6138   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":6166:6168   */\n      0x20\n        /* \"--CODEGEN--\":6157:6169   */\n      add\n      swap3\n        /* \"--CODEGEN--\":6006:6175   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":6184:6511   */\n    tag_240:\n      0x00\n        /* \"--CODEGEN--\":6344:6411   */\n      tag_241\n        /* \"--CODEGEN--\":6408:6410   */\n      0x1b\n        /* \"--CODEGEN--\":6403:6406   */\n      dup4\n        /* \"--CODEGEN--\":6344:6411   */\n      jump(tag_210)\n    tag_241:\n        /* \"--CODEGEN--\":6444:6473   */\n      0x73686f756c642062652067726561746572207468616e207a65726f0000000000\n        /* \"--CODEGEN--\":6424:6474   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":6502:6504   */\n      0x20\n        /* \"--CODEGEN--\":6493:6505   */\n      add\n      swap3\n        /* \"--CODEGEN--\":6330:6511   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":6520:6852   */\n    tag_242:\n      0x00\n        /* \"--CODEGEN--\":6680:6747   */\n      tag_243\n        /* \"--CODEGEN--\":6744:6746   */\n      0x20\n        /* \"--CODEGEN--\":6739:6742   */\n      dup4\n        /* \"--CODEGEN--\":6680:6747   */\n      jump(tag_210)\n    tag_243:\n        /* \"--CODEGEN--\":6780:6814   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"--CODEGEN--\":6760:6815   */\n      dup2\n      mstore\n        /* \"--CODEGEN--\":6843:6845   */\n      0x20\n        /* \"--CODEGEN--\":6834:6846   */\n      add\n      swap3\n        /* \"--CODEGEN--\":6666:6852   */\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":6935:7406   */\n    tag_198:\n        /* \"--CODEGEN--\":7136:7159   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":7064:7068   */\n      0x40\n        /* \"--CODEGEN--\":7055:7069   */\n      dup4\n      add\n      swap1\n        /* \"--CODEGEN--\":7165:7228   */\n      tag_244\n        /* \"--CODEGEN--\":7059:7062   */\n      dup5\n        /* \"--CODEGEN--\":7136:7159   */\n      dup3\n        /* \"--CODEGEN--\":7165:7228   */\n      jump(tag_199)\n    tag_244:\n        /* \"--CODEGEN--\":7084:7234   */\n      pop\n        /* \"--CODEGEN--\":7310:7314   */\n      0x20\n        /* \"--CODEGEN--\":7303:7308   */\n      dup3\n        /* \"--CODEGEN--\":7299:7315   */\n      add\n        /* \"--CODEGEN--\":7293:7316   */\n      mload\n        /* \"--CODEGEN--\":7322:7385   */\n      tag_245\n        /* \"--CODEGEN--\":7379:7383   */\n      0x20\n        /* \"--CODEGEN--\":7374:7377   */\n      dup6\n        /* \"--CODEGEN--\":7370:7384   */\n      add\n        /* \"--CODEGEN--\":7356:7368   */\n      dup3\n        /* \"--CODEGEN--\":7322:7385   */\n      jump(tag_246)\n    tag_245:\n        /* \"--CODEGEN--\":7244:7391   */\n      pop\n        /* \"--CODEGEN--\":7037:7406   */\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":7496:7948   */\n    tag_247:\n        /* \"--CODEGEN--\":7722:7745   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":7655:7659   */\n      0x20\n        /* \"--CODEGEN--\":7758:7796   */\n      dup1\n      dup5\n      mstore\n        /* \"--CODEGEN--\":7496:7948   */\n      0x00\n      swap2\n        /* \"--CODEGEN--\":7646:7660   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"--CODEGEN--\":7811:7910   */\n      tag_248\n        /* \"--CODEGEN--\":7646:7660   */\n      dup3\n        /* \"--CODEGEN--\":7722:7745   */\n      dup3\n        /* \"--CODEGEN--\":7811:7910   */\n      jump(tag_206)\n    tag_248:\n        /* \"--CODEGEN--\":7803:7910   */\n      swap6\n        /* \"--CODEGEN--\":7628:7948   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":7955:8065   */\n    tag_249:\n        /* \"--CODEGEN--\":8036:8059   */\n      tag_200\n        /* \"--CODEGEN--\":8053:8058   */\n      dup2\n        /* \"--CODEGEN--\":8036:8059   */\n      jump(tag_251)\n        /* \"--CODEGEN--\":8072:8175   */\n    tag_246:\n        /* \"--CODEGEN--\":8145:8169   */\n      tag_200\n        /* \"--CODEGEN--\":8163:8168   */\n      dup2\n        /* \"--CODEGEN--\":8145:8169   */\n      jump(tag_253)\n        /* \"--CODEGEN--\":8302:8515   */\n    tag_29:\n        /* \"--CODEGEN--\":8420:8422   */\n      0x20\n        /* \"--CODEGEN--\":8405:8423   */\n      dup2\n      add\n        /* \"--CODEGEN--\":8434:8505   */\n      tag_165\n        /* \"--CODEGEN--\":8409:8418   */\n      dup3\n        /* \"--CODEGEN--\":8478:8484   */\n      dup5\n        /* \"--CODEGEN--\":8434:8505   */\n      jump(tag_199)\n        /* \"--CODEGEN--\":8522:9793   */\n    tag_39:\n        /* \"--CODEGEN--\":8918:8921   */\n      0x0140\n        /* \"--CODEGEN--\":8903:8922   */\n      dup2\n      add\n        /* \"--CODEGEN--\":8933:9020   */\n      tag_257\n        /* \"--CODEGEN--\":8907:8916   */\n      dup3\n        /* \"--CODEGEN--\":8993:8999   */\n      dup14\n        /* \"--CODEGEN--\":8933:9020   */\n      jump(tag_199)\n    tag_257:\n        /* \"--CODEGEN--\":9031:9103   */\n      tag_258\n        /* \"--CODEGEN--\":9099:9101   */\n      0x20\n        /* \"--CODEGEN--\":9088:9097   */\n      dup4\n        /* \"--CODEGEN--\":9084:9102   */\n      add\n        /* \"--CODEGEN--\":9075:9081   */\n      dup13\n        /* \"--CODEGEN--\":9031:9103   */\n      jump(tag_246)\n    tag_258:\n        /* \"--CODEGEN--\":9114:9202   */\n      tag_259\n        /* \"--CODEGEN--\":9198:9200   */\n      0x40\n        /* \"--CODEGEN--\":9187:9196   */\n      dup4\n        /* \"--CODEGEN--\":9183:9201   */\n      add\n        /* \"--CODEGEN--\":9174:9180   */\n      dup12\n        /* \"--CODEGEN--\":9114:9202   */\n      jump(tag_199)\n    tag_259:\n        /* \"--CODEGEN--\":9213:9285   */\n      tag_260\n        /* \"--CODEGEN--\":9281:9283   */\n      0x60\n        /* \"--CODEGEN--\":9270:9279   */\n      dup4\n        /* \"--CODEGEN--\":9266:9284   */\n      add\n        /* \"--CODEGEN--\":9257:9263   */\n      dup11\n        /* \"--CODEGEN--\":9213:9285   */\n      jump(tag_246)\n    tag_260:\n        /* \"--CODEGEN--\":9296:9369   */\n      tag_261\n        /* \"--CODEGEN--\":9364:9367   */\n      0x80\n        /* \"--CODEGEN--\":9353:9362   */\n      dup4\n        /* \"--CODEGEN--\":9349:9368   */\n      add\n        /* \"--CODEGEN--\":9340:9346   */\n      dup10\n        /* \"--CODEGEN--\":9296:9369   */\n      jump(tag_246)\n    tag_261:\n        /* \"--CODEGEN--\":9380:9453   */\n      tag_262\n        /* \"--CODEGEN--\":9448:9451   */\n      0xa0\n        /* \"--CODEGEN--\":9437:9446   */\n      dup4\n        /* \"--CODEGEN--\":9433:9452   */\n      add\n        /* \"--CODEGEN--\":9424:9430   */\n      dup9\n        /* \"--CODEGEN--\":9380:9453   */\n      jump(tag_246)\n    tag_262:\n        /* \"--CODEGEN--\":9464:9531   */\n      tag_263\n        /* \"--CODEGEN--\":9526:9529   */\n      0xc0\n        /* \"--CODEGEN--\":9515:9524   */\n      dup4\n        /* \"--CODEGEN--\":9511:9530   */\n      add\n        /* \"--CODEGEN--\":9502:9508   */\n      dup8\n        /* \"--CODEGEN--\":9464:9531   */\n      jump(tag_232)\n    tag_263:\n        /* \"--CODEGEN--\":9542:9615   */\n      tag_264\n        /* \"--CODEGEN--\":9610:9613   */\n      0xe0\n        /* \"--CODEGEN--\":9599:9608   */\n      dup4\n        /* \"--CODEGEN--\":9595:9614   */\n      add\n        /* \"--CODEGEN--\":9586:9592   */\n      dup7\n        /* \"--CODEGEN--\":9542:9615   */\n      jump(tag_246)\n    tag_264:\n        /* \"--CODEGEN--\":9626:9699   */\n      tag_265\n        /* \"--CODEGEN--\":9694:9697   */\n      0x0100\n        /* \"--CODEGEN--\":9683:9692   */\n      dup4\n        /* \"--CODEGEN--\":9679:9698   */\n      add\n        /* \"--CODEGEN--\":9670:9676   */\n      dup6\n        /* \"--CODEGEN--\":9626:9699   */\n      jump(tag_246)\n    tag_265:\n        /* \"--CODEGEN--\":9710:9783   */\n      tag_266\n        /* \"--CODEGEN--\":9778:9781   */\n      0x0120\n        /* \"--CODEGEN--\":9767:9776   */\n      dup4\n        /* \"--CODEGEN--\":9763:9782   */\n      add\n        /* \"--CODEGEN--\":9754:9760   */\n      dup5\n        /* \"--CODEGEN--\":9710:9783   */\n      jump(tag_199)\n    tag_266:\n        /* \"--CODEGEN--\":8889:9793   */\n      swap12\n      swap11\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":9800:10124   */\n    tag_89:\n        /* \"--CODEGEN--\":9946:9948   */\n      0x40\n        /* \"--CODEGEN--\":9931:9949   */\n      dup2\n      add\n        /* \"--CODEGEN--\":9960:10031   */\n      tag_267\n        /* \"--CODEGEN--\":9935:9944   */\n      dup3\n        /* \"--CODEGEN--\":10004:10010   */\n      dup6\n        /* \"--CODEGEN--\":9960:10031   */\n      jump(tag_199)\n    tag_267:\n        /* \"--CODEGEN--\":10042:10114   */\n      tag_268\n        /* \"--CODEGEN--\":10110:10112   */\n      0x20\n        /* \"--CODEGEN--\":10099:10108   */\n      dup4\n        /* \"--CODEGEN--\":10095:10113   */\n      add\n        /* \"--CODEGEN--\":10086:10092   */\n      dup5\n        /* \"--CODEGEN--\":10042:10114   */\n      jump(tag_246)\n    tag_268:\n        /* \"--CODEGEN--\":9917:10124   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":10131:10576   */\n    tag_46:\n        /* \"--CODEGEN--\":10341:10343   */\n      0x20\n        /* \"--CODEGEN--\":10355:10402   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":10326:10344   */\n      dup2\n      add\n        /* \"--CODEGEN--\":10416:10566   */\n      tag_268\n        /* \"--CODEGEN--\":10326:10344   */\n      dup2\n        /* \"--CODEGEN--\":10552:10558   */\n      dup5\n        /* \"--CODEGEN--\":10416:10566   */\n      jump(tag_219)\n        /* \"--CODEGEN--\":10583:10784   */\n    tag_64:\n        /* \"--CODEGEN--\":10695:10697   */\n      0x20\n        /* \"--CODEGEN--\":10680:10698   */\n      dup2\n      add\n        /* \"--CODEGEN--\":10709:10774   */\n      tag_165\n        /* \"--CODEGEN--\":10684:10693   */\n      dup3\n        /* \"--CODEGEN--\":10747:10753   */\n      dup5\n        /* \"--CODEGEN--\":10709:10774   */\n      jump(tag_232)\n        /* \"--CODEGEN--\":10791:11198   */\n    tag_153:\n        /* \"--CODEGEN--\":10982:10984   */\n      0x20\n        /* \"--CODEGEN--\":10996:11043   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":10967:10985   */\n      dup2\n      add\n        /* \"--CODEGEN--\":11057:11188   */\n      tag_165\n        /* \"--CODEGEN--\":10967:10985   */\n      dup2\n        /* \"--CODEGEN--\":11057:11188   */\n      jump(tag_235)\n        /* \"--CODEGEN--\":11205:11612   */\n    tag_128:\n        /* \"--CODEGEN--\":11396:11398   */\n      0x20\n        /* \"--CODEGEN--\":11410:11457   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":11381:11399   */\n      dup2\n      add\n        /* \"--CODEGEN--\":11471:11602   */\n      tag_165\n        /* \"--CODEGEN--\":11381:11399   */\n      dup2\n        /* \"--CODEGEN--\":11471:11602   */\n      jump(tag_238)\n        /* \"--CODEGEN--\":11619:12026   */\n    tag_133:\n        /* \"--CODEGEN--\":11810:11812   */\n      0x20\n        /* \"--CODEGEN--\":11824:11871   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":11795:11813   */\n      dup2\n      add\n        /* \"--CODEGEN--\":11885:12016   */\n      tag_165\n        /* \"--CODEGEN--\":11795:11813   */\n      dup2\n        /* \"--CODEGEN--\":11885:12016   */\n      jump(tag_240)\n        /* \"--CODEGEN--\":12033:12440   */\n    tag_107:\n        /* \"--CODEGEN--\":12224:12226   */\n      0x20\n        /* \"--CODEGEN--\":12238:12285   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":12209:12227   */\n      dup2\n      add\n        /* \"--CODEGEN--\":12299:12430   */\n      tag_165\n        /* \"--CODEGEN--\":12209:12227   */\n      dup2\n        /* \"--CODEGEN--\":12299:12430   */\n      jump(tag_242)\n        /* \"--CODEGEN--\":12447:12824   */\n    tag_50:\n        /* \"--CODEGEN--\":12623:12625   */\n      0x20\n        /* \"--CODEGEN--\":12637:12684   */\n      dup1\n      dup3\n      mstore\n        /* \"--CODEGEN--\":12608:12626   */\n      dup2\n      add\n        /* \"--CODEGEN--\":12698:12814   */\n      tag_268\n        /* \"--CODEGEN--\":12608:12626   */\n      dup2\n        /* \"--CODEGEN--\":12800:12806   */\n      dup5\n        /* \"--CODEGEN--\":12698:12814   */\n      jump(tag_247)\n        /* \"--CODEGEN--\":12831:13040   */\n    tag_72:\n        /* \"--CODEGEN--\":12947:12949   */\n      0x20\n        /* \"--CODEGEN--\":12932:12950   */\n      dup2\n      add\n        /* \"--CODEGEN--\":12961:13030   */\n      tag_165\n        /* \"--CODEGEN--\":12936:12945   */\n      dup3\n        /* \"--CODEGEN--\":13003:13009   */\n      dup5\n        /* \"--CODEGEN--\":12961:13030   */\n      jump(tag_249)\n        /* \"--CODEGEN--\":13047:13260   */\n    tag_54:\n        /* \"--CODEGEN--\":13165:13167   */\n      0x20\n        /* \"--CODEGEN--\":13150:13168   */\n      dup2\n      add\n        /* \"--CODEGEN--\":13179:13250   */\n      tag_165\n        /* \"--CODEGEN--\":13154:13163   */\n      dup3\n        /* \"--CODEGEN--\":13223:13229   */\n      dup5\n        /* \"--CODEGEN--\":13179:13250   */\n      jump(tag_246)\n        /* \"--CODEGEN--\":13267:13414   */\n    tag_212:\n        /* \"--CODEGEN--\":13387:13391   */\n      0x20\n        /* \"--CODEGEN--\":13378:13392   */\n      add\n      swap1\n        /* \"--CODEGEN--\":13335:13414   */\n      jump\n        /* \"--CODEGEN--\":13600:13733   */\n    tag_208:\n        /* \"--CODEGEN--\":13699:13711   */\n      mload\n      swap1\n        /* \"--CODEGEN--\":13670:13733   */\n      jump\n        /* \"--CODEGEN--\":14153:14321   */\n    tag_210:\n        /* \"--CODEGEN--\":14261:14280   */\n      swap1\n      dup2\n      mstore\n        /* \"--CODEGEN--\":14310:14314   */\n      0x20\n        /* \"--CODEGEN--\":14301:14315   */\n      add\n      swap1\n        /* \"--CODEGEN--\":14254:14321   */\n      jump\n        /* \"--CODEGEN--\":14709:14800   */\n    tag_203:\n      0x00\n        /* \"--CODEGEN--\":14771:14795   */\n      tag_165\n        /* \"--CODEGEN--\":14789:14794   */\n      dup3\n        /* \"--CODEGEN--\":14771:14795   */\n      jump(tag_279)\n        /* \"--CODEGEN--\":14913:14998   */\n    tag_234:\n        /* \"--CODEGEN--\":14979:14992   */\n      iszero\n        /* \"--CODEGEN--\":14972:14993   */\n      iszero\n      swap1\n        /* \"--CODEGEN--\":14955:14998   */\n      jump\n        /* \"--CODEGEN--\":15005:15089   */\n    tag_251:\n        /* \"--CODEGEN--\":15077:15083   */\n      0xffff\n        /* \"--CODEGEN--\":15066:15084   */\n      and\n      swap1\n        /* \"--CODEGEN--\":15049:15089   */\n      jump\n        /* \"--CODEGEN--\":15096:15217   */\n    tag_279:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":15158:15212   */\n      and\n      swap1\n        /* \"--CODEGEN--\":15141:15217   */\n      jump\n        /* \"--CODEGEN--\":15224:15296   */\n    tag_253:\n        /* \"--CODEGEN--\":15286:15291   */\n      swap1\n        /* \"--CODEGEN--\":15269:15296   */\n      jump\n        /* \"--CODEGEN--\":15303:15420   */\n    tag_166:\n        /* \"--CODEGEN--\":15372:15396   */\n      tag_281\n        /* \"--CODEGEN--\":15390:15395   */\n      dup2\n        /* \"--CODEGEN--\":15372:15396   */\n      jump(tag_203)\n    tag_281:\n        /* \"--CODEGEN--\":15365:15370   */\n      dup2\n        /* \"--CODEGEN--\":15362:15397   */\n      eq\n        /* \"--CODEGEN--\":15352:15354   */\n      tag_282\n      jumpi\n        /* \"--CODEGEN--\":15411:15412   */\n      0x00\n        /* \"--CODEGEN--\":15408:15409   */\n      dup1\n        /* \"--CODEGEN--\":15401:15413   */\n      revert\n        /* \"--CODEGEN--\":15352:15354   */\n    tag_282:\n        /* \"--CODEGEN--\":15346:15420   */\n      pop\n      jump\n        /* \"--CODEGEN--\":15427:15542   */\n    tag_169:\n        /* \"--CODEGEN--\":15495:15518   */\n      tag_281\n        /* \"--CODEGEN--\":15512:15517   */\n      dup2\n        /* \"--CODEGEN--\":15495:15518   */\n      jump(tag_251)\n        /* \"--CODEGEN--\":15549:15666   */\n    tag_172:\n        /* \"--CODEGEN--\":15618:15642   */\n      tag_281\n        /* \"--CODEGEN--\":15636:15641   */\n      dup2\n        /* \"--CODEGEN--\":15618:15642   */\n      jump(tag_253)\n\n    auxdata: 0xa365627a7a72315820b8fb3ed78a05801e31e4cbb52b3aed8557cc44a453df67b63a23e04878b39ade6c6578706572696d656e74616cf564736f6c63430005110040\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052600080546001600160a01b03191633179055610de5806100256000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063c1a8bdbc116100ad578063f09856f311610071578063f09856f314610244578063f26f849414610265578063f2fde38b1461026d578063f5a0c9b814610280578063f7f17488146102935761012c565b8063c1a8bdbc146101f9578063c52ea52e1461020c578063d2abc51714610221578063d3c9080a14610229578063d4739cca146102315761012c565b80636d036535116100f45780636d036535146101aa5780637f494852146101bf5780638bae5f4f146101d45780638da5cb5b146101dc5780638f32d59b146101e45761012c565b80630af88b24146101315780633b58524d1461014f57806344f91c1e1461016457806345ce7db91461018d57806365e4e1c014610195575b600080fd5b61013961029b565b6040516101469190610bef565b60405180910390f35b61016261015d36600461087c565b6102aa565b005b61017761017236600461092b565b610305565b6040516101469a99989796959493929190610bfd565b610139610372565b61019d610381565b6040516101469190610cb4565b6101b26103f9565b6040516101469190610d13565b6101c761046a565b6040516101469190610d32565b610139610470565b61013961047f565b6101ec61048e565b6040516101469190610cc5565b6101626102073660046108b6565b61049f565b6102146105c1565b6040516101469190610d24565b6102146105d2565b61019d6105e3565b61019d61023f366004610856565b61064c565b61025761025236600461095b565b6106d7565b604051610146929190610c92565b61021461070d565b61016261027b366004610856565b61071e565b61016261028e3660046109a8565b61078a565b61019d6107b3565b600b546001600160a01b031681565b6102b261048e565b6102d75760405162461bcd60e51b81526004016102ce90610d03565b60405180910390fd5b600b80546001600160a01b039384166001600160a01b031991821617909155600c8054929093169116179055565b6007602081815260009384526040808520909152918352912080546001820154600283015460038401546004850154600586015460068701549787015460088801546009909801546001600160a01b039788169996989588169794969395929460ff90941693919291168a565b600c546001600160a01b031681565b60606009600001805480602002602001604051908101604052809291908181526020016000905b828210156103f0576000848152602090819020604080518082019091526002850290910180546001600160a01b031682526001908101548284015290835290920191016103a8565b50505050905090565b61040161081c565b60408051600a8054602081810284018501855283018181529293919284929091849184018282801561045c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161043e575b505050505081525050905090565b60015481565b600d546001600160a01b031681565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6104a761048e565b6104c35760405162461bcd60e51b81526004016102ce90610d03565b6001600160a01b038516158015906104e357506001600160a01b03841615155b6104ff5760405162461bcd60e51b81526004016102ce90610ce3565b6103e88261ffff161115801561051b57506103e88161ffff1611155b801561052d57506103e88361ffff1611155b6105495760405162461bcd60e51b81526004016102ce90610cf3565b6000805461ffff60a01b1916600160a01b61ffff948516021761ffff60b01b1916600160b01b928416929092029190911761ffff60c01b1916600160c01b9390921692909202179055600c80546001600160a01b03199081166001600160a01b0394851617909155600d805490911691909216179055565b600054600160a01b900461ffff1681565b600054600160c01b900461ffff1681565b600480546040805160208084028201810190925282815260609390929091600090840182156103f0576000848152602090819020604080518082019091526002850290910180546001600160a01b031682526001908101548284015290835290920191016103a8565b6001600160a01b0381166000908152600360209081526040808320805482518185028101850190935280835260609492939192909184015b828210156106cc576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610684565b505050509050919050565b6006602090815260009384526040808520825292845282842090528252902080546001909101546001600160a01b039091169082565b600054600160b01b900461ffff1681565b61072661048e565b6107425760405162461bcd60e51b81526004016102ce90610d03565b6001600160a01b0381166107685760405162461bcd60e51b81526004016102ce90610cd3565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b61079261048e565b6107ae5760405162461bcd60e51b81526004016102ce90610d03565b600155565b600580546040805160208084028201810190925282815260609390929091600090840182156103f0576000848152602090819020604080518082019091526002850290910180546001600160a01b031682526001908101548284015290835290920191016103a8565b6040518060200160405280606081525090565b803561083a81610d79565b92915050565b803561083a81610d90565b803561083a81610d99565b60006020828403121561086857600080fd5b6000610874848461082f565b949350505050565b6000806040838503121561088f57600080fd5b600061089b858561082f565b92505060206108ac8582860161082f565b9150509250929050565b600080600080600060a086880312156108ce57600080fd5b60006108da888861082f565b95505060206108eb8882890161082f565b94505060406108fc88828901610840565b935050606061090d88828901610840565b925050608061091e88828901610840565b9150509295509295909350565b6000806040838503121561093e57600080fd5b600061094a858561082f565b92505060206108ac8582860161084b565b60008060006060848603121561097057600080fd5b600061097c868661082f565b935050602061098d8682870161084b565b925050604061099e8682870161082f565b9150509250925092565b6000602082840312156109ba57600080fd5b6000610874848461084b565b60006109d283836109ee565b505060200190565b60006109e68383610b92565b505060400190565b6109f781610d53565b82525050565b6000610a0882610d46565b610a128185610d4a565b9350610a1d83610d40565b8060005b83811015610a4b578151610a3588826109c6565b9750610a4083610d40565b925050600101610a21565b509495945050505050565b6000610a6182610d46565b610a6b8185610d4a565b9350610a7683610d40565b8060005b83811015610a4b578151610a8e88826109da565b9750610a9983610d40565b925050600101610a7a565b6109f781610d5e565b6000610aba602683610d4a565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b6000610b02600f83610d4a565b6e41646472657373206973205a65726f60881b815260200192915050565b6000610b2d601b83610d4a565b7f73686f756c642062652067726561746572207468616e207a65726f0000000000815260200192915050565b6000610b66602083610d4a565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b80516040830190610ba384826109ee565b506020820151610bb66020850182610be6565b50505050565b8051602080845260009190840190610bd482826109fd565b95945050505050565b6109f781610d63565b6109f781610d76565b6020810161083a82846109ee565b6101408101610c0c828d6109ee565b610c19602083018c610be6565b610c26604083018b6109ee565b610c33606083018a610be6565b610c406080830189610be6565b610c4d60a0830188610be6565b610c5a60c0830187610aa4565b610c6760e0830186610be6565b610c75610100830185610be6565b610c836101208301846109ee565b9b9a5050505050505050505050565b60408101610ca082856109ee565b610cad6020830184610be6565b9392505050565b60208082528101610cad8184610a56565b6020810161083a8284610aa4565b6020808252810161083a81610aad565b6020808252810161083a81610af5565b6020808252810161083a81610b20565b6020808252810161083a81610b59565b60208082528101610cad8184610bbc565b6020810161083a8284610bdd565b6020810161083a8284610be6565b60200190565b5190565b90815260200190565b600061083a82610d6a565b151590565b61ffff1690565b6001600160a01b031690565b90565b610d8281610d53565b8114610d8d57600080fd5b50565b610d8281610d63565b610d8281610d7656fea365627a7a72315820b8fb3ed78a05801e31e4cbb52b3aed8557cc44a453df67b63a23e04878b39ade6c6578706572696d656e74616cf564736f6c63430005110040",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0xDE5 DUP1 PUSH2 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC1A8BDBC GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xF09856F3 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF09856F3 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xF26F8494 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xF5A0C9B8 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xF7F17488 EQ PUSH2 0x293 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xC1A8BDBC EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0xC52EA52E EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xD2ABC517 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xD3C9080A EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xD4739CCA EQ PUSH2 0x231 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6D036535 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x6D036535 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x7F494852 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x8BAE5F4F EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x1E4 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xAF88B24 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x3B58524D EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x44F91C1E EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x45CE7DB9 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x65E4E1C0 EQ PUSH2 0x195 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xBEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x87C JUMP JUMPDEST PUSH2 0x2AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x177 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x139 PUSH2 0x372 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x381 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xD13 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x47F JUMP JUMPDEST PUSH2 0x1EC PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x49F JUMP JUMPDEST PUSH2 0x214 PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xD24 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0x856 JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST PUSH2 0x257 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x95B JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP3 SWAP2 SWAP1 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x162 PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x856 JUMP JUMPDEST PUSH2 0x71E JUMP JUMPDEST PUSH2 0x162 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST PUSH2 0x19D PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x48E JUMP JUMPDEST PUSH2 0x2D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xC DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD SWAP8 DUP8 ADD SLOAD PUSH1 0x8 DUP9 ADD SLOAD PUSH1 0x9 SWAP1 SWAP9 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND SWAP10 SWAP7 SWAP9 SWAP6 DUP9 AND SWAP8 SWAP5 SWAP7 SWAP4 SWAP6 SWAP3 SWAP5 PUSH1 0xFF SWAP1 SWAP5 AND SWAP4 SWAP2 SWAP3 SWAP2 AND DUP11 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3A8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x401 PUSH2 0x81C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x20 DUP2 DUP2 MUL DUP5 ADD DUP6 ADD DUP6 MSTORE DUP4 ADD DUP2 DUP2 MSTORE SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 DUP5 SWAP2 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x45C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x43E JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0x48E JUMP JUMPDEST PUSH2 0x4C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x4E3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST PUSH2 0x4FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH2 0x3E8 DUP3 PUSH2 0xFFFF AND GT ISZERO DUP1 ISZERO PUSH2 0x51B JUMPI POP PUSH2 0x3E8 DUP2 PUSH2 0xFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x52D JUMPI POP PUSH2 0x3E8 DUP4 PUSH2 0xFFFF AND GT ISZERO JUMPDEST PUSH2 0x549 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH2 0xFFFF SWAP5 DUP6 AND MUL OR PUSH2 0xFFFF PUSH1 0xB0 SHL NOT AND PUSH1 0x1 PUSH1 0xB0 SHL SWAP3 DUP5 AND SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR PUSH2 0xFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xD DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP5 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x0 SWAP1 DUP5 ADD DUP3 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x684 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE DUP3 DUP5 KECCAK256 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x726 PUSH2 0x48E JUMP JUMPDEST PUSH2 0x742 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x768 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x792 PUSH2 0x48E JUMP JUMPDEST PUSH2 0x7AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP5 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x0 SWAP1 DUP5 ADD DUP3 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x83A DUP2 PUSH2 0xD79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x83A DUP2 PUSH2 0xD90 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x83A DUP2 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x874 DUP5 DUP5 PUSH2 0x82F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x88F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x89B DUP6 DUP6 PUSH2 0x82F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8AC DUP6 DUP3 DUP7 ADD PUSH2 0x82F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x8CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8DA DUP9 DUP9 PUSH2 0x82F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x8EB DUP9 DUP3 DUP10 ADD PUSH2 0x82F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x8FC DUP9 DUP3 DUP10 ADD PUSH2 0x840 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x90D DUP9 DUP3 DUP10 ADD PUSH2 0x840 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x91E DUP9 DUP3 DUP10 ADD PUSH2 0x840 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x94A DUP6 DUP6 PUSH2 0x82F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8AC DUP6 DUP3 DUP7 ADD PUSH2 0x84B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x970 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x97C DUP7 DUP7 PUSH2 0x82F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x98D DUP7 DUP3 DUP8 ADD PUSH2 0x84B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x99E DUP7 DUP3 DUP8 ADD PUSH2 0x82F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x874 DUP5 DUP5 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D2 DUP4 DUP4 PUSH2 0x9EE JUMP JUMPDEST POP POP PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E6 DUP4 DUP4 PUSH2 0xB92 JUMP JUMPDEST POP POP PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH2 0x9F7 DUP2 PUSH2 0xD53 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA08 DUP3 PUSH2 0xD46 JUMP JUMPDEST PUSH2 0xA12 DUP2 DUP6 PUSH2 0xD4A JUMP JUMPDEST SWAP4 POP PUSH2 0xA1D DUP4 PUSH2 0xD40 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA4B JUMPI DUP2 MLOAD PUSH2 0xA35 DUP9 DUP3 PUSH2 0x9C6 JUMP JUMPDEST SWAP8 POP PUSH2 0xA40 DUP4 PUSH2 0xD40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0xA21 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA61 DUP3 PUSH2 0xD46 JUMP JUMPDEST PUSH2 0xA6B DUP2 DUP6 PUSH2 0xD4A JUMP JUMPDEST SWAP4 POP PUSH2 0xA76 DUP4 PUSH2 0xD40 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA4B JUMPI DUP2 MLOAD PUSH2 0xA8E DUP9 DUP3 PUSH2 0x9DA JUMP JUMPDEST SWAP8 POP PUSH2 0xA99 DUP4 PUSH2 0xD40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0xA7A JUMP JUMPDEST PUSH2 0x9F7 DUP2 PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xABA PUSH1 0x26 DUP4 PUSH2 0xD4A JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 DUP2 MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB02 PUSH1 0xF DUP4 PUSH2 0xD4A JUMP JUMPDEST PUSH15 0x41646472657373206973205A65726F PUSH1 0x88 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2D PUSH1 0x1B DUP4 PUSH2 0xD4A JUMP JUMPDEST PUSH32 0x73686F756C642062652067726561746572207468616E207A65726F0000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB66 PUSH1 0x20 DUP4 PUSH2 0xD4A JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0xBA3 DUP5 DUP3 PUSH2 0x9EE JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xBB6 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xBE6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP5 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH2 0xBD4 DUP3 DUP3 PUSH2 0x9FD JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9F7 DUP2 PUSH2 0xD63 JUMP JUMPDEST PUSH2 0x9F7 DUP2 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x83A DUP3 DUP5 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0x140 DUP2 ADD PUSH2 0xC0C DUP3 DUP14 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0xC19 PUSH1 0x20 DUP4 ADD DUP13 PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xC26 PUSH1 0x40 DUP4 ADD DUP12 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0xC33 PUSH1 0x60 DUP4 ADD DUP11 PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xC40 PUSH1 0x80 DUP4 ADD DUP10 PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xC4D PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xC5A PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0xC67 PUSH1 0xE0 DUP4 ADD DUP7 PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xC75 PUSH2 0x100 DUP4 ADD DUP6 PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xC83 PUSH2 0x120 DUP4 ADD DUP5 PUSH2 0x9EE JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xCA0 DUP3 DUP6 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0xCAD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBE6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xCAD DUP2 DUP5 PUSH2 0xA56 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x83A DUP3 DUP5 PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x83A DUP2 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x83A DUP2 PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x83A DUP2 PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x83A DUP2 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xCAD DUP2 DUP5 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x83A DUP3 DUP5 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x83A DUP3 DUP5 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83A DUP3 PUSH2 0xD6A JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD82 DUP2 PUSH2 0xD53 JUMP JUMPDEST DUP2 EQ PUSH2 0xD8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD82 DUP2 PUSH2 0xD63 JUMP JUMPDEST PUSH2 0xD82 DUP2 PUSH2 0xD76 JUMP INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 0xB8 0xFB RETURNDATACOPY 0xD7 DUP11 SDIV DUP1 0x1E BALANCE 0xE4 0xCB 0xB5 0x2B GASPRICE 0xED DUP6 JUMPI 0xCC DIFFICULTY LOG4 MSTORE8 0xDF PUSH8 0xB63A23E04878B39A 0xDE PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP SDIV GT STOP BLOCKHASH ",
							"sourceMap": "2498:4151:1:-;;;706:6:3;:19;;-1:-1:-1;;;;;;706:19:3;715:10;706:19;;;2498:4151:1;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c8063c1a8bdbc116100ad578063f09856f311610071578063f09856f314610244578063f26f849414610265578063f2fde38b1461026d578063f5a0c9b814610280578063f7f17488146102935761012c565b8063c1a8bdbc146101f9578063c52ea52e1461020c578063d2abc51714610221578063d3c9080a14610229578063d4739cca146102315761012c565b80636d036535116100f45780636d036535146101aa5780637f494852146101bf5780638bae5f4f146101d45780638da5cb5b146101dc5780638f32d59b146101e45761012c565b80630af88b24146101315780633b58524d1461014f57806344f91c1e1461016457806345ce7db91461018d57806365e4e1c014610195575b600080fd5b61013961029b565b6040516101469190610bef565b60405180910390f35b61016261015d36600461087c565b6102aa565b005b61017761017236600461092b565b610305565b6040516101469a99989796959493929190610bfd565b610139610372565b61019d610381565b6040516101469190610cb4565b6101b26103f9565b6040516101469190610d13565b6101c761046a565b6040516101469190610d32565b610139610470565b61013961047f565b6101ec61048e565b6040516101469190610cc5565b6101626102073660046108b6565b61049f565b6102146105c1565b6040516101469190610d24565b6102146105d2565b61019d6105e3565b61019d61023f366004610856565b61064c565b61025761025236600461095b565b6106d7565b604051610146929190610c92565b61021461070d565b61016261027b366004610856565b61071e565b61016261028e3660046109a8565b61078a565b61019d6107b3565b600b546001600160a01b031681565b6102b261048e565b6102d75760405162461bcd60e51b81526004016102ce90610d03565b60405180910390fd5b600b80546001600160a01b039384166001600160a01b031991821617909155600c8054929093169116179055565b6007602081815260009384526040808520909152918352912080546001820154600283015460038401546004850154600586015460068701549787015460088801546009909801546001600160a01b039788169996989588169794969395929460ff90941693919291168a565b600c546001600160a01b031681565b60606009600001805480602002602001604051908101604052809291908181526020016000905b828210156103f0576000848152602090819020604080518082019091526002850290910180546001600160a01b031682526001908101548284015290835290920191016103a8565b50505050905090565b61040161081c565b60408051600a8054602081810284018501855283018181529293919284929091849184018282801561045c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161043e575b505050505081525050905090565b60015481565b600d546001600160a01b031681565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6104a761048e565b6104c35760405162461bcd60e51b81526004016102ce90610d03565b6001600160a01b038516158015906104e357506001600160a01b03841615155b6104ff5760405162461bcd60e51b81526004016102ce90610ce3565b6103e88261ffff161115801561051b57506103e88161ffff1611155b801561052d57506103e88361ffff1611155b6105495760405162461bcd60e51b81526004016102ce90610cf3565b6000805461ffff60a01b1916600160a01b61ffff948516021761ffff60b01b1916600160b01b928416929092029190911761ffff60c01b1916600160c01b9390921692909202179055600c80546001600160a01b03199081166001600160a01b0394851617909155600d805490911691909216179055565b600054600160a01b900461ffff1681565b600054600160c01b900461ffff1681565b600480546040805160208084028201810190925282815260609390929091600090840182156103f0576000848152602090819020604080518082019091526002850290910180546001600160a01b031682526001908101548284015290835290920191016103a8565b6001600160a01b0381166000908152600360209081526040808320805482518185028101850190935280835260609492939192909184015b828210156106cc576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610684565b505050509050919050565b6006602090815260009384526040808520825292845282842090528252902080546001909101546001600160a01b039091169082565b600054600160b01b900461ffff1681565b61072661048e565b6107425760405162461bcd60e51b81526004016102ce90610d03565b6001600160a01b0381166107685760405162461bcd60e51b81526004016102ce90610cd3565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b61079261048e565b6107ae5760405162461bcd60e51b81526004016102ce90610d03565b600155565b600580546040805160208084028201810190925282815260609390929091600090840182156103f0576000848152602090819020604080518082019091526002850290910180546001600160a01b031682526001908101548284015290835290920191016103a8565b6040518060200160405280606081525090565b803561083a81610d79565b92915050565b803561083a81610d90565b803561083a81610d99565b60006020828403121561086857600080fd5b6000610874848461082f565b949350505050565b6000806040838503121561088f57600080fd5b600061089b858561082f565b92505060206108ac8582860161082f565b9150509250929050565b600080600080600060a086880312156108ce57600080fd5b60006108da888861082f565b95505060206108eb8882890161082f565b94505060406108fc88828901610840565b935050606061090d88828901610840565b925050608061091e88828901610840565b9150509295509295909350565b6000806040838503121561093e57600080fd5b600061094a858561082f565b92505060206108ac8582860161084b565b60008060006060848603121561097057600080fd5b600061097c868661082f565b935050602061098d8682870161084b565b925050604061099e8682870161082f565b9150509250925092565b6000602082840312156109ba57600080fd5b6000610874848461084b565b60006109d283836109ee565b505060200190565b60006109e68383610b92565b505060400190565b6109f781610d53565b82525050565b6000610a0882610d46565b610a128185610d4a565b9350610a1d83610d40565b8060005b83811015610a4b578151610a3588826109c6565b9750610a4083610d40565b925050600101610a21565b509495945050505050565b6000610a6182610d46565b610a6b8185610d4a565b9350610a7683610d40565b8060005b83811015610a4b578151610a8e88826109da565b9750610a9983610d40565b925050600101610a7a565b6109f781610d5e565b6000610aba602683610d4a565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b6000610b02600f83610d4a565b6e41646472657373206973205a65726f60881b815260200192915050565b6000610b2d601b83610d4a565b7f73686f756c642062652067726561746572207468616e207a65726f0000000000815260200192915050565b6000610b66602083610d4a565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b80516040830190610ba384826109ee565b506020820151610bb66020850182610be6565b50505050565b8051602080845260009190840190610bd482826109fd565b95945050505050565b6109f781610d63565b6109f781610d76565b6020810161083a82846109ee565b6101408101610c0c828d6109ee565b610c19602083018c610be6565b610c26604083018b6109ee565b610c33606083018a610be6565b610c406080830189610be6565b610c4d60a0830188610be6565b610c5a60c0830187610aa4565b610c6760e0830186610be6565b610c75610100830185610be6565b610c836101208301846109ee565b9b9a5050505050505050505050565b60408101610ca082856109ee565b610cad6020830184610be6565b9392505050565b60208082528101610cad8184610a56565b6020810161083a8284610aa4565b6020808252810161083a81610aad565b6020808252810161083a81610af5565b6020808252810161083a81610b20565b6020808252810161083a81610b59565b60208082528101610cad8184610bbc565b6020810161083a8284610bdd565b6020810161083a8284610be6565b60200190565b5190565b90815260200190565b600061083a82610d6a565b151590565b61ffff1690565b6001600160a01b031690565b90565b610d8281610d53565b8114610d8d57600080fd5b50565b610d8281610d63565b610d8281610d7656fea365627a7a72315820b8fb3ed78a05801e31e4cbb52b3aed8557cc44a453df67b63a23e04878b39ade6c6578706572696d656e74616cf564736f6c63430005110040",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC1A8BDBC GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xF09856F3 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF09856F3 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xF26F8494 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xF5A0C9B8 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xF7F17488 EQ PUSH2 0x293 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xC1A8BDBC EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0xC52EA52E EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xD2ABC517 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xD3C9080A EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xD4739CCA EQ PUSH2 0x231 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6D036535 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x6D036535 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x7F494852 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x8BAE5F4F EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x1E4 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xAF88B24 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x3B58524D EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x44F91C1E EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x45CE7DB9 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x65E4E1C0 EQ PUSH2 0x195 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xBEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x87C JUMP JUMPDEST PUSH2 0x2AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x177 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x139 PUSH2 0x372 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x381 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xD13 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x47F JUMP JUMPDEST PUSH2 0x1EC PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x49F JUMP JUMPDEST PUSH2 0x214 PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xD24 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0x856 JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST PUSH2 0x257 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x95B JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP3 SWAP2 SWAP1 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x162 PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x856 JUMP JUMPDEST PUSH2 0x71E JUMP JUMPDEST PUSH2 0x162 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x78A JUMP JUMPDEST PUSH2 0x19D PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x48E JUMP JUMPDEST PUSH2 0x2D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xC DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD SWAP8 DUP8 ADD SLOAD PUSH1 0x8 DUP9 ADD SLOAD PUSH1 0x9 SWAP1 SWAP9 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND SWAP10 SWAP7 SWAP9 SWAP6 DUP9 AND SWAP8 SWAP5 SWAP7 SWAP4 SWAP6 SWAP3 SWAP5 PUSH1 0xFF SWAP1 SWAP5 AND SWAP4 SWAP2 SWAP3 SWAP2 AND DUP11 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3A8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x401 PUSH2 0x81C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x20 DUP2 DUP2 MUL DUP5 ADD DUP6 ADD DUP6 MSTORE DUP4 ADD DUP2 DUP2 MSTORE SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 DUP5 SWAP2 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x45C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x43E JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0x48E JUMP JUMPDEST PUSH2 0x4C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x4E3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST PUSH2 0x4FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH2 0x3E8 DUP3 PUSH2 0xFFFF AND GT ISZERO DUP1 ISZERO PUSH2 0x51B JUMPI POP PUSH2 0x3E8 DUP2 PUSH2 0xFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x52D JUMPI POP PUSH2 0x3E8 DUP4 PUSH2 0xFFFF AND GT ISZERO JUMPDEST PUSH2 0x549 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH2 0xFFFF SWAP5 DUP6 AND MUL OR PUSH2 0xFFFF PUSH1 0xB0 SHL NOT AND PUSH1 0x1 PUSH1 0xB0 SHL SWAP3 DUP5 AND SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR PUSH2 0xFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xD DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP5 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x0 SWAP1 DUP5 ADD DUP3 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x684 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE DUP3 DUP5 KECCAK256 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x726 PUSH2 0x48E JUMP JUMPDEST PUSH2 0x742 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x768 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x792 PUSH2 0x48E JUMP JUMPDEST PUSH2 0x7AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP5 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x0 SWAP1 DUP5 ADD DUP3 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x83A DUP2 PUSH2 0xD79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x83A DUP2 PUSH2 0xD90 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x83A DUP2 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x874 DUP5 DUP5 PUSH2 0x82F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x88F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x89B DUP6 DUP6 PUSH2 0x82F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8AC DUP6 DUP3 DUP7 ADD PUSH2 0x82F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x8CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8DA DUP9 DUP9 PUSH2 0x82F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x8EB DUP9 DUP3 DUP10 ADD PUSH2 0x82F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x8FC DUP9 DUP3 DUP10 ADD PUSH2 0x840 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x90D DUP9 DUP3 DUP10 ADD PUSH2 0x840 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x91E DUP9 DUP3 DUP10 ADD PUSH2 0x840 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x94A DUP6 DUP6 PUSH2 0x82F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8AC DUP6 DUP3 DUP7 ADD PUSH2 0x84B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x970 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x97C DUP7 DUP7 PUSH2 0x82F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x98D DUP7 DUP3 DUP8 ADD PUSH2 0x84B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x99E DUP7 DUP3 DUP8 ADD PUSH2 0x82F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x874 DUP5 DUP5 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D2 DUP4 DUP4 PUSH2 0x9EE JUMP JUMPDEST POP POP PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E6 DUP4 DUP4 PUSH2 0xB92 JUMP JUMPDEST POP POP PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH2 0x9F7 DUP2 PUSH2 0xD53 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA08 DUP3 PUSH2 0xD46 JUMP JUMPDEST PUSH2 0xA12 DUP2 DUP6 PUSH2 0xD4A JUMP JUMPDEST SWAP4 POP PUSH2 0xA1D DUP4 PUSH2 0xD40 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA4B JUMPI DUP2 MLOAD PUSH2 0xA35 DUP9 DUP3 PUSH2 0x9C6 JUMP JUMPDEST SWAP8 POP PUSH2 0xA40 DUP4 PUSH2 0xD40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0xA21 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA61 DUP3 PUSH2 0xD46 JUMP JUMPDEST PUSH2 0xA6B DUP2 DUP6 PUSH2 0xD4A JUMP JUMPDEST SWAP4 POP PUSH2 0xA76 DUP4 PUSH2 0xD40 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA4B JUMPI DUP2 MLOAD PUSH2 0xA8E DUP9 DUP3 PUSH2 0x9DA JUMP JUMPDEST SWAP8 POP PUSH2 0xA99 DUP4 PUSH2 0xD40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0xA7A JUMP JUMPDEST PUSH2 0x9F7 DUP2 PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xABA PUSH1 0x26 DUP4 PUSH2 0xD4A JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 DUP2 MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB02 PUSH1 0xF DUP4 PUSH2 0xD4A JUMP JUMPDEST PUSH15 0x41646472657373206973205A65726F PUSH1 0x88 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2D PUSH1 0x1B DUP4 PUSH2 0xD4A JUMP JUMPDEST PUSH32 0x73686F756C642062652067726561746572207468616E207A65726F0000000000 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB66 PUSH1 0x20 DUP4 PUSH2 0xD4A JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0xBA3 DUP5 DUP3 PUSH2 0x9EE JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xBB6 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xBE6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP5 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH2 0xBD4 DUP3 DUP3 PUSH2 0x9FD JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9F7 DUP2 PUSH2 0xD63 JUMP JUMPDEST PUSH2 0x9F7 DUP2 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x83A DUP3 DUP5 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0x140 DUP2 ADD PUSH2 0xC0C DUP3 DUP14 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0xC19 PUSH1 0x20 DUP4 ADD DUP13 PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xC26 PUSH1 0x40 DUP4 ADD DUP12 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0xC33 PUSH1 0x60 DUP4 ADD DUP11 PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xC40 PUSH1 0x80 DUP4 ADD DUP10 PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xC4D PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xC5A PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0xC67 PUSH1 0xE0 DUP4 ADD DUP7 PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xC75 PUSH2 0x100 DUP4 ADD DUP6 PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xC83 PUSH2 0x120 DUP4 ADD DUP5 PUSH2 0x9EE JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xCA0 DUP3 DUP6 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0xCAD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBE6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xCAD DUP2 DUP5 PUSH2 0xA56 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x83A DUP3 DUP5 PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x83A DUP2 PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x83A DUP2 PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x83A DUP2 PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x83A DUP2 PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xCAD DUP2 DUP5 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x83A DUP3 DUP5 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x83A DUP3 DUP5 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83A DUP3 PUSH2 0xD6A JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD82 DUP2 PUSH2 0xD53 JUMP JUMPDEST DUP2 EQ PUSH2 0xD8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD82 DUP2 PUSH2 0xD63 JUMP JUMPDEST PUSH2 0xD82 DUP2 PUSH2 0xD76 JUMP INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 0xB8 0xFB RETURNDATACOPY 0xD7 DUP11 SDIV DUP1 0x1E BALANCE 0xE4 0xCB 0xB5 0x2B GASPRICE 0xED DUP6 JUMPI 0xCC DIFFICULTY LOG4 MSTORE8 0xDF PUSH8 0xB63A23E04878B39A 0xDE PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP SDIV GT STOP BLOCKHASH ",
							"sourceMap": "2498:4151:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2498:4151:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4388:26;;;:::i;:::-;;;;;;;;;;;;;;;;6471:176;;;;;;;;;:::i;:::-;;4112:63;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4420:27;;;:::i;4647:156::-;;;:::i;:::-;;;;;;;;4488:153;;;:::i;:::-;;;;;;;;2860:32;;;:::i;:::-;;;;;;;;4453:29;;;:::i;870:77:3:-;;;:::i;1221:90::-;;;:::i;:::-;;;;;;;;5464:878:1;;;;;;;;;:::i;2695:42::-;;;:::i;:::-;;;;;;;;2787:34;;;:::i;4809:169::-;;;:::i;5153:190::-;;;;;;;;;:::i;3948:157::-;;;;;;;;;:::i;:::-;;;;;;;;;2743:35;;;:::i;1460:235:3:-;;;;;;;;;:::i;6348:117:1:-;;;;;;;;;:::i;4984:163::-;;;:::i;4388:26::-;;;-1:-1:-1;;;;;4388:26:1;;:::o;6471:176::-;1074:9:3;:7;:9::i;:::-;1066:54;;;;-1:-1:-1;;;1066:54:3;;;;;;;;;;;;;;;;;6571:11:1;:18;;-1:-1:-1;;;;;6571:18:1;;;-1:-1:-1;;;;;;6571:18:1;;;;;;;6599:12;:41;;;;;;;;;;;6471:176::o;4112:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4112:63:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4420:27::-;;;-1:-1:-1;;;;;4420:27:1;;:::o;4647:156::-;4720:34;4777:13;:19;;4770:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4770:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4647:156;:::o;4488:153::-;4559:36;;:::i;:::-;4611:23;;;4618:16;4611:23;;;;;;;;;;;;;;;;;;;4618:16;;4611:23;;;;4618:16;;4611:23;;4618:16;4611:23;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4611:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;4488:153;:::o;2860:32::-;;;;:::o;4453:29::-;;;-1:-1:-1;;;;;4453:29:1;;:::o;870:77:3:-;908:7;934:6;-1:-1:-1;;;;;934:6:3;870:77;:::o;1221:90::-;1261:4;1298:6;-1:-1:-1;;;;;1298:6:3;1284:10;:20;;1221:90::o;5464:878:1:-;1074:9:3;:7;:9::i;:::-;1066:54;;;;-1:-1:-1;;;1066:54:3;;;;;;;;;-1:-1:-1;;;;;5680:40:1;;;;;;:70;;-1:-1:-1;;;;;;5723:27:1;;;;5680:70;5672:98;;;;-1:-1:-1;;;5672:98:1;;;;;;;;;5963:4;5930:29;:37;;;;:71;;;;;5997:4;5971:22;:30;;;;5930:71;:102;;;;;6028:4;6005:21;:27;;;;5930:102;5922:142;;;;-1:-1:-1;;;5922:142:1;;;;;;;;;6074:28;:60;;-1:-1:-1;;;;6074:60:1;-1:-1:-1;;;6074:60:1;;;;;;-1:-1:-1;;;;6144:46:1;-1:-1:-1;;;6144:46:1;;;;;;;;;;;-1:-1:-1;;;;6200:42:1;-1:-1:-1;;;6200:42:1;;;;;;;;;;;6252:12;:41;;-1:-1:-1;;;;;;6252:41:1;;;-1:-1:-1;;;;;6252:41:1;;;;;;;6303:14;:32;;;;;;;;;;;;5464:878::o;2695:42::-;;;-1:-1:-1;;;2695:42:1;;;;;:::o;2787:34::-;;;-1:-1:-1;;;2787:34:1;;;;;:::o;4809:169::-;4949:16;4942:29;;;;;;;;;;;;;;;;;;;4892:34;;4942:29;;4949:16;;:22;;4942:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4942:29:1;;;;;;;;;;;;;;;;;;;;;;5153:190;-1:-1:-1;;;;;5303:27:1;;;;;;:20;:27;;;;;;;;5296:40;;;;;;;;;;;;;;;;;5246:34;;5296:40;;5303:27;;5296:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5296:40:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5153:190;;;:::o;3948:157::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3948:157:1;;;;;:::o;2743:35::-;;;-1:-1:-1;;;2743:35:1;;;;;:::o;1460:235:3:-;1074:9;:7;:9::i;:::-;1066:54;;;;-1:-1:-1;;;1066:54:3;;;;;;;;;-1:-1:-1;;;;;1540:22:3;;1532:73;;;;-1:-1:-1;;;1532:73:3;;;;;;;;;1671:6;:17;;-1:-1:-1;;;;;;1671:17:3;-1:-1:-1;;;;;1671:17:3;;;;;;;;;;1460:235::o;6348:117:1:-;1074:9:3;:7;:9::i;:::-;1066:54;;;;-1:-1:-1;;;1066:54:3;;;;;;;;;6427:17:1;:31;6348:117::o;4984:163::-;5121:13;5114:26;;;;;;;;;;;;;;;;;;;5064:34;;5114:26;;5121:13;;:19;;5114:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5114:26:1;;;;;;;;;;;;;;;;;;;;;;2498:4151;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;;57:78;;;;;142:128;208:20;;233:32;208:20;233:32;;277:130;344:20;;369:33;344:20;369:33;;414:241;;518:2;506:9;497:7;493:23;489:32;486:2;;;534:1;531;524:12;486:2;569:1;586:53;631:7;611:9;586:53;;;576:63;480:175;-1:-1;;;;480:175;662:366;;;783:2;771:9;762:7;758:23;754:32;751:2;;;799:1;796;789:12;751:2;834:1;851:53;896:7;876:9;851:53;;;841:63;;813:97;941:2;959:53;1004:7;995:6;984:9;980:22;959:53;;;949:63;;920:98;745:283;;;;;;1035:737;;;;;;1204:3;1192:9;1183:7;1179:23;1175:33;1172:2;;;1221:1;1218;1211:12;1172:2;1256:1;1273:53;1318:7;1298:9;1273:53;;;1263:63;;1235:97;1363:2;1381:53;1426:7;1417:6;1406:9;1402:22;1381:53;;;1371:63;;1342:98;1471:2;1489:52;1533:7;1524:6;1513:9;1509:22;1489:52;;;1479:62;;1450:97;1578:2;1596:52;1640:7;1631:6;1620:9;1616:22;1596:52;;;1586:62;;1557:97;1685:3;1704:52;1748:7;1739:6;1728:9;1724:22;1704:52;;;1694:62;;1664:98;1166:606;;;;;;;;;1779:366;;;1900:2;1888:9;1879:7;1875:23;1871:32;1868:2;;;1916:1;1913;1906:12;1868:2;1951:1;1968:53;2013:7;1993:9;1968:53;;;1958:63;;1930:97;2058:2;2076:53;2121:7;2112:6;2101:9;2097:22;2076:53;;2152:491;;;;2290:2;2278:9;2269:7;2265:23;2261:32;2258:2;;;2306:1;2303;2296:12;2258:2;2341:1;2358:53;2403:7;2383:9;2358:53;;;2348:63;;2320:97;2448:2;2466:53;2511:7;2502:6;2491:9;2487:22;2466:53;;;2456:63;;2427:98;2556:2;2574:53;2619:7;2610:6;2599:9;2595:22;2574:53;;;2564:63;;2535:98;2252:391;;;;;;2650:241;;2754:2;2742:9;2733:7;2729:23;2725:32;2722:2;;;2770:1;2767;2760:12;2722:2;2805:1;2822:53;2867:7;2847:9;2822:53;;2899:173;;2986:46;3028:3;3020:6;2986:46;;;-1:-1;;3061:4;3052:14;;2979:93;3081:261;;3210:92;3298:3;3290:6;3210:92;;;-1:-1;;3331:4;3322:14;;3203:139;3350:137;3449:32;3475:5;3449:32;;;3444:3;3437:45;3431:56;;;3755:654;;3886:50;3930:5;3886:50;;;3949:76;4018:6;4013:3;3949:76;;;3942:83;;4046:52;4092:5;4046:52;;;4118:7;4146:1;4131:256;4156:6;4153:1;4150:13;4131:256;;;4223:6;4217:13;4244:63;4303:3;4288:13;4244:63;;;4237:70;;4324:56;4373:6;4324:56;;;4314:66;-1:-1;;4178:1;4171:9;4131:256;;;-1:-1;4400:3;;3865:544;-1:-1;;;;;3865:544;4498:858;;4685:75;4754:5;4685:75;;;4773:107;4873:6;4868:3;4773:107;;;4766:114;;4901:77;4972:5;4901:77;;;4998:7;5026:1;5011:323;5036:6;5033:1;5030:13;5011:323;;;5103:6;5097:13;5124:105;5225:3;5210:13;5124:105;;;5117:112;;5246:81;5320:6;5246:81;;;5236:91;-1:-1;;5058:1;5051:9;5011:323;;5364:104;5441:21;5456:5;5441:21;;5476:375;;5636:67;5700:2;5695:3;5636:67;;;5736:34;5716:55;;-1:-1;;;5800:2;5791:12;;5784:30;5842:2;5833:12;;5622:229;-1:-1;;5622:229;5860:315;;6020:67;6084:2;6079:3;6020:67;;;-1:-1;;;6100:38;;6166:2;6157:12;;6006:169;-1:-1;;6006:169;6184:327;;6344:67;6408:2;6403:3;6344:67;;;6444:29;6424:50;;6502:2;6493:12;;6330:181;-1:-1;;6330:181;6520:332;;6680:67;6744:2;6739:3;6680:67;;;6780:34;6760:55;;6843:2;6834:12;;6666:186;-1:-1;;6666:186;6935:471;7136:23;;7064:4;7055:14;;;7165:63;7059:3;7136:23;7165:63;;;7084:150;7310:4;7303:5;7299:16;7293:23;7322:63;7379:4;7374:3;7370:14;7356:12;7322:63;;;7244:147;7037:369;;;;7496:452;7722:23;;7655:4;7758:38;;;7496:452;;7646:14;;;;7811:99;7646:14;7722:23;7811:99;;;7803:107;7628:320;-1:-1;;;;;7628:320;7955:110;8036:23;8053:5;8036:23;;8072:103;8145:24;8163:5;8145:24;;8302:213;8420:2;8405:18;;8434:71;8409:9;8478:6;8434:71;;8522:1271;8918:3;8903:19;;8933:87;8907:9;8993:6;8933:87;;;9031:72;9099:2;9088:9;9084:18;9075:6;9031:72;;;9114:88;9198:2;9187:9;9183:18;9174:6;9114:88;;;9213:72;9281:2;9270:9;9266:18;9257:6;9213:72;;;9296:73;9364:3;9353:9;9349:19;9340:6;9296:73;;;9380;9448:3;9437:9;9433:19;9424:6;9380:73;;;9464:67;9526:3;9515:9;9511:19;9502:6;9464:67;;;9542:73;9610:3;9599:9;9595:19;9586:6;9542:73;;;9626;9694:3;9683:9;9679:19;9670:6;9626:73;;;9710;9778:3;9767:9;9763:19;9754:6;9710:73;;;8889:904;;;;;;;;;;;;;;9800:324;9946:2;9931:18;;9960:71;9935:9;10004:6;9960:71;;;10042:72;10110:2;10099:9;10095:18;10086:6;10042:72;;;9917:207;;;;;;10131:445;10341:2;10355:47;;;10326:18;;10416:150;10326:18;10552:6;10416:150;;10583:201;10695:2;10680:18;;10709:65;10684:9;10747:6;10709:65;;10791:407;10982:2;10996:47;;;10967:18;;11057:131;10967:18;11057:131;;11205:407;11396:2;11410:47;;;11381:18;;11471:131;11381:18;11471:131;;11619:407;11810:2;11824:47;;;11795:18;;11885:131;11795:18;11885:131;;12033:407;12224:2;12238:47;;;12209:18;;12299:131;12209:18;12299:131;;12447:377;12623:2;12637:47;;;12608:18;;12698:116;12608:18;12800:6;12698:116;;12831:209;12947:2;12932:18;;12961:69;12936:9;13003:6;12961:69;;13047:213;13165:2;13150:18;;13179:71;13154:9;13223:6;13179:71;;13267:147;13387:4;13378:14;;13335:79;13600:133;13699:12;;13670:63;14153:168;14261:19;;;14310:4;14301:14;;14254:67;14709:91;;14771:24;14789:5;14771:24;;14913:85;14979:13;14972:21;;14955:43;15005:84;15077:6;15066:18;;15049:40;15096:121;-1:-1;;;;;15158:54;;15141:76;15224:72;15286:5;15269:27;15303:117;15372:24;15390:5;15372:24;;;15365:5;15362:35;15352:2;;15411:1;15408;15401:12;15352:2;15346:74;;15427:115;15495:23;15512:5;15495:23;;15549:117;15618:24;15636:5;15618:24;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "711400",
								"executionCost": "21558",
								"totalCost": "732958"
							},
							"external": {
								"LPStakeAddress()": "infinite",
								"StakeAddress()": "infinite",
								"WETHAddress()": "infinite",
								"auctions(address,uint256)": "infinite",
								"getAuctionTokensForSale()": "infinite",
								"getErc20Tokens()": "infinite",
								"getFixedPriceTokensForSale()": "infinite",
								"getTokensForSale()": "infinite",
								"getTokensForSalePerUser(address)": "infinite",
								"isOwner()": "1239",
								"lpStakefeepercentage()": "1195",
								"offerprice(address,uint256,address)": "infinite",
								"owner()": "infinite",
								"platFormFeePercentage()": "1172",
								"rewardDistributionPercentage()": "1173",
								"setAddress(address,address)": "infinite",
								"setBrokerage(address,address,uint16,uint16,uint16)": "infinite",
								"setUpdatedClosingTime(uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"updateClosingTime()": "1144"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2498,
									"end": 6649,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 2498,
									"end": 6649,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2498,
									"end": 6649,
									"name": "MSTORE"
								},
								{
									"begin": 706,
									"end": 712,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 706,
									"end": 725,
									"name": "DUP1"
								},
								{
									"begin": 706,
									"end": 725,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 706,
									"end": 725,
									"name": "AND"
								},
								{
									"begin": 715,
									"end": 725,
									"name": "CALLER"
								},
								{
									"begin": 706,
									"end": 725,
									"name": "OR"
								},
								{
									"begin": 706,
									"end": 725,
									"name": "SWAP1"
								},
								{
									"begin": 706,
									"end": 725,
									"name": "SSTORE"
								},
								{
									"begin": 2498,
									"end": 6649,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2498,
									"end": 6649,
									"name": "DUP1"
								},
								{
									"begin": 2498,
									"end": 6649,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2498,
									"end": 6649,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2498,
									"end": 6649,
									"name": "CODECOPY"
								},
								{
									"begin": 2498,
									"end": 6649,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2498,
									"end": 6649,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a365627a7a72315820b8fb3ed78a05801e31e4cbb52b3aed8557cc44a453df67b63a23e04878b39ade6c6578706572696d656e74616cf564736f6c63430005110040",
									".code": [
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "MSTORE"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "POP"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "LT"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "SHR"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "C1A8BDBC"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "GT"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "F09856F3"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "GT"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "F09856F3"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "EQ"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "F26F8494"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "EQ"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "EQ"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "F5A0C9B8"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "EQ"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "F7F17488"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "EQ"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMP"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPDEST"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "C1A8BDBC"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "EQ"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "C52EA52E"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "EQ"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "D2ABC517"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "EQ"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "D3C9080A"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "EQ"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "D4739CCA"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "EQ"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMP"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPDEST"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "6D036535"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "GT"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "6D036535"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "EQ"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "7F494852"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "EQ"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "8BAE5F4F"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "EQ"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "EQ"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "8F32D59B"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "EQ"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMP"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPDEST"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "AF88B24"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "EQ"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "3B58524D"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "EQ"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "44F91C1E"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "EQ"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "45CE7DB9"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "EQ"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "65E4E1C0"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "EQ"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPI"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPDEST"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "REVERT"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "JUMPDEST"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "JUMPDEST"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "MLOAD"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "SWAP2"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "SWAP1"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "JUMP"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "JUMPDEST"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "MLOAD"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "DUP1"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "SWAP2"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "SUB"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "SWAP1"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "RETURN"
										},
										{
											"begin": 6471,
											"end": 6647,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 6471,
											"end": 6647,
											"name": "JUMPDEST"
										},
										{
											"begin": 6471,
											"end": 6647,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 6471,
											"end": 6647,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 6471,
											"end": 6647,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6471,
											"end": 6647,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6471,
											"end": 6647,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 6471,
											"end": 6647,
											"name": "JUMP"
										},
										{
											"begin": 6471,
											"end": 6647,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 6471,
											"end": 6647,
											"name": "JUMPDEST"
										},
										{
											"begin": 6471,
											"end": 6647,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 6471,
											"end": 6647,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6471,
											"end": 6647,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 6471,
											"end": 6647,
											"name": "JUMPDEST"
										},
										{
											"begin": 6471,
											"end": 6647,
											"name": "STOP"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "JUMPDEST"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "JUMP"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "JUMPDEST"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "JUMPDEST"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "MLOAD"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP11"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP10"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP9"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP8"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP7"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP6"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP5"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP4"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP3"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP2"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP1"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "JUMP"
										},
										{
											"begin": 4420,
											"end": 4447,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 4420,
											"end": 4447,
											"name": "JUMPDEST"
										},
										{
											"begin": 4420,
											"end": 4447,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 4420,
											"end": 4447,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 4420,
											"end": 4447,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4647,
											"end": 4803,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 4647,
											"end": 4803,
											"name": "JUMPDEST"
										},
										{
											"begin": 4647,
											"end": 4803,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 4647,
											"end": 4803,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 4647,
											"end": 4803,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4647,
											"end": 4803,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 4647,
											"end": 4803,
											"name": "JUMPDEST"
										},
										{
											"begin": 4647,
											"end": 4803,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4647,
											"end": 4803,
											"name": "MLOAD"
										},
										{
											"begin": 4647,
											"end": 4803,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 4647,
											"end": 4803,
											"name": "SWAP2"
										},
										{
											"begin": 4647,
											"end": 4803,
											"name": "SWAP1"
										},
										{
											"begin": 4647,
											"end": 4803,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 4647,
											"end": 4803,
											"name": "JUMP"
										},
										{
											"begin": 4488,
											"end": 4641,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 4488,
											"end": 4641,
											"name": "JUMPDEST"
										},
										{
											"begin": 4488,
											"end": 4641,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 4488,
											"end": 4641,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 4488,
											"end": 4641,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4488,
											"end": 4641,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 4488,
											"end": 4641,
											"name": "JUMPDEST"
										},
										{
											"begin": 4488,
											"end": 4641,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4488,
											"end": 4641,
											"name": "MLOAD"
										},
										{
											"begin": 4488,
											"end": 4641,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 4488,
											"end": 4641,
											"name": "SWAP2"
										},
										{
											"begin": 4488,
											"end": 4641,
											"name": "SWAP1"
										},
										{
											"begin": 4488,
											"end": 4641,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 4488,
											"end": 4641,
											"name": "JUMP"
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "JUMPDEST"
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "JUMPDEST"
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "MLOAD"
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "SWAP2"
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "SWAP1"
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "JUMP"
										},
										{
											"begin": 4453,
											"end": 4482,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 4453,
											"end": 4482,
											"name": "JUMPDEST"
										},
										{
											"begin": 4453,
											"end": 4482,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 4453,
											"end": 4482,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 4453,
											"end": 4482,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 947,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 870,
											"end": 947,
											"name": "JUMPDEST"
										},
										{
											"begin": 870,
											"end": 947,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 870,
											"end": 947,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 870,
											"end": 947,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1311,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1221,
											"end": 1311,
											"name": "JUMPDEST"
										},
										{
											"begin": 1221,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 1221,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1221,
											"end": 1311,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1311,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1221,
											"end": 1311,
											"name": "JUMPDEST"
										},
										{
											"begin": 1221,
											"end": 1311,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1311,
											"name": "MLOAD"
										},
										{
											"begin": 1221,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1221,
											"end": 1311,
											"name": "SWAP2"
										},
										{
											"begin": 1221,
											"end": 1311,
											"name": "SWAP1"
										},
										{
											"begin": 1221,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 1221,
											"end": 1311,
											"name": "JUMP"
										},
										{
											"begin": 5464,
											"end": 6342,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5464,
											"end": 6342,
											"name": "JUMPDEST"
										},
										{
											"begin": 5464,
											"end": 6342,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 5464,
											"end": 6342,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 5464,
											"end": 6342,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5464,
											"end": 6342,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5464,
											"end": 6342,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 5464,
											"end": 6342,
											"name": "JUMP"
										},
										{
											"begin": 5464,
											"end": 6342,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 5464,
											"end": 6342,
											"name": "JUMPDEST"
										},
										{
											"begin": 5464,
											"end": 6342,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5464,
											"end": 6342,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "JUMPDEST"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "JUMPDEST"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "MLOAD"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "SWAP2"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "SWAP1"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "JUMP"
										},
										{
											"begin": 2787,
											"end": 2821,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2787,
											"end": 2821,
											"name": "JUMPDEST"
										},
										{
											"begin": 2787,
											"end": 2821,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2787,
											"end": 2821,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2787,
											"end": 2821,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4809,
											"end": 4978,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 4809,
											"end": 4978,
											"name": "JUMPDEST"
										},
										{
											"begin": 4809,
											"end": 4978,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 4809,
											"end": 4978,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 4809,
											"end": 4978,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5153,
											"end": 5343,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 5153,
											"end": 5343,
											"name": "JUMPDEST"
										},
										{
											"begin": 5153,
											"end": 5343,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5153,
											"end": 5343,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 5153,
											"end": 5343,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5153,
											"end": 5343,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5153,
											"end": 5343,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 5153,
											"end": 5343,
											"name": "JUMP"
										},
										{
											"begin": 5153,
											"end": 5343,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 5153,
											"end": 5343,
											"name": "JUMPDEST"
										},
										{
											"begin": 5153,
											"end": 5343,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 5153,
											"end": 5343,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "JUMPDEST"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "JUMP"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "JUMPDEST"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "JUMPDEST"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "MLOAD"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "SWAP3"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "SWAP2"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "JUMP"
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "JUMPDEST"
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1460,
											"end": 1695,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1460,
											"end": 1695,
											"name": "JUMPDEST"
										},
										{
											"begin": 1460,
											"end": 1695,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1460,
											"end": 1695,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 1460,
											"end": 1695,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1460,
											"end": 1695,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1460,
											"end": 1695,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 1460,
											"end": 1695,
											"name": "JUMP"
										},
										{
											"begin": 1460,
											"end": 1695,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 1460,
											"end": 1695,
											"name": "JUMPDEST"
										},
										{
											"begin": 1460,
											"end": 1695,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 1460,
											"end": 1695,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6348,
											"end": 6465,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 6348,
											"end": 6465,
											"name": "JUMPDEST"
										},
										{
											"begin": 6348,
											"end": 6465,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 6348,
											"end": 6465,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 6348,
											"end": 6465,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6348,
											"end": 6465,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6348,
											"end": 6465,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 6348,
											"end": 6465,
											"name": "JUMP"
										},
										{
											"begin": 6348,
											"end": 6465,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 6348,
											"end": 6465,
											"name": "JUMPDEST"
										},
										{
											"begin": 6348,
											"end": 6465,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 6348,
											"end": 6465,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4984,
											"end": 5147,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 4984,
											"end": 5147,
											"name": "JUMPDEST"
										},
										{
											"begin": 4984,
											"end": 5147,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 4984,
											"end": 5147,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 4984,
											"end": 5147,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "JUMPDEST"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "AND"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "DUP2"
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6471,
											"end": 6647,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 6471,
											"end": 6647,
											"name": "JUMPDEST"
										},
										{
											"begin": 1074,
											"end": 1083,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 1074,
											"end": 1081,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1074,
											"end": 1083,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1074,
											"end": 1083,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 1074,
											"end": 1083,
											"name": "JUMPDEST"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "JUMPI"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "DUP2"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "MSTORE"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "ADD"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "SWAP1"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "JUMP"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "JUMPDEST"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "MLOAD"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "DUP1"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "SWAP2"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "SUB"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "SWAP1"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "REVERT"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "JUMPDEST"
										},
										{
											"begin": 6571,
											"end": 6582,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 6571,
											"end": 6589,
											"name": "DUP1"
										},
										{
											"begin": 6571,
											"end": 6589,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6571,
											"end": 6589,
											"name": "SWAP4"
										},
										{
											"begin": 6571,
											"end": 6589,
											"name": "DUP5"
										},
										{
											"begin": 6571,
											"end": 6589,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 6571,
											"end": 6589,
											"name": "SWAP2"
										},
										{
											"begin": 6571,
											"end": 6589,
											"name": "DUP3"
										},
										{
											"begin": 6571,
											"end": 6589,
											"name": "AND"
										},
										{
											"begin": 6571,
											"end": 6589,
											"name": "OR"
										},
										{
											"begin": 6571,
											"end": 6589,
											"name": "SWAP1"
										},
										{
											"begin": 6571,
											"end": 6589,
											"name": "SWAP2"
										},
										{
											"begin": 6571,
											"end": 6589,
											"name": "SSTORE"
										},
										{
											"begin": 6599,
											"end": 6611,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 6599,
											"end": 6640,
											"name": "DUP1"
										},
										{
											"begin": 6599,
											"end": 6640,
											"name": "SLOAD"
										},
										{
											"begin": 6599,
											"end": 6640,
											"name": "SWAP3"
										},
										{
											"begin": 6599,
											"end": 6640,
											"name": "SWAP1"
										},
										{
											"begin": 6599,
											"end": 6640,
											"name": "SWAP4"
										},
										{
											"begin": 6599,
											"end": 6640,
											"name": "AND"
										},
										{
											"begin": 6599,
											"end": 6640,
											"name": "SWAP2"
										},
										{
											"begin": 6599,
											"end": 6640,
											"name": "AND"
										},
										{
											"begin": 6599,
											"end": 6640,
											"name": "OR"
										},
										{
											"begin": 6599,
											"end": 6640,
											"name": "SWAP1"
										},
										{
											"begin": 6599,
											"end": 6640,
											"name": "SSTORE"
										},
										{
											"begin": 6471,
											"end": 6647,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "JUMPDEST"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "DUP2"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "DUP2"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "MSTORE"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP4"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "DUP5"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "MSTORE"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "DUP1"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "DUP6"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "KECCAK256"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP1"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP2"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "MSTORE"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP2"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "DUP4"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "MSTORE"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP2"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "KECCAK256"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "DUP1"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SLOAD"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "DUP3"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "ADD"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SLOAD"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "DUP4"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "ADD"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SLOAD"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "DUP5"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "ADD"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SLOAD"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "DUP6"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "ADD"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SLOAD"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "DUP7"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "ADD"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SLOAD"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "DUP8"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "ADD"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SLOAD"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP8"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "DUP8"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "ADD"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SLOAD"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "DUP9"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "ADD"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SLOAD"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP1"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP9"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "ADD"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP8"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "DUP9"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "AND"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP10"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP7"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP9"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP6"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "DUP9"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "AND"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP8"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP5"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP7"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP4"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP6"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP3"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP5"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP1"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP5"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "AND"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP4"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP2"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP3"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "SWAP2"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "AND"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "DUP11"
										},
										{
											"begin": 4112,
											"end": 4175,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4420,
											"end": 4447,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 4420,
											"end": 4447,
											"name": "JUMPDEST"
										},
										{
											"begin": 4420,
											"end": 4447,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4420,
											"end": 4447,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4420,
											"end": 4447,
											"name": "AND"
										},
										{
											"begin": 4420,
											"end": 4447,
											"name": "DUP2"
										},
										{
											"begin": 4420,
											"end": 4447,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4647,
											"end": 4803,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 4647,
											"end": 4803,
											"name": "JUMPDEST"
										},
										{
											"begin": 4720,
											"end": 4754,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 4777,
											"end": 4790,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 4777,
											"end": 4796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4796,
											"name": "ADD"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "DUP1"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SLOAD"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "DUP1"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "MUL"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "ADD"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "MLOAD"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SWAP1"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "DUP2"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "ADD"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "MSTORE"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "DUP1"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SWAP3"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SWAP2"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SWAP1"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "DUP2"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "DUP2"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "MSTORE"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "ADD"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SWAP1"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "JUMPDEST"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "DUP3"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "DUP3"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "LT"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "ISZERO"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "JUMPI"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "DUP5"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "DUP2"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "MSTORE"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SWAP1"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "DUP2"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SWAP1"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "KECCAK256"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "DUP1"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "MLOAD"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "DUP1"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "DUP3"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "ADD"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SWAP1"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SWAP2"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "MSTORE"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "DUP6"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "MUL"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SWAP1"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SWAP2"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "ADD"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "DUP1"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "AND"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "DUP3"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "MSTORE"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SWAP1"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "DUP2"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "ADD"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SLOAD"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "DUP3"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "DUP5"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "ADD"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "MSTORE"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SWAP1"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "DUP4"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "MSTORE"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SWAP1"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SWAP3"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "ADD"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SWAP2"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "ADD"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "JUMP"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "JUMPDEST"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "POP"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "POP"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "POP"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "POP"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "SWAP1"
										},
										{
											"begin": 4770,
											"end": 4796,
											"name": "POP"
										},
										{
											"begin": 4647,
											"end": 4803,
											"name": "SWAP1"
										},
										{
											"begin": 4647,
											"end": 4803,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4488,
											"end": 4641,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 4488,
											"end": 4641,
											"name": "JUMPDEST"
										},
										{
											"begin": 4559,
											"end": 4595,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 4559,
											"end": 4595,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 4559,
											"end": 4595,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4559,
											"end": 4595,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 4559,
											"end": 4595,
											"name": "JUMPDEST"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "DUP1"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "MLOAD"
										},
										{
											"begin": 4618,
											"end": 4634,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "DUP1"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "SLOAD"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "DUP2"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "DUP2"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "MUL"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "DUP5"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "ADD"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "DUP6"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "ADD"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "DUP6"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "MSTORE"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "DUP4"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "ADD"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "DUP2"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "DUP2"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "MSTORE"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "SWAP3"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "SWAP4"
										},
										{
											"begin": 4618,
											"end": 4634,
											"name": "SWAP2"
										},
										{
											"begin": 4618,
											"end": 4634,
											"name": "SWAP3"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "DUP5"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "SWAP3"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "SWAP1"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "SWAP2"
										},
										{
											"begin": 4618,
											"end": 4634,
											"name": "DUP5"
										},
										{
											"begin": 4618,
											"end": 4634,
											"name": "SWAP2"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "DUP5"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "ADD"
										},
										{
											"begin": 4618,
											"end": 4634,
											"name": "DUP3"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "DUP3"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "DUP1"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "ISZERO"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "JUMPI"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "MUL"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "DUP3"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "ADD"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "SWAP2"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "SWAP1"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "MSTORE"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "KECCAK256"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "SWAP1"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "JUMPDEST"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "DUP2"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "AND"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "DUP2"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "MSTORE"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "SWAP1"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "SWAP2"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "ADD"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "SWAP1"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "ADD"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "DUP1"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "DUP4"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "GT"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "JUMPI"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "JUMPDEST"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "POP"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "POP"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "POP"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "POP"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "POP"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "DUP2"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "MSTORE"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "POP"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "POP"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "SWAP1"
										},
										{
											"begin": 4611,
											"end": 4634,
											"name": "POP"
										},
										{
											"begin": 4488,
											"end": 4641,
											"name": "SWAP1"
										},
										{
											"begin": 4488,
											"end": 4641,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "JUMPDEST"
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "SLOAD"
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "DUP2"
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4453,
											"end": 4482,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 4453,
											"end": 4482,
											"name": "JUMPDEST"
										},
										{
											"begin": 4453,
											"end": 4482,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 4453,
											"end": 4482,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4453,
											"end": 4482,
											"name": "AND"
										},
										{
											"begin": 4453,
											"end": 4482,
											"name": "DUP2"
										},
										{
											"begin": 4453,
											"end": 4482,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 870,
											"end": 947,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 870,
											"end": 947,
											"name": "JUMPDEST"
										},
										{
											"begin": 908,
											"end": 915,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 934,
											"end": 940,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 934,
											"end": 940,
											"name": "AND"
										},
										{
											"begin": 870,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 870,
											"end": 947,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1221,
											"end": 1311,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 1221,
											"end": 1311,
											"name": "JUMPDEST"
										},
										{
											"begin": 1261,
											"end": 1265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1298,
											"end": 1304,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1298,
											"end": 1304,
											"name": "AND"
										},
										{
											"begin": 1284,
											"end": 1294,
											"name": "CALLER"
										},
										{
											"begin": 1284,
											"end": 1304,
											"name": "EQ"
										},
										{
											"begin": 1284,
											"end": 1304,
											"name": "SWAP1"
										},
										{
											"begin": 1221,
											"end": 1311,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5464,
											"end": 6342,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 5464,
											"end": 6342,
											"name": "JUMPDEST"
										},
										{
											"begin": 1074,
											"end": 1083,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 1074,
											"end": 1081,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1074,
											"end": 1083,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1074,
											"end": 1083,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 1074,
											"end": 1083,
											"name": "JUMPDEST"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "JUMPI"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "DUP2"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "MSTORE"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "ADD"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "SWAP1"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "JUMP"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5680,
											"end": 5720,
											"name": "DUP6"
										},
										{
											"begin": 5680,
											"end": 5720,
											"name": "AND"
										},
										{
											"begin": 5680,
											"end": 5720,
											"name": "ISZERO"
										},
										{
											"begin": 5680,
											"end": 5720,
											"name": "DUP1"
										},
										{
											"begin": 5680,
											"end": 5720,
											"name": "ISZERO"
										},
										{
											"begin": 5680,
											"end": 5720,
											"name": "SWAP1"
										},
										{
											"begin": 5680,
											"end": 5750,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 5680,
											"end": 5750,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5723,
											"end": 5750,
											"name": "DUP5"
										},
										{
											"begin": 5723,
											"end": 5750,
											"name": "AND"
										},
										{
											"begin": 5723,
											"end": 5750,
											"name": "ISZERO"
										},
										{
											"begin": 5723,
											"end": 5750,
											"name": "ISZERO"
										},
										{
											"begin": 5680,
											"end": 5750,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 5680,
											"end": 5750,
											"name": "JUMPDEST"
										},
										{
											"begin": 5672,
											"end": 5770,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 5672,
											"end": 5770,
											"name": "JUMPI"
										},
										{
											"begin": 5672,
											"end": 5770,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5672,
											"end": 5770,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5672,
											"end": 5770,
											"name": "DUP2"
										},
										{
											"begin": 5672,
											"end": 5770,
											"name": "MSTORE"
										},
										{
											"begin": 5672,
											"end": 5770,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5672,
											"end": 5770,
											"name": "ADD"
										},
										{
											"begin": 5672,
											"end": 5770,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 5672,
											"end": 5770,
											"name": "SWAP1"
										},
										{
											"begin": 5672,
											"end": 5770,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 5672,
											"end": 5770,
											"name": "JUMP"
										},
										{
											"begin": 5672,
											"end": 5770,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 5672,
											"end": 5770,
											"name": "JUMPDEST"
										},
										{
											"begin": 5963,
											"end": 5967,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 5930,
											"end": 5959,
											"name": "DUP3"
										},
										{
											"begin": 5930,
											"end": 5967,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 5930,
											"end": 5967,
											"name": "AND"
										},
										{
											"begin": 5930,
											"end": 5967,
											"name": "GT"
										},
										{
											"begin": 5930,
											"end": 5967,
											"name": "ISZERO"
										},
										{
											"begin": 5930,
											"end": 6001,
											"name": "DUP1"
										},
										{
											"begin": 5930,
											"end": 6001,
											"name": "ISZERO"
										},
										{
											"begin": 5930,
											"end": 6001,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 5930,
											"end": 6001,
											"name": "JUMPI"
										},
										{
											"begin": 5930,
											"end": 6001,
											"name": "POP"
										},
										{
											"begin": 5997,
											"end": 6001,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 5971,
											"end": 5993,
											"name": "DUP2"
										},
										{
											"begin": 5971,
											"end": 6001,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 5971,
											"end": 6001,
											"name": "AND"
										},
										{
											"begin": 5971,
											"end": 6001,
											"name": "GT"
										},
										{
											"begin": 5971,
											"end": 6001,
											"name": "ISZERO"
										},
										{
											"begin": 5930,
											"end": 6001,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 5930,
											"end": 6001,
											"name": "JUMPDEST"
										},
										{
											"begin": 5930,
											"end": 6032,
											"name": "DUP1"
										},
										{
											"begin": 5930,
											"end": 6032,
											"name": "ISZERO"
										},
										{
											"begin": 5930,
											"end": 6032,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 5930,
											"end": 6032,
											"name": "JUMPI"
										},
										{
											"begin": 5930,
											"end": 6032,
											"name": "POP"
										},
										{
											"begin": 6028,
											"end": 6032,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 6005,
											"end": 6026,
											"name": "DUP4"
										},
										{
											"begin": 6005,
											"end": 6032,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 6005,
											"end": 6032,
											"name": "AND"
										},
										{
											"begin": 6005,
											"end": 6032,
											"name": "GT"
										},
										{
											"begin": 6005,
											"end": 6032,
											"name": "ISZERO"
										},
										{
											"begin": 5930,
											"end": 6032,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 5930,
											"end": 6032,
											"name": "JUMPDEST"
										},
										{
											"begin": 5922,
											"end": 6064,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 5922,
											"end": 6064,
											"name": "JUMPI"
										},
										{
											"begin": 5922,
											"end": 6064,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 6064,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5922,
											"end": 6064,
											"name": "DUP2"
										},
										{
											"begin": 5922,
											"end": 6064,
											"name": "MSTORE"
										},
										{
											"begin": 5922,
											"end": 6064,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5922,
											"end": 6064,
											"name": "ADD"
										},
										{
											"begin": 5922,
											"end": 6064,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 5922,
											"end": 6064,
											"name": "SWAP1"
										},
										{
											"begin": 5922,
											"end": 6064,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 5922,
											"end": 6064,
											"name": "JUMP"
										},
										{
											"begin": 5922,
											"end": 6064,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 5922,
											"end": 6064,
											"name": "JUMPDEST"
										},
										{
											"begin": 6074,
											"end": 6102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6074,
											"end": 6134,
											"name": "DUP1"
										},
										{
											"begin": 6074,
											"end": 6134,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 6074,
											"end": 6134,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6074,
											"end": 6134,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 6074,
											"end": 6134,
											"name": "SWAP5"
										},
										{
											"begin": 6074,
											"end": 6134,
											"name": "DUP6"
										},
										{
											"begin": 6074,
											"end": 6134,
											"name": "AND"
										},
										{
											"begin": 6074,
											"end": 6134,
											"name": "MUL"
										},
										{
											"begin": 6074,
											"end": 6134,
											"name": "OR"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 6144,
											"end": 6190,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6144,
											"end": 6190,
											"name": "SWAP3"
										},
										{
											"begin": 6144,
											"end": 6190,
											"name": "DUP5"
										},
										{
											"begin": 6144,
											"end": 6190,
											"name": "AND"
										},
										{
											"begin": 6144,
											"end": 6190,
											"name": "SWAP3"
										},
										{
											"begin": 6144,
											"end": 6190,
											"name": "SWAP1"
										},
										{
											"begin": 6144,
											"end": 6190,
											"name": "SWAP3"
										},
										{
											"begin": 6144,
											"end": 6190,
											"name": "MUL"
										},
										{
											"begin": 6144,
											"end": 6190,
											"name": "SWAP2"
										},
										{
											"begin": 6144,
											"end": 6190,
											"name": "SWAP1"
										},
										{
											"begin": 6144,
											"end": 6190,
											"name": "SWAP2"
										},
										{
											"begin": 6144,
											"end": 6190,
											"name": "OR"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 6200,
											"end": 6242,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6200,
											"end": 6242,
											"name": "SWAP4"
										},
										{
											"begin": 6200,
											"end": 6242,
											"name": "SWAP1"
										},
										{
											"begin": 6200,
											"end": 6242,
											"name": "SWAP3"
										},
										{
											"begin": 6200,
											"end": 6242,
											"name": "AND"
										},
										{
											"begin": 6200,
											"end": 6242,
											"name": "SWAP3"
										},
										{
											"begin": 6200,
											"end": 6242,
											"name": "SWAP1"
										},
										{
											"begin": 6200,
											"end": 6242,
											"name": "SWAP3"
										},
										{
											"begin": 6200,
											"end": 6242,
											"name": "MUL"
										},
										{
											"begin": 6200,
											"end": 6242,
											"name": "OR"
										},
										{
											"begin": 6200,
											"end": 6242,
											"name": "SWAP1"
										},
										{
											"begin": 6200,
											"end": 6242,
											"name": "SSTORE"
										},
										{
											"begin": 6252,
											"end": 6264,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 6252,
											"end": 6293,
											"name": "DUP1"
										},
										{
											"begin": 6252,
											"end": 6293,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 6252,
											"end": 6293,
											"name": "SWAP1"
										},
										{
											"begin": 6252,
											"end": 6293,
											"name": "DUP2"
										},
										{
											"begin": 6252,
											"end": 6293,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6252,
											"end": 6293,
											"name": "SWAP5"
										},
										{
											"begin": 6252,
											"end": 6293,
											"name": "DUP6"
										},
										{
											"begin": 6252,
											"end": 6293,
											"name": "AND"
										},
										{
											"begin": 6252,
											"end": 6293,
											"name": "OR"
										},
										{
											"begin": 6252,
											"end": 6293,
											"name": "SWAP1"
										},
										{
											"begin": 6252,
											"end": 6293,
											"name": "SWAP2"
										},
										{
											"begin": 6252,
											"end": 6293,
											"name": "SSTORE"
										},
										{
											"begin": 6303,
											"end": 6317,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 6303,
											"end": 6335,
											"name": "DUP1"
										},
										{
											"begin": 6303,
											"end": 6335,
											"name": "SLOAD"
										},
										{
											"begin": 6303,
											"end": 6335,
											"name": "SWAP1"
										},
										{
											"begin": 6303,
											"end": 6335,
											"name": "SWAP2"
										},
										{
											"begin": 6303,
											"end": 6335,
											"name": "AND"
										},
										{
											"begin": 6303,
											"end": 6335,
											"name": "SWAP2"
										},
										{
											"begin": 6303,
											"end": 6335,
											"name": "SWAP1"
										},
										{
											"begin": 6303,
											"end": 6335,
											"name": "SWAP3"
										},
										{
											"begin": 6303,
											"end": 6335,
											"name": "AND"
										},
										{
											"begin": 6303,
											"end": 6335,
											"name": "OR"
										},
										{
											"begin": 6303,
											"end": 6335,
											"name": "SWAP1"
										},
										{
											"begin": 6303,
											"end": 6335,
											"name": "SSTORE"
										},
										{
											"begin": 5464,
											"end": 6342,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "JUMPDEST"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "SWAP1"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "DIV"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "AND"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "DUP2"
										},
										{
											"begin": 2695,
											"end": 2737,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2787,
											"end": 2821,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2787,
											"end": 2821,
											"name": "JUMPDEST"
										},
										{
											"begin": 2787,
											"end": 2821,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2787,
											"end": 2821,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2787,
											"end": 2821,
											"name": "SWAP1"
										},
										{
											"begin": 2787,
											"end": 2821,
											"name": "DIV"
										},
										{
											"begin": 2787,
											"end": 2821,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 2787,
											"end": 2821,
											"name": "AND"
										},
										{
											"begin": 2787,
											"end": 2821,
											"name": "DUP2"
										},
										{
											"begin": 2787,
											"end": 2821,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4809,
											"end": 4978,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 4809,
											"end": 4978,
											"name": "JUMPDEST"
										},
										{
											"begin": 4949,
											"end": 4965,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "SLOAD"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "MLOAD"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP5"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "MUL"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP3"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "ADD"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP2"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "ADD"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "SWAP1"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "SWAP3"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "MSTORE"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP3"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP2"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "MSTORE"
										},
										{
											"begin": 4892,
											"end": 4926,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 4892,
											"end": 4926,
											"name": "SWAP4"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "SWAP1"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "SWAP3"
										},
										{
											"begin": 4949,
											"end": 4965,
											"name": "SWAP1"
										},
										{
											"begin": 4949,
											"end": 4965,
											"name": "SWAP2"
										},
										{
											"begin": 4949,
											"end": 4971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4971,
											"name": "SWAP1"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP5"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "ADD"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP3"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "ISZERO"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "JUMPI"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP5"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP2"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "MSTORE"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "SWAP1"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP2"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "SWAP1"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "KECCAK256"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "MLOAD"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP3"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "ADD"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "SWAP1"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "SWAP2"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "MSTORE"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP6"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "MUL"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "SWAP1"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "SWAP2"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "ADD"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP1"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "AND"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP3"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "MSTORE"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "SWAP1"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP2"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "ADD"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "SLOAD"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP3"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP5"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "ADD"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "MSTORE"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "SWAP1"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "DUP4"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "MSTORE"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "SWAP1"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "SWAP3"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "ADD"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "SWAP2"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "ADD"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "JUMP"
										},
										{
											"begin": 5153,
											"end": 5343,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 5153,
											"end": 5343,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "DUP2"
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "AND"
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "SWAP1"
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "DUP2"
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "MSTORE"
										},
										{
											"begin": 5303,
											"end": 5323,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "SWAP1"
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "DUP2"
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "MSTORE"
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "DUP1"
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "DUP4"
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "KECCAK256"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP1"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "SLOAD"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP3"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "MLOAD"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP2"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP6"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "MUL"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP2"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "ADD"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP6"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "ADD"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "SWAP1"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "SWAP4"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "MSTORE"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP1"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP4"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "MSTORE"
										},
										{
											"begin": 5246,
											"end": 5280,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5246,
											"end": 5280,
											"name": "SWAP5"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "SWAP3"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "SWAP4"
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "SWAP2"
										},
										{
											"begin": 5303,
											"end": 5330,
											"name": "SWAP3"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "SWAP1"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "SWAP2"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP5"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "ADD"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "JUMPDEST"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP3"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP3"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "LT"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "ISZERO"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "JUMPI"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP5"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP2"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "MSTORE"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "SWAP1"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP2"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "SWAP1"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "KECCAK256"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP1"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "MLOAD"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP1"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP3"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "ADD"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "SWAP1"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "SWAP2"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "MSTORE"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP6"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "MUL"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "SWAP1"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "SWAP2"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "ADD"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP1"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "AND"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP3"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "MSTORE"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "SWAP1"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP2"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "ADD"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "SLOAD"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP3"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP5"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "ADD"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "MSTORE"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "SWAP1"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "DUP4"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "MSTORE"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "SWAP1"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "SWAP3"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "ADD"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "SWAP2"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "ADD"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "JUMP"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "JUMPDEST"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "POP"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "POP"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "POP"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "POP"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "SWAP1"
										},
										{
											"begin": 5296,
											"end": 5336,
											"name": "POP"
										},
										{
											"begin": 5153,
											"end": 5343,
											"name": "SWAP2"
										},
										{
											"begin": 5153,
											"end": 5343,
											"name": "SWAP1"
										},
										{
											"begin": 5153,
											"end": 5343,
											"name": "POP"
										},
										{
											"begin": 5153,
											"end": 5343,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "JUMPDEST"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "DUP2"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "MSTORE"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "SWAP4"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "DUP5"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "MSTORE"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "DUP1"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "DUP6"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "KECCAK256"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "DUP3"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "MSTORE"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "SWAP3"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "DUP5"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "MSTORE"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "DUP3"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "DUP5"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "KECCAK256"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "MSTORE"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "DUP3"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "MSTORE"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "KECCAK256"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "DUP1"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "SLOAD"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "SWAP2"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "ADD"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "SWAP2"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "AND"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "SWAP1"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "DUP3"
										},
										{
											"begin": 3948,
											"end": 4105,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "JUMPDEST"
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "SWAP1"
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "DIV"
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "AND"
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "DUP2"
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1460,
											"end": 1695,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 1460,
											"end": 1695,
											"name": "JUMPDEST"
										},
										{
											"begin": 1074,
											"end": 1083,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 1074,
											"end": 1081,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1074,
											"end": 1083,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1074,
											"end": 1083,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 1074,
											"end": 1083,
											"name": "JUMPDEST"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "JUMPI"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "DUP2"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "MSTORE"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "ADD"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "SWAP1"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "JUMP"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1540,
											"end": 1562,
											"name": "DUP2"
										},
										{
											"begin": 1540,
											"end": 1562,
											"name": "AND"
										},
										{
											"begin": 1532,
											"end": 1605,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 1532,
											"end": 1605,
											"name": "JUMPI"
										},
										{
											"begin": 1532,
											"end": 1605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 1605,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1532,
											"end": 1605,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1605,
											"name": "MSTORE"
										},
										{
											"begin": 1532,
											"end": 1605,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 1605,
											"name": "ADD"
										},
										{
											"begin": 1532,
											"end": 1605,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 1532,
											"end": 1605,
											"name": "SWAP1"
										},
										{
											"begin": 1532,
											"end": 1605,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 1532,
											"end": 1605,
											"name": "JUMP"
										},
										{
											"begin": 1532,
											"end": 1605,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 1532,
											"end": 1605,
											"name": "JUMPDEST"
										},
										{
											"begin": 1671,
											"end": 1677,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "DUP1"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "SWAP3"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "SWAP1"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "SWAP3"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "AND"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "SWAP2"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "SWAP1"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "SWAP2"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "OR"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "SWAP1"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "SSTORE"
										},
										{
											"begin": 1460,
											"end": 1695,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6348,
											"end": 6465,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 6348,
											"end": 6465,
											"name": "JUMPDEST"
										},
										{
											"begin": 1074,
											"end": 1083,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 1074,
											"end": 1081,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1074,
											"end": 1083,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1074,
											"end": 1083,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 1074,
											"end": 1083,
											"name": "JUMPDEST"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "JUMPI"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "DUP2"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "MSTORE"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "ADD"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "SWAP1"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "JUMP"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 1066,
											"end": 1120,
											"name": "JUMPDEST"
										},
										{
											"begin": 6427,
											"end": 6444,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6427,
											"end": 6458,
											"name": "SSTORE"
										},
										{
											"begin": 6348,
											"end": 6465,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4984,
											"end": 5147,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 4984,
											"end": 5147,
											"name": "JUMPDEST"
										},
										{
											"begin": 5121,
											"end": 5134,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP1"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "SLOAD"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP1"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "MLOAD"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP1"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP5"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "MUL"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP3"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "ADD"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP2"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "ADD"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "SWAP1"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "SWAP3"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "MSTORE"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP3"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP2"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "MSTORE"
										},
										{
											"begin": 5064,
											"end": 5098,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5064,
											"end": 5098,
											"name": "SWAP4"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "SWAP1"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "SWAP3"
										},
										{
											"begin": 5121,
											"end": 5134,
											"name": "SWAP1"
										},
										{
											"begin": 5121,
											"end": 5134,
											"name": "SWAP2"
										},
										{
											"begin": 5121,
											"end": 5140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5121,
											"end": 5140,
											"name": "SWAP1"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP5"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "ADD"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP3"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "ISZERO"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "JUMPI"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP5"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP2"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "MSTORE"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "SWAP1"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP2"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "SWAP1"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "KECCAK256"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP1"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "MLOAD"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP1"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP3"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "ADD"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "SWAP1"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "SWAP2"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "MSTORE"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP6"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "MUL"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "SWAP1"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "SWAP2"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "ADD"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP1"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "AND"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP3"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "MSTORE"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "SWAP1"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP2"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "ADD"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "SLOAD"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP3"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP5"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "ADD"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "MSTORE"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "SWAP1"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "DUP4"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "MSTORE"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "SWAP1"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "SWAP3"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "ADD"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "SWAP2"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "ADD"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "JUMP"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMPDEST"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "MLOAD"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "ADD"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "MSTORE"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "DUP2"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "MSTORE"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "POP"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "SWAP1"
										},
										{
											"begin": 2498,
											"end": 6649,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "JUMPDEST"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "DUP2"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST"
										},
										{
											"begin": 57,
											"end": 135,
											"name": "SWAP3"
										},
										{
											"begin": 57,
											"end": 135,
											"name": "SWAP2"
										},
										{
											"begin": 57,
											"end": 135,
											"name": "POP"
										},
										{
											"begin": 57,
											"end": 135,
											"name": "POP"
										},
										{
											"begin": 57,
											"end": 135,
											"name": "JUMP"
										},
										{
											"begin": 142,
											"end": 270,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 142,
											"end": 270,
											"name": "JUMPDEST"
										},
										{
											"begin": 208,
											"end": 228,
											"name": "DUP1"
										},
										{
											"begin": 208,
											"end": 228,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 233,
											"end": 265,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 208,
											"end": 228,
											"name": "DUP2"
										},
										{
											"begin": 233,
											"end": 265,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 233,
											"end": 265,
											"name": "JUMP"
										},
										{
											"begin": 277,
											"end": 407,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 277,
											"end": 407,
											"name": "JUMPDEST"
										},
										{
											"begin": 344,
											"end": 364,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 364,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 369,
											"end": 402,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 344,
											"end": 364,
											"name": "DUP2"
										},
										{
											"begin": 369,
											"end": 402,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 369,
											"end": 402,
											"name": "JUMP"
										},
										{
											"begin": 414,
											"end": 655,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 414,
											"end": 655,
											"name": "JUMPDEST"
										},
										{
											"begin": 414,
											"end": 655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 518,
											"end": 520,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 506,
											"end": 515,
											"name": "DUP3"
										},
										{
											"begin": 497,
											"end": 504,
											"name": "DUP5"
										},
										{
											"begin": 493,
											"end": 516,
											"name": "SUB"
										},
										{
											"begin": 489,
											"end": 521,
											"name": "SLT"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "ISZERO"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "JUMPI"
										},
										{
											"begin": 534,
											"end": 535,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 531,
											"end": 532,
											"name": "DUP1"
										},
										{
											"begin": 524,
											"end": 536,
											"name": "REVERT"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "JUMPDEST"
										},
										{
											"begin": 569,
											"end": 570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 586,
											"end": 639,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 631,
											"end": 638,
											"name": "DUP5"
										},
										{
											"begin": 611,
											"end": 620,
											"name": "DUP5"
										},
										{
											"begin": 586,
											"end": 639,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 586,
											"end": 639,
											"name": "JUMP"
										},
										{
											"begin": 586,
											"end": 639,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 586,
											"end": 639,
											"name": "JUMPDEST"
										},
										{
											"begin": 576,
											"end": 639,
											"name": "SWAP5"
										},
										{
											"begin": 480,
											"end": 655,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 480,
											"end": 655,
											"name": "JUMP"
										},
										{
											"begin": 662,
											"end": 1028,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 662,
											"end": 1028,
											"name": "JUMPDEST"
										},
										{
											"begin": 662,
											"end": 1028,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 662,
											"end": 1028,
											"name": "DUP1"
										},
										{
											"begin": 783,
											"end": 785,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 771,
											"end": 780,
											"name": "DUP4"
										},
										{
											"begin": 762,
											"end": 769,
											"name": "DUP6"
										},
										{
											"begin": 758,
											"end": 781,
											"name": "SUB"
										},
										{
											"begin": 754,
											"end": 786,
											"name": "SLT"
										},
										{
											"begin": 751,
											"end": 753,
											"name": "ISZERO"
										},
										{
											"begin": 751,
											"end": 753,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 751,
											"end": 753,
											"name": "JUMPI"
										},
										{
											"begin": 799,
											"end": 800,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 796,
											"end": 797,
											"name": "DUP1"
										},
										{
											"begin": 789,
											"end": 801,
											"name": "REVERT"
										},
										{
											"begin": 751,
											"end": 753,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 751,
											"end": 753,
											"name": "JUMPDEST"
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 851,
											"end": 904,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 896,
											"end": 903,
											"name": "DUP6"
										},
										{
											"begin": 876,
											"end": 885,
											"name": "DUP6"
										},
										{
											"begin": 851,
											"end": 904,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 851,
											"end": 904,
											"name": "JUMP"
										},
										{
											"begin": 851,
											"end": 904,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 851,
											"end": 904,
											"name": "JUMPDEST"
										},
										{
											"begin": 841,
											"end": 904,
											"name": "SWAP3"
										},
										{
											"begin": 841,
											"end": 904,
											"name": "POP"
										},
										{
											"begin": 813,
											"end": 910,
											"name": "POP"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 959,
											"end": 1012,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 1004,
											"end": 1011,
											"name": "DUP6"
										},
										{
											"begin": 995,
											"end": 1001,
											"name": "DUP3"
										},
										{
											"begin": 984,
											"end": 993,
											"name": "DUP7"
										},
										{
											"begin": 980,
											"end": 1002,
											"name": "ADD"
										},
										{
											"begin": 959,
											"end": 1012,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 959,
											"end": 1012,
											"name": "JUMP"
										},
										{
											"begin": 959,
											"end": 1012,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 959,
											"end": 1012,
											"name": "JUMPDEST"
										},
										{
											"begin": 949,
											"end": 1012,
											"name": "SWAP2"
										},
										{
											"begin": 949,
											"end": 1012,
											"name": "POP"
										},
										{
											"begin": 920,
											"end": 1018,
											"name": "POP"
										},
										{
											"begin": 745,
											"end": 1028,
											"name": "SWAP3"
										},
										{
											"begin": 745,
											"end": 1028,
											"name": "POP"
										},
										{
											"begin": 745,
											"end": 1028,
											"name": "SWAP3"
										},
										{
											"begin": 745,
											"end": 1028,
											"name": "SWAP1"
										},
										{
											"begin": 745,
											"end": 1028,
											"name": "POP"
										},
										{
											"begin": 745,
											"end": 1028,
											"name": "JUMP"
										},
										{
											"begin": 1035,
											"end": 1772,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 1035,
											"end": 1772,
											"name": "JUMPDEST"
										},
										{
											"begin": 1035,
											"end": 1772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1772,
											"name": "DUP1"
										},
										{
											"begin": 1035,
											"end": 1772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1772,
											"name": "DUP1"
										},
										{
											"begin": 1035,
											"end": 1772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1207,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 1192,
											"end": 1201,
											"name": "DUP7"
										},
										{
											"begin": 1183,
											"end": 1190,
											"name": "DUP9"
										},
										{
											"begin": 1179,
											"end": 1202,
											"name": "SUB"
										},
										{
											"begin": 1175,
											"end": 1208,
											"name": "SLT"
										},
										{
											"begin": 1172,
											"end": 1174,
											"name": "ISZERO"
										},
										{
											"begin": 1172,
											"end": 1174,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 1172,
											"end": 1174,
											"name": "JUMPI"
										},
										{
											"begin": 1221,
											"end": 1222,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "DUP1"
										},
										{
											"begin": 1211,
											"end": 1223,
											"name": "REVERT"
										},
										{
											"begin": 1172,
											"end": 1174,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 1172,
											"end": 1174,
											"name": "JUMPDEST"
										},
										{
											"begin": 1256,
											"end": 1257,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1326,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 1318,
											"end": 1325,
											"name": "DUP9"
										},
										{
											"begin": 1298,
											"end": 1307,
											"name": "DUP9"
										},
										{
											"begin": 1273,
											"end": 1326,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 1273,
											"end": 1326,
											"name": "JUMP"
										},
										{
											"begin": 1273,
											"end": 1326,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 1273,
											"end": 1326,
											"name": "JUMPDEST"
										},
										{
											"begin": 1263,
											"end": 1326,
											"name": "SWAP6"
										},
										{
											"begin": 1263,
											"end": 1326,
											"name": "POP"
										},
										{
											"begin": 1235,
											"end": 1332,
											"name": "POP"
										},
										{
											"begin": 1363,
											"end": 1365,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1434,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 1426,
											"end": 1433,
											"name": "DUP9"
										},
										{
											"begin": 1417,
											"end": 1423,
											"name": "DUP3"
										},
										{
											"begin": 1406,
											"end": 1415,
											"name": "DUP10"
										},
										{
											"begin": 1402,
											"end": 1424,
											"name": "ADD"
										},
										{
											"begin": 1381,
											"end": 1434,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 1381,
											"end": 1434,
											"name": "JUMP"
										},
										{
											"begin": 1381,
											"end": 1434,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 1381,
											"end": 1434,
											"name": "JUMPDEST"
										},
										{
											"begin": 1371,
											"end": 1434,
											"name": "SWAP5"
										},
										{
											"begin": 1371,
											"end": 1434,
											"name": "POP"
										},
										{
											"begin": 1342,
											"end": 1440,
											"name": "POP"
										},
										{
											"begin": 1471,
											"end": 1473,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1489,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "DUP9"
										},
										{
											"begin": 1524,
											"end": 1530,
											"name": "DUP3"
										},
										{
											"begin": 1513,
											"end": 1522,
											"name": "DUP10"
										},
										{
											"begin": 1509,
											"end": 1531,
											"name": "ADD"
										},
										{
											"begin": 1489,
											"end": 1541,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 1489,
											"end": 1541,
											"name": "JUMP"
										},
										{
											"begin": 1489,
											"end": 1541,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 1489,
											"end": 1541,
											"name": "JUMPDEST"
										},
										{
											"begin": 1479,
											"end": 1541,
											"name": "SWAP4"
										},
										{
											"begin": 1479,
											"end": 1541,
											"name": "POP"
										},
										{
											"begin": 1450,
											"end": 1547,
											"name": "POP"
										},
										{
											"begin": 1578,
											"end": 1580,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1596,
											"end": 1648,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 1640,
											"end": 1647,
											"name": "DUP9"
										},
										{
											"begin": 1631,
											"end": 1637,
											"name": "DUP3"
										},
										{
											"begin": 1620,
											"end": 1629,
											"name": "DUP10"
										},
										{
											"begin": 1616,
											"end": 1638,
											"name": "ADD"
										},
										{
											"begin": 1596,
											"end": 1648,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 1596,
											"end": 1648,
											"name": "JUMP"
										},
										{
											"begin": 1596,
											"end": 1648,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 1596,
											"end": 1648,
											"name": "JUMPDEST"
										},
										{
											"begin": 1586,
											"end": 1648,
											"name": "SWAP3"
										},
										{
											"begin": 1586,
											"end": 1648,
											"name": "POP"
										},
										{
											"begin": 1557,
											"end": 1654,
											"name": "POP"
										},
										{
											"begin": 1685,
											"end": 1688,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1704,
											"end": 1756,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 1748,
											"end": 1755,
											"name": "DUP9"
										},
										{
											"begin": 1739,
											"end": 1745,
											"name": "DUP3"
										},
										{
											"begin": 1728,
											"end": 1737,
											"name": "DUP10"
										},
										{
											"begin": 1724,
											"end": 1746,
											"name": "ADD"
										},
										{
											"begin": 1704,
											"end": 1756,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 1704,
											"end": 1756,
											"name": "JUMP"
										},
										{
											"begin": 1704,
											"end": 1756,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 1704,
											"end": 1756,
											"name": "JUMPDEST"
										},
										{
											"begin": 1694,
											"end": 1756,
											"name": "SWAP2"
										},
										{
											"begin": 1694,
											"end": 1756,
											"name": "POP"
										},
										{
											"begin": 1664,
											"end": 1762,
											"name": "POP"
										},
										{
											"begin": 1166,
											"end": 1772,
											"name": "SWAP3"
										},
										{
											"begin": 1166,
											"end": 1772,
											"name": "SWAP6"
										},
										{
											"begin": 1166,
											"end": 1772,
											"name": "POP"
										},
										{
											"begin": 1166,
											"end": 1772,
											"name": "SWAP3"
										},
										{
											"begin": 1166,
											"end": 1772,
											"name": "SWAP6"
										},
										{
											"begin": 1166,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1166,
											"end": 1772,
											"name": "SWAP4"
										},
										{
											"begin": 1166,
											"end": 1772,
											"name": "POP"
										},
										{
											"begin": 1166,
											"end": 1772,
											"name": "JUMP"
										},
										{
											"begin": 1779,
											"end": 2145,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 2145,
											"name": "JUMPDEST"
										},
										{
											"begin": 1779,
											"end": 2145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 2145,
											"name": "DUP1"
										},
										{
											"begin": 1900,
											"end": 1902,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1888,
											"end": 1897,
											"name": "DUP4"
										},
										{
											"begin": 1879,
											"end": 1886,
											"name": "DUP6"
										},
										{
											"begin": 1875,
											"end": 1898,
											"name": "SUB"
										},
										{
											"begin": 1871,
											"end": 1903,
											"name": "SLT"
										},
										{
											"begin": 1868,
											"end": 1870,
											"name": "ISZERO"
										},
										{
											"begin": 1868,
											"end": 1870,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 1868,
											"end": 1870,
											"name": "JUMPI"
										},
										{
											"begin": 1916,
											"end": 1917,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1914,
											"name": "DUP1"
										},
										{
											"begin": 1906,
											"end": 1918,
											"name": "REVERT"
										},
										{
											"begin": 1868,
											"end": 1870,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 1868,
											"end": 1870,
											"name": "JUMPDEST"
										},
										{
											"begin": 1951,
											"end": 1952,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1968,
											"end": 2021,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 2013,
											"end": 2020,
											"name": "DUP6"
										},
										{
											"begin": 1993,
											"end": 2002,
											"name": "DUP6"
										},
										{
											"begin": 1968,
											"end": 2021,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 1968,
											"end": 2021,
											"name": "JUMP"
										},
										{
											"begin": 1968,
											"end": 2021,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 1968,
											"end": 2021,
											"name": "JUMPDEST"
										},
										{
											"begin": 1958,
											"end": 2021,
											"name": "SWAP3"
										},
										{
											"begin": 1958,
											"end": 2021,
											"name": "POP"
										},
										{
											"begin": 1930,
											"end": 2027,
											"name": "POP"
										},
										{
											"begin": 2058,
											"end": 2060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2076,
											"end": 2129,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 2121,
											"end": 2128,
											"name": "DUP6"
										},
										{
											"begin": 2112,
											"end": 2118,
											"name": "DUP3"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "DUP7"
										},
										{
											"begin": 2097,
											"end": 2119,
											"name": "ADD"
										},
										{
											"begin": 2076,
											"end": 2129,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 2076,
											"end": 2129,
											"name": "JUMP"
										},
										{
											"begin": 2152,
											"end": 2643,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 2152,
											"end": 2643,
											"name": "JUMPDEST"
										},
										{
											"begin": 2152,
											"end": 2643,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2643,
											"name": "DUP1"
										},
										{
											"begin": 2152,
											"end": 2643,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2292,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP5"
										},
										{
											"begin": 2269,
											"end": 2276,
											"name": "DUP7"
										},
										{
											"begin": 2265,
											"end": 2288,
											"name": "SUB"
										},
										{
											"begin": 2261,
											"end": 2293,
											"name": "SLT"
										},
										{
											"begin": 2258,
											"end": 2260,
											"name": "ISZERO"
										},
										{
											"begin": 2258,
											"end": 2260,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 2258,
											"end": 2260,
											"name": "JUMPI"
										},
										{
											"begin": 2306,
											"end": 2307,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2304,
											"name": "DUP1"
										},
										{
											"begin": 2296,
											"end": 2308,
											"name": "REVERT"
										},
										{
											"begin": 2258,
											"end": 2260,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 2258,
											"end": 2260,
											"name": "JUMPDEST"
										},
										{
											"begin": 2341,
											"end": 2342,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2358,
											"end": 2411,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 2403,
											"end": 2410,
											"name": "DUP7"
										},
										{
											"begin": 2383,
											"end": 2392,
											"name": "DUP7"
										},
										{
											"begin": 2358,
											"end": 2411,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 2358,
											"end": 2411,
											"name": "JUMP"
										},
										{
											"begin": 2358,
											"end": 2411,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 2358,
											"end": 2411,
											"name": "JUMPDEST"
										},
										{
											"begin": 2348,
											"end": 2411,
											"name": "SWAP4"
										},
										{
											"begin": 2348,
											"end": 2411,
											"name": "POP"
										},
										{
											"begin": 2320,
											"end": 2417,
											"name": "POP"
										},
										{
											"begin": 2448,
											"end": 2450,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2466,
											"end": 2519,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 2511,
											"end": 2518,
											"name": "DUP7"
										},
										{
											"begin": 2502,
											"end": 2508,
											"name": "DUP3"
										},
										{
											"begin": 2491,
											"end": 2500,
											"name": "DUP8"
										},
										{
											"begin": 2487,
											"end": 2509,
											"name": "ADD"
										},
										{
											"begin": 2466,
											"end": 2519,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 2466,
											"end": 2519,
											"name": "JUMP"
										},
										{
											"begin": 2466,
											"end": 2519,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 2466,
											"end": 2519,
											"name": "JUMPDEST"
										},
										{
											"begin": 2456,
											"end": 2519,
											"name": "SWAP3"
										},
										{
											"begin": 2456,
											"end": 2519,
											"name": "POP"
										},
										{
											"begin": 2427,
											"end": 2525,
											"name": "POP"
										},
										{
											"begin": 2556,
											"end": 2558,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2574,
											"end": 2627,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 2619,
											"end": 2626,
											"name": "DUP7"
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "DUP3"
										},
										{
											"begin": 2599,
											"end": 2608,
											"name": "DUP8"
										},
										{
											"begin": 2595,
											"end": 2617,
											"name": "ADD"
										},
										{
											"begin": 2574,
											"end": 2627,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 2574,
											"end": 2627,
											"name": "JUMP"
										},
										{
											"begin": 2574,
											"end": 2627,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 2574,
											"end": 2627,
											"name": "JUMPDEST"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "SWAP2"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "POP"
										},
										{
											"begin": 2535,
											"end": 2633,
											"name": "POP"
										},
										{
											"begin": 2252,
											"end": 2643,
											"name": "SWAP3"
										},
										{
											"begin": 2252,
											"end": 2643,
											"name": "POP"
										},
										{
											"begin": 2252,
											"end": 2643,
											"name": "SWAP3"
										},
										{
											"begin": 2252,
											"end": 2643,
											"name": "POP"
										},
										{
											"begin": 2252,
											"end": 2643,
											"name": "SWAP3"
										},
										{
											"begin": 2252,
											"end": 2643,
											"name": "JUMP"
										},
										{
											"begin": 2650,
											"end": 2891,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 2650,
											"end": 2891,
											"name": "JUMPDEST"
										},
										{
											"begin": 2650,
											"end": 2891,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2756,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2742,
											"end": 2751,
											"name": "DUP3"
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "DUP5"
										},
										{
											"begin": 2729,
											"end": 2752,
											"name": "SUB"
										},
										{
											"begin": 2725,
											"end": 2757,
											"name": "SLT"
										},
										{
											"begin": 2722,
											"end": 2724,
											"name": "ISZERO"
										},
										{
											"begin": 2722,
											"end": 2724,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 2722,
											"end": 2724,
											"name": "JUMPI"
										},
										{
											"begin": 2770,
											"end": 2771,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2768,
											"name": "DUP1"
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "REVERT"
										},
										{
											"begin": 2722,
											"end": 2724,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 2722,
											"end": 2724,
											"name": "JUMPDEST"
										},
										{
											"begin": 2805,
											"end": 2806,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2875,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 2867,
											"end": 2874,
											"name": "DUP5"
										},
										{
											"begin": 2847,
											"end": 2856,
											"name": "DUP5"
										},
										{
											"begin": 2822,
											"end": 2875,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 2822,
											"end": 2875,
											"name": "JUMP"
										},
										{
											"begin": 2899,
											"end": 3072,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 2899,
											"end": 3072,
											"name": "JUMPDEST"
										},
										{
											"begin": 2899,
											"end": 3072,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 3032,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 3028,
											"end": 3031,
											"name": "DUP4"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP4"
										},
										{
											"begin": 2986,
											"end": 3032,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 2986,
											"end": 3032,
											"name": "JUMP"
										},
										{
											"begin": 2986,
											"end": 3032,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 2986,
											"end": 3032,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3061,
											"end": 3065,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3052,
											"end": 3066,
											"name": "ADD"
										},
										{
											"begin": 3052,
											"end": 3066,
											"name": "SWAP1"
										},
										{
											"begin": 2979,
											"end": 3072,
											"name": "JUMP"
										},
										{
											"begin": 3081,
											"end": 3342,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 3081,
											"end": 3342,
											"name": "JUMPDEST"
										},
										{
											"begin": 3081,
											"end": 3342,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3302,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 3298,
											"end": 3301,
											"name": "DUP4"
										},
										{
											"begin": 3290,
											"end": 3296,
											"name": "DUP4"
										},
										{
											"begin": 3210,
											"end": 3302,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 3210,
											"end": 3302,
											"name": "JUMP"
										},
										{
											"begin": 3210,
											"end": 3302,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 3210,
											"end": 3302,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3331,
											"end": 3335,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3322,
											"end": 3336,
											"name": "ADD"
										},
										{
											"begin": 3322,
											"end": 3336,
											"name": "SWAP1"
										},
										{
											"begin": 3203,
											"end": 3342,
											"name": "JUMP"
										},
										{
											"begin": 3350,
											"end": 3487,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 3350,
											"end": 3487,
											"name": "JUMPDEST"
										},
										{
											"begin": 3449,
											"end": 3481,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 3475,
											"end": 3480,
											"name": "DUP2"
										},
										{
											"begin": 3449,
											"end": 3481,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 3449,
											"end": 3481,
											"name": "JUMP"
										},
										{
											"begin": 3449,
											"end": 3481,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 3449,
											"end": 3481,
											"name": "JUMPDEST"
										},
										{
											"begin": 3444,
											"end": 3447,
											"name": "DUP3"
										},
										{
											"begin": 3437,
											"end": 3482,
											"name": "MSTORE"
										},
										{
											"begin": 3431,
											"end": 3487,
											"name": "POP"
										},
										{
											"begin": 3431,
											"end": 3487,
											"name": "POP"
										},
										{
											"begin": 3431,
											"end": 3487,
											"name": "JUMP"
										},
										{
											"begin": 3755,
											"end": 4409,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 3755,
											"end": 4409,
											"name": "JUMPDEST"
										},
										{
											"begin": 3755,
											"end": 4409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3886,
											"end": 3936,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 3930,
											"end": 3935,
											"name": "DUP3"
										},
										{
											"begin": 3886,
											"end": 3936,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 3886,
											"end": 3936,
											"name": "JUMP"
										},
										{
											"begin": 3886,
											"end": 3936,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 3886,
											"end": 3936,
											"name": "JUMPDEST"
										},
										{
											"begin": 3949,
											"end": 4025,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 4018,
											"end": 4024,
											"name": "DUP2"
										},
										{
											"begin": 4013,
											"end": 4016,
											"name": "DUP6"
										},
										{
											"begin": 3949,
											"end": 4025,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 3949,
											"end": 4025,
											"name": "JUMP"
										},
										{
											"begin": 3949,
											"end": 4025,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 3949,
											"end": 4025,
											"name": "JUMPDEST"
										},
										{
											"begin": 3942,
											"end": 4025,
											"name": "SWAP4"
										},
										{
											"begin": 3942,
											"end": 4025,
											"name": "POP"
										},
										{
											"begin": 4046,
											"end": 4098,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 4092,
											"end": 4097,
											"name": "DUP4"
										},
										{
											"begin": 4046,
											"end": 4098,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 4046,
											"end": 4098,
											"name": "JUMP"
										},
										{
											"begin": 4046,
											"end": 4098,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 4046,
											"end": 4098,
											"name": "JUMPDEST"
										},
										{
											"begin": 4118,
											"end": 4125,
											"name": "DUP1"
										},
										{
											"begin": 4146,
											"end": 4147,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4387,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 4131,
											"end": 4387,
											"name": "JUMPDEST"
										},
										{
											"begin": 4156,
											"end": 4162,
											"name": "DUP4"
										},
										{
											"begin": 4153,
											"end": 4154,
											"name": "DUP2"
										},
										{
											"begin": 4150,
											"end": 4163,
											"name": "LT"
										},
										{
											"begin": 4131,
											"end": 4387,
											"name": "ISZERO"
										},
										{
											"begin": 4131,
											"end": 4387,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 4131,
											"end": 4387,
											"name": "JUMPI"
										},
										{
											"begin": 4223,
											"end": 4229,
											"name": "DUP2"
										},
										{
											"begin": 4217,
											"end": 4230,
											"name": "MLOAD"
										},
										{
											"begin": 4244,
											"end": 4307,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 4303,
											"end": 4306,
											"name": "DUP9"
										},
										{
											"begin": 4288,
											"end": 4301,
											"name": "DUP3"
										},
										{
											"begin": 4244,
											"end": 4307,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 4244,
											"end": 4307,
											"name": "JUMP"
										},
										{
											"begin": 4244,
											"end": 4307,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 4244,
											"end": 4307,
											"name": "JUMPDEST"
										},
										{
											"begin": 4237,
											"end": 4307,
											"name": "SWAP8"
										},
										{
											"begin": 4237,
											"end": 4307,
											"name": "POP"
										},
										{
											"begin": 4324,
											"end": 4380,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 4373,
											"end": 4379,
											"name": "DUP4"
										},
										{
											"begin": 4324,
											"end": 4380,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 4324,
											"end": 4380,
											"name": "JUMP"
										},
										{
											"begin": 4324,
											"end": 4380,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 4324,
											"end": 4380,
											"name": "JUMPDEST"
										},
										{
											"begin": 4314,
											"end": 4380,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4178,
											"end": 4179,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4171,
											"end": 4180,
											"name": "ADD"
										},
										{
											"begin": 4131,
											"end": 4387,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 4131,
											"end": 4387,
											"name": "JUMP"
										},
										{
											"begin": 4131,
											"end": 4387,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 4131,
											"end": 4387,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4400,
											"end": 4403,
											"name": "SWAP5"
										},
										{
											"begin": 4400,
											"end": 4403,
											"name": "SWAP6"
										},
										{
											"begin": 3865,
											"end": 4409,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3865,
											"end": 4409,
											"name": "JUMP"
										},
										{
											"begin": 4498,
											"end": 5356,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 4498,
											"end": 5356,
											"name": "JUMPDEST"
										},
										{
											"begin": 4498,
											"end": 5356,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4685,
											"end": 4760,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 4754,
											"end": 4759,
											"name": "DUP3"
										},
										{
											"begin": 4685,
											"end": 4760,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 4685,
											"end": 4760,
											"name": "JUMP"
										},
										{
											"begin": 4685,
											"end": 4760,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 4685,
											"end": 4760,
											"name": "JUMPDEST"
										},
										{
											"begin": 4773,
											"end": 4880,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 4873,
											"end": 4879,
											"name": "DUP2"
										},
										{
											"begin": 4868,
											"end": 4871,
											"name": "DUP6"
										},
										{
											"begin": 4773,
											"end": 4880,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 4773,
											"end": 4880,
											"name": "JUMP"
										},
										{
											"begin": 4773,
											"end": 4880,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 4773,
											"end": 4880,
											"name": "JUMPDEST"
										},
										{
											"begin": 4766,
											"end": 4880,
											"name": "SWAP4"
										},
										{
											"begin": 4766,
											"end": 4880,
											"name": "POP"
										},
										{
											"begin": 4901,
											"end": 4978,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 4972,
											"end": 4977,
											"name": "DUP4"
										},
										{
											"begin": 4901,
											"end": 4978,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 4901,
											"end": 4978,
											"name": "JUMP"
										},
										{
											"begin": 4901,
											"end": 4978,
											"name": "tag",
											"value": "224"
										},
										{
											"begin": 4901,
											"end": 4978,
											"name": "JUMPDEST"
										},
										{
											"begin": 4998,
											"end": 5005,
											"name": "DUP1"
										},
										{
											"begin": 5026,
											"end": 5027,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5334,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 5011,
											"end": 5334,
											"name": "JUMPDEST"
										},
										{
											"begin": 5036,
											"end": 5042,
											"name": "DUP4"
										},
										{
											"begin": 5033,
											"end": 5034,
											"name": "DUP2"
										},
										{
											"begin": 5030,
											"end": 5043,
											"name": "LT"
										},
										{
											"begin": 5011,
											"end": 5334,
											"name": "ISZERO"
										},
										{
											"begin": 5011,
											"end": 5334,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 5011,
											"end": 5334,
											"name": "JUMPI"
										},
										{
											"begin": 5103,
											"end": 5109,
											"name": "DUP2"
										},
										{
											"begin": 5097,
											"end": 5110,
											"name": "MLOAD"
										},
										{
											"begin": 5124,
											"end": 5229,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 5225,
											"end": 5228,
											"name": "DUP9"
										},
										{
											"begin": 5210,
											"end": 5223,
											"name": "DUP3"
										},
										{
											"begin": 5124,
											"end": 5229,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 5124,
											"end": 5229,
											"name": "JUMP"
										},
										{
											"begin": 5124,
											"end": 5229,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 5124,
											"end": 5229,
											"name": "JUMPDEST"
										},
										{
											"begin": 5117,
											"end": 5229,
											"name": "SWAP8"
										},
										{
											"begin": 5117,
											"end": 5229,
											"name": "POP"
										},
										{
											"begin": 5246,
											"end": 5327,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 5320,
											"end": 5326,
											"name": "DUP4"
										},
										{
											"begin": 5246,
											"end": 5327,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 5246,
											"end": 5327,
											"name": "JUMP"
										},
										{
											"begin": 5246,
											"end": 5327,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 5246,
											"end": 5327,
											"name": "JUMPDEST"
										},
										{
											"begin": 5236,
											"end": 5327,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5058,
											"end": 5059,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5051,
											"end": 5060,
											"name": "ADD"
										},
										{
											"begin": 5011,
											"end": 5334,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 5011,
											"end": 5334,
											"name": "JUMP"
										},
										{
											"begin": 5364,
											"end": 5468,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 5364,
											"end": 5468,
											"name": "JUMPDEST"
										},
										{
											"begin": 5441,
											"end": 5462,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 5456,
											"end": 5461,
											"name": "DUP2"
										},
										{
											"begin": 5441,
											"end": 5462,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 5441,
											"end": 5462,
											"name": "JUMP"
										},
										{
											"begin": 5476,
											"end": 5851,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 5476,
											"end": 5851,
											"name": "JUMPDEST"
										},
										{
											"begin": 5476,
											"end": 5851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5636,
											"end": 5703,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 5700,
											"end": 5702,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5695,
											"end": 5698,
											"name": "DUP4"
										},
										{
											"begin": 5636,
											"end": 5703,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 5636,
											"end": 5703,
											"name": "JUMP"
										},
										{
											"begin": 5636,
											"end": 5703,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 5636,
											"end": 5703,
											"name": "JUMPDEST"
										},
										{
											"begin": 5736,
											"end": 5770,
											"name": "PUSH",
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5716,
											"end": 5771,
											"name": "DUP2"
										},
										{
											"begin": 5716,
											"end": 5771,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5800,
											"end": 5802,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5791,
											"end": 5803,
											"name": "DUP3"
										},
										{
											"begin": 5791,
											"end": 5803,
											"name": "ADD"
										},
										{
											"begin": 5784,
											"end": 5814,
											"name": "MSTORE"
										},
										{
											"begin": 5842,
											"end": 5844,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5833,
											"end": 5845,
											"name": "ADD"
										},
										{
											"begin": 5833,
											"end": 5845,
											"name": "SWAP3"
										},
										{
											"begin": 5622,
											"end": 5851,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5622,
											"end": 5851,
											"name": "JUMP"
										},
										{
											"begin": 5860,
											"end": 6175,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 5860,
											"end": 6175,
											"name": "JUMPDEST"
										},
										{
											"begin": 5860,
											"end": 6175,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6020,
											"end": 6087,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 6079,
											"end": 6082,
											"name": "DUP4"
										},
										{
											"begin": 6020,
											"end": 6087,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 6020,
											"end": 6087,
											"name": "JUMP"
										},
										{
											"begin": 6020,
											"end": 6087,
											"name": "tag",
											"value": "239"
										},
										{
											"begin": 6020,
											"end": 6087,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "41646472657373206973205A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6100,
											"end": 6138,
											"name": "DUP2"
										},
										{
											"begin": 6100,
											"end": 6138,
											"name": "MSTORE"
										},
										{
											"begin": 6166,
											"end": 6168,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6157,
											"end": 6169,
											"name": "ADD"
										},
										{
											"begin": 6157,
											"end": 6169,
											"name": "SWAP3"
										},
										{
											"begin": 6006,
											"end": 6175,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6006,
											"end": 6175,
											"name": "JUMP"
										},
										{
											"begin": 6184,
											"end": 6511,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 6184,
											"end": 6511,
											"name": "JUMPDEST"
										},
										{
											"begin": 6184,
											"end": 6511,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6344,
											"end": 6411,
											"name": "PUSH [tag]",
											"value": "241"
										},
										{
											"begin": 6408,
											"end": 6410,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 6403,
											"end": 6406,
											"name": "DUP4"
										},
										{
											"begin": 6344,
											"end": 6411,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 6344,
											"end": 6411,
											"name": "JUMP"
										},
										{
											"begin": 6344,
											"end": 6411,
											"name": "tag",
											"value": "241"
										},
										{
											"begin": 6344,
											"end": 6411,
											"name": "JUMPDEST"
										},
										{
											"begin": 6444,
											"end": 6473,
											"name": "PUSH",
											"value": "73686F756C642062652067726561746572207468616E207A65726F0000000000"
										},
										{
											"begin": 6424,
											"end": 6474,
											"name": "DUP2"
										},
										{
											"begin": 6424,
											"end": 6474,
											"name": "MSTORE"
										},
										{
											"begin": 6502,
											"end": 6504,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6493,
											"end": 6505,
											"name": "ADD"
										},
										{
											"begin": 6493,
											"end": 6505,
											"name": "SWAP3"
										},
										{
											"begin": 6330,
											"end": 6511,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6330,
											"end": 6511,
											"name": "JUMP"
										},
										{
											"begin": 6520,
											"end": 6852,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 6520,
											"end": 6852,
											"name": "JUMPDEST"
										},
										{
											"begin": 6520,
											"end": 6852,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6680,
											"end": 6747,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 6744,
											"end": 6746,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6739,
											"end": 6742,
											"name": "DUP4"
										},
										{
											"begin": 6680,
											"end": 6747,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 6680,
											"end": 6747,
											"name": "JUMP"
										},
										{
											"begin": 6680,
											"end": 6747,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 6680,
											"end": 6747,
											"name": "JUMPDEST"
										},
										{
											"begin": 6780,
											"end": 6814,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6760,
											"end": 6815,
											"name": "DUP2"
										},
										{
											"begin": 6760,
											"end": 6815,
											"name": "MSTORE"
										},
										{
											"begin": 6843,
											"end": 6845,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6846,
											"name": "ADD"
										},
										{
											"begin": 6834,
											"end": 6846,
											"name": "SWAP3"
										},
										{
											"begin": 6666,
											"end": 6852,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6666,
											"end": 6852,
											"name": "JUMP"
										},
										{
											"begin": 6935,
											"end": 7406,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 6935,
											"end": 7406,
											"name": "JUMPDEST"
										},
										{
											"begin": 7136,
											"end": 7159,
											"name": "DUP1"
										},
										{
											"begin": 7136,
											"end": 7159,
											"name": "MLOAD"
										},
										{
											"begin": 7064,
											"end": 7068,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7055,
											"end": 7069,
											"name": "DUP4"
										},
										{
											"begin": 7055,
											"end": 7069,
											"name": "ADD"
										},
										{
											"begin": 7055,
											"end": 7069,
											"name": "SWAP1"
										},
										{
											"begin": 7165,
											"end": 7228,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 7059,
											"end": 7062,
											"name": "DUP5"
										},
										{
											"begin": 7136,
											"end": 7159,
											"name": "DUP3"
										},
										{
											"begin": 7165,
											"end": 7228,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 7165,
											"end": 7228,
											"name": "JUMP"
										},
										{
											"begin": 7165,
											"end": 7228,
											"name": "tag",
											"value": "244"
										},
										{
											"begin": 7165,
											"end": 7228,
											"name": "JUMPDEST"
										},
										{
											"begin": 7084,
											"end": 7234,
											"name": "POP"
										},
										{
											"begin": 7310,
											"end": 7314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7303,
											"end": 7308,
											"name": "DUP3"
										},
										{
											"begin": 7299,
											"end": 7315,
											"name": "ADD"
										},
										{
											"begin": 7293,
											"end": 7316,
											"name": "MLOAD"
										},
										{
											"begin": 7322,
											"end": 7385,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 7379,
											"end": 7383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7374,
											"end": 7377,
											"name": "DUP6"
										},
										{
											"begin": 7370,
											"end": 7384,
											"name": "ADD"
										},
										{
											"begin": 7356,
											"end": 7368,
											"name": "DUP3"
										},
										{
											"begin": 7322,
											"end": 7385,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 7322,
											"end": 7385,
											"name": "JUMP"
										},
										{
											"begin": 7322,
											"end": 7385,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 7322,
											"end": 7385,
											"name": "JUMPDEST"
										},
										{
											"begin": 7244,
											"end": 7391,
											"name": "POP"
										},
										{
											"begin": 7037,
											"end": 7406,
											"name": "POP"
										},
										{
											"begin": 7037,
											"end": 7406,
											"name": "POP"
										},
										{
											"begin": 7037,
											"end": 7406,
											"name": "POP"
										},
										{
											"begin": 7037,
											"end": 7406,
											"name": "JUMP"
										},
										{
											"begin": 7496,
											"end": 7948,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 7496,
											"end": 7948,
											"name": "JUMPDEST"
										},
										{
											"begin": 7722,
											"end": 7745,
											"name": "DUP1"
										},
										{
											"begin": 7722,
											"end": 7745,
											"name": "MLOAD"
										},
										{
											"begin": 7655,
											"end": 7659,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7758,
											"end": 7796,
											"name": "DUP1"
										},
										{
											"begin": 7758,
											"end": 7796,
											"name": "DUP5"
										},
										{
											"begin": 7758,
											"end": 7796,
											"name": "MSTORE"
										},
										{
											"begin": 7496,
											"end": 7948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7496,
											"end": 7948,
											"name": "SWAP2"
										},
										{
											"begin": 7646,
											"end": 7660,
											"name": "SWAP1"
										},
										{
											"begin": 7646,
											"end": 7660,
											"name": "DUP5"
										},
										{
											"begin": 7646,
											"end": 7660,
											"name": "ADD"
										},
										{
											"begin": 7646,
											"end": 7660,
											"name": "SWAP1"
										},
										{
											"begin": 7811,
											"end": 7910,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 7646,
											"end": 7660,
											"name": "DUP3"
										},
										{
											"begin": 7722,
											"end": 7745,
											"name": "DUP3"
										},
										{
											"begin": 7811,
											"end": 7910,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 7811,
											"end": 7910,
											"name": "JUMP"
										},
										{
											"begin": 7811,
											"end": 7910,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 7811,
											"end": 7910,
											"name": "JUMPDEST"
										},
										{
											"begin": 7803,
											"end": 7910,
											"name": "SWAP6"
										},
										{
											"begin": 7628,
											"end": 7948,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7628,
											"end": 7948,
											"name": "JUMP"
										},
										{
											"begin": 7955,
											"end": 8065,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 7955,
											"end": 8065,
											"name": "JUMPDEST"
										},
										{
											"begin": 8036,
											"end": 8059,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 8053,
											"end": 8058,
											"name": "DUP2"
										},
										{
											"begin": 8036,
											"end": 8059,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 8036,
											"end": 8059,
											"name": "JUMP"
										},
										{
											"begin": 8072,
											"end": 8175,
											"name": "tag",
											"value": "246"
										},
										{
											"begin": 8072,
											"end": 8175,
											"name": "JUMPDEST"
										},
										{
											"begin": 8145,
											"end": 8169,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 8163,
											"end": 8168,
											"name": "DUP2"
										},
										{
											"begin": 8145,
											"end": 8169,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 8145,
											"end": 8169,
											"name": "JUMP"
										},
										{
											"begin": 8302,
											"end": 8515,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 8302,
											"end": 8515,
											"name": "JUMPDEST"
										},
										{
											"begin": 8420,
											"end": 8422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8405,
											"end": 8423,
											"name": "DUP2"
										},
										{
											"begin": 8405,
											"end": 8423,
											"name": "ADD"
										},
										{
											"begin": 8434,
											"end": 8505,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 8409,
											"end": 8418,
											"name": "DUP3"
										},
										{
											"begin": 8478,
											"end": 8484,
											"name": "DUP5"
										},
										{
											"begin": 8434,
											"end": 8505,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 8434,
											"end": 8505,
											"name": "JUMP"
										},
										{
											"begin": 8522,
											"end": 9793,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 8522,
											"end": 9793,
											"name": "JUMPDEST"
										},
										{
											"begin": 8918,
											"end": 8921,
											"name": "PUSH",
											"value": "140"
										},
										{
											"begin": 8903,
											"end": 8922,
											"name": "DUP2"
										},
										{
											"begin": 8903,
											"end": 8922,
											"name": "ADD"
										},
										{
											"begin": 8933,
											"end": 9020,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 8907,
											"end": 8916,
											"name": "DUP3"
										},
										{
											"begin": 8993,
											"end": 8999,
											"name": "DUP14"
										},
										{
											"begin": 8933,
											"end": 9020,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 8933,
											"end": 9020,
											"name": "JUMP"
										},
										{
											"begin": 8933,
											"end": 9020,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 8933,
											"end": 9020,
											"name": "JUMPDEST"
										},
										{
											"begin": 9031,
											"end": 9103,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 9099,
											"end": 9101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9088,
											"end": 9097,
											"name": "DUP4"
										},
										{
											"begin": 9084,
											"end": 9102,
											"name": "ADD"
										},
										{
											"begin": 9075,
											"end": 9081,
											"name": "DUP13"
										},
										{
											"begin": 9031,
											"end": 9103,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 9031,
											"end": 9103,
											"name": "JUMP"
										},
										{
											"begin": 9031,
											"end": 9103,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 9031,
											"end": 9103,
											"name": "JUMPDEST"
										},
										{
											"begin": 9114,
											"end": 9202,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 9198,
											"end": 9200,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9187,
											"end": 9196,
											"name": "DUP4"
										},
										{
											"begin": 9183,
											"end": 9201,
											"name": "ADD"
										},
										{
											"begin": 9174,
											"end": 9180,
											"name": "DUP12"
										},
										{
											"begin": 9114,
											"end": 9202,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 9114,
											"end": 9202,
											"name": "JUMP"
										},
										{
											"begin": 9114,
											"end": 9202,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 9114,
											"end": 9202,
											"name": "JUMPDEST"
										},
										{
											"begin": 9213,
											"end": 9285,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 9281,
											"end": 9283,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 9270,
											"end": 9279,
											"name": "DUP4"
										},
										{
											"begin": 9266,
											"end": 9284,
											"name": "ADD"
										},
										{
											"begin": 9257,
											"end": 9263,
											"name": "DUP11"
										},
										{
											"begin": 9213,
											"end": 9285,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 9213,
											"end": 9285,
											"name": "JUMP"
										},
										{
											"begin": 9213,
											"end": 9285,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 9213,
											"end": 9285,
											"name": "JUMPDEST"
										},
										{
											"begin": 9296,
											"end": 9369,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 9364,
											"end": 9367,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 9353,
											"end": 9362,
											"name": "DUP4"
										},
										{
											"begin": 9349,
											"end": 9368,
											"name": "ADD"
										},
										{
											"begin": 9340,
											"end": 9346,
											"name": "DUP10"
										},
										{
											"begin": 9296,
											"end": 9369,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 9296,
											"end": 9369,
											"name": "JUMP"
										},
										{
											"begin": 9296,
											"end": 9369,
											"name": "tag",
											"value": "261"
										},
										{
											"begin": 9296,
											"end": 9369,
											"name": "JUMPDEST"
										},
										{
											"begin": 9380,
											"end": 9453,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 9448,
											"end": 9451,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 9437,
											"end": 9446,
											"name": "DUP4"
										},
										{
											"begin": 9433,
											"end": 9452,
											"name": "ADD"
										},
										{
											"begin": 9424,
											"end": 9430,
											"name": "DUP9"
										},
										{
											"begin": 9380,
											"end": 9453,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 9380,
											"end": 9453,
											"name": "JUMP"
										},
										{
											"begin": 9380,
											"end": 9453,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 9380,
											"end": 9453,
											"name": "JUMPDEST"
										},
										{
											"begin": 9464,
											"end": 9531,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 9526,
											"end": 9529,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP4"
										},
										{
											"begin": 9511,
											"end": 9530,
											"name": "ADD"
										},
										{
											"begin": 9502,
											"end": 9508,
											"name": "DUP8"
										},
										{
											"begin": 9464,
											"end": 9531,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 9464,
											"end": 9531,
											"name": "JUMP"
										},
										{
											"begin": 9464,
											"end": 9531,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 9464,
											"end": 9531,
											"name": "JUMPDEST"
										},
										{
											"begin": 9542,
											"end": 9615,
											"name": "PUSH [tag]",
											"value": "264"
										},
										{
											"begin": 9610,
											"end": 9613,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 9599,
											"end": 9608,
											"name": "DUP4"
										},
										{
											"begin": 9595,
											"end": 9614,
											"name": "ADD"
										},
										{
											"begin": 9586,
											"end": 9592,
											"name": "DUP7"
										},
										{
											"begin": 9542,
											"end": 9615,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 9542,
											"end": 9615,
											"name": "JUMP"
										},
										{
											"begin": 9542,
											"end": 9615,
											"name": "tag",
											"value": "264"
										},
										{
											"begin": 9542,
											"end": 9615,
											"name": "JUMPDEST"
										},
										{
											"begin": 9626,
											"end": 9699,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 9694,
											"end": 9697,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9683,
											"end": 9692,
											"name": "DUP4"
										},
										{
											"begin": 9679,
											"end": 9698,
											"name": "ADD"
										},
										{
											"begin": 9670,
											"end": 9676,
											"name": "DUP6"
										},
										{
											"begin": 9626,
											"end": 9699,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 9626,
											"end": 9699,
											"name": "JUMP"
										},
										{
											"begin": 9626,
											"end": 9699,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 9626,
											"end": 9699,
											"name": "JUMPDEST"
										},
										{
											"begin": 9710,
											"end": 9783,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 9778,
											"end": 9781,
											"name": "PUSH",
											"value": "120"
										},
										{
											"begin": 9767,
											"end": 9776,
											"name": "DUP4"
										},
										{
											"begin": 9763,
											"end": 9782,
											"name": "ADD"
										},
										{
											"begin": 9754,
											"end": 9760,
											"name": "DUP5"
										},
										{
											"begin": 9710,
											"end": 9783,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 9710,
											"end": 9783,
											"name": "JUMP"
										},
										{
											"begin": 9710,
											"end": 9783,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 9710,
											"end": 9783,
											"name": "JUMPDEST"
										},
										{
											"begin": 8889,
											"end": 9793,
											"name": "SWAP12"
										},
										{
											"begin": 8889,
											"end": 9793,
											"name": "SWAP11"
										},
										{
											"begin": 8889,
											"end": 9793,
											"name": "POP"
										},
										{
											"begin": 8889,
											"end": 9793,
											"name": "POP"
										},
										{
											"begin": 8889,
											"end": 9793,
											"name": "POP"
										},
										{
											"begin": 8889,
											"end": 9793,
											"name": "POP"
										},
										{
											"begin": 8889,
											"end": 9793,
											"name": "POP"
										},
										{
											"begin": 8889,
											"end": 9793,
											"name": "POP"
										},
										{
											"begin": 8889,
											"end": 9793,
											"name": "POP"
										},
										{
											"begin": 8889,
											"end": 9793,
											"name": "POP"
										},
										{
											"begin": 8889,
											"end": 9793,
											"name": "POP"
										},
										{
											"begin": 8889,
											"end": 9793,
											"name": "POP"
										},
										{
											"begin": 8889,
											"end": 9793,
											"name": "POP"
										},
										{
											"begin": 8889,
											"end": 9793,
											"name": "JUMP"
										},
										{
											"begin": 9800,
											"end": 10124,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 9800,
											"end": 10124,
											"name": "JUMPDEST"
										},
										{
											"begin": 9946,
											"end": 9948,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9931,
											"end": 9949,
											"name": "DUP2"
										},
										{
											"begin": 9931,
											"end": 9949,
											"name": "ADD"
										},
										{
											"begin": 9960,
											"end": 10031,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 9935,
											"end": 9944,
											"name": "DUP3"
										},
										{
											"begin": 10004,
											"end": 10010,
											"name": "DUP6"
										},
										{
											"begin": 9960,
											"end": 10031,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 9960,
											"end": 10031,
											"name": "JUMP"
										},
										{
											"begin": 9960,
											"end": 10031,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 9960,
											"end": 10031,
											"name": "JUMPDEST"
										},
										{
											"begin": 10042,
											"end": 10114,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 10110,
											"end": 10112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10099,
											"end": 10108,
											"name": "DUP4"
										},
										{
											"begin": 10095,
											"end": 10113,
											"name": "ADD"
										},
										{
											"begin": 10086,
											"end": 10092,
											"name": "DUP5"
										},
										{
											"begin": 10042,
											"end": 10114,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 10042,
											"end": 10114,
											"name": "JUMP"
										},
										{
											"begin": 10042,
											"end": 10114,
											"name": "tag",
											"value": "268"
										},
										{
											"begin": 10042,
											"end": 10114,
											"name": "JUMPDEST"
										},
										{
											"begin": 9917,
											"end": 10124,
											"name": "SWAP4"
										},
										{
											"begin": 9917,
											"end": 10124,
											"name": "SWAP3"
										},
										{
											"begin": 9917,
											"end": 10124,
											"name": "POP"
										},
										{
											"begin": 9917,
											"end": 10124,
											"name": "POP"
										},
										{
											"begin": 9917,
											"end": 10124,
											"name": "POP"
										},
										{
											"begin": 9917,
											"end": 10124,
											"name": "JUMP"
										},
										{
											"begin": 10131,
											"end": 10576,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 10131,
											"end": 10576,
											"name": "JUMPDEST"
										},
										{
											"begin": 10341,
											"end": 10343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10355,
											"end": 10402,
											"name": "DUP1"
										},
										{
											"begin": 10355,
											"end": 10402,
											"name": "DUP3"
										},
										{
											"begin": 10355,
											"end": 10402,
											"name": "MSTORE"
										},
										{
											"begin": 10326,
											"end": 10344,
											"name": "DUP2"
										},
										{
											"begin": 10326,
											"end": 10344,
											"name": "ADD"
										},
										{
											"begin": 10416,
											"end": 10566,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 10326,
											"end": 10344,
											"name": "DUP2"
										},
										{
											"begin": 10552,
											"end": 10558,
											"name": "DUP5"
										},
										{
											"begin": 10416,
											"end": 10566,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 10416,
											"end": 10566,
											"name": "JUMP"
										},
										{
											"begin": 10583,
											"end": 10784,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 10583,
											"end": 10784,
											"name": "JUMPDEST"
										},
										{
											"begin": 10695,
											"end": 10697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10680,
											"end": 10698,
											"name": "DUP2"
										},
										{
											"begin": 10680,
											"end": 10698,
											"name": "ADD"
										},
										{
											"begin": 10709,
											"end": 10774,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 10684,
											"end": 10693,
											"name": "DUP3"
										},
										{
											"begin": 10747,
											"end": 10753,
											"name": "DUP5"
										},
										{
											"begin": 10709,
											"end": 10774,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 10709,
											"end": 10774,
											"name": "JUMP"
										},
										{
											"begin": 10791,
											"end": 11198,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 10791,
											"end": 11198,
											"name": "JUMPDEST"
										},
										{
											"begin": 10982,
											"end": 10984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10996,
											"end": 11043,
											"name": "DUP1"
										},
										{
											"begin": 10996,
											"end": 11043,
											"name": "DUP3"
										},
										{
											"begin": 10996,
											"end": 11043,
											"name": "MSTORE"
										},
										{
											"begin": 10967,
											"end": 10985,
											"name": "DUP2"
										},
										{
											"begin": 10967,
											"end": 10985,
											"name": "ADD"
										},
										{
											"begin": 11057,
											"end": 11188,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 10967,
											"end": 10985,
											"name": "DUP2"
										},
										{
											"begin": 11057,
											"end": 11188,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 11057,
											"end": 11188,
											"name": "JUMP"
										},
										{
											"begin": 11205,
											"end": 11612,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 11205,
											"end": 11612,
											"name": "JUMPDEST"
										},
										{
											"begin": 11396,
											"end": 11398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11410,
											"end": 11457,
											"name": "DUP1"
										},
										{
											"begin": 11410,
											"end": 11457,
											"name": "DUP3"
										},
										{
											"begin": 11410,
											"end": 11457,
											"name": "MSTORE"
										},
										{
											"begin": 11381,
											"end": 11399,
											"name": "DUP2"
										},
										{
											"begin": 11381,
											"end": 11399,
											"name": "ADD"
										},
										{
											"begin": 11471,
											"end": 11602,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 11381,
											"end": 11399,
											"name": "DUP2"
										},
										{
											"begin": 11471,
											"end": 11602,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 11471,
											"end": 11602,
											"name": "JUMP"
										},
										{
											"begin": 11619,
											"end": 12026,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 11619,
											"end": 12026,
											"name": "JUMPDEST"
										},
										{
											"begin": 11810,
											"end": 11812,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11824,
											"end": 11871,
											"name": "DUP1"
										},
										{
											"begin": 11824,
											"end": 11871,
											"name": "DUP3"
										},
										{
											"begin": 11824,
											"end": 11871,
											"name": "MSTORE"
										},
										{
											"begin": 11795,
											"end": 11813,
											"name": "DUP2"
										},
										{
											"begin": 11795,
											"end": 11813,
											"name": "ADD"
										},
										{
											"begin": 11885,
											"end": 12016,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 11795,
											"end": 11813,
											"name": "DUP2"
										},
										{
											"begin": 11885,
											"end": 12016,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 11885,
											"end": 12016,
											"name": "JUMP"
										},
										{
											"begin": 12033,
											"end": 12440,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 12033,
											"end": 12440,
											"name": "JUMPDEST"
										},
										{
											"begin": 12224,
											"end": 12226,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12238,
											"end": 12285,
											"name": "DUP1"
										},
										{
											"begin": 12238,
											"end": 12285,
											"name": "DUP3"
										},
										{
											"begin": 12238,
											"end": 12285,
											"name": "MSTORE"
										},
										{
											"begin": 12209,
											"end": 12227,
											"name": "DUP2"
										},
										{
											"begin": 12209,
											"end": 12227,
											"name": "ADD"
										},
										{
											"begin": 12299,
											"end": 12430,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 12209,
											"end": 12227,
											"name": "DUP2"
										},
										{
											"begin": 12299,
											"end": 12430,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 12299,
											"end": 12430,
											"name": "JUMP"
										},
										{
											"begin": 12447,
											"end": 12824,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 12447,
											"end": 12824,
											"name": "JUMPDEST"
										},
										{
											"begin": 12623,
											"end": 12625,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12637,
											"end": 12684,
											"name": "DUP1"
										},
										{
											"begin": 12637,
											"end": 12684,
											"name": "DUP3"
										},
										{
											"begin": 12637,
											"end": 12684,
											"name": "MSTORE"
										},
										{
											"begin": 12608,
											"end": 12626,
											"name": "DUP2"
										},
										{
											"begin": 12608,
											"end": 12626,
											"name": "ADD"
										},
										{
											"begin": 12698,
											"end": 12814,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 12608,
											"end": 12626,
											"name": "DUP2"
										},
										{
											"begin": 12800,
											"end": 12806,
											"name": "DUP5"
										},
										{
											"begin": 12698,
											"end": 12814,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 12698,
											"end": 12814,
											"name": "JUMP"
										},
										{
											"begin": 12831,
											"end": 13040,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 12831,
											"end": 13040,
											"name": "JUMPDEST"
										},
										{
											"begin": 12947,
											"end": 12949,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12932,
											"end": 12950,
											"name": "DUP2"
										},
										{
											"begin": 12932,
											"end": 12950,
											"name": "ADD"
										},
										{
											"begin": 12961,
											"end": 13030,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 12936,
											"end": 12945,
											"name": "DUP3"
										},
										{
											"begin": 13003,
											"end": 13009,
											"name": "DUP5"
										},
										{
											"begin": 12961,
											"end": 13030,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 12961,
											"end": 13030,
											"name": "JUMP"
										},
										{
											"begin": 13047,
											"end": 13260,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 13047,
											"end": 13260,
											"name": "JUMPDEST"
										},
										{
											"begin": 13165,
											"end": 13167,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13150,
											"end": 13168,
											"name": "DUP2"
										},
										{
											"begin": 13150,
											"end": 13168,
											"name": "ADD"
										},
										{
											"begin": 13179,
											"end": 13250,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 13154,
											"end": 13163,
											"name": "DUP3"
										},
										{
											"begin": 13223,
											"end": 13229,
											"name": "DUP5"
										},
										{
											"begin": 13179,
											"end": 13250,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 13179,
											"end": 13250,
											"name": "JUMP"
										},
										{
											"begin": 13267,
											"end": 13414,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 13267,
											"end": 13414,
											"name": "JUMPDEST"
										},
										{
											"begin": 13387,
											"end": 13391,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13378,
											"end": 13392,
											"name": "ADD"
										},
										{
											"begin": 13378,
											"end": 13392,
											"name": "SWAP1"
										},
										{
											"begin": 13335,
											"end": 13414,
											"name": "JUMP"
										},
										{
											"begin": 13600,
											"end": 13733,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 13600,
											"end": 13733,
											"name": "JUMPDEST"
										},
										{
											"begin": 13699,
											"end": 13711,
											"name": "MLOAD"
										},
										{
											"begin": 13699,
											"end": 13711,
											"name": "SWAP1"
										},
										{
											"begin": 13670,
											"end": 13733,
											"name": "JUMP"
										},
										{
											"begin": 14153,
											"end": 14321,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 14153,
											"end": 14321,
											"name": "JUMPDEST"
										},
										{
											"begin": 14261,
											"end": 14280,
											"name": "SWAP1"
										},
										{
											"begin": 14261,
											"end": 14280,
											"name": "DUP2"
										},
										{
											"begin": 14261,
											"end": 14280,
											"name": "MSTORE"
										},
										{
											"begin": 14310,
											"end": 14314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14301,
											"end": 14315,
											"name": "ADD"
										},
										{
											"begin": 14301,
											"end": 14315,
											"name": "SWAP1"
										},
										{
											"begin": 14254,
											"end": 14321,
											"name": "JUMP"
										},
										{
											"begin": 14709,
											"end": 14800,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 14709,
											"end": 14800,
											"name": "JUMPDEST"
										},
										{
											"begin": 14709,
											"end": 14800,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14771,
											"end": 14795,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 14789,
											"end": 14794,
											"name": "DUP3"
										},
										{
											"begin": 14771,
											"end": 14795,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 14771,
											"end": 14795,
											"name": "JUMP"
										},
										{
											"begin": 14913,
											"end": 14998,
											"name": "tag",
											"value": "234"
										},
										{
											"begin": 14913,
											"end": 14998,
											"name": "JUMPDEST"
										},
										{
											"begin": 14979,
											"end": 14992,
											"name": "ISZERO"
										},
										{
											"begin": 14972,
											"end": 14993,
											"name": "ISZERO"
										},
										{
											"begin": 14972,
											"end": 14993,
											"name": "SWAP1"
										},
										{
											"begin": 14955,
											"end": 14998,
											"name": "JUMP"
										},
										{
											"begin": 15005,
											"end": 15089,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 15005,
											"end": 15089,
											"name": "JUMPDEST"
										},
										{
											"begin": 15077,
											"end": 15083,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 15066,
											"end": 15084,
											"name": "AND"
										},
										{
											"begin": 15066,
											"end": 15084,
											"name": "SWAP1"
										},
										{
											"begin": 15049,
											"end": 15089,
											"name": "JUMP"
										},
										{
											"begin": 15096,
											"end": 15217,
											"name": "tag",
											"value": "279"
										},
										{
											"begin": 15096,
											"end": 15217,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15158,
											"end": 15212,
											"name": "AND"
										},
										{
											"begin": 15158,
											"end": 15212,
											"name": "SWAP1"
										},
										{
											"begin": 15141,
											"end": 15217,
											"name": "JUMP"
										},
										{
											"begin": 15224,
											"end": 15296,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 15224,
											"end": 15296,
											"name": "JUMPDEST"
										},
										{
											"begin": 15286,
											"end": 15291,
											"name": "SWAP1"
										},
										{
											"begin": 15269,
											"end": 15296,
											"name": "JUMP"
										},
										{
											"begin": 15303,
											"end": 15420,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 15303,
											"end": 15420,
											"name": "JUMPDEST"
										},
										{
											"begin": 15372,
											"end": 15396,
											"name": "PUSH [tag]",
											"value": "281"
										},
										{
											"begin": 15390,
											"end": 15395,
											"name": "DUP2"
										},
										{
											"begin": 15372,
											"end": 15396,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 15372,
											"end": 15396,
											"name": "JUMP"
										},
										{
											"begin": 15372,
											"end": 15396,
											"name": "tag",
											"value": "281"
										},
										{
											"begin": 15372,
											"end": 15396,
											"name": "JUMPDEST"
										},
										{
											"begin": 15365,
											"end": 15370,
											"name": "DUP2"
										},
										{
											"begin": 15362,
											"end": 15397,
											"name": "EQ"
										},
										{
											"begin": 15352,
											"end": 15354,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 15352,
											"end": 15354,
											"name": "JUMPI"
										},
										{
											"begin": 15411,
											"end": 15412,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15408,
											"end": 15409,
											"name": "DUP1"
										},
										{
											"begin": 15401,
											"end": 15413,
											"name": "REVERT"
										},
										{
											"begin": 15352,
											"end": 15354,
											"name": "tag",
											"value": "282"
										},
										{
											"begin": 15352,
											"end": 15354,
											"name": "JUMPDEST"
										},
										{
											"begin": 15346,
											"end": 15420,
											"name": "POP"
										},
										{
											"begin": 15346,
											"end": 15420,
											"name": "JUMP"
										},
										{
											"begin": 15427,
											"end": 15542,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 15427,
											"end": 15542,
											"name": "JUMPDEST"
										},
										{
											"begin": 15495,
											"end": 15518,
											"name": "PUSH [tag]",
											"value": "281"
										},
										{
											"begin": 15512,
											"end": 15517,
											"name": "DUP2"
										},
										{
											"begin": 15495,
											"end": 15518,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 15495,
											"end": 15518,
											"name": "JUMP"
										},
										{
											"begin": 15549,
											"end": 15666,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 15549,
											"end": 15666,
											"name": "JUMPDEST"
										},
										{
											"begin": 15618,
											"end": 15642,
											"name": "PUSH [tag]",
											"value": "281"
										},
										{
											"begin": 15636,
											"end": 15641,
											"name": "DUP2"
										},
										{
											"begin": 15618,
											"end": 15642,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 15618,
											"end": 15642,
											"name": "JUMP"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"LPStakeAddress()": "8bae5f4f",
							"StakeAddress()": "45ce7db9",
							"WETHAddress()": "0af88b24",
							"auctions(address,uint256)": "44f91c1e",
							"getAuctionTokensForSale()": "f7f17488",
							"getErc20Tokens()": "6d036535",
							"getFixedPriceTokensForSale()": "d3c9080a",
							"getTokensForSale()": "65e4e1c0",
							"getTokensForSalePerUser(address)": "d4739cca",
							"isOwner()": "8f32d59b",
							"lpStakefeepercentage()": "d2abc517",
							"offerprice(address,uint256,address)": "f09856f3",
							"owner()": "8da5cb5b",
							"platFormFeePercentage()": "f26f8494",
							"rewardDistributionPercentage()": "c52ea52e",
							"setAddress(address,address)": "3b58524d",
							"setBrokerage(address,address,uint16,uint16,uint16)": "c1a8bdbc",
							"setUpdatedClosingTime(uint256)": "f5a0c9b8",
							"transferOwnership(address)": "f2fde38b",
							"updateClosingTime()": "7f494852"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"LPStakeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"StakeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WETHAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctions\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"lastOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentBid\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"auctionType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startingPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buyer\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"startingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closingTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20Token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAuctionTokensForSale\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"NFTAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenDetArrayLib.TokenDet[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getErc20Tokens\",\"outputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"array\",\"type\":\"address[]\"}],\"internalType\":\"struct ERC20Addresses.erc20Addresses\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getFixedPriceTokensForSale\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"NFTAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenDetArrayLib.TokenDet[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTokensForSale\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"NFTAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenDetArrayLib.TokenDet[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getTokensForSalePerUser\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"NFTAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenDetArrayLib.TokenDet[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lpStakefeepercentage\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"offerprice\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"offerer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"platFormFeePercentage\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardDistributionPercentage\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardDistributionAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardDistributionAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lpStakeAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_lpStakefeepercentage\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_rewardDistributionPercentage\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_platFormFeePercentage\",\"type\":\"uint16\"}],\"name\":\"setBrokerage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_updateTime\",\"type\":\"uint256\"}],\"name\":\"setUpdatedClosingTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"updateClosingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Storage.sol\":\"Storage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20Addresses.sol\":{\"keccak256\":\"0x3ce0eddfaea69964074e7db8a0dbfaa2d01856d10d0c120516115c76f735b032\",\"urls\":[\"bzz-raw://0e7d74a18eb9d1c18e0db1011b431fb3b85a0663a68f9d3e7987f494b16e9078\",\"dweb:/ipfs/QmXcGYSwBpVjTZgoehqZq1YqpVuVdyHF9v7zXDesFHc4kb\"]},\"Storage.sol\":{\"keccak256\":\"0x36ba8991c7139fc506e3763edbb3380a09f03ff0ec73857ee50c125344cb478d\",\"urls\":[\"bzz-raw://01ae6907d95b200a9aa3a6f7a692e7bbf48a99f25f382c1c938657db2356b178\",\"dweb:/ipfs/QmXfhVwKRxBKqmBaRT9xoppouerTzToZtp47LBwt348tmM\"]},\"TokenDetArrayLib.sol\":{\"keccak256\":\"0xad54f8987c2e69b06d230e919032195c0bdcd5c55f8631b4f3029341283bbd39\",\"urls\":[\"bzz-raw://83c8ef60f2a600a8d52f0e6dac10055f048d26aae10f0d41a32ffa76fbe4ff1b\",\"dweb:/ipfs/QmTnQN2phQhvTppESRTsPxhn7TfRRWpv21doNiaECAp7NJ\"]},\"ownable.sol\":{\"keccak256\":\"0x5e2a25e49436a7b8c68d3c6cb9b59163d895311bec3677a30bfad13aef6bd011\",\"urls\":[\"bzz-raw://1a4a466535e13aa58e660cfefff3fdb66d22ed46d7a6524feab4910c8d0826a1\",\"dweb:/ipfs/QmNmdXMZSUthj7iH71HYqGE5atx1F3jhdXQ6P6hF72eoBi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 817,
								"contract": "Storage.sol:Storage",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 368,
								"contract": "Storage.sol:Storage",
								"label": "rewardDistributionPercentage",
								"offset": 20,
								"slot": "0",
								"type": "t_uint16"
							},
							{
								"astId": 370,
								"contract": "Storage.sol:Storage",
								"label": "platFormFeePercentage",
								"offset": 22,
								"slot": "0",
								"type": "t_uint16"
							},
							{
								"astId": 372,
								"contract": "Storage.sol:Storage",
								"label": "lpStakefeepercentage",
								"offset": 24,
								"slot": "0",
								"type": "t_uint16"
							},
							{
								"astId": 374,
								"contract": "Storage.sol:Storage",
								"label": "updateClosingTime",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 380,
								"contract": "Storage.sol:Storage",
								"label": "tokenOpenForSale",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 384,
								"contract": "Storage.sol:Storage",
								"label": "tokensForSalePerUser",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(TokenDets)627_storage)"
							},
							{
								"astId": 386,
								"contract": "Storage.sol:Storage",
								"label": "fixedPriceTokens",
								"offset": 0,
								"slot": "4",
								"type": "t_struct(TokenDets)627_storage"
							},
							{
								"astId": 388,
								"contract": "Storage.sol:Storage",
								"label": "auctionTokens",
								"offset": 0,
								"slot": "5",
								"type": "t_struct(TokenDets)627_storage"
							},
							{
								"astId": 422,
								"contract": "Storage.sol:Storage",
								"label": "offerprice",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(OfferDetails)414_storage)))"
							},
							{
								"astId": 428,
								"contract": "Storage.sol:Storage",
								"label": "auctions",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(auction)409_storage))"
							},
							{
								"astId": 438,
								"contract": "Storage.sol:Storage",
								"label": "bidOffers",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_struct(OfferDetails)414_storage))))"
							},
							{
								"astId": 440,
								"contract": "Storage.sol:Storage",
								"label": "tokensForSale",
								"offset": 0,
								"slot": "9",
								"type": "t_struct(TokenDets)627_storage"
							},
							{
								"astId": 442,
								"contract": "Storage.sol:Storage",
								"label": "erc20TokensArray",
								"offset": 0,
								"slot": "10",
								"type": "t_struct(erc20Addresses)8_storage"
							},
							{
								"astId": 444,
								"contract": "Storage.sol:Storage",
								"label": "WETHAddress",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 446,
								"contract": "Storage.sol:Storage",
								"label": "StakeAddress",
								"offset": 0,
								"slot": "12",
								"type": "t_address"
							},
							{
								"astId": 448,
								"contract": "Storage.sol:Storage",
								"label": "LPStakeAddress",
								"offset": 0,
								"slot": "13",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(TokenDet)623_storage)dyn_storage": {
								"base": "t_struct(TokenDet)623_storage",
								"encoding": "dynamic_array",
								"label": "struct TokenDetArrayLib.TokenDet[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_struct(OfferDetails)414_storage))))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => struct Storage.OfferDetails))))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_struct(OfferDetails)414_storage)))"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(OfferDetails)414_storage)))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => mapping(address => struct Storage.OfferDetails)))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_mapping(t_address,t_struct(OfferDetails)414_storage))"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(OfferDetails)414_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct Storage.OfferDetails))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(OfferDetails)414_storage)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(auction)409_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct Storage.auction))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(auction)409_storage)"
							},
							"t_mapping(t_address,t_struct(OfferDetails)414_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Storage.OfferDetails)",
								"numberOfBytes": "32",
								"value": "t_struct(OfferDetails)414_storage"
							},
							"t_mapping(t_address,t_struct(TokenDets)627_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct TokenDetArrayLib.TokenDets)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenDets)627_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_struct(OfferDetails)414_storage)))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => mapping(uint256 => struct Storage.OfferDetails)))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_mapping(t_uint256,t_struct(OfferDetails)414_storage))"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(OfferDetails)414_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct Storage.OfferDetails))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(OfferDetails)414_storage)"
							},
							"t_mapping(t_uint256,t_struct(OfferDetails)414_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.OfferDetails)",
								"numberOfBytes": "32",
								"value": "t_struct(OfferDetails)414_storage"
							},
							"t_mapping(t_uint256,t_struct(auction)409_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.auction)",
								"numberOfBytes": "32",
								"value": "t_struct(auction)409_storage"
							},
							"t_struct(OfferDetails)414_storage": {
								"encoding": "inplace",
								"label": "struct Storage.OfferDetails",
								"members": [
									{
										"astId": 411,
										"contract": "Storage.sol:Storage",
										"label": "offerer",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 413,
										"contract": "Storage.sol:Storage",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(TokenDet)623_storage": {
								"encoding": "inplace",
								"label": "struct TokenDetArrayLib.TokenDet",
								"members": [
									{
										"astId": 620,
										"contract": "Storage.sol:Storage",
										"label": "NFTAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 622,
										"contract": "Storage.sol:Storage",
										"label": "tokenID",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(TokenDets)627_storage": {
								"encoding": "inplace",
								"label": "struct TokenDetArrayLib.TokenDets",
								"members": [
									{
										"astId": 626,
										"contract": "Storage.sol:Storage",
										"label": "array",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_struct(TokenDet)623_storage)dyn_storage"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(auction)409_storage": {
								"encoding": "inplace",
								"label": "struct Storage.auction",
								"members": [
									{
										"astId": 390,
										"contract": "Storage.sol:Storage",
										"label": "lastOwner",
										"offset": 0,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 392,
										"contract": "Storage.sol:Storage",
										"label": "currentBid",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 394,
										"contract": "Storage.sol:Storage",
										"label": "highestBidder",
										"offset": 0,
										"slot": "2",
										"type": "t_address_payable"
									},
									{
										"astId": 396,
										"contract": "Storage.sol:Storage",
										"label": "auctionType",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 398,
										"contract": "Storage.sol:Storage",
										"label": "startingPrice",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 400,
										"contract": "Storage.sol:Storage",
										"label": "buyPrice",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 402,
										"contract": "Storage.sol:Storage",
										"label": "buyer",
										"offset": 0,
										"slot": "6",
										"type": "t_bool"
									},
									{
										"astId": 404,
										"contract": "Storage.sol:Storage",
										"label": "startingTime",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 406,
										"contract": "Storage.sol:Storage",
										"label": "closingTime",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 408,
										"contract": "Storage.sol:Storage",
										"label": "erc20Token",
										"offset": 0,
										"slot": "9",
										"type": "t_address"
									}
								],
								"numberOfBytes": "320"
							},
							"t_struct(erc20Addresses)8_storage": {
								"encoding": "inplace",
								"label": "struct ERC20Addresses.erc20Addresses",
								"members": [
									{
										"astId": 7,
										"contract": "Storage.sol:Storage",
										"label": "array",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_address)dyn_storage"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"TokenDetArrayLib.sol": {
				"TokenDetArrayLib": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"TokenDetArrayLib.sol\":85:2068  library TokenDetArrayLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"TokenDetArrayLib.sol\":85:2068  library TokenDetArrayLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xfd7c9a15\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"TokenDetArrayLib.sol\":410:672  function addTokenDet(... */\n    tag_2:\n      dup2\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_3\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_3:\n      pop\n        /* \"TokenDetArrayLib.sol\":410:672  function addTokenDet(... */\n      tag_4\n      tag_5\n      calldatasize\n      0x04\n      jump(tag_6)\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n    tag_7:\n        /* \"TokenDetArrayLib.sol\":591:613  self.exists(_tokenDet) */\n      tag_9\n        /* \"TokenDetArrayLib.sol\":591:595  self */\n      dup3\n        /* \"TokenDetArrayLib.sol\":603:612  _tokenDet */\n      dup3\n        /* \"TokenDetArrayLib.sol\":591:613  self.exists(_tokenDet) */\n      0xffffffff\n        /* \"TokenDetArrayLib.sol\":591:602  self.exists */\n      tag_10\n        /* \"TokenDetArrayLib.sol\":591:613  self.exists(_tokenDet) */\n      and\n      jump\t// in\n    tag_9:\n        /* \"TokenDetArrayLib.sol\":586:666  if (!self.exists(_tokenDet)) {... */\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":27:37   */\n      dup2\n      sload\n        /* \"--CODEGEN--\":39:40   */\n      0x01\n        /* \"--CODEGEN--\":23:41   */\n      dup1\n      dup3\n      add\n        /* \"--CODEGEN--\":45:68   */\n      dup5\n      sstore\n      0x00\n        /* \"TokenDetArrayLib.sol\":629:655  self.array.push(_tokenDet) */\n      dup5\n      dup2\n      mstore\n      0x20\n      swap1\n      dup2\n      swap1\n      keccak256\n      dup5\n      mload\n      0x02\n      swap1\n      swap5\n      mul\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      dup4\n      sstore\n      dup4\n      add\n      mload\n      swap2\n      add\n      sstore\n        /* \"TokenDetArrayLib.sol\":586:666  if (!self.exists(_tokenDet)) {... */\n    tag_11:\n        /* \"TokenDetArrayLib.sol\":410:672  function addTokenDet(... */\n      pop\n      pop\n      jump\t// out\n        /* \"TokenDetArrayLib.sol\":1648:2066  function exists(... */\n    tag_10:\n        /* \"TokenDetArrayLib.sol\":1760:1764  bool */\n      0x00\n      dup1\n        /* \"TokenDetArrayLib.sol\":1776:2038  for (uint256 i = 0; i < self.array.length; i++) {... */\n    tag_14:\n        /* \"TokenDetArrayLib.sol\":1800:1817  self.array.length */\n      dup4\n      sload\n        /* \"TokenDetArrayLib.sol\":1796:1817  i < self.array.length */\n      dup2\n      lt\n        /* \"TokenDetArrayLib.sol\":1776:2038  for (uint256 i = 0; i < self.array.length; i++) {... */\n      iszero\n      tag_15\n      jumpi\n        /* \"TokenDetArrayLib.sol\":1887:1896  _tokenDet */\n      dup3\n        /* \"TokenDetArrayLib.sol\":1887:1907  _tokenDet.NFTAddress */\n      0x00\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TokenDetArrayLib.sol\":1859:1907  self.array[i].NFTAddress == _tokenDet.NFTAddress */\n      and\n        /* \"TokenDetArrayLib.sol\":1859:1863  self */\n      dup5\n        /* \"TokenDetArrayLib.sol\":1859:1869  self.array */\n      0x00\n      add\n        /* \"TokenDetArrayLib.sol\":1870:1871  i */\n      dup3\n        /* \"TokenDetArrayLib.sol\":1859:1872  self.array[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_17\n      jumpi\n      invalid\n    tag_17:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n        /* \"TokenDetArrayLib.sol\":1859:1883  self.array[i].NFTAddress */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"TokenDetArrayLib.sol\":1859:1907  self.array[i].NFTAddress == _tokenDet.NFTAddress */\n      eq\n        /* \"TokenDetArrayLib.sol\":1859:1969  self.array[i].NFTAddress == _tokenDet.NFTAddress &&... */\n      dup1\n      iszero\n      tag_19\n      jumpi\n      pop\n        /* \"TokenDetArrayLib.sol\":1952:1961  _tokenDet */\n      dup3\n        /* \"TokenDetArrayLib.sol\":1952:1969  _tokenDet.tokenID */\n      0x20\n      add\n      mload\n        /* \"TokenDetArrayLib.sol\":1927:1931  self */\n      dup5\n        /* \"TokenDetArrayLib.sol\":1927:1937  self.array */\n      0x00\n      add\n        /* \"TokenDetArrayLib.sol\":1938:1939  i */\n      dup3\n        /* \"TokenDetArrayLib.sol\":1927:1940  self.array[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_20\n      jumpi\n      invalid\n    tag_20:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"TokenDetArrayLib.sol\":1927:1948  self.array[i].tokenID */\n      0x01\n      add\n      sload\n        /* \"TokenDetArrayLib.sol\":1927:1969  self.array[i].tokenID == _tokenDet.tokenID */\n      eq\n        /* \"TokenDetArrayLib.sol\":1859:1969  self.array[i].NFTAddress == _tokenDet.NFTAddress &&... */\n    tag_19:\n        /* \"TokenDetArrayLib.sol\":1838:2028  if (... */\n      iszero\n      tag_22\n      jumpi\n        /* \"TokenDetArrayLib.sol\":2009:2013  true */\n      0x01\n        /* \"TokenDetArrayLib.sol\":2002:2013  return true */\n      swap2\n      pop\n      pop\n      jump(tag_13)\n        /* \"TokenDetArrayLib.sol\":1838:2028  if (... */\n    tag_22:\n        /* \"TokenDetArrayLib.sol\":1819:1822  i++ */\n      0x01\n      add\n        /* \"TokenDetArrayLib.sol\":1776:2038  for (uint256 i = 0; i < self.array.length; i++) {... */\n      jump(tag_14)\n    tag_15:\n      pop\n        /* \"TokenDetArrayLib.sol\":2054:2059  false */\n      0x00\n        /* \"TokenDetArrayLib.sol\":2047:2059  return false */\n      swap1\n      pop\n        /* \"TokenDetArrayLib.sol\":1648:2066  function exists(... */\n    tag_13:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":5:135   */\n    tag_24:\n        /* \"--CODEGEN--\":72:92   */\n      dup1\n      calldataload\n        /* \"--CODEGEN--\":97:130   */\n      tag_13\n        /* \"--CODEGEN--\":72:92   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      jump(tag_26)\n        /* \"--CODEGEN--\":181:657   */\n    tag_27:\n      0x00\n        /* \"--CODEGEN--\":295:299   */\n      0x40\n        /* \"--CODEGEN--\":283:292   */\n      dup3\n        /* \"--CODEGEN--\":278:281   */\n      dup5\n        /* \"--CODEGEN--\":274:293   */\n      sub\n        /* \"--CODEGEN--\":270:300   */\n      slt\n        /* \"--CODEGEN--\":267:269   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":313:314   */\n      0x00\n        /* \"--CODEGEN--\":310:311   */\n      dup1\n        /* \"--CODEGEN--\":303:315   */\n      revert\n        /* \"--CODEGEN--\":267:269   */\n    tag_28:\n        /* \"--CODEGEN--\":331:351   */\n      tag_29\n        /* \"--CODEGEN--\":346:350   */\n      0x40\n        /* \"--CODEGEN--\":331:351   */\n      jump(tag_30)\n    tag_29:\n        /* \"--CODEGEN--\":322:351   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":407:408   */\n      0x00\n        /* \"--CODEGEN--\":439:488   */\n      tag_31\n        /* \"--CODEGEN--\":484:487   */\n      dup5\n        /* \"--CODEGEN--\":464:473   */\n      dup5\n        /* \"--CODEGEN--\":439:488   */\n      jump(tag_24)\n    tag_31:\n        /* \"--CODEGEN--\":414:489   */\n      dup3\n      mstore\n      pop\n        /* \"--CODEGEN--\":553:555   */\n      0x20\n        /* \"--CODEGEN--\":586:635   */\n      tag_32\n        /* \"--CODEGEN--\":631:634   */\n      dup5\n        /* \"--CODEGEN--\":607:629   */\n      dup5\n      dup4\n      add\n        /* \"--CODEGEN--\":586:635   */\n      jump(tag_34)\n    tag_32:\n        /* \"--CODEGEN--\":579:583   */\n      0x20\n        /* \"--CODEGEN--\":572:577   */\n      dup4\n        /* \"--CODEGEN--\":568:584   */\n      add\n        /* \"--CODEGEN--\":561:636   */\n      mstore\n        /* \"--CODEGEN--\":510:647   */\n      pop\n        /* \"--CODEGEN--\":261:657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":664:848   */\n    tag_34:\n        /* \"--CODEGEN--\":758:778   */\n      dup1\n      calldataload\n        /* \"--CODEGEN--\":783:843   */\n      tag_13\n        /* \"--CODEGEN--\":758:778   */\n      dup2\n        /* \"--CODEGEN--\":783:843   */\n      jump(tag_36)\n        /* \"--CODEGEN--\":992:1462   */\n    tag_6:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":1165:1167   */\n      0x60\n        /* \"--CODEGEN--\":1153:1162   */\n      dup4\n        /* \"--CODEGEN--\":1144:1151   */\n      dup6\n        /* \"--CODEGEN--\":1140:1163   */\n      sub\n        /* \"--CODEGEN--\":1136:1168   */\n      slt\n        /* \"--CODEGEN--\":1133:1135   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":1181:1182   */\n      0x00\n        /* \"--CODEGEN--\":1178:1179   */\n      dup1\n        /* \"--CODEGEN--\":1171:1183   */\n      revert\n        /* \"--CODEGEN--\":1133:1135   */\n    tag_39:\n        /* \"--CODEGEN--\":1216:1217   */\n      0x00\n        /* \"--CODEGEN--\":1233:1313   */\n      tag_40\n        /* \"--CODEGEN--\":1305:1312   */\n      dup6\n        /* \"--CODEGEN--\":1285:1294   */\n      dup6\n        /* \"--CODEGEN--\":1233:1313   */\n      jump(tag_34)\n    tag_40:\n        /* \"--CODEGEN--\":1223:1313   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":1195:1319   */\n      pop\n        /* \"--CODEGEN--\":1350:1352   */\n      0x20\n        /* \"--CODEGEN--\":1368:1446   */\n      tag_41\n        /* \"--CODEGEN--\":1438:1445   */\n      dup6\n        /* \"--CODEGEN--\":1429:1435   */\n      dup3\n        /* \"--CODEGEN--\":1418:1427   */\n      dup7\n        /* \"--CODEGEN--\":1414:1436   */\n      add\n        /* \"--CODEGEN--\":1368:1446   */\n      jump(tag_27)\n    tag_41:\n        /* \"--CODEGEN--\":1358:1446   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":1329:1452   */\n      pop\n        /* \"--CODEGEN--\":1127:1462   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":1469:1725   */\n    tag_30:\n        /* \"--CODEGEN--\":1531:1533   */\n      0x40\n        /* \"--CODEGEN--\":1525:1534   */\n      mload\n        /* \"--CODEGEN--\":1557:1574   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":1632:1650   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":1617:1651   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":1653:1675   */\n      dup3\n      dup3\n      lt\n        /* \"--CODEGEN--\":1614:1676   */\n      or\n        /* \"--CODEGEN--\":1611:1613   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":1689:1690   */\n      0x00\n        /* \"--CODEGEN--\":1686:1687   */\n      dup1\n        /* \"--CODEGEN--\":1679:1691   */\n      revert\n        /* \"--CODEGEN--\":1611:1613   */\n    tag_42:\n        /* \"--CODEGEN--\":1705:1707   */\n      0x40\n        /* \"--CODEGEN--\":1698:1720   */\n      mstore\n        /* \"--CODEGEN--\":1509:1725   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":1732:1823   */\n    tag_43:\n      0x00\n        /* \"--CODEGEN--\":1794:1818   */\n      tag_13\n        /* \"--CODEGEN--\":1812:1817   */\n      dup3\n        /* \"--CODEGEN--\":1794:1818   */\n      jump(tag_45)\n        /* \"--CODEGEN--\":1830:1929   */\n    tag_46:\n        /* \"--CODEGEN--\":1919:1924   */\n      swap1\n        /* \"--CODEGEN--\":1902:1929   */\n      jump\n        /* \"--CODEGEN--\":1936:2057   */\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"--CODEGEN--\":1998:2052   */\n      and\n      swap1\n        /* \"--CODEGEN--\":1981:2057   */\n      jump\n        /* \"--CODEGEN--\":2143:2260   */\n    tag_26:\n        /* \"--CODEGEN--\":2212:2236   */\n      tag_48\n        /* \"--CODEGEN--\":2230:2235   */\n      dup2\n        /* \"--CODEGEN--\":2212:2236   */\n      jump(tag_43)\n    tag_48:\n        /* \"--CODEGEN--\":2205:2210   */\n      dup2\n        /* \"--CODEGEN--\":2202:2237   */\n      eq\n        /* \"--CODEGEN--\":2192:2194   */\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":2251:2252   */\n      0x00\n        /* \"--CODEGEN--\":2248:2249   */\n      dup1\n        /* \"--CODEGEN--\":2241:2253   */\n      revert\n        /* \"--CODEGEN--\":2192:2194   */\n    tag_49:\n        /* \"--CODEGEN--\":2186:2260   */\n      pop\n      jump\n        /* \"--CODEGEN--\":2267:2438   */\n    tag_36:\n        /* \"--CODEGEN--\":2363:2414   */\n      tag_48\n        /* \"--CODEGEN--\":2408:2413   */\n      dup2\n        /* \"--CODEGEN--\":2363:2414   */\n      jump(tag_46)\n\n    auxdata: 0xa365627a7a72315820189369da2c003799b008c295565ee03e17a82a89b0c3b5bdef05425c62ca35f46c6578706572696d656e74616cf564736f6c63430005110040\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "610286610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063fd7c9a151461003a575b600080fd5b81801561004657600080fd5b5061005a6100553660046101a8565b61005c565b005b61006c828263ffffffff6100b416565b6100b0578154600180820184556000848152602090819020845160029094020180546001600160a01b0319166001600160a01b039094169390931783558301519101555b5050565b6000805b835481101561013f5782600001516001600160a01b03168460000182815481106100de57fe5b60009182526020909120600290910201546001600160a01b03161480156101285750826020015184600001828154811061011457fe5b906000526020600020906002020160010154145b15610137576001915050610145565b6001016100b8565b50600090505b92915050565b803561014581610223565b60006040828403121561016857600080fd5b61017260406101e2565b90506000610180848461014b565b82525060206101918484830161019d565b60208301525092915050565b80356101458161023a565b600080606083850312156101bb57600080fd5b60006101c7858561019d565b92505060206101d885828601610156565b9150509250929050565b60405181810167ffffffffffffffff8111828210171561020157600080fd5b604052919050565b600061014582610217565b90565b6001600160a01b031690565b61022c81610209565b811461023757600080fd5b50565b61022c8161021456fea365627a7a72315820189369da2c003799b008c295565ee03e17a82a89b0c3b5bdef05425c62ca35f46c6578706572696d656e74616cf564736f6c63430005110040",
							"opcodes": "PUSH2 0x286 PUSH2 0x26 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x19 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFD7C9A15 EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A PUSH2 0x55 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A8 JUMP JUMPDEST PUSH2 0x5C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6C DUP3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB4 AND JUMP JUMPDEST PUSH2 0xB0 JUMPI DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 MLOAD PUSH1 0x2 SWAP1 SWAP5 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR DUP4 SSTORE DUP4 ADD MLOAD SWAP2 ADD SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x13F JUMPI DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDE JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x128 JUMPI POP DUP3 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x114 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x137 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x145 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xB8 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x145 DUP2 PUSH2 0x223 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x172 PUSH1 0x40 PUSH2 0x1E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x180 DUP5 DUP5 PUSH2 0x14B JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 PUSH2 0x191 DUP5 DUP5 DUP4 ADD PUSH2 0x19D JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x145 DUP2 PUSH2 0x23A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C7 DUP6 DUP6 PUSH2 0x19D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D8 DUP6 DUP3 DUP7 ADD PUSH2 0x156 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x145 DUP3 PUSH2 0x217 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x22C DUP2 PUSH2 0x209 JUMP JUMPDEST DUP2 EQ PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22C DUP2 PUSH2 0x214 JUMP INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 XOR SWAP4 PUSH10 0xDA2C003799B008C29556 0x5E 0xE0 RETURNDATACOPY OR 0xA8 0x2A DUP10 0xB0 0xC3 0xB5 0xBD 0xEF SDIV TIMESTAMP 0x5C PUSH3 0xCA35F4 PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP SDIV GT STOP BLOCKHASH ",
							"sourceMap": "85:1983:2:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063fd7c9a151461003a575b600080fd5b81801561004657600080fd5b5061005a6100553660046101a8565b61005c565b005b61006c828263ffffffff6100b416565b6100b0578154600180820184556000848152602090819020845160029094020180546001600160a01b0319166001600160a01b039094169390931783558301519101555b5050565b6000805b835481101561013f5782600001516001600160a01b03168460000182815481106100de57fe5b60009182526020909120600290910201546001600160a01b03161480156101285750826020015184600001828154811061011457fe5b906000526020600020906002020160010154145b15610137576001915050610145565b6001016100b8565b50600090505b92915050565b803561014581610223565b60006040828403121561016857600080fd5b61017260406101e2565b90506000610180848461014b565b82525060206101918484830161019d565b60208301525092915050565b80356101458161023a565b600080606083850312156101bb57600080fd5b60006101c7858561019d565b92505060206101d885828601610156565b9150509250929050565b60405181810167ffffffffffffffff8111828210171561020157600080fd5b604052919050565b600061014582610217565b90565b6001600160a01b031690565b61022c81610209565b811461023757600080fd5b50565b61022c8161021456fea365627a7a72315820189369da2c003799b008c295565ee03e17a82a89b0c3b5bdef05425c62ca35f46c6578706572696d656e74616cf564736f6c63430005110040",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFD7C9A15 EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A PUSH2 0x55 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A8 JUMP JUMPDEST PUSH2 0x5C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6C DUP3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB4 AND JUMP JUMPDEST PUSH2 0xB0 JUMPI DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 MLOAD PUSH1 0x2 SWAP1 SWAP5 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR DUP4 SSTORE DUP4 ADD MLOAD SWAP2 ADD SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x13F JUMPI DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDE JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x128 JUMPI POP DUP3 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x114 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x137 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x145 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xB8 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x145 DUP2 PUSH2 0x223 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x172 PUSH1 0x40 PUSH2 0x1E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x180 DUP5 DUP5 PUSH2 0x14B JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 PUSH2 0x191 DUP5 DUP5 DUP4 ADD PUSH2 0x19D JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x145 DUP2 PUSH2 0x23A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C7 DUP6 DUP6 PUSH2 0x19D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D8 DUP6 DUP3 DUP7 ADD PUSH2 0x156 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x145 DUP3 PUSH2 0x217 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x22C DUP2 PUSH2 0x209 JUMP JUMPDEST DUP2 EQ PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x22C DUP2 PUSH2 0x214 JUMP INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 XOR SWAP4 PUSH10 0xDA2C003799B008C29556 0x5E 0xE0 RETURNDATACOPY OR 0xA8 0x2A DUP10 0xB0 0xC3 0xB5 0xBD 0xEF SDIV TIMESTAMP 0x5C PUSH3 0xCA35F4 PUSH13 0x6578706572696D656E74616CF5 PUSH5 0x736F6C6343 STOP SDIV GT STOP BLOCKHASH ",
							"sourceMap": "85:1983:2:-;;;;;;;;;;;;;;;;;;;;;;;;410:262;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;410:262:2;;;;;;;;:::i;:::-;;;591:22;:4;603:9;591:22;:11;:22;:::i;:::-;586:80;;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;629:26:2;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;629:26:2;-1:-1:-1;;;;;629:26:2;;;;;;;;;;;;;;;586:80;410:262;;:::o;1648:418::-;1760:4;;1776:262;1800:17;;1796:21;;1776:262;;;1887:9;:20;;;-1:-1:-1;;;;;1859:48:2;:4;:10;;1870:1;1859:13;;;;;;;;;;;;;;;;;;;;;:24;-1:-1:-1;;;;;1859:24:2;:48;:110;;;;;1952:9;:17;;;1927:4;:10;;1938:1;1927:13;;;;;;;;;;;;;;;;;;:21;;;:42;1859:110;1838:190;;;2009:4;2002:11;;;;;1838:190;1819:3;;1776:262;;;;2054:5;2047:12;;1648:418;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;181:476;;295:4;283:9;278:3;274:19;270:30;267:2;;;313:1;310;303:12;267:2;331:20;346:4;331:20;;;322:29;-1:-1;407:1;439:49;484:3;464:9;439:49;;;414:75;;-1:-1;553:2;586:49;631:3;607:22;;;586:49;;;579:4;572:5;568:16;561:75;510:137;261:396;;;;;664:184;758:20;;783:60;758:20;783:60;;992:470;;;1165:2;1153:9;1144:7;1140:23;1136:32;1133:2;;;1181:1;1178;1171:12;1133:2;1216:1;1233:80;1305:7;1285:9;1233:80;;;1223:90;;1195:124;1350:2;1368:78;1438:7;1429:6;1418:9;1414:22;1368:78;;;1358:88;;1329:123;1127:335;;;;;;1469:256;1531:2;1525:9;1557:17;;;1632:18;1617:34;;1653:22;;;1614:62;1611:2;;;1689:1;1686;1679:12;1611:2;1705;1698:22;1509:216;;-1:-1;1509:216;1732:91;;1794:24;1812:5;1794:24;;1830:99;1919:5;1902:27;1936:121;-1:-1;;;;;1998:54;;1981:76;2143:117;2212:24;2230:5;2212:24;;;2205:5;2202:35;2192:2;;2251:1;2248;2241:12;2192:2;2186:74;;2267:171;2363:51;2408:5;2363:51;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "129200",
								"executionCost": "202",
								"totalCost": "129402"
							},
							"external": {
								"addTokenDet(TokenDetArrayLib.TokenDets storage,TokenDetArrayLib.TokenDet)": "infinite"
							},
							"internal": {
								"exists(struct TokenDetArrayLib.TokenDets storage pointer,struct TokenDetArrayLib.TokenDet memory)": "infinite",
								"getIndexByTokenDet(struct TokenDetArrayLib.TokenDets storage pointer,struct TokenDetArrayLib.TokenDet memory)": "infinite",
								"removeTokenDet(struct TokenDetArrayLib.TokenDets storage pointer,struct TokenDetArrayLib.TokenDet memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 85,
									"end": 2068,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 85,
									"end": 2068,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a365627a7a72315820189369da2c003799b008c295565ee03e17a82a89b0c3b5bdef05425c62ca35f46c6578706572696d656e74616cf564736f6c63430005110040",
									".code": [
										{
											"begin": 85,
											"end": 2068,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "ADDRESS"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "EQ"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "MSTORE"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "LT"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "JUMPI"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "SHR"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "DUP1"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "PUSH",
											"value": "FD7C9A15"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "EQ"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "JUMPI"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "JUMPDEST"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "DUP1"
										},
										{
											"begin": 85,
											"end": 2068,
											"name": "REVERT"
										},
										{
											"begin": 410,
											"end": 672,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 410,
											"end": 672,
											"name": "JUMPDEST"
										},
										{
											"begin": 410,
											"end": 672,
											"name": "DUP2"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 410,
											"end": 672,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 410,
											"end": 672,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 410,
											"end": 672,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 410,
											"end": 672,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 410,
											"end": 672,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 410,
											"end": 672,
											"name": "JUMP"
										},
										{
											"begin": 410,
											"end": 672,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 410,
											"end": 672,
											"name": "JUMPDEST"
										},
										{
											"begin": 410,
											"end": 672,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 410,
											"end": 672,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 410,
											"end": 672,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 410,
											"end": 672,
											"name": "JUMPDEST"
										},
										{
											"begin": 410,
											"end": 672,
											"name": "STOP"
										},
										{
											"begin": 410,
											"end": 672,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 410,
											"end": 672,
											"name": "JUMPDEST"
										},
										{
											"begin": 591,
											"end": 613,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 591,
											"end": 595,
											"name": "DUP3"
										},
										{
											"begin": 603,
											"end": 612,
											"name": "DUP3"
										},
										{
											"begin": 591,
											"end": 613,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 591,
											"end": 602,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 591,
											"end": 613,
											"name": "AND"
										},
										{
											"begin": 591,
											"end": 613,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 591,
											"end": 613,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 591,
											"end": 613,
											"name": "JUMPDEST"
										},
										{
											"begin": 586,
											"end": 666,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 586,
											"end": 666,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "DUP1"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "DUP3"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "DUP5"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "DUP5"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "DUP2"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "MSTORE"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "DUP2"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "KECCAK256"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "DUP5"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "MLOAD"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "SWAP5"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "MUL"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "ADD"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "SWAP5"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "AND"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "SWAP4"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "SWAP1"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "SWAP4"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "OR"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "DUP4"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "SSTORE"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "DUP4"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "ADD"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "MLOAD"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "SWAP2"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "ADD"
										},
										{
											"begin": 629,
											"end": 655,
											"name": "SSTORE"
										},
										{
											"begin": 586,
											"end": 666,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 586,
											"end": 666,
											"name": "JUMPDEST"
										},
										{
											"begin": 410,
											"end": 672,
											"name": "POP"
										},
										{
											"begin": 410,
											"end": 672,
											"name": "POP"
										},
										{
											"begin": 410,
											"end": 672,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1648,
											"end": 2066,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1648,
											"end": 2066,
											"name": "JUMPDEST"
										},
										{
											"begin": 1760,
											"end": 1764,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1764,
											"name": "DUP1"
										},
										{
											"begin": 1776,
											"end": 2038,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1776,
											"end": 2038,
											"name": "JUMPDEST"
										},
										{
											"begin": 1800,
											"end": 1817,
											"name": "DUP4"
										},
										{
											"begin": 1800,
											"end": 1817,
											"name": "SLOAD"
										},
										{
											"begin": 1796,
											"end": 1817,
											"name": "DUP2"
										},
										{
											"begin": 1796,
											"end": 1817,
											"name": "LT"
										},
										{
											"begin": 1776,
											"end": 2038,
											"name": "ISZERO"
										},
										{
											"begin": 1776,
											"end": 2038,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1776,
											"end": 2038,
											"name": "JUMPI"
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "DUP3"
										},
										{
											"begin": 1887,
											"end": 1907,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1907,
											"name": "ADD"
										},
										{
											"begin": 1887,
											"end": 1907,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1859,
											"end": 1907,
											"name": "AND"
										},
										{
											"begin": 1859,
											"end": 1863,
											"name": "DUP5"
										},
										{
											"begin": 1859,
											"end": 1869,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1869,
											"name": "ADD"
										},
										{
											"begin": 1870,
											"end": 1871,
											"name": "DUP3"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "DUP2"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "SLOAD"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "DUP2"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "LT"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "JUMPI"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "INVALID"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "JUMPDEST"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "SWAP2"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "DUP3"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "MSTORE"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "SWAP1"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "SWAP2"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "KECCAK256"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "SWAP1"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "SWAP2"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "MUL"
										},
										{
											"begin": 1859,
											"end": 1872,
											"name": "ADD"
										},
										{
											"begin": 1859,
											"end": 1883,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1859,
											"end": 1883,
											"name": "AND"
										},
										{
											"begin": 1859,
											"end": 1907,
											"name": "EQ"
										},
										{
											"begin": 1859,
											"end": 1969,
											"name": "DUP1"
										},
										{
											"begin": 1859,
											"end": 1969,
											"name": "ISZERO"
										},
										{
											"begin": 1859,
											"end": 1969,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1859,
											"end": 1969,
											"name": "JUMPI"
										},
										{
											"begin": 1859,
											"end": 1969,
											"name": "POP"
										},
										{
											"begin": 1952,
											"end": 1961,
											"name": "DUP3"
										},
										{
											"begin": 1952,
											"end": 1969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1952,
											"end": 1969,
											"name": "ADD"
										},
										{
											"begin": 1952,
											"end": 1969,
											"name": "MLOAD"
										},
										{
											"begin": 1927,
											"end": 1931,
											"name": "DUP5"
										},
										{
											"begin": 1927,
											"end": 1937,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1927,
											"end": 1937,
											"name": "ADD"
										},
										{
											"begin": 1938,
											"end": 1939,
											"name": "DUP3"
										},
										{
											"begin": 1927,
											"end": 1940,
											"name": "DUP2"
										},
										{
											"begin": 1927,
											"end": 1940,
											"name": "SLOAD"
										},
										{
											"begin": 1927,
											"end": 1940,
											"name": "DUP2"
										},
										{
											"begin": 1927,
											"end": 1940,
											"name": "LT"
										},
										{
											"begin": 1927,
											"end": 1940,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1927,
											"end": 1940,
											"name": "JUMPI"
										},
										{
											"begin": 1927,
											"end": 1940,
											"name": "INVALID"
										},
										{
											"begin": 1927,
											"end": 1940,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1927,
											"end": 1940,
											"name": "JUMPDEST"
										},
										{
											"begin": 1927,
											"end": 1940,
											"name": "SWAP1"
										},
										{
											"begin": 1927,
											"end": 1940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1927,
											"end": 1940,
											"name": "MSTORE"
										},
										{
											"begin": 1927,
											"end": 1940,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1927,
											"end": 1940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1927,
											"end": 1940,
											"name": "KECCAK256"
										},
										{
											"begin": 1927,
											"end": 1940,
											"name": "SWAP1"
										},
										{
											"begin": 1927,
											"end": 1940,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1927,
											"end": 1940,
											"name": "MUL"
										},
										{
											"begin": 1927,
											"end": 1940,
											"name": "ADD"
										},
										{
											"begin": 1927,
											"end": 1948,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1927,
											"end": 1948,
											"name": "ADD"
										},
										{
											"begin": 1927,
											"end": 1948,
											"name": "SLOAD"
										},
										{
											"begin": 1927,
											"end": 1969,
											"name": "EQ"
										},
										{
											"begin": 1859,
											"end": 1969,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1859,
											"end": 1969,
											"name": "JUMPDEST"
										},
										{
											"begin": 1838,
											"end": 2028,
											"name": "ISZERO"
										},
										{
											"begin": 1838,
											"end": 2028,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1838,
											"end": 2028,
											"name": "JUMPI"
										},
										{
											"begin": 2009,
											"end": 2013,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "SWAP2"
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "POP"
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "POP"
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "JUMP"
										},
										{
											"begin": 1838,
											"end": 2028,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1838,
											"end": 2028,
											"name": "JUMPDEST"
										},
										{
											"begin": 1819,
											"end": 1822,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1819,
											"end": 1822,
											"name": "ADD"
										},
										{
											"begin": 1776,
											"end": 2038,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1776,
											"end": 2038,
											"name": "JUMP"
										},
										{
											"begin": 1776,
											"end": 2038,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1776,
											"end": 2038,
											"name": "JUMPDEST"
										},
										{
											"begin": 1776,
											"end": 2038,
											"name": "POP"
										},
										{
											"begin": 2054,
											"end": 2059,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2059,
											"name": "SWAP1"
										},
										{
											"begin": 2047,
											"end": 2059,
											"name": "POP"
										},
										{
											"begin": 1648,
											"end": 2066,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1648,
											"end": 2066,
											"name": "JUMPDEST"
										},
										{
											"begin": 1648,
											"end": 2066,
											"name": "SWAP3"
										},
										{
											"begin": 1648,
											"end": 2066,
											"name": "SWAP2"
										},
										{
											"begin": 1648,
											"end": 2066,
											"name": "POP"
										},
										{
											"begin": 1648,
											"end": 2066,
											"name": "POP"
										},
										{
											"begin": 1648,
											"end": 2066,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "JUMPDEST"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 72,
											"end": 92,
											"name": "DUP2"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP"
										},
										{
											"begin": 181,
											"end": 657,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 181,
											"end": 657,
											"name": "JUMPDEST"
										},
										{
											"begin": 181,
											"end": 657,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 295,
											"end": 299,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 283,
											"end": 292,
											"name": "DUP3"
										},
										{
											"begin": 278,
											"end": 281,
											"name": "DUP5"
										},
										{
											"begin": 274,
											"end": 293,
											"name": "SUB"
										},
										{
											"begin": 270,
											"end": 300,
											"name": "SLT"
										},
										{
											"begin": 267,
											"end": 269,
											"name": "ISZERO"
										},
										{
											"begin": 267,
											"end": 269,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 267,
											"end": 269,
											"name": "JUMPI"
										},
										{
											"begin": 313,
											"end": 314,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 310,
											"end": 311,
											"name": "DUP1"
										},
										{
											"begin": 303,
											"end": 315,
											"name": "REVERT"
										},
										{
											"begin": 267,
											"end": 269,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 267,
											"end": 269,
											"name": "JUMPDEST"
										},
										{
											"begin": 331,
											"end": 351,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 346,
											"end": 350,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 331,
											"end": 351,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 331,
											"end": 351,
											"name": "JUMP"
										},
										{
											"begin": 331,
											"end": 351,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 331,
											"end": 351,
											"name": "JUMPDEST"
										},
										{
											"begin": 322,
											"end": 351,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 407,
											"end": 408,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 439,
											"end": 488,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 484,
											"end": 487,
											"name": "DUP5"
										},
										{
											"begin": 464,
											"end": 473,
											"name": "DUP5"
										},
										{
											"begin": 439,
											"end": 488,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 439,
											"end": 488,
											"name": "JUMP"
										},
										{
											"begin": 439,
											"end": 488,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 439,
											"end": 488,
											"name": "JUMPDEST"
										},
										{
											"begin": 414,
											"end": 489,
											"name": "DUP3"
										},
										{
											"begin": 414,
											"end": 489,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 586,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 631,
											"end": 634,
											"name": "DUP5"
										},
										{
											"begin": 607,
											"end": 629,
											"name": "DUP5"
										},
										{
											"begin": 607,
											"end": 629,
											"name": "DUP4"
										},
										{
											"begin": 607,
											"end": 629,
											"name": "ADD"
										},
										{
											"begin": 586,
											"end": 635,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 586,
											"end": 635,
											"name": "JUMP"
										},
										{
											"begin": 586,
											"end": 635,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 586,
											"end": 635,
											"name": "JUMPDEST"
										},
										{
											"begin": 579,
											"end": 583,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 572,
											"end": 577,
											"name": "DUP4"
										},
										{
											"begin": 568,
											"end": 584,
											"name": "ADD"
										},
										{
											"begin": 561,
											"end": 636,
											"name": "MSTORE"
										},
										{
											"begin": 510,
											"end": 647,
											"name": "POP"
										},
										{
											"begin": 261,
											"end": 657,
											"name": "SWAP3"
										},
										{
											"begin": 261,
											"end": 657,
											"name": "SWAP2"
										},
										{
											"begin": 261,
											"end": 657,
											"name": "POP"
										},
										{
											"begin": 261,
											"end": 657,
											"name": "POP"
										},
										{
											"begin": 261,
											"end": 657,
											"name": "JUMP"
										},
										{
											"begin": 664,
											"end": 848,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 664,
											"end": 848,
											"name": "JUMPDEST"
										},
										{
											"begin": 758,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 758,
											"end": 778,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 783,
											"end": 843,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 758,
											"end": 778,
											"name": "DUP2"
										},
										{
											"begin": 783,
											"end": 843,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 783,
											"end": 843,
											"name": "JUMP"
										},
										{
											"begin": 992,
											"end": 1462,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 992,
											"end": 1462,
											"name": "JUMPDEST"
										},
										{
											"begin": 992,
											"end": 1462,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 992,
											"end": 1462,
											"name": "DUP1"
										},
										{
											"begin": 1165,
											"end": 1167,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1153,
											"end": 1162,
											"name": "DUP4"
										},
										{
											"begin": 1144,
											"end": 1151,
											"name": "DUP6"
										},
										{
											"begin": 1140,
											"end": 1163,
											"name": "SUB"
										},
										{
											"begin": 1136,
											"end": 1168,
											"name": "SLT"
										},
										{
											"begin": 1133,
											"end": 1135,
											"name": "ISZERO"
										},
										{
											"begin": 1133,
											"end": 1135,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1133,
											"end": 1135,
											"name": "JUMPI"
										},
										{
											"begin": 1181,
											"end": 1182,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1178,
											"end": 1179,
											"name": "DUP1"
										},
										{
											"begin": 1171,
											"end": 1183,
											"name": "REVERT"
										},
										{
											"begin": 1133,
											"end": 1135,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1133,
											"end": 1135,
											"name": "JUMPDEST"
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1313,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1305,
											"end": 1312,
											"name": "DUP6"
										},
										{
											"begin": 1285,
											"end": 1294,
											"name": "DUP6"
										},
										{
											"begin": 1233,
											"end": 1313,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1233,
											"end": 1313,
											"name": "JUMP"
										},
										{
											"begin": 1233,
											"end": 1313,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1313,
											"name": "JUMPDEST"
										},
										{
											"begin": 1223,
											"end": 1313,
											"name": "SWAP3"
										},
										{
											"begin": 1223,
											"end": 1313,
											"name": "POP"
										},
										{
											"begin": 1195,
											"end": 1319,
											"name": "POP"
										},
										{
											"begin": 1350,
											"end": 1352,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1446,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "DUP6"
										},
										{
											"begin": 1429,
											"end": 1435,
											"name": "DUP3"
										},
										{
											"begin": 1418,
											"end": 1427,
											"name": "DUP7"
										},
										{
											"begin": 1414,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 1368,
											"end": 1446,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1368,
											"end": 1446,
											"name": "JUMP"
										},
										{
											"begin": 1368,
											"end": 1446,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1368,
											"end": 1446,
											"name": "JUMPDEST"
										},
										{
											"begin": 1358,
											"end": 1446,
											"name": "SWAP2"
										},
										{
											"begin": 1358,
											"end": 1446,
											"name": "POP"
										},
										{
											"begin": 1329,
											"end": 1452,
											"name": "POP"
										},
										{
											"begin": 1127,
											"end": 1462,
											"name": "SWAP3"
										},
										{
											"begin": 1127,
											"end": 1462,
											"name": "POP"
										},
										{
											"begin": 1127,
											"end": 1462,
											"name": "SWAP3"
										},
										{
											"begin": 1127,
											"end": 1462,
											"name": "SWAP1"
										},
										{
											"begin": 1127,
											"end": 1462,
											"name": "POP"
										},
										{
											"begin": 1127,
											"end": 1462,
											"name": "JUMP"
										},
										{
											"begin": 1469,
											"end": 1725,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1469,
											"end": 1725,
											"name": "JUMPDEST"
										},
										{
											"begin": 1531,
											"end": 1533,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1534,
											"name": "MLOAD"
										},
										{
											"begin": 1557,
											"end": 1574,
											"name": "DUP2"
										},
										{
											"begin": 1557,
											"end": 1574,
											"name": "DUP2"
										},
										{
											"begin": 1557,
											"end": 1574,
											"name": "ADD"
										},
										{
											"begin": 1632,
											"end": 1650,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1617,
											"end": 1651,
											"name": "DUP2"
										},
										{
											"begin": 1617,
											"end": 1651,
											"name": "GT"
										},
										{
											"begin": 1653,
											"end": 1675,
											"name": "DUP3"
										},
										{
											"begin": 1653,
											"end": 1675,
											"name": "DUP3"
										},
										{
											"begin": 1653,
											"end": 1675,
											"name": "LT"
										},
										{
											"begin": 1614,
											"end": 1676,
											"name": "OR"
										},
										{
											"begin": 1611,
											"end": 1613,
											"name": "ISZERO"
										},
										{
											"begin": 1611,
											"end": 1613,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1611,
											"end": 1613,
											"name": "JUMPI"
										},
										{
											"begin": 1689,
											"end": 1690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1686,
											"end": 1687,
											"name": "DUP1"
										},
										{
											"begin": 1679,
											"end": 1691,
											"name": "REVERT"
										},
										{
											"begin": 1611,
											"end": 1613,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1611,
											"end": 1613,
											"name": "JUMPDEST"
										},
										{
											"begin": 1705,
											"end": 1707,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1698,
											"end": 1720,
											"name": "MSTORE"
										},
										{
											"begin": 1509,
											"end": 1725,
											"name": "SWAP2"
										},
										{
											"begin": 1509,
											"end": 1725,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1509,
											"end": 1725,
											"name": "JUMP"
										},
										{
											"begin": 1732,
											"end": 1823,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 1732,
											"end": 1823,
											"name": "JUMPDEST"
										},
										{
											"begin": 1732,
											"end": 1823,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1818,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1812,
											"end": 1817,
											"name": "DUP3"
										},
										{
											"begin": 1794,
											"end": 1818,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1794,
											"end": 1818,
											"name": "JUMP"
										},
										{
											"begin": 1830,
											"end": 1929,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1830,
											"end": 1929,
											"name": "JUMPDEST"
										},
										{
											"begin": 1919,
											"end": 1924,
											"name": "SWAP1"
										},
										{
											"begin": 1902,
											"end": 1929,
											"name": "JUMP"
										},
										{
											"begin": 1936,
											"end": 2057,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1936,
											"end": 2057,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1998,
											"end": 2052,
											"name": "AND"
										},
										{
											"begin": 1998,
											"end": 2052,
											"name": "SWAP1"
										},
										{
											"begin": 1981,
											"end": 2057,
											"name": "JUMP"
										},
										{
											"begin": 2143,
											"end": 2260,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2143,
											"end": 2260,
											"name": "JUMPDEST"
										},
										{
											"begin": 2212,
											"end": 2236,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2230,
											"end": 2235,
											"name": "DUP2"
										},
										{
											"begin": 2212,
											"end": 2236,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2212,
											"end": 2236,
											"name": "JUMP"
										},
										{
											"begin": 2212,
											"end": 2236,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 2212,
											"end": 2236,
											"name": "JUMPDEST"
										},
										{
											"begin": 2205,
											"end": 2210,
											"name": "DUP2"
										},
										{
											"begin": 2202,
											"end": 2237,
											"name": "EQ"
										},
										{
											"begin": 2192,
											"end": 2194,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 2192,
											"end": 2194,
											"name": "JUMPI"
										},
										{
											"begin": 2251,
											"end": 2252,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2248,
											"end": 2249,
											"name": "DUP1"
										},
										{
											"begin": 2241,
											"end": 2253,
											"name": "REVERT"
										},
										{
											"begin": 2192,
											"end": 2194,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 2192,
											"end": 2194,
											"name": "JUMPDEST"
										},
										{
											"begin": 2186,
											"end": 2260,
											"name": "POP"
										},
										{
											"begin": 2186,
											"end": 2260,
											"name": "JUMP"
										},
										{
											"begin": 2267,
											"end": 2438,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2267,
											"end": 2438,
											"name": "JUMPDEST"
										},
										{
											"begin": 2363,
											"end": 2414,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2408,
											"end": 2413,
											"name": "DUP2"
										},
										{
											"begin": 2363,
											"end": 2414,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 2363,
											"end": 2414,
											"name": "JUMP"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addTokenDet(TokenDetArrayLib.TokenDets storage,TokenDetArrayLib.TokenDet)": "fd7c9a15"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"TokenDetArrayLib.sol\":\"TokenDetArrayLib\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"TokenDetArrayLib.sol\":{\"keccak256\":\"0xad54f8987c2e69b06d230e919032195c0bdcd5c55f8631b4f3029341283bbd39\",\"urls\":[\"bzz-raw://83c8ef60f2a600a8d52f0e6dac10055f048d26aae10f0d41a32ffa76fbe4ff1b\",\"dweb:/ipfs/QmTnQN2phQhvTppESRTsPxhn7TfRRWpv21doNiaECAp7NJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ownable.sol\":{\"keccak256\":\"0x5e2a25e49436a7b8c68d3c6cb9b59163d895311bec3677a30bfad13aef6bd011\",\"urls\":[\"bzz-raw://1a4a466535e13aa58e660cfefff3fdb66d22ed46d7a6524feab4910c8d0826a1\",\"dweb:/ipfs/QmNmdXMZSUthj7iH71HYqGE5atx1F3jhdXQ6P6hF72eoBi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 817,
								"contract": "ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "TokenDetArrayLib.sol:2:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.\npragma experimental ABIEncoderV2;\n^-------------------------------^\n",
				"message": "Experimental features are turned on. Do not use experimental features on live deployments.",
				"severity": "warning",
				"sourceLocation": {
					"end": 58,
					"file": "TokenDetArrayLib.sol",
					"start": 25
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "Storage.sol:2:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.\npragma experimental ABIEncoderV2;\n^-------------------------------^\n",
				"message": "Experimental features are turned on. Do not use experimental features on live deployments.",
				"severity": "warning",
				"sourceLocation": {
					"end": 58,
					"file": "Storage.sol",
					"start": 25
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ERC20Addresses.sol": {
				"ast": {
					"absolutePath": "ERC20Addresses.sol",
					"exportedSymbols": {
						"ERC20Addresses": [
							166
						]
					},
					"id": 167,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "ERC20Addresses",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 4,
									"libraryName": {
										"contractScope": null,
										"id": 2,
										"name": "ERC20Addresses",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 166,
										"src": "96:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Addresses_$166",
											"typeString": "library ERC20Addresses"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "90:40:0",
									"typeName": {
										"contractScope": null,
										"id": 3,
										"name": "erc20Addresses",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 8,
										"src": "115:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
											"typeString": "struct ERC20Addresses.erc20Addresses"
										}
									}
								},
								{
									"canonicalName": "ERC20Addresses.erc20Addresses",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 7,
											"name": "array",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "168:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "168:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 6,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "168:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "erc20Addresses",
									"nodeType": "StructDefinition",
									"scope": 166,
									"src": "136:54:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "292:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 20,
															"name": "erc20address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "318:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 15,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "302:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
																	"typeString": "struct ERC20Addresses.erc20Addresses storage pointer"
																}
															},
															"id": 18,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "array",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 7,
															"src": "302:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 19,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "302:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "302:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "302:29:0"
											}
										]
									},
									"documentation": null,
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addERC20Tokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "220:27:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
													"typeString": "struct ERC20Addresses.erc20Addresses"
												},
												"typeName": {
													"contractScope": null,
													"id": 9,
													"name": "erc20Addresses",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 8,
													"src": "220:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
														"typeString": "struct ERC20Addresses.erc20Addresses"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"name": "erc20address",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "249:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "219:51:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:0:0"
									},
									"scope": 166,
									"src": "196:142:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "489:301:0",
										"statements": [
											{
												"assignments": [
													36
												],
												"declarations": [
													{
														"constant": false,
														"id": 36,
														"name": "index",
														"nodeType": "VariableDeclaration",
														"scope": 76,
														"src": "499:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 35,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "499:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 37,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "499:13:0"
											},
											{
												"assignments": [
													39
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"name": "exists",
														"nodeType": "VariableDeclaration",
														"scope": 76,
														"src": "522:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 38,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "522:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 40,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "522:11:0"
											},
											{
												"body": {
													"id": 70,
													"nodeType": "Block",
													"src": "592:160:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 53,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 26,
																			"src": "610:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
																				"typeString": "struct ERC20Addresses.erc20Addresses storage pointer"
																			}
																		},
																		"id": 54,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "array",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 7,
																		"src": "610:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 56,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 55,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 42,
																		"src": "621:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "610:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 57,
																	"name": "_ercTokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "627:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "610:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 69,
															"nodeType": "IfStatement",
															"src": "606:136:0",
															"trueBody": {
																"id": 68,
																"nodeType": "Block",
																"src": "645:97:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 61,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 59,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 36,
																				"src": "663:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 60,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 42,
																				"src": "671:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "663:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 62,
																		"nodeType": "ExpressionStatement",
																		"src": "663:9:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 65,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 63,
																				"name": "exists",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 39,
																				"src": "690:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "74727565",
																				"id": 64,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "699:4:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "690:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 66,
																		"nodeType": "ExpressionStatement",
																		"src": "690:13:0"
																	},
																	{
																		"id": 67,
																		"nodeType": "Break",
																		"src": "722:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 45,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "564:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 46,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "568:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
																	"typeString": "struct ERC20Addresses.erc20Addresses storage pointer"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "array",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 7,
															"src": "568:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 48,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "568:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "564:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 71,
												"initializationExpression": {
													"assignments": [
														42
													],
													"declarations": [
														{
															"constant": false,
															"id": 42,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 71,
															"src": "549:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 41,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "549:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 44,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "561:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "549:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "587:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 50,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "587:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 52,
													"nodeType": "ExpressionStatement",
													"src": "587:3:0"
												},
												"nodeType": "ForStatement",
												"src": "544:208:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 72,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "769:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 73,
															"name": "exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "776:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 74,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "768:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,bool)"
													}
												},
												"functionReturnParameters": 34,
												"id": 75,
												"nodeType": "Return",
												"src": "761:22:0"
											}
										]
									},
									"documentation": null,
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIndexByERC20Token",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "383:27:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
													"typeString": "struct ERC20Addresses.erc20Addresses"
												},
												"typeName": {
													"contractScope": null,
													"id": 25,
													"name": "erc20Addresses",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 8,
													"src": "383:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
														"typeString": "struct ERC20Addresses.erc20Addresses"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"name": "_ercTokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "420:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "373:77:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "474:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "483:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 32,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "483:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "473:15:0"
									},
									"scope": 166,
									"src": "344:446:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "908:368:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 84,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "922:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
																	"typeString": "struct ERC20Addresses.erc20Addresses storage pointer"
																}
															},
															"id": 85,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "array",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 7,
															"src": "922:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 86,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "922:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "942:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "922:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 126,
													"nodeType": "Block",
													"src": "1224:46:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 118,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 79,
																			"src": "1238:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
																				"typeString": "struct ERC20Addresses.erc20Addresses storage pointer"
																			}
																		},
																		"id": 121,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "array",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 7,
																		"src": "1238:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 122,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1238:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1258:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1238:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 125,
															"nodeType": "ExpressionStatement",
															"src": "1238:21:0"
														}
													]
												},
												"id": 127,
												"nodeType": "IfStatement",
												"src": "918:352:0",
												"trueBody": {
													"id": 117,
													"nodeType": "Block",
													"src": "944:267:0",
													"statements": [
														{
															"body": {
																"id": 115,
																"nodeType": "Block",
																"src": "1006:195:0",
																"statements": [
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 101,
																						"name": "self",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 79,
																						"src": "1057:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
																							"typeString": "struct ERC20Addresses.erc20Addresses storage pointer"
																						}
																					},
																					"id": 102,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "array",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 7,
																					"src": "1057:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 104,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 103,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 90,
																					"src": "1068:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1057:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 105,
																				"name": "_ercTokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 81,
																				"src": "1074:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "1057:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 114,
																		"nodeType": "IfStatement",
																		"src": "1028:155:0",
																		"trueBody": {
																			"id": 113,
																			"nodeType": "Block",
																			"src": "1114:69:0",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 111,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "delete",
																						"prefix": true,
																						"src": "1140:20:0",
																						"subExpression": {
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 107,
																									"name": "self",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 79,
																									"src": "1147:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
																										"typeString": "struct ERC20Addresses.erc20Addresses storage pointer"
																									}
																								},
																								"id": 108,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "array",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 7,
																								"src": "1147:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_storage",
																									"typeString": "address[] storage ref"
																								}
																							},
																							"id": 110,
																							"indexExpression": {
																								"argumentTypes": null,
																								"id": 109,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 90,
																								"src": "1158:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "1147:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 112,
																					"nodeType": "ExpressionStatement",
																					"src": "1140:20:0"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 93,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "978:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 94,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 79,
																			"src": "982:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
																				"typeString": "struct ERC20Addresses.erc20Addresses storage pointer"
																			}
																		},
																		"id": 95,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "array",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 7,
																		"src": "982:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "982:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "978:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 116,
															"initializationExpression": {
																"assignments": [
																	90
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 90,
																		"name": "i",
																		"nodeType": "VariableDeclaration",
																		"scope": 116,
																		"src": "963:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 89,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "963:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 92,
																"initialValue": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "975:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "963:13:0"
															},
															"loopExpression": {
																"expression": {
																	"argumentTypes": null,
																	"id": 99,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "1001:3:0",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 98,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 90,
																		"src": "1001:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 100,
																"nodeType": "ExpressionStatement",
																"src": "1001:3:0"
															},
															"nodeType": "ForStatement",
															"src": "958:243:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeERC20Token",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "831:27:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
													"typeString": "struct ERC20Addresses.erc20Addresses"
												},
												"typeName": {
													"contractScope": null,
													"id": 78,
													"name": "erc20Addresses",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 8,
													"src": "831:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
														"typeString": "struct ERC20Addresses.erc20Addresses"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"name": "_ercTokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "868:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "821:77:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:0:0"
									},
									"scope": 166,
									"src": "796:480:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "1403:224:0",
										"statements": [
											{
												"body": {
													"id": 160,
													"nodeType": "Block",
													"src": "1461:138:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 150,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 131,
																			"src": "1496:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
																				"typeString": "struct ERC20Addresses.erc20Addresses storage pointer"
																			}
																		},
																		"id": 151,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "array",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 7,
																		"src": "1496:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 153,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 152,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 139,
																		"src": "1507:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1496:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 154,
																	"name": "_ercTokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "1513:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1496:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 159,
															"nodeType": "IfStatement",
															"src": "1475:114:0",
															"trueBody": {
																"id": 158,
																"nodeType": "Block",
																"src": "1545:44:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"hexValue": "74727565",
																			"id": 156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1570:4:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 137,
																		"id": 157,
																		"nodeType": "Return",
																		"src": "1563:11:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 142,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "1433:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 143,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 131,
																"src": "1437:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
																	"typeString": "struct ERC20Addresses.erc20Addresses storage pointer"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "array",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 7,
															"src": "1437:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1437:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1433:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 161,
												"initializationExpression": {
													"assignments": [
														139
													],
													"declarations": [
														{
															"constant": false,
															"id": 139,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 161,
															"src": "1418:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 138,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1418:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 141,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1430:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1418:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1456:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 147,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "1456:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 149,
													"nodeType": "ExpressionStatement",
													"src": "1456:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1413:186:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "66616c7365",
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1615:5:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 137,
												"id": 163,
												"nodeType": "Return",
												"src": "1608:12:0"
											}
										]
									},
									"documentation": null,
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exists",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1306:27:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
													"typeString": "struct ERC20Addresses.erc20Addresses"
												},
												"typeName": {
													"contractScope": null,
													"id": 130,
													"name": "erc20Addresses",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 8,
													"src": "1306:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
														"typeString": "struct ERC20Addresses.erc20Addresses"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"name": "_ercTokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1343:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1343:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1296:77:0"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1397:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 135,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1397:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1396:6:0"
									},
									"scope": 166,
									"src": "1281:346:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 167,
							"src": "61:1568:0"
						}
					],
					"src": "0:1629:0"
				},
				"id": 0
			},
			"Storage.sol": {
				"ast": {
					"absolutePath": "Storage.sol",
					"exportedSymbols": {
						"ERC721Holder": [
							288
						],
						"IERC20": [
							253
						],
						"IERC721Receiver": [
							267
						],
						"IMintableToken": [
							358
						],
						"Storage": [
							612
						]
					},
					"id": 613,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"id": 169,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "25:33:1"
						},
						{
							"absolutePath": "TokenDetArrayLib.sol",
							"file": "./TokenDetArrayLib.sol",
							"id": 170,
							"nodeType": "ImportDirective",
							"scope": 613,
							"sourceUnit": 814,
							"src": "59:32:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ownable.sol",
							"file": "./ownable.sol",
							"id": 171,
							"nodeType": "ImportDirective",
							"scope": 613,
							"sourceUnit": 878,
							"src": "92:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20Addresses.sol",
							"file": "./ERC20Addresses.sol",
							"id": 172,
							"nodeType": "ImportDirective",
							"scope": 613,
							"sourceUnit": 167,
							"src": "116:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 253,
							"linearizedBaseContracts": [
								253
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "189:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "206:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "188:32:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "229:0:1"
									},
									"scope": 253,
									"src": "172:58:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "254:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "273:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "273:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "253:35:1"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "323:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "323:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "322:6:1"
									},
									"scope": 253,
									"src": "236:93:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "354:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "369:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "369:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "353:32:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "433:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "432:9:1"
									},
									"scope": 253,
									"src": "335:107:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "479:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "503:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "530:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "530:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "469:81:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "569:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "569:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "568:6:1"
									},
									"scope": 253,
									"src": "448:127:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 215,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseApproval",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "607:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"name": "_subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "625:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "606:44:1"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "667:0:1"
									},
									"scope": 253,
									"src": "581:87:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseApproval",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "700:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "717:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "699:37:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "745:0:1"
									},
									"scope": 253,
									"src": "674:72:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "779:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "796:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "778:37:1"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "824:0:1"
									},
									"scope": 253,
									"src": "752:73:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 236,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "875:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "857:42:1"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:0:1"
									},
									"scope": 253,
									"src": "831:86:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 244,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "938:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "960:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "980:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "937:57:1"
									},
									"src": "923:72:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 252,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "1025:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "1056:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "1089:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1015:93:1"
									},
									"src": "1001:108:1"
								}
							],
							"scope": 613,
							"src": "148:964:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 267,
							"linearizedBaseContracts": [
								267
							],
							"name": "IERC721Receiver",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 266,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "1180:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "1206:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "1228:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "1253:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1253:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1170:106:1"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "1293:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 263,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1293:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1292:8:1"
									},
									"scope": 267,
									"src": "1145:156:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 613,
							"src": "1114:189:1"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 268,
										"name": "IERC721Receiver",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 267,
										"src": "1330:15:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721Receiver_$267",
											"typeString": "contract IERC721Receiver"
										}
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "1330:15:1"
								}
							],
							"contractDependencies": [
								267
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 288,
							"linearizedBaseContracts": [
								288,
								267
							],
							"name": "ERC721Holder",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "1481:54:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 282,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "1498:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721Holder_$288",
																"typeString": "contract ERC721Holder"
															}
														},
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 287,
														"src": "1498:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1498:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 281,
												"id": 285,
												"nodeType": "Return",
												"src": "1491:37:1"
											}
										]
									},
									"documentation": null,
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1387:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1387:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1404:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1421:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1438:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 276,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1438:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1377:79:1"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1473:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 279,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1473:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1472:8:1"
									},
									"scope": 288,
									"src": "1352:183:1",
									"stateMutability": "nonpayable",
									"superFunction": 266,
									"visibility": "public"
								}
							],
							"scope": 613,
							"src": "1305:232:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 358,
							"linearizedBaseContracts": [
								358
							],
							"name": "IMintableToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"name": "_tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "1610:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1610:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1609:18:1"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "1651:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1650:15:1"
									},
									"scope": 358,
									"src": "1593:73:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royalities",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"name": "_tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "1692:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1691:18:1"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "1731:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1731:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1730:9:1"
									},
									"scope": 358,
									"src": "1672:68:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "creators",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"name": "_tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "1764:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1764:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1763:18:1"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "1803:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1803:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1802:17:1"
									},
									"scope": 358,
									"src": "1746:74:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1861:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1883:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1883:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1851:73:1"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1931:0:1"
									},
									"scope": 358,
									"src": "1826:106:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "1959:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1958:17:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "2021:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2020:18:1"
									},
									"scope": 358,
									"src": "1938:101:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "2079:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "2094:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2078:33:1"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "2157:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2157:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2156:6:1"
									},
									"scope": 358,
									"src": "2053:110:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 342,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"indexed": false,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "2198:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2198:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": false,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "2212:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2212:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"indexed": false,
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "2224:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2224:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2197:43:1"
									},
									"src": "2183:58:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 350,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"indexed": false,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "2261:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2261:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"indexed": false,
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "2276:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2276:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"indexed": false,
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "2294:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2294:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2260:50:1"
									},
									"src": "2246:65:1"
								},
								{
									"body": null,
									"documentation": null,
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"name": "_interfaceID",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "2419:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 351,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2419:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2418:21:1"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "2487:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 354,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2486:6:1"
									},
									"scope": 358,
									"src": "2392:101:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 613,
							"src": "1539:956:1"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 359,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 877,
										"src": "2518:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$877",
											"typeString": "contract Ownable"
										}
									},
									"id": 360,
									"nodeType": "InheritanceSpecifier",
									"src": "2518:7:1"
								}
							],
							"contractDependencies": [
								877
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 612,
							"linearizedBaseContracts": [
								612,
								877
							],
							"name": "Storage",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 363,
									"libraryName": {
										"contractScope": null,
										"id": 361,
										"name": "TokenDetArrayLib",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 813,
										"src": "2538:16:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_TokenDetArrayLib_$813",
											"typeString": "library TokenDetArrayLib"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "2532:54:1",
									"typeName": {
										"contractScope": null,
										"id": 362,
										"name": "TokenDetArrayLib.TokenDets",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 627,
										"src": "2559:26:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
											"typeString": "struct TokenDetArrayLib.TokenDets"
										}
									}
								},
								{
									"id": 366,
									"libraryName": {
										"contractScope": null,
										"id": 364,
										"name": "ERC20Addresses",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 166,
										"src": "2597:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Addresses_$166",
											"typeString": "library ERC20Addresses"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "2591:55:1",
									"typeName": {
										"contractScope": null,
										"id": 365,
										"name": "ERC20Addresses.erc20Addresses",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 8,
										"src": "2616:29:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
											"typeString": "struct ERC20Addresses.erc20Addresses"
										}
									}
								},
								{
									"constant": false,
									"id": 368,
									"name": "rewardDistributionPercentage",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "2695:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 367,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "2695:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 370,
									"name": "platFormFeePercentage",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "2743:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 369,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "2743:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 372,
									"name": "lpStakefeepercentage",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "2787:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 371,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "2787:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 374,
									"name": "updateClosingTime",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "2860:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 373,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2860:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 380,
									"name": "tokenOpenForSale",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "2899:61:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 379,
										"keyType": {
											"id": 375,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2907:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2899:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(uint256 => bool))"
										},
										"valueType": {
											"id": 378,
											"keyType": {
												"id": 376,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2926:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "2918:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueType": {
												"id": 377,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2937:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 384,
									"name": "tokensForSalePerUser",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "2966:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenDets_$627_storage_$",
										"typeString": "mapping(address => struct TokenDetArrayLib.TokenDets)"
									},
									"typeName": {
										"id": 383,
										"keyType": {
											"id": 381,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2974:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2966:46:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenDets_$627_storage_$",
											"typeString": "mapping(address => struct TokenDetArrayLib.TokenDets)"
										},
										"valueType": {
											"contractScope": null,
											"id": 382,
											"name": "TokenDetArrayLib.TokenDets",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 627,
											"src": "2985:26:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
												"typeString": "struct TokenDetArrayLib.TokenDets"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 386,
									"name": "fixedPriceTokens",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "3039:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_TokenDets_$627_storage",
										"typeString": "struct TokenDetArrayLib.TokenDets"
									},
									"typeName": {
										"contractScope": null,
										"id": 385,
										"name": "TokenDetArrayLib.TokenDets",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 627,
										"src": "3039:26:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
											"typeString": "struct TokenDetArrayLib.TokenDets"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 388,
									"name": "auctionTokens",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "3088:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_TokenDets_$627_storage",
										"typeString": "struct TokenDetArrayLib.TokenDets"
									},
									"typeName": {
										"contractScope": null,
										"id": 387,
										"name": "TokenDetArrayLib.TokenDets",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 627,
										"src": "3088:26:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
											"typeString": "struct TokenDetArrayLib.TokenDets"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"canonicalName": "Storage.auction",
									"id": 409,
									"members": [
										{
											"constant": false,
											"id": 390,
											"name": "lastOwner",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "3257:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 389,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3257:15:1",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 392,
											"name": "currentBid",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "3292:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 391,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3292:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 394,
											"name": "highestBidder",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "3320:29:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 393,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3320:15:1",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 396,
											"name": "auctionType",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "3359:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 395,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3359:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 398,
											"name": "startingPrice",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "3388:21:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 397,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3388:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 400,
											"name": "buyPrice",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "3419:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 399,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3419:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 402,
											"name": "buyer",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "3445:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 401,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3445:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 404,
											"name": "startingTime",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "3465:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 403,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3465:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 406,
											"name": "closingTime",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "3495:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 405,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3495:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 408,
											"name": "erc20Token",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "3524:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 407,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3524:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "auction",
									"nodeType": "StructDefinition",
									"scope": 612,
									"src": "3232:317:1",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.OfferDetails",
									"id": 414,
									"members": [
										{
											"constant": false,
											"id": 411,
											"name": "offerer",
											"nodeType": "VariableDeclaration",
											"scope": 414,
											"src": "3585:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 410,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3585:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 413,
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 414,
											"src": "3610:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 412,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3610:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "OfferDetails",
									"nodeType": "StructDefinition",
									"scope": 612,
									"src": "3555:76:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 422,
									"name": "offerprice",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "3948:157:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_OfferDetails_$414_storage_$_$_$",
										"typeString": "mapping(address => mapping(uint256 => mapping(address => struct Storage.OfferDetails)))"
									},
									"typeName": {
										"id": 421,
										"keyType": {
											"id": 415,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3965:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3948:139:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_OfferDetails_$414_storage_$_$_$",
											"typeString": "mapping(address => mapping(uint256 => mapping(address => struct Storage.OfferDetails)))"
										},
										"valueType": {
											"id": 420,
											"keyType": {
												"id": 416,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3998:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "3976:105:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_OfferDetails_$414_storage_$_$",
												"typeString": "mapping(uint256 => mapping(address => struct Storage.OfferDetails))"
											},
											"valueType": {
												"id": 419,
												"keyType": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4034:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "4009:62:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_OfferDetails_$414_storage_$",
													"typeString": "mapping(address => struct Storage.OfferDetails)"
												},
												"valueType": {
													"contractScope": null,
													"id": 418,
													"name": "OfferDetails",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 414,
													"src": "4045:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OfferDetails_$414_storage_ptr",
														"typeString": "struct Storage.OfferDetails"
													}
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 428,
									"name": "auctions",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "4112:63:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_auction_$409_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct Storage.auction))"
									},
									"typeName": {
										"id": 427,
										"keyType": {
											"id": 423,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4120:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4112:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_auction_$409_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct Storage.auction))"
										},
										"valueType": {
											"id": 426,
											"keyType": {
												"id": 424,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4139:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "4131:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_auction_$409_storage_$",
												"typeString": "mapping(uint256 => struct Storage.auction)"
											},
											"valueType": {
												"contractScope": null,
												"id": 425,
												"name": "auction",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 409,
												"src": "4150:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_auction_$409_storage_ptr",
													"typeString": "struct Storage.auction"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 438,
									"name": "bidOffers",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "4182:100:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_OfferDetails_$414_storage_$_$_$_$",
										"typeString": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => struct Storage.OfferDetails))))"
									},
									"typeName": {
										"id": 437,
										"keyType": {
											"id": 429,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4190:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4182:90:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_OfferDetails_$414_storage_$_$_$_$",
											"typeString": "mapping(address => mapping(uint256 => mapping(address => mapping(uint256 => struct Storage.OfferDetails))))"
										},
										"valueType": {
											"id": 436,
											"keyType": {
												"id": 430,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4207:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "4199:72:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_OfferDetails_$414_storage_$_$_$",
												"typeString": "mapping(uint256 => mapping(address => mapping(uint256 => struct Storage.OfferDetails)))"
											},
											"valueType": {
												"id": 435,
												"keyType": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "4218:52:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_OfferDetails_$414_storage_$_$",
													"typeString": "mapping(address => mapping(uint256 => struct Storage.OfferDetails))"
												},
												"valueType": {
													"id": 434,
													"keyType": {
														"id": 432,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4245:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Mapping",
													"src": "4237:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OfferDetails_$414_storage_$",
														"typeString": "mapping(uint256 => struct Storage.OfferDetails)"
													},
													"valueType": {
														"contractScope": null,
														"id": 433,
														"name": "OfferDetails",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 414,
														"src": "4256:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OfferDetails_$414_storage_ptr",
															"typeString": "struct Storage.OfferDetails"
														}
													}
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 440,
									"name": "tokensForSale",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "4289:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_TokenDets_$627_storage",
										"typeString": "struct TokenDetArrayLib.TokenDets"
									},
									"typeName": {
										"contractScope": null,
										"id": 439,
										"name": "TokenDetArrayLib.TokenDets",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 627,
										"src": "4289:26:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
											"typeString": "struct TokenDetArrayLib.TokenDets"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 442,
									"name": "erc20TokensArray",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "4335:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_erc20Addresses_$8_storage",
										"typeString": "struct ERC20Addresses.erc20Addresses"
									},
									"typeName": {
										"contractScope": null,
										"id": 441,
										"name": "ERC20Addresses.erc20Addresses",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 8,
										"src": "4335:29:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
											"typeString": "struct ERC20Addresses.erc20Addresses"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 444,
									"name": "WETHAddress",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "4388:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 443,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4388:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 446,
									"name": "StakeAddress",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "4420:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 445,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4420:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 448,
									"name": "LPStakeAddress",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "4453:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 447,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4453:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "4601:40:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 453,
													"name": "erc20TokensArray",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 442,
													"src": "4618:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_erc20Addresses_$8_storage",
														"typeString": "struct ERC20Addresses.erc20Addresses storage ref"
													}
												},
												"functionReturnParameters": 452,
												"id": 454,
												"nodeType": "Return",
												"src": "4611:23:1"
											}
										]
									},
									"documentation": null,
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getErc20Tokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4511:2:1"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "4559:36:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_erc20Addresses_$8_memory_ptr",
													"typeString": "struct ERC20Addresses.erc20Addresses"
												},
												"typeName": {
													"contractScope": null,
													"id": 450,
													"name": "ERC20Addresses.erc20Addresses",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 8,
													"src": "4559:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_erc20Addresses_$8_storage_ptr",
														"typeString": "struct ERC20Addresses.erc20Addresses"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4558:38:1"
									},
									"scope": 612,
									"src": "4488:153:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "4760:43:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 462,
														"name": "tokensForSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "4777:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenDets_$627_storage",
															"typeString": "struct TokenDetArrayLib.TokenDets storage ref"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "array",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 626,
													"src": "4777:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_storage_$dyn_storage",
														"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 461,
												"id": 464,
												"nodeType": "Return",
												"src": "4770:26:1"
											}
										]
									},
									"documentation": null,
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokensForSale",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4672:2:1"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "4720:34:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_memory_$dyn_memory_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDet[]"
												},
												"typeName": {
													"baseType": {
														"contractScope": null,
														"id": 458,
														"name": "TokenDetArrayLib.TokenDet",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 623,
														"src": "4720:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenDet_$623_storage_ptr",
															"typeString": "struct TokenDetArrayLib.TokenDet"
														}
													},
													"id": 459,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "4720:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_storage_$dyn_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDet[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4719:36:1"
									},
									"scope": 612,
									"src": "4647:156:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "4932:46:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 472,
														"name": "fixedPriceTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "4949:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenDets_$627_storage",
															"typeString": "struct TokenDetArrayLib.TokenDets storage ref"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "array",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 626,
													"src": "4949:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_storage_$dyn_storage",
														"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "4942:29:1"
											}
										]
									},
									"documentation": null,
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFixedPriceTokensForSale",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4844:2:1"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "4892:34:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_memory_$dyn_memory_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDet[]"
												},
												"typeName": {
													"baseType": {
														"contractScope": null,
														"id": 468,
														"name": "TokenDetArrayLib.TokenDet",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 623,
														"src": "4892:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenDet_$623_storage_ptr",
															"typeString": "struct TokenDetArrayLib.TokenDet"
														}
													},
													"id": 469,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "4892:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_storage_$dyn_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDet[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4891:36:1"
									},
									"scope": 612,
									"src": "4809:169:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "5104:43:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 482,
														"name": "auctionTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "5121:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenDets_$627_storage",
															"typeString": "struct TokenDetArrayLib.TokenDets storage ref"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "array",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 626,
													"src": "5121:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_storage_$dyn_storage",
														"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 481,
												"id": 484,
												"nodeType": "Return",
												"src": "5114:26:1"
											}
										]
									},
									"documentation": null,
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAuctionTokensForSale",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5016:2:1"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "5064:34:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_memory_$dyn_memory_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDet[]"
												},
												"typeName": {
													"baseType": {
														"contractScope": null,
														"id": 478,
														"name": "TokenDetArrayLib.TokenDet",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 623,
														"src": "5064:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenDet_$623_storage_ptr",
															"typeString": "struct TokenDetArrayLib.TokenDet"
														}
													},
													"id": 479,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5064:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_storage_$dyn_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDet[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5063:36:1"
									},
									"scope": 612,
									"src": "4984:163:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "5286:57:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 494,
															"name": "tokensForSalePerUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "5303:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenDets_$627_storage_$",
																"typeString": "mapping(address => struct TokenDetArrayLib.TokenDets storage ref)"
															}
														},
														"id": 496,
														"indexExpression": {
															"argumentTypes": null,
															"id": 495,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "5324:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5303:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenDets_$627_storage",
															"typeString": "struct TokenDetArrayLib.TokenDets storage ref"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "array",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 626,
													"src": "5303:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_storage_$dyn_storage",
														"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 493,
												"id": 498,
												"nodeType": "Return",
												"src": "5296:40:1"
											}
										]
									},
									"documentation": null,
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokensForSalePerUser",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "5186:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5186:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5185:15:1"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "5246:34:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_memory_$dyn_memory_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDet[]"
												},
												"typeName": {
													"baseType": {
														"contractScope": null,
														"id": 490,
														"name": "TokenDetArrayLib.TokenDet",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 623,
														"src": "5246:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenDet_$623_storage_ptr",
															"typeString": "struct TokenDetArrayLib.TokenDet"
														}
													},
													"id": 491,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5246:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_storage_$dyn_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDet[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5245:36:1"
									},
									"scope": 612,
									"src": "5153:190:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "5662:680:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 516,
																	"name": "_rewardDistributionAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "5680:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5718:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5710:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5710:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "5680:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 521,
																	"name": "_lpStakeAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "5723:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5748:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5740:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5740:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "5723:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5680:70:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "41646472657373206973205a65726f",
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5752:17:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e670bfa08eb5f25d567d041a29fcf35aa04ca7501940b719ddce5347028ce29",
																"typeString": "literal_string \"Address is Zero\""
															},
															"value": "Address is Zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e670bfa08eb5f25d567d041a29fcf35aa04ca7501940b719ddce5347028ce29",
																"typeString": "literal_string \"Address is Zero\""
															}
														],
														"id": 515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															895,
															896
														],
														"referencedDeclaration": 896,
														"src": "5672:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5672:98:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "5672:98:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 531,
																		"name": "_rewardDistributionPercentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "5788:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5821:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5788:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 534,
																		"name": "_platFormFeePercentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "5826:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5852:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5826:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5788:65:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 538,
																	"name": "_lpStakefeepercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "5856:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5879:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5856:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5788:92:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "73686f756c642062652067726561746572207468616e207a65726f",
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5882:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bed03f255cb9300d8bbdc0ffa6e5ccf2cea54584f95336598feddac44e82fb9",
																"typeString": "literal_string \"should be greater than zero\""
															},
															"value": "should be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bed03f255cb9300d8bbdc0ffa6e5ccf2cea54584f95336598feddac44e82fb9",
																"typeString": "literal_string \"should be greater than zero\""
															}
														],
														"id": 530,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															895,
															896
														],
														"referencedDeclaration": 896,
														"src": "5780:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5780:132:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "5780:132:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	"id": 548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 546,
																		"name": "_rewardDistributionPercentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "5930:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31303030",
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5963:4:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		},
																		"value": "1000"
																	},
																	"src": "5930:37:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 549,
																		"name": "_platFormFeePercentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "5971:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31303030",
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5997:4:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		},
																		"value": "1000"
																	},
																	"src": "5971:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5930:71:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 553,
																	"name": "_lpStakefeepercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "6005:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31303030",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6028:4:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "6005:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5930:102:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "73686f756c642062652067726561746572207468616e207a65726f",
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6034:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bed03f255cb9300d8bbdc0ffa6e5ccf2cea54584f95336598feddac44e82fb9",
																"typeString": "literal_string \"should be greater than zero\""
															},
															"value": "should be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bed03f255cb9300d8bbdc0ffa6e5ccf2cea54584f95336598feddac44e82fb9",
																"typeString": "literal_string \"should be greater than zero\""
															}
														],
														"id": 545,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															895,
															896
														],
														"referencedDeclaration": 896,
														"src": "5922:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5922:142:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "5922:142:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 560,
														"name": "rewardDistributionPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "6074:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 561,
														"name": "_rewardDistributionPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "6105:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "6074:60:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "6074:60:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 564,
														"name": "platFormFeePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6144:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 565,
														"name": "_platFormFeePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "6168:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "6144:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "6144:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 568,
														"name": "lpStakefeepercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "6200:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 569,
														"name": "_lpStakefeepercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "6221:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "6200:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "6200:42:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 572,
														"name": "StakeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "6252:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 573,
														"name": "_rewardDistributionAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "6267:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6252:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "6252:41:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 576,
														"name": "LPStakeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "6303:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 577,
														"name": "_lpStakeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "6320:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6303:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "6303:32:1"
											}
										]
									},
									"documentation": null,
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 513,
											"modifierName": {
												"argumentTypes": null,
												"id": 512,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 844,
												"src": "5652:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5652:9:1"
										}
									],
									"name": "setBrokerage",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"name": "_rewardDistributionAddress",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "5486:34:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5486:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"name": "_lpStakeAddress",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "5521:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5521:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"name": "_lpStakefeepercentage",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "5546:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 505,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5546:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"name": "_rewardDistributionPercentage",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "5576:36:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 507,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5576:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"name": "_platFormFeePercentage",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "5614:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 509,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5614:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5485:159:1"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5662:0:1"
									},
									"scope": 612,
									"src": "5464:878:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "6417:48:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 588,
														"name": "updateClosingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "6427:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 589,
														"name": "_updateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "6447:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6427:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "6427:31:1"
											}
										]
									},
									"documentation": null,
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 586,
											"modifierName": {
												"argumentTypes": null,
												"id": 585,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 844,
												"src": "6407:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6407:9:1"
										}
									],
									"name": "setUpdatedClosingTime",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"name": "_updateTime",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "6379:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6379:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6378:21:1"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6417:0:1"
									},
									"scope": 612,
									"src": "6348:117:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "6561:86:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 602,
														"name": "WETHAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "6571:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 603,
														"name": "_weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "6584:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6571:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "6571:18:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 606,
														"name": "StakeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "6599:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 607,
														"name": "_rewardDistributionAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "6614:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6599:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "6599:41:1"
											}
										]
									},
									"documentation": null,
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 600,
											"modifierName": {
												"argumentTypes": null,
												"id": 599,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 844,
												"src": "6551:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6551:9:1"
										}
									],
									"name": "setAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"name": "_weth",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "6491:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6491:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"name": "_rewardDistributionAddress",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "6506:34:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6506:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6490:51:1"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6561:0:1"
									},
									"scope": 612,
									"src": "6471:176:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 613,
							"src": "2498:4151:1"
						}
					],
					"src": "0:6649:1"
				},
				"id": 1
			},
			"TokenDetArrayLib.sol": {
				"ast": {
					"absolutePath": "TokenDetArrayLib.sol",
					"exportedSymbols": {
						"TokenDetArrayLib": [
							813
						]
					},
					"id": 814,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 614,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"id": 615,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "25:33:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 813,
							"linearizedBaseContracts": [
								813
							],
							"name": "TokenDetArrayLib",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 618,
									"libraryName": {
										"contractScope": null,
										"id": 616,
										"name": "TokenDetArrayLib",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 813,
										"src": "200:16:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_TokenDetArrayLib_$813",
											"typeString": "library TokenDetArrayLib"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "194:37:2",
									"typeName": {
										"contractScope": null,
										"id": 617,
										"name": "TokenDets",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 627,
										"src": "221:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
											"typeString": "struct TokenDetArrayLib.TokenDets"
										}
									}
								},
								{
									"canonicalName": "TokenDetArrayLib.TokenDet",
									"id": 623,
									"members": [
										{
											"constant": false,
											"id": 620,
											"name": "NFTAddress",
											"nodeType": "VariableDeclaration",
											"scope": 623,
											"src": "263:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 619,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "263:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 622,
											"name": "tokenID",
											"nodeType": "VariableDeclaration",
											"scope": 623,
											"src": "291:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 621,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "291:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "TokenDet",
									"nodeType": "StructDefinition",
									"scope": 813,
									"src": "237:76:2",
									"visibility": "public"
								},
								{
									"canonicalName": "TokenDetArrayLib.TokenDets",
									"id": 627,
									"members": [
										{
											"constant": false,
											"id": 626,
											"name": "array",
											"nodeType": "VariableDeclaration",
											"scope": 627,
											"src": "381:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_storage_$dyn_storage_ptr",
												"typeString": "struct TokenDetArrayLib.TokenDet[]"
											},
											"typeName": {
												"baseType": {
													"contractScope": null,
													"id": 624,
													"name": "TokenDet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 623,
													"src": "381:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDet_$623_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDet"
													}
												},
												"id": 625,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "381:10:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_storage_$dyn_storage_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDet[]"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "TokenDets",
									"nodeType": "StructDefinition",
									"scope": 813,
									"src": "354:50:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "576:96:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "590:23:2",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 636,
																"name": "_tokenDet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "603:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenDet_$623_memory_ptr",
																	"typeString": "struct TokenDetArrayLib.TokenDet memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_TokenDet_$623_memory_ptr",
																	"typeString": "struct TokenDetArrayLib.TokenDet memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 634,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "591:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
																	"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "exists",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 812,
															"src": "591:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_TokenDets_$627_storage_ptr_$_t_struct$_TokenDet_$623_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_TokenDets_$627_storage_ptr_$",
																"typeString": "function (struct TokenDetArrayLib.TokenDets storage pointer,struct TokenDetArrayLib.TokenDet memory) view returns (bool)"
															}
														},
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "591:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 648,
												"nodeType": "IfStatement",
												"src": "586:80:2",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "615:51:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 644,
																		"name": "_tokenDet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "645:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenDet_$623_memory_ptr",
																			"typeString": "struct TokenDetArrayLib.TokenDet memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_TokenDet_$623_memory_ptr",
																			"typeString": "struct TokenDetArrayLib.TokenDet memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 639,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 629,
																			"src": "629:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
																				"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																			}
																		},
																		"id": 642,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "array",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 626,
																		"src": "629:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_storage_$dyn_storage",
																			"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
																		}
																	},
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "629:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_TokenDet_$623_storage_$returns$_t_uint256_$",
																		"typeString": "function (struct TokenDetArrayLib.TokenDet storage ref) returns (uint256)"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "629:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 646,
															"nodeType": "ExpressionStatement",
															"src": "629:26:2"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addTokenDet",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "440:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDets"
												},
												"typeName": {
													"contractScope": null,
													"id": 628,
													"name": "TokenDets",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 627,
													"src": "440:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDets"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"name": "_tokenDet",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "472:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenDet_$623_memory_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDet"
												},
												"typeName": {
													"contractScope": null,
													"id": 630,
													"name": "TokenDet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 623,
													"src": "472:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDet_$623_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "430:138:2"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "576:0:2"
									},
									"scope": 813,
									"src": "410:262:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "817:430:2",
										"statements": [
											{
												"assignments": [
													662
												],
												"declarations": [
													{
														"constant": false,
														"id": 662,
														"name": "index",
														"nodeType": "VariableDeclaration",
														"scope": 714,
														"src": "827:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 661,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "827:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 663,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "827:13:2"
											},
											{
												"assignments": [
													665
												],
												"declarations": [
													{
														"constant": false,
														"id": 665,
														"name": "tokenExists",
														"nodeType": "VariableDeclaration",
														"scope": 714,
														"src": "850:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 664,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "850:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 667,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "66616c7365",
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "869:5:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "850:24:2"
											},
											{
												"body": {
													"id": 708,
													"nodeType": "Block",
													"src": "932:272:2",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 680,
																					"name": "self",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 652,
																					"src": "967:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
																						"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																					}
																				},
																				"id": 681,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "array",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 626,
																				"src": "967:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_storage_$dyn_storage",
																					"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
																				}
																			},
																			"id": 683,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 682,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 669,
																				"src": "978:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "967:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDet_$623_storage",
																				"typeString": "struct TokenDetArrayLib.TokenDet storage ref"
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "NFTAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 620,
																		"src": "967:24:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 685,
																			"name": "_tokenDet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "995:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDet_$623_memory_ptr",
																				"typeString": "struct TokenDetArrayLib.TokenDet memory"
																			}
																		},
																		"id": 686,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "NFTAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 620,
																		"src": "995:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "967:48:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 688,
																					"name": "self",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 652,
																					"src": "1035:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
																						"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																					}
																				},
																				"id": 689,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "array",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 626,
																				"src": "1035:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_storage_$dyn_storage",
																					"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
																				}
																			},
																			"id": 691,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 690,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 669,
																				"src": "1046:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1035:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDet_$623_storage",
																				"typeString": "struct TokenDetArrayLib.TokenDet storage ref"
																			}
																		},
																		"id": 692,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenID",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 622,
																		"src": "1035:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 693,
																			"name": "_tokenDet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "1060:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDet_$623_memory_ptr",
																				"typeString": "struct TokenDetArrayLib.TokenDet memory"
																			}
																		},
																		"id": 694,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenID",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 622,
																		"src": "1060:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1035:42:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "967:110:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 707,
															"nodeType": "IfStatement",
															"src": "946:248:2",
															"trueBody": {
																"id": 706,
																"nodeType": "Block",
																"src": "1093:101:2",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 697,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 662,
																				"src": "1111:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 698,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 669,
																				"src": "1119:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1111:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 700,
																		"nodeType": "ExpressionStatement",
																		"src": "1111:9:2"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 701,
																				"name": "tokenExists",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 665,
																				"src": "1138:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "74727565",
																				"id": 702,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1152:4:2",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "1138:18:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 704,
																		"nodeType": "ExpressionStatement",
																		"src": "1138:18:2"
																	},
																	{
																		"id": 705,
																		"nodeType": "Break",
																		"src": "1174:5:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 672,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "904:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 673,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "908:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
																	"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "array",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 626,
															"src": "908:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_storage_$dyn_storage",
																"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
															}
														},
														"id": 675,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "908:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "904:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 709,
												"initializationExpression": {
													"assignments": [
														669
													],
													"declarations": [
														{
															"constant": false,
															"id": 669,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 709,
															"src": "889:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 668,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "889:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 671,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "901:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "889:13:2"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "927:3:2",
														"subExpression": {
															"argumentTypes": null,
															"id": 677,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "927:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 679,
													"nodeType": "ExpressionStatement",
													"src": "927:3:2"
												},
												"nodeType": "ForStatement",
												"src": "884:320:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 710,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "1221:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 711,
															"name": "tokenExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "1228:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 712,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1220:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,bool)"
													}
												},
												"functionReturnParameters": 660,
												"id": 713,
												"nodeType": "Return",
												"src": "1213:27:2"
											}
										]
									},
									"documentation": null,
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIndexByTokenDet",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "715:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDets"
												},
												"typeName": {
													"contractScope": null,
													"id": 651,
													"name": "TokenDets",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 627,
													"src": "715:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDets"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"name": "_tokenDet",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "747:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenDet_$623_memory_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDet"
												},
												"typeName": {
													"contractScope": null,
													"id": 653,
													"name": "TokenDet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 623,
													"src": "747:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDet_$623_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "705:73:2"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "802:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "811:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 658,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "811:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "801:15:2"
									},
									"scope": 813,
									"src": "678:569:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "1374:268:2",
										"statements": [
											{
												"assignments": [
													725,
													727
												],
												"declarations": [
													{
														"constant": false,
														"id": 725,
														"name": "i",
														"nodeType": "VariableDeclaration",
														"scope": 764,
														"src": "1385:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 724,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1385:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 727,
														"name": "tokenExists",
														"nodeType": "VariableDeclaration",
														"scope": 764,
														"src": "1396:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 726,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1396:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 732,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 730,
															"name": "_tokenDet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "1440:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenDet_$623_memory_ptr",
																"typeString": "struct TokenDetArrayLib.TokenDet memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_TokenDet_$623_memory_ptr",
																"typeString": "struct TokenDetArrayLib.TokenDet memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 728,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "1416:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
																"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
															}
														},
														"id": 729,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getIndexByTokenDet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 715,
														"src": "1416:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_TokenDets_$627_storage_ptr_$_t_struct$_TokenDet_$623_memory_ptr_$returns$_t_uint256_$_t_bool_$bound_to$_t_struct$_TokenDets_$627_storage_ptr_$",
															"typeString": "function (struct TokenDetArrayLib.TokenDets storage pointer,struct TokenDetArrayLib.TokenDet memory) view returns (uint256,bool)"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1416:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1384:66:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 733,
														"name": "tokenExists",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "1464:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1479:4:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1464:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 761,
												"nodeType": "IfStatement",
												"src": "1460:154:2",
												"trueBody": {
													"id": 760,
													"nodeType": "Block",
													"src": "1485:129:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 736,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 717,
																			"src": "1499:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
																				"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																			}
																		},
																		"id": 739,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "array",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 626,
																		"src": "1499:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_storage_$dyn_storage",
																			"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
																		}
																	},
																	"id": 740,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 738,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 725,
																		"src": "1510:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1499:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenDet_$623_storage",
																		"typeString": "struct TokenDetArrayLib.TokenDet storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 741,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 717,
																			"src": "1515:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
																				"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																			}
																		},
																		"id": 742,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "array",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 626,
																		"src": "1515:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_storage_$dyn_storage",
																			"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
																		}
																	},
																	"id": 748,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 743,
																					"name": "self",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 717,
																					"src": "1526:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
																						"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																					}
																				},
																				"id": 744,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "array",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 626,
																				"src": "1526:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_storage_$dyn_storage",
																					"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
																				}
																			},
																			"id": 745,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "1526:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1546:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1526:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1515:33:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenDet_$623_storage",
																		"typeString": "struct TokenDetArrayLib.TokenDet storage ref"
																	}
																},
																"src": "1499:49:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenDet_$623_storage",
																	"typeString": "struct TokenDetArrayLib.TokenDet storage ref"
																}
															},
															"id": 750,
															"nodeType": "ExpressionStatement",
															"src": "1499:49:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 751,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 717,
																			"src": "1562:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
																				"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																			}
																		},
																		"id": 754,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "array",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 626,
																		"src": "1562:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_storage_$dyn_storage",
																			"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1562:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1562:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 757,
															"nodeType": "ExpressionStatement",
															"src": "1562:16:2"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1599:4:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 723,
															"id": 759,
															"nodeType": "Return",
															"src": "1592:11:2"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "66616c7365",
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1630:5:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 723,
												"id": 763,
												"nodeType": "Return",
												"src": "1623:12:2"
											}
										]
									},
									"documentation": null,
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeTokenDet",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "1286:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDets"
												},
												"typeName": {
													"contractScope": null,
													"id": 716,
													"name": "TokenDets",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 627,
													"src": "1286:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDets"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"name": "_tokenDet",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "1318:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenDet_$623_memory_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDet"
												},
												"typeName": {
													"contractScope": null,
													"id": 718,
													"name": "TokenDet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 623,
													"src": "1318:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDet_$623_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1276:73:2"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "1368:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 721,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1368:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1367:6:2"
									},
									"scope": 813,
									"src": "1253:389:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "1766:300:2",
										"statements": [
											{
												"body": {
													"id": 807,
													"nodeType": "Block",
													"src": "1824:214:2",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 786,
																					"name": "self",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "1859:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
																						"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																					}
																				},
																				"id": 787,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "array",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 626,
																				"src": "1859:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_storage_$dyn_storage",
																					"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
																				}
																			},
																			"id": 789,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 788,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 775,
																				"src": "1870:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1859:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDet_$623_storage",
																				"typeString": "struct TokenDetArrayLib.TokenDet storage ref"
																			}
																		},
																		"id": 790,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "NFTAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 620,
																		"src": "1859:24:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 791,
																			"name": "_tokenDet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 769,
																			"src": "1887:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDet_$623_memory_ptr",
																				"typeString": "struct TokenDetArrayLib.TokenDet memory"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "NFTAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 620,
																		"src": "1887:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "1859:48:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 794,
																					"name": "self",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "1927:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
																						"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																					}
																				},
																				"id": 795,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "array",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 626,
																				"src": "1927:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_storage_$dyn_storage",
																					"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
																				}
																			},
																			"id": 797,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 796,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 775,
																				"src": "1938:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1927:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDet_$623_storage",
																				"typeString": "struct TokenDetArrayLib.TokenDet storage ref"
																			}
																		},
																		"id": 798,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenID",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 622,
																		"src": "1927:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 799,
																			"name": "_tokenDet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 769,
																			"src": "1952:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenDet_$623_memory_ptr",
																				"typeString": "struct TokenDetArrayLib.TokenDet memory"
																			}
																		},
																		"id": 800,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenID",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 622,
																		"src": "1952:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1927:42:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1859:110:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 806,
															"nodeType": "IfStatement",
															"src": "1838:190:2",
															"trueBody": {
																"id": 805,
																"nodeType": "Block",
																"src": "1984:44:2",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"hexValue": "74727565",
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2009:4:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 773,
																		"id": 804,
																		"nodeType": "Return",
																		"src": "2002:11:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 778,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "1796:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 779,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "1800:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
																	"typeString": "struct TokenDetArrayLib.TokenDets storage pointer"
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "array",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 626,
															"src": "1800:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenDet_$623_storage_$dyn_storage",
																"typeString": "struct TokenDetArrayLib.TokenDet storage ref[] storage ref"
															}
														},
														"id": 781,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1800:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1796:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 808,
												"initializationExpression": {
													"assignments": [
														775
													],
													"declarations": [
														{
															"constant": false,
															"id": 775,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 808,
															"src": "1781:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 774,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1781:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 777,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1793:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1781:13:2"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1819:3:2",
														"subExpression": {
															"argumentTypes": null,
															"id": 783,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "1819:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 785,
													"nodeType": "ExpressionStatement",
													"src": "1819:3:2"
												},
												"nodeType": "ForStatement",
												"src": "1776:262:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "66616c7365",
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2054:5:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 773,
												"id": 810,
												"nodeType": "Return",
												"src": "2047:12:2"
											}
										]
									},
									"documentation": null,
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exists",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "1673:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDets"
												},
												"typeName": {
													"contractScope": null,
													"id": 766,
													"name": "TokenDets",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 627,
													"src": "1673:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDets_$627_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDets"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"name": "_tokenDet",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "1705:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenDet_$623_memory_ptr",
													"typeString": "struct TokenDetArrayLib.TokenDet"
												},
												"typeName": {
													"contractScope": null,
													"id": 768,
													"name": "TokenDet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 623,
													"src": "1705:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDet_$623_storage_ptr",
														"typeString": "struct TokenDetArrayLib.TokenDet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1663:73:2"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "1760:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1760:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1759:6:2"
									},
									"scope": 813,
									"src": "1648:418:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 814,
							"src": "85:1983:2"
						}
					],
					"src": "0:2068:2"
				},
				"id": 2
			},
			"ownable.sol": {
				"ast": {
					"absolutePath": "ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							877
						]
					},
					"id": 878,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 815,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 817,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 877,
									"src": "409:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 816,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "409:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "651:143:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 820,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "706:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 821,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "715:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "715:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "706:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "706:19:3"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 826,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "639:2:3"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "651:0:3"
									},
									"scope": 877,
									"src": "627:167:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "917:30:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 831,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 817,
													"src": "934:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 830,
												"id": 832,
												"nodeType": "Return",
												"src": "927:13:3"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "884:2:3"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "908:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "907:9:3"
									},
									"scope": 877,
									"src": "870:77:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "1056:82:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 837,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "1074:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1074:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1085:34:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 836,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															895,
															896
														],
														"referencedDeclaration": 896,
														"src": "1066:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1066:54:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 841,
												"nodeType": "ExpressionStatement",
												"src": "1066:54:3"
											},
											{
												"id": 842,
												"nodeType": "PlaceholderStatement",
												"src": "1130:1:3"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 844,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1053:2:3"
									},
									"src": "1035:103:3",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "1267:44:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 849,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "1284:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1284:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 851,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "1298:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1284:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 848,
												"id": 853,
												"nodeType": "Return",
												"src": "1277:27:3"
											}
										]
									},
									"documentation": "@dev Returns true if the caller is the current owner.",
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1237:2:3"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1261:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 846,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1261:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1260:6:3"
									},
									"scope": 877,
									"src": "1221:90:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "1522:173:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 863,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "1540:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1560:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1552:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1552:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1540:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1564:40:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 862,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															895,
															896
														],
														"referencedDeclaration": 896,
														"src": "1532:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1532:73:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "1532:73:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 871,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "1671:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 872,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "1680:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1671:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:3"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 860,
											"modifierName": {
												"argumentTypes": null,
												"id": 859,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 844,
												"src": "1512:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1512:9:3"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "1487:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1486:18:3"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1522:0:3"
									},
									"scope": 877,
									"src": "1460:235:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 878,
							"src": "386:1312:3"
						}
					],
					"src": "0:1698:3"
				},
				"id": 3
			}
		}
	}
}