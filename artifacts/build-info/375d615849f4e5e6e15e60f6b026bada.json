{
	"id": "375d615849f4e5e6e15e60f6b026bada",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"LPStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.13;\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\";\n\n/**\n * @title LPStaking contract\n * @author Ajitesh Mishra\n * @notice This contract will store and manage staking at APR defined by owner\n * @dev Store, calculate, collect and transefer stakes and rewards to end user\n */\ninterface IUNIV3POS{\n\n    function positions(uint256 tokenId)\n        external\n        view\n        returns (\n            uint96 nonce,\n            address operator,\n            address token0,\n            address token1,\n            uint24 fee,\n            int24 tickLower,\n            int24 tickUpper,\n            uint128 liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n}\n\n\ncontract LPStakingV3 is Initializable, ReentrancyGuardUpgradeable, OwnableUpgradeable {\n    // Lib for uints\n    using SafeMathUpgradeable for uint256;\n    using CountersUpgradeable for CountersUpgradeable.Counter;\n\n    CountersUpgradeable.Counter private _depositIds;\n    // Sec in a year\n\n    uint256 private APRTime; // = 365 days (For testing it can be updated to shorter time.)\n    address public onlyaddress;\n    IERC20Upgradeable public WETH; // WETH Contract\n\n    // Structure to store StakeHoders details\n    struct stakeDetails {\n        uint256 depositId; //deposit id\n        uint256 stake; // Total amount staked by the user for perticular pool\n        uint256 reward; // Total unclaimed reward calculated at lastRewardCalculated\n        uint256 APR; // APR at which the amount was staked\n        uint256 period; // vested for period\n        uint256 lastRewardCalculated; // time when user staked\n        uint256 poolId; //poolId\n        uint256 vestedFor; // months\n        uint256 NFTId;  \n    }\n\n    IUNIV3POS uniV3;\n\n    //interest rate\n    struct interestRate {\n        uint256 period;\n        uint256 APR;\n    }\n\n    //poolid=>period=>APR\n    mapping(uint256 => mapping(uint256 => uint256)) public vestingAPRPerPool;\n    /** mapping to store current status for stakeHolder\n     * Explaination:\n     *  {\n     *      Staker: {\n     *           Pool: staking details\n     *      }\n     *  }\n     */\n\n    mapping(address => bool) public tokenPools;\n    mapping(address => mapping(uint256 => stakeDetails)) public deposits;\n    mapping(address => uint256[]) public userDepositMap;\n    mapping(uint256 => stakeDetails) public depositDetails;\n\n    // Events\n    event Staked(address indexed staker, uint256 amount, uint256 indexed _poolId, uint256 timestamp);\n    event Unstaked(address indexed staker, uint256 amount, uint256 indexed _poolId, uint256 timestamp);\n    event RewardClaimed(address indexed staker, uint256 amount, uint256 indexed _poolId, uint256 timestamp);\n    event WETHDeposit(address indexed user, uint256 amount);\n    event WETHWithdraw(address indexed user, uint256 amount);\n    event Harvest(address indexed user, uint256 feeReward);\n\n    // Structure to store the pool's information\n    struct stakingPool {\n        address token; // Address of staking token\n        address reward; // Address of reward token\n        uint256 tvl; // Total value currently locked in this pool\n        uint256 totalAllotedReward; // Total award transfered to this contract by admin for reward.\n        uint256 totalClaimedReward; // Total reward claimed in this pool\n    }\n\n\n\n    struct periodPool {\n        uint256 tvl;\n        uint256 totalAllotedFeeReward;\n    }\n\n    // List of pools created by admin\n    stakingPool[] public pools;\n\n    //pool period map period=>tvl\n    mapping(uint256 => periodPool) public periodPoolMap;\n\n    //mapping(uint => periodPool) periodMaketFee;\n    uint256[] periods;\n\n    //Bool for staking and reward calculation paused\n    bool public isPaused;\n    uint256 public pausedTimestamp;\n    uint256 public periodSum; //sum of all periods\n    uint256 public constant PRECISION_FACTOR = 10**18;\n    /**\n     * @dev Modifier to check if pool exists\n     * @param _poolId Pools's ID\n     */\n    modifier poolExists(uint256 _poolId) {\n        require(_poolId < pools.length, \"Staking: Pool doesn't exists\");\n        _;\n    }\n\n    modifier onlyAddress() {\n        require(_msgSender() == onlyaddress, \"invalid access\");\n        _;\n    }\n\n    /**\n     * @notice This method will be called once only by proxy contract to init.\n     */\n    function initialize(\n        address _feeToken,\n        uint256[] memory _periods\n    ) external initializer {\n        __Context_init();\n        __Ownable_init();\n        __ReentrancyGuard_init();\n\n       \n        periods = _periods;\n        WETH = IERC20Upgradeable(_feeToken);\n        APRTime = 365 days;\n        setPeriodSum(_periods);\n    }\n\n    \n\n    modifier isUniqueTokenPool(address _token) {\n        require(!tokenPools[_token], \"Add : token pool already exits\");\n        _;\n    }\n\n    function setOnlyAddress(address _only) external onlyOwner {\n        onlyaddress = _only;\n    }\n\n    /**\n     * @dev This function is used to calculate sum of periods\n     */\n\n    function setPeriodSum(uint256[] memory _periods) internal {\n        periodSum = 0;\n        for (uint256 i = 0; i < _periods.length; i++) {\n            periodSum += _periods[i] == 0 ? 1 : _periods[i];\n        }\n    }\n\n    /**\n     * @dev This function will create new pool, access type is onlyOwner\n     * @notice This Function will create new pool with the token address,\\\n       reward address and the APR percentage.\n     * @param _token Staking token address for this pool. \n     * @param _reward Staking reward token address for this pool\n     * @param _periodRates APR percentage * 1000 for this pool.\n     */\n    function addPool(\n        address _token,\n        address _reward,\n        interestRate[] memory _periodRates\n    ) public onlyOwner isUniqueTokenPool(_token) {\n        tokenPools[_token] = true;\n        uint256 index = pools.length > 0 ? pools.length - 1 : pools.length;\n\n        // Add pool to contract\n        for (uint256 i; i < _periodRates.length; i++) {\n            vestingAPRPerPool[index][_periodRates[i].period] = _periodRates[i].APR;\n        }\n         uniV3 = IUNIV3POS(_token);\n        pools.push(stakingPool(_token, _reward, 0, 0, 0));\n    }\n\n    /**\n     * @dev This function allows owner to pause contract.\n     */\n    function PauseStaking() public onlyOwner {\n        require(!isPaused, \"Already Paused\");\n        isPaused = true;\n        pausedTimestamp = block.timestamp;\n    }\n\n    /**\n     * @dev This function allows owner to resume contract.\n     */\n    function ResumeStaking() public onlyOwner {\n        require(isPaused, \"Already Operational\");\n        isPaused = false;\n        pausedTimestamp = block.timestamp;\n    }\n\n    /**\n     * @dev This funtion will return the length of pools\\\n        which will be used to loop and get pool details.\n     * @notice Get the length of pools and use it to loop for index.\n     * @return Length of pool.\n     */\n    function poolLength() public view returns (uint256) {\n        return pools.length;\n    }\n\n    /**\n     * @dev This function allows owner to update APR for specific pool.\n     * @notice Let's you update the APR for this pool if you're current owner.\n     * @param _poolId pool's Id in which you want to update the APR.\n     * @param _periodRates New APR percentage * 1000.\n     */\n    function updateAPR(uint256 _poolId, interestRate[] memory _periodRates) public onlyOwner poolExists(_poolId) {\n        for (uint256 i; i < _periodRates.length; i++) {\n            vestingAPRPerPool[_poolId][_periodRates[i].period] = _periodRates[i].APR;\n        }\n    }\n\n    function getAPR(uint256 _poolId, uint256 _period) public view returns (uint256) {\n        return vestingAPRPerPool[_poolId][_period];\n    }\n\n    /**\n     * @dev This funciton allows owner to withdraw allotted reward amount from this contract.\n     * @notice Let's you withdraw reward fund in this contract.\n     * @param _poolId pool's Id in which you want to withdraw this reward.\n     * @param amount amount to be withdraw from contract to owner's wallet.\n     */\n    function withdrawRewardfromPool(uint256 _poolId, uint256 amount) public onlyOwner poolExists(_poolId) {\n        // Reward contract object.\n        IERC20Upgradeable rewardToken = IERC20Upgradeable(pools[_poolId].reward);\n\n        // Check if amount is allowed to spend the token\n        require(\n            pools[_poolId].totalAllotedReward >= amount,\n            \"Staking: amount Must be less than or equal to available rewards\"\n        );\n\n        // Transfer the token to contract\n        rewardToken.transfer(msg.sender, amount);\n\n        // Update the pool's stats\n        pools[_poolId].totalAllotedReward -= amount;\n    }\n\n    /**\n     * @dev This funciton allows owner to add more reward amount to  this contract.\n     * @notice Let's you allot more reward fund in this contract.\n     * @param _poolId pool's Id in which you want to add this reward.\n     * @param amount amount to be transfered from owner's wallet to this contract.\n     */\n    function addRewardToPool(uint256 _poolId, uint256 amount) public onlyOwner poolExists(_poolId) {\n        // Reward contract object.\n        IERC20Upgradeable rewardToken = IERC20Upgradeable(pools[_poolId].reward);\n\n        // Check if amount is allowed to spend the token\n        require(rewardToken.allowance(msg.sender, address(this)) >= amount, \"Staking: Must allow Spending\");\n\n        // Transfer the token to contract\n        rewardToken.transferFrom(msg.sender, address(this), amount);\n\n        // Update the pool's stats\n        pools[_poolId].totalAllotedReward += amount;\n    }\n\n    /**\n     * @notice Receive WETH Fee Deposit only admin\n     *\n     * @param amount to deposit\n     */\n\n    function receiveWETHFee(uint256 amount) external onlyAddress nonReentrant {\n        require(amount > 0, \"Collect Fee: Amount must be > 0\");\n        WETH.transferFrom(_msgSender(), address(this), amount);\n\n        for (uint256 i = 0; i < periods.length; i++) {\n            periodPoolMap[periods[i]].totalAllotedFeeReward += periods[i] == 0\n                ? (((1 * PRECISION_FACTOR) / periodSum) * amount) / PRECISION_FACTOR\n                : (((periods[i] * PRECISION_FACTOR) / periodSum) * amount) / PRECISION_FACTOR;\n        }\n        emit WETHDeposit(_msgSender(), amount);\n    }\n\n    /**\n     * @dev This function is used to withdraw WETH from contract from Admin only\n     */\n\n    function AdminWETHWithdraw() external onlyOwner nonReentrant {\n        uint256 accMarketFee = WETH.balanceOf(address(this));\n        WETH.transferFrom(address(this), _msgSender(), accMarketFee);\n        emit WETHWithdraw(_msgSender(), accMarketFee);\n    }\n\n    /**\n     * @dev This function is used to calculate current reward for stakeHolder\n     * @param _stakeHolder The address of stakeHolder to calculate reward till current block\n     * @return reward calculated till current block\n     */\n    function _calculateReward(\n        address _stakeHolder,\n        uint256 _dId,\n        bool isProrata\n    ) internal view returns (uint256 reward) {\n        stakeDetails memory stakeDetail = _stakeHolder != address(0)\n            ? deposits[_stakeHolder][_dId]\n            : depositDetails[_dId];\n\n        if (stakeDetail.stake > 0) {\n            // Without safemath formula for explanation\n            // reward = (\n            //     (stakeDetail.stake * stakeDetails.APR * (block.timestamp - stakeDetail.lastRewardCalculated)) /\n            //     (APRTime * 100 * 1000)\n            // );\n            if (isPaused) {\n                if (stakeDetail.lastRewardCalculated > pausedTimestamp) {\n                    reward = 0;\n                } else {\n                    reward = stakeDetail\n                        .stake\n                        .mul(stakeDetail.APR)\n                        .mul(pausedTimestamp.sub(stakeDetail.lastRewardCalculated))\n                        .div(APRTime.mul(100).mul(1000));\n                }\n            } else {\n                uint256 APR = isProrata ? getAPR(stakeDetail.poolId, 0) : stakeDetail.APR;\n                reward = stakeDetail.stake.mul(APR).mul(block.timestamp.sub(stakeDetail.lastRewardCalculated)).div(\n                    APRTime.mul(100).mul(1000)\n                );\n            }\n        } else {\n            reward = 0;\n        }\n    }\n\n    /**\n     * @dev This function is used to calculate Total reward for stakeHolder for pool\n     * @param _stakeHolder The address of stakeHolder to calculate Total reward\n     * @param _dId deposit id for reward calculation\n     * @param isProrata to calculate on prorata basis\n     * @return reward total reward\n     */\n    function calculateReward(\n        address _stakeHolder,\n        uint256 _dId,\n        bool isProrata\n    ) public view returns (uint256 reward) {\n        stakeDetails memory stakeDetail = deposits[_stakeHolder][_dId];\n        reward = stakeDetail.reward + _calculateReward(_stakeHolder, _dId, isProrata);\n    }\n\n    /**\n     * @dev Allows user to stake the amount the pool. Calculate the old reward\\\n       and updates the reward, staked amount and current APR.\n     * @notice This function will update your staked amount.\n     * @param _poolId The pool in which user wants to stake.\n     * @param tokenId The amount user wants to add into his stake.\n     */\n    function stake(\n        uint256 _poolId,\n        uint256 tokenId,\n        uint256 _period\n    ) external nonReentrant whenNotPaused poolExists(_poolId) returns (uint256) {\n        require(!isPaused, \"Staking is paused\");\n       // require(amount > 0, \"Invalid amount\");\n        require(getAPR(_poolId, _period) != 0, \"Invalid staking period\");\n        //extract data from NFT\n        (, ,address weth , address mprw , , , ,uint128 amount , , , , ) =uniV3.positions(tokenId);\n        //check for ETH/MPWR pool pair\n        require(address(WETH)==weth && pools[_poolId].reward ==mprw,\"Invalid LP pool\");\n        IERC721Upgradeable token = IERC721Upgradeable(pools[_poolId].token);\n        \n        // Check if amount is allowed to spend the token\n        require(token.isApprovedForAll(msg.sender, address(this)) || token.getApproved(tokenId)==address(this), \"Staking: Not approved\");\n        \n        // Transfer the token to contract\n        token.transferFrom(msg.sender, address(this), tokenId);\n\n        _depositIds.increment();\n        uint256 id = _depositIds.current();\n        // Calculate the last reward\n        uint256 uncalculatedReward = _calculateReward(msg.sender, id, true);\n\n        // Update the stake details\n        deposits[msg.sender][id].depositId = id;\n        deposits[msg.sender][id].stake += amount;\n        deposits[msg.sender][id].reward += uncalculatedReward;\n        deposits[msg.sender][id].lastRewardCalculated = block.timestamp;\n        deposits[msg.sender][id].APR = getAPR(_poolId, _period);\n        deposits[msg.sender][id].period = block.timestamp + (_period * 30 days);\n        deposits[msg.sender][id].poolId = _poolId;\n        deposits[msg.sender][id].vestedFor = _period;\n        deposits[msg.sender][id].NFTId = tokenId;\n\n        userDepositMap[msg.sender].push(id);\n        depositDetails[id] = deposits[msg.sender][id];\n        // Update TVL\n        pools[_poolId].tvl += amount;\n        periodPoolMap[_period].tvl += amount;\n\n        emit Staked(msg.sender, amount, _poolId, block.timestamp);\n        return id;\n    }\n\n    modifier whenNotPaused() {\n        require(!isPaused, \"contract paused!\");\n        _;\n    }\n\n    /**\n     * @dev Calculate the current reward and unstake the stake token, Transefer\n     * it to sender and update reward to 0\n     * @param _poolId Pool from which user want to claim the reward.\n     * @param _dId deposit id for getting reward fot deposit.\n     * @param isForceWithdraw bool flag for emergency withdraw.\n     * @notice This function will transfer the reward earned till now and staked token amount.\n     */\n    function withdraw(\n        uint256 _poolId,\n        uint256 _dId,\n        bool isForceWithdraw\n    ) external nonReentrant whenNotPaused poolExists(_poolId) {\n        stakeDetails memory details = deposits[msg.sender][_dId];\n        bool check = isForceWithdraw ? true : block.timestamp > details.period;\n        require(details.stake > 0, \"Claim : Nothing to claim\");\n        require(check, \"Claim : cannot withdraw before vesting period ends\");\n        // Calculate the last reward\n        uint256 uncalculatedReward = _calculateReward(msg.sender, _dId, isForceWithdraw);\n\n        uint256 reward = details.reward + uncalculatedReward;\n        uint256 amount = details.stake;\n        // Check for the allowance and transfer from the owners account\n        require(\n            pools[details.poolId].totalAllotedReward > reward,\n            \"Staking: Insufficient reward allowance from the Admin\"\n        );\n\n        // Transfer the reward.\n        IERC20Upgradeable rewardtoken = IERC20Upgradeable(pools[details.poolId].reward);\n        rewardtoken.transfer(msg.sender, reward);\n\n        // Send the unstaked amout to stakeHolder\n        IERC721Upgradeable staketoken = IERC721Upgradeable(pools[details.poolId].token);\n        staketoken.transferFrom(address(this),msg.sender, details.NFTId);\n\n        if (!isForceWithdraw && periodPoolMap[details.vestedFor].totalAllotedFeeReward > 0) {\n            //transfer marketFee reward\n            harvestFee(msg.sender, _dId);\n        }\n\n        // Update pools stats\n        pools[details.poolId].totalAllotedReward -= reward;\n        pools[details.poolId].totalClaimedReward += reward;\n        pools[details.poolId].tvl -= details.stake;\n\n        periodPoolMap[details.vestedFor].tvl -= amount;\n\n        // Update the stake details\n        deposits[msg.sender][_dId].reward = 0;\n        deposits[msg.sender][_dId].stake = 0;\n        if (isPaused) {\n            deposits[msg.sender][_dId].lastRewardCalculated = pausedTimestamp;\n        } else {\n            deposits[msg.sender][_dId].lastRewardCalculated = block.timestamp;\n        }\n\n        // Trigger the event\n        emit RewardClaimed(msg.sender, reward, _poolId, block.timestamp);\n    }\n\n     /**\n     * @dev Disburse users Depsoits Unclaimed marketfee reward\n     * @param _user address of the user\n     * @param _dId deposit id for harvest\n     * @notice This function will give send user there unclaimed marketfee reward.\n     */\n    function harvestFee(address _user, uint256 _dId) internal {\n        stakeDetails memory deposit = deposits[_user][_dId];\n        require(deposit.stake > 0, \"Harvest: Not a staker\");\n\n        uint256 rewardFee = getHavestAmount(_user, _dId);\n        if (rewardFee == 0 || periodPoolMap[deposit.vestedFor].totalAllotedFeeReward <= 0) {\n            return;\n        }\n\n        uint256 balance = WETH.balanceOf(address(this));\n\n        if (balance == 0) {\n            return;\n        }\n        periodPoolMap[deposit.vestedFor].totalAllotedFeeReward -= rewardFee;\n        WETH.transferFrom(address(this),_user, rewardFee);\n        emit Harvest(_user, rewardFee);\n    }\n\n    /**\n     * @dev Calculates users deposits WETH market fee reward\n     * @notice This function will give you total of unclaimed rewards till now.\n     * @return reward Total unclaimed WETH reward till now for specific deposit Id\n     */\n    function getHavestAmount(address _user, uint256 _dId) public view returns (uint256) {\n        stakeDetails memory deposit = deposits[_user][_dId];\n        uint256 locktime = deposit.vestedFor;\n        if (deposit.stake < 0 || periodPoolMap[locktime].totalAllotedFeeReward < 0) {\n            return 0;\n        }\n\n        uint256 feeRewardPerSecond;\n        if (locktime == 0) {\n            feeRewardPerSecond = periodPoolMap[locktime].totalAllotedFeeReward / 60 / 60 / 24 / 30 / 1;\n        } else {\n            feeRewardPerSecond = periodPoolMap[locktime].totalAllotedFeeReward / 60 / 60 / 24 / 30 / locktime;\n        }\n        uint256 pendingReward = (block.timestamp - deposit.lastRewardCalculated) * feeRewardPerSecond;\n\n        uint256 reward = ((deposit.stake * PRECISION_FACTOR) / periodPoolMap[locktime].tvl) * pendingReward;\n\n        return reward / PRECISION_FACTOR;\n    }\n\n    function getDeposits(address _user) public view returns (stakeDetails[] memory) {\n\n        stakeDetails[] memory details = new stakeDetails[](userDepositMap[_user].length);\n        for (uint256 i = 0; i < userDepositMap[_user].length; i++) {\n            stakeDetails memory deposit = deposits[_user][userDepositMap[_user][i]];\n            if (deposit.stake > 0) {\n                details[i] = deposit;\n            }\n        }\n        return details;\n    }\n\n    /**\n     * @dev Calculate and return total undelivered rewards till now.\n     * @notice This function will give you total of unclaimed rewards till now.\n     * @return _totalReward Total unclaimed reward till now.\n     */\n\n    function totalReward() public view returns (uint256 _totalReward) {\n        uint256 sum = 0;\n        for (uint256 i = 1; i <= _depositIds.current(); i++) {\n            if (depositDetails[i].stake > 0) {\n                sum += depositDetails[i].reward;\n                sum += _calculateReward(address(0), depositDetails[i].depositId, false);\n            }\n        }\n        _totalReward = sum;\n    }\n\n    /**\n     * @dev Function to check if contract have suffecient reward allowance or not\n     * @notice This function will return if it has sufficient fund for paying the reward\n     * @param _poolId The pool for which you want to check reward availibility\n     * @return True if have sufficient allowance for paying all the rewards\n     */\n    function haveSuffecientFundsForReward(uint256 _poolId) public view returns (bool) {\n        return pools[_poolId].totalAllotedReward >= totalReward();\n    }\n\n\n    /**\n     * @dev Function to get balance of this contract WETH market fee\n     * @return uint balance of weth in wei\n     */\n    function getAccMarketFee() public view returns (uint256) {\n        return WETH.balanceOf(address(this));\n    }\n}"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721Upgradeable is IERC165Upgradeable {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMathUpgradeable {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary CountersUpgradeable {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\nimport \"../../../utils/AddressUpgradeable.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20Upgradeable {\n    using AddressUpgradeable for address;\n\n    function safeTransfer(\n        IERC20Upgradeable token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20Upgradeable token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = _setInitializedVersion(1);\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        bool isTopLevelCall = _setInitializedVersion(version);\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(version);\n        }\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        _setInitializedVersion(type(uint8).max);\n    }\n\n    function _setInitializedVersion(uint8 version) private returns (bool) {\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\n        // inheritance patterns, but we only do this in the context of a constructor, and for the lowest level\n        // of initializers, because in other contexts the contract may have been reentered.\n        if (_initializing) {\n            require(\n                version == 1 && !AddressUpgradeable.isContract(address(this)),\n                \"Initializable: contract is already initialized\"\n            );\n            return false;\n        } else {\n            require(_initialized < version, \"Initializable: contract is already initialized\");\n            _initialized = version;\n            return true;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1026,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 122,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 279,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 323,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"SafeERC20Upgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":667:4025  library SafeERC20Upgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":667:4025  library SafeERC20Upgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e2e56065a926f4d8cc5d0a87baf532cbab05ff206be57dc5e80b431a7b36d65264736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e2e56065a926f4d8cc5d0a87baf532cbab05ff206be57dc5e80b431a7b36d65264736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0xE5 PUSH1 0x65 0xA9 0x26 DELEGATECALL 0xD8 0xCC 0x5D EXP DUP8 0xBA CREATE2 ORIGIN 0xCB 0xAB SDIV SELFDESTRUCT KECCAK256 PUSH12 0xE57DC5E80B431A7B36D65264 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "667:3358:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;667:3358:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e2e56065a926f4d8cc5d0a87baf532cbab05ff206be57dc5e80b431a7b36d65264736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0xE5 PUSH1 0x65 0xA9 0x26 DELEGATECALL 0xD8 0xCC 0x5D EXP DUP8 0xBA CREATE2 ORIGIN 0xCB 0xAB SDIV SELFDESTRUCT KECCAK256 PUSH12 0xE57DC5E80B431A7B36D65264 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "667:3358:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20Upgradeable,bytes memory)": "infinite",
								"safeApprove(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeTransfer(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20Upgradeable,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e2e56065a926f4d8cc5d0a87baf532cbab05ff206be57dc5e80b431a7b36d65264736f6c634300080d0033",
									".code": [
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":\"SafeERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
				"IERC721Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":\"IERC721Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x5d3b80a09c746aed89446a14d0e8f5ba5212520360d00a495a2156a7a51497e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfaceeb9548fa36e2af1e69cbc2bd5a8ba2b06ec62accba64fc123e1e0f120a1\",\"dweb:/ipfs/QmcF1kFRotifj9QBqhqNATaRQhQ6aoDAhSEEoKMc9VdKu3\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7316  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7316  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220406a3fa3a1e38b40e9c4b5ab104d07372148dde73244eefccfdc2d05a615b15764736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220406a3fa3a1e38b40e9c4b5ab104d07372148dde73244eefccfdc2d05a615b15764736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH PUSH11 0x3FA3A1E38B40E9C4B5AB10 0x4D SMOD CALLDATACOPY 0x21 BASEFEE 0xDD 0xE7 ORIGIN DIFFICULTY 0xEE 0xFC 0xCF 0xDC 0x2D SDIV 0xA6 ISZERO 0xB1 JUMPI PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "194:7122:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:7122:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220406a3fa3a1e38b40e9c4b5ab104d07372148dde73244eefccfdc2d05a615b15764736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH PUSH11 0x3FA3A1E38B40E9C4B5AB10 0x4D SMOD CALLDATACOPY 0x21 BASEFEE 0xDD 0xE7 ORIGIN DIFFICULTY 0xEE 0xFC 0xCF 0xDC 0x2D SDIV 0xA6 ISZERO 0xB1 JUMPI PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "194:7122:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7316,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220406a3fa3a1e38b40e9c4b5ab104d07372148dde73244eefccfdc2d05a615b15764736f6c634300080d0033",
									".code": [
										{
											"begin": 194,
											"end": 7316,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 7316,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1026,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol": {
				"CountersUpgradeable": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":424:1406  library CountersUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":424:1406  library CountersUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220df96be421ace94b01000be62577a56ad856b49720f2266ec7540900c50a676c864736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df96be421ace94b01000be62577a56ad856b49720f2266ec7540900c50a676c864736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF SWAP7 0xBE TIMESTAMP BYTE 0xCE SWAP5 0xB0 LT STOP 0xBE PUSH3 0x577A56 0xAD DUP6 PUSH12 0x49720F2266EC7540900C50A6 PUSH23 0xC864736F6C634300080D00330000000000000000000000 ",
							"sourceMap": "424:982:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:982:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df96be421ace94b01000be62577a56ad856b49720f2266ec7540900c50a676c864736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF SWAP7 0xBE TIMESTAMP BYTE 0xCE SWAP5 0xB0 LT STOP 0xBE PUSH3 0x577A56 0xAD DUP6 PUSH12 0x49720F2266EC7540900C50A6 PUSH23 0xC864736F6C634300080D00330000000000000000000000 ",
							"sourceMap": "424:982:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct CountersUpgradeable.Counter storage pointer)": "infinite",
								"decrement(struct CountersUpgradeable.Counter storage pointer)": "infinite",
								"increment(struct CountersUpgradeable.Counter storage pointer)": "infinite",
								"reset(struct CountersUpgradeable.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1406,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1406,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220df96be421ace94b01000be62577a56ad856b49720f2266ec7540900c50a676c864736f6c634300080d0033",
									".code": [
										{
											"begin": 424,
											"end": 1406,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 424,
											"end": 1406,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 424,
											"end": 1406,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 424,
											"end": 1406,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1406,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1406,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 424,
											"end": 1406,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1406,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 424,
											"end": 1406,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":\"CountersUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"IERC165Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
				"SafeMathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":482:6793  library SafeMathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":482:6793  library SafeMathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206abaa57583bfad33dbf37c64534b59f9a0b8643f12a4c01cadfe419ce317451664736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206abaa57583bfad33dbf37c64534b59f9a0b8643f12a4c01cadfe419ce317451664736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xBAA57583BFAD33DBF37C64 MSTORE8 0x4B MSIZE 0xF9 LOG0 0xB8 PUSH5 0x3F12A4C01C 0xAD INVALID COINBASE SWAP13 0xE3 OR GASLIMIT AND PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "482:6311:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6311:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206abaa57583bfad33dbf37c64534b59f9a0b8643f12a4c01cadfe419ce317451664736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xBAA57583BFAD33DBF37C64 MSTORE8 0x4B MSIZE 0xF9 LOG0 0xB8 PUSH5 0x3F12A4C01C 0xAD INVALID COINBASE SWAP13 0xE3 OR GASLIMIT AND PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "482:6311:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6793,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206abaa57583bfad33dbf37c64534b59f9a0b8643f12a4c01cadfe419ce317451664736f6c634300080d0033",
									".code": [
										{
											"begin": 482,
											"end": 6793,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6793,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6793,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6793,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6793,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6793,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6793,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6793,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6793,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":\"SafeMathUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0xcaa8b7861115ea691c77ddbeac140a444e0edcd1d9812a43942c0f6b42b36a49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ba2a8d7cd7bdbd42a5c525103da0cd2d190a3f702b7e796bada67f6c613622e\",\"dweb:/ipfs/QmfZSHW9FxVdWwRAQ171dkhumCPEGfAFMXHPeipPc4M2ag\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"LPStaking.sol": {
				"IUNIV3POS": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "nonce",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Ajitesh Mishra",
						"details": "Store, calculate, collect and transefer stakes and rewards to end user",
						"kind": "dev",
						"methods": {},
						"title": "LPStaking contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"positions(uint256)": "99fbab88"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Ajitesh Mishra\",\"details\":\"Store, calculate, collect and transefer stakes and rewards to end user\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LPStaking contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract will store and manage staking at APR defined by owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"LPStaking.sol\":\"IUNIV3POS\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x5d3b80a09c746aed89446a14d0e8f5ba5212520360d00a495a2156a7a51497e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfaceeb9548fa36e2af1e69cbc2bd5a8ba2b06ec62accba64fc123e1e0f120a1\",\"dweb:/ipfs/QmcF1kFRotifj9QBqhqNATaRQhQ6aoDAhSEEoKMc9VdKu3\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0xcaa8b7861115ea691c77ddbeac140a444e0edcd1d9812a43942c0f6b42b36a49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ba2a8d7cd7bdbd42a5c525103da0cd2d190a3f702b7e796bada67f6c613622e\",\"dweb:/ipfs/QmfZSHW9FxVdWwRAQ171dkhumCPEGfAFMXHPeipPc4M2ag\"]},\"LPStaking.sol\":{\"keccak256\":\"0xe3b7d0230a9d7504bfd7f3b725eb7226def05f79fbbbfff41b523382ec0d7bbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ee8d652b60de13edb9c60a4696378cbd210b698954f7c46c440072c98e90f29\",\"dweb:/ipfs/QmWMHeJFWHAPn4WiWjXrT4rGGrhnX1soQZA6Tn7H5WAV2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This contract will store and manage staking at APR defined by owner",
						"version": 1
					}
				},
				"LPStakingV3": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "feeReward",
									"type": "uint256"
								}
							],
							"name": "Harvest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WETHDeposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WETHWithdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "AdminWETHWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRECISION_FACTOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PauseStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ResumeStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_reward",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "period",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "APR",
											"type": "uint256"
										}
									],
									"internalType": "struct LPStakingV3.interestRate[]",
									"name": "_periodRates",
									"type": "tuple[]"
								}
							],
							"name": "addPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addRewardToPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakeHolder",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_dId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isProrata",
									"type": "bool"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "depositDetails",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "depositId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stake",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "APR",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "period",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardCalculated",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "vestedFor",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "NFTId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "deposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "depositId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stake",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "APR",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "period",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardCalculated",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "vestedFor",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "NFTId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_period",
									"type": "uint256"
								}
							],
							"name": "getAPR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAccMarketFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getDeposits",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "depositId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "stake",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "reward",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "APR",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "period",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lastRewardCalculated",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "poolId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "vestedFor",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "NFTId",
											"type": "uint256"
										}
									],
									"internalType": "struct LPStakingV3.stakeDetails[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_dId",
									"type": "uint256"
								}
							],
							"name": "getHavestAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								}
							],
							"name": "haveSuffecientFundsForReward",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeToken",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_periods",
									"type": "uint256[]"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "onlyaddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pausedTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "periodPoolMap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tvl",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalAllotedFeeReward",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "periodSum",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "pools",
							"outputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "reward",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tvl",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalAllotedReward",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalClaimedReward",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "receiveWETHFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_only",
									"type": "address"
								}
							],
							"name": "setOnlyAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_period",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenPools",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_totalReward",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "period",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "APR",
											"type": "uint256"
										}
									],
									"internalType": "struct LPStakingV3.interestRate[]",
									"name": "_periodRates",
									"type": "tuple[]"
								}
							],
							"name": "updateAPR",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userDepositMap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "vestingAPRPerPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_dId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isForceWithdraw",
									"type": "bool"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawRewardfromPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"AdminWETHWithdraw()": {
								"details": "This function is used to withdraw WETH from contract from Admin only"
							},
							"PauseStaking()": {
								"details": "This function allows owner to pause contract."
							},
							"ResumeStaking()": {
								"details": "This function allows owner to resume contract."
							},
							"addPool(address,address,(uint256,uint256)[])": {
								"details": "This function will create new pool, access type is onlyOwner",
								"params": {
									"_periodRates": "APR percentage * 1000 for this pool.",
									"_reward": "Staking reward token address for this pool",
									"_token": "Staking token address for this pool. "
								}
							},
							"addRewardToPool(uint256,uint256)": {
								"details": "This funciton allows owner to add more reward amount to  this contract.",
								"params": {
									"_poolId": "pool's Id in which you want to add this reward.",
									"amount": "amount to be transfered from owner's wallet to this contract."
								}
							},
							"calculateReward(address,uint256,bool)": {
								"details": "This function is used to calculate Total reward for stakeHolder for pool",
								"params": {
									"_dId": "deposit id for reward calculation",
									"_stakeHolder": "The address of stakeHolder to calculate Total reward",
									"isProrata": "to calculate on prorata basis"
								},
								"returns": {
									"reward": "total reward"
								}
							},
							"getAccMarketFee()": {
								"details": "Function to get balance of this contract WETH market fee",
								"returns": {
									"_0": "uint balance of weth in wei"
								}
							},
							"getHavestAmount(address,uint256)": {
								"details": "Calculates users deposits WETH market fee reward",
								"returns": {
									"_0": "reward Total unclaimed WETH reward till now for specific deposit Id"
								}
							},
							"haveSuffecientFundsForReward(uint256)": {
								"details": "Function to check if contract have suffecient reward allowance or not",
								"params": {
									"_poolId": "The pool for which you want to check reward availibility"
								},
								"returns": {
									"_0": "True if have sufficient allowance for paying all the rewards"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"poolLength()": {
								"details": "This funtion will return the length of pools\\ which will be used to loop and get pool details.",
								"returns": {
									"_0": "Length of pool."
								}
							},
							"receiveWETHFee(uint256)": {
								"params": {
									"amount": "to deposit"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"stake(uint256,uint256,uint256)": {
								"details": "Allows user to stake the amount the pool. Calculate the old reward\\ and updates the reward, staked amount and current APR.",
								"params": {
									"_poolId": "The pool in which user wants to stake.",
									"tokenId": "The amount user wants to add into his stake."
								}
							},
							"totalReward()": {
								"details": "Calculate and return total undelivered rewards till now.",
								"returns": {
									"_totalReward": "Total unclaimed reward till now."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateAPR(uint256,(uint256,uint256)[])": {
								"details": "This function allows owner to update APR for specific pool.",
								"params": {
									"_periodRates": "New APR percentage * 1000.",
									"_poolId": "pool's Id in which you want to update the APR."
								}
							},
							"withdraw(uint256,uint256,bool)": {
								"details": "Calculate the current reward and unstake the stake token, Transefer it to sender and update reward to 0",
								"params": {
									"_dId": "deposit id for getting reward fot deposit.",
									"_poolId": "Pool from which user want to claim the reward.",
									"isForceWithdraw": "bool flag for emergency withdraw."
								}
							},
							"withdrawRewardfromPool(uint256,uint256)": {
								"details": "This funciton allows owner to withdraw allotted reward amount from this contract.",
								"params": {
									"_poolId": "pool's Id in which you want to withdraw this reward.",
									"amount": "amount to be withdraw from contract to owner's wallet."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"LPStaking.sol\":1433:22608  contract LPStakingV3 is Initializable, ReentrancyGuardUpgradeable, OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"LPStaking.sol\":1433:22608  contract LPStakingV3 is Initializable, ReentrancyGuardUpgradeable, OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa54c83f6\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xccd34cd5\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xe7272866\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xe7272866\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xe76ba191\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xe7c928b1\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf8ce1f31\n      eq\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0xccd34cd5\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xcf5badc6\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xd6d68177\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xe179b5c3\n      eq\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0xb0203a80\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xb0203a80\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xb187bd26\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xba41795f\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xc3d2c3c1\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xc4b91c4d\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0xa54c83f6\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa638f2e2\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xac4afa38\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xad5c4648\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x750142e6\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x911ef508\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x911ef508\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x94f649dd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x9aaab954\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa2234080\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa32a66a7\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup1\n      0x750142e6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x82a14459\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x88f67d77\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0x24a723d4\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x24a723d4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2c86714c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x33cfcd3b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x73f64499\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      dup1\n      0x081e3eda\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0c756997\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x110d458e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1ee7f3c4\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"LPStaking.sol\":7590:7678  function poolLength() public view returns (uint256) {... */\n    tag_3:\n        /* \"LPStaking.sol\":7659:7664  pools */\n      0xa1\n        /* \"LPStaking.sol\":7659:7671  pools.length */\n      sload\n        /* \"LPStaking.sol\":7590:7678  function poolLength() public view returns (uint256) {... */\n    tag_46:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"LPStaking.sol\":7590:7678  function poolLength() public view returns (uint256) {... */\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LPStaking.sol\":7974:8242  function updateAPR(uint256 _poolId, interestRate[] memory _periodRates) public onlyOwner poolExists(_poolId) {... */\n    tag_4:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"LPStaking.sol\":1820:1846  address public onlyaddress */\n    tag_5:\n      sload(0x99)\n      tag_54\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_54:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2661:2693   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2643:2694   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2631:2633   */\n      0x20\n        /* \"#utility.yul\":2616:2634   */\n      add\n        /* \"LPStaking.sol\":1820:1846  address public onlyaddress */\n      tag_48\n        /* \"#utility.yul\":2497:2700   */\n      jump\n        /* \"LPStaking.sol\":8248:8387  function getAPR(uint256 _poolId, uint256 _period) public view returns (uint256) {... */\n    tag_6:\n      tag_46\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"LPStaking.sol\":8319:8326  uint256 */\n      0x00\n        /* \"LPStaking.sol\":8345:8371  vestingAPRPerPool[_poolId] */\n      swap2\n      dup3\n      mstore\n        /* \"LPStaking.sol\":8345:8362  vestingAPRPerPool */\n      0x9c\n        /* \"LPStaking.sol\":8345:8371  vestingAPRPerPool[_poolId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"LPStaking.sol\":8345:8380  vestingAPRPerPool[_poolId][_period] */\n      swap3\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"LPStaking.sol\":8248:8387  function getAPR(uint256 _poolId, uint256 _period) public view returns (uint256) {... */\n      jump\n        /* \"LPStaking.sol\":19885:20765  function getHavestAmount(address _user, uint256 _dId) public view returns (uint256) {... */\n    tag_7:\n      tag_46\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"LPStaking.sol\":11058:11313  function AdminWETHWithdraw() external onlyOwner nonReentrant {... */\n    tag_8:\n      tag_50\n      tag_69\n      jump\t// in\n        /* \"LPStaking.sol\":16537:18726  function withdraw(... */\n    tag_9:\n      tag_50\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1908:2009  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_50\n      tag_75\n      jump\t// in\n        /* \"LPStaking.sol\":6942:7104  function PauseStaking() public onlyOwner {... */\n    tag_11:\n      tag_50\n      tag_77\n      jump\t// in\n        /* \"LPStaking.sol\":21459:21857  function totalReward() public view returns (uint256 _totalReward) {... */\n    tag_12:\n      tag_46\n      tag_79\n      jump\t// in\n        /* \"LPStaking.sol\":4474:4498  uint256 public periodSum */\n    tag_13:\n      tag_46\n      sload(0xa6)\n      dup2\n      jump\n        /* \"LPStaking.sol\":6307:6862  function addPool(... */\n    tag_14:\n      tag_50\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1276:1361  function owner() public view virtual returns (address) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1276:1361  function owner() public view virtual returns (address) {... */\n      jump(tag_54)\n        /* \"LPStaking.sol\":4438:4468  uint256 public pausedTimestamp */\n    tag_16:\n      tag_46\n      sload(0xa5)\n      dup2\n      jump\n        /* \"LPStaking.sol\":20771:21226  function getDeposits(address _user) public view returns (stakeDetails[] memory) {... */\n    tag_17:\n      tag_94\n      tag_95\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n        /* \"LPStaking.sol\":3033:3087  mapping(uint256 => stakeDetails) public depositDetails */\n    tag_18:\n      tag_100\n      tag_101\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_101:\n      mstore(0x20, 0xa0)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      dup1\n      0x07\n      add\n      sload\n      swap1\n      dup1\n      0x08\n      add\n      sload\n      swap1\n      pop\n      dup10\n      jump\n    tag_100:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6740:6765   */\n      swap10\n      dup11\n      mstore\n        /* \"#utility.yul\":6796:6798   */\n      0x20\n        /* \"#utility.yul\":6781:6799   */\n      dup11\n      add\n        /* \"#utility.yul\":6774:6808   */\n      swap9\n      swap1\n      swap9\n      mstore\n        /* \"#utility.yul\":6824:6842   */\n      swap7\n      dup9\n      add\n        /* \"#utility.yul\":6817:6851   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":6882:6884   */\n      0x60\n        /* \"#utility.yul\":6867:6885   */\n      dup8\n      add\n        /* \"#utility.yul\":6860:6894   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":6925:6928   */\n      0x80\n        /* \"#utility.yul\":6910:6929   */\n      dup7\n      add\n        /* \"#utility.yul\":6903:6938   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6969:6972   */\n      0xa0\n        /* \"#utility.yul\":6954:6973   */\n      dup6\n      add\n        /* \"#utility.yul\":6947:6982   */\n      mstore\n        /* \"#utility.yul\":7013:7016   */\n      0xc0\n        /* \"#utility.yul\":6998:7017   */\n      dup5\n      add\n        /* \"#utility.yul\":6991:7026   */\n      mstore\n        /* \"#utility.yul\":7057:7060   */\n      0xe0\n        /* \"#utility.yul\":7042:7061   */\n      dup4\n      add\n        /* \"#utility.yul\":7035:7070   */\n      mstore\n        /* \"#utility.yul\":7101:7104   */\n      0x0100\n        /* \"#utility.yul\":7086:7105   */\n      dup3\n      add\n        /* \"#utility.yul\":7079:7114   */\n      mstore\n        /* \"#utility.yul\":6727:6730   */\n      0x0120\n        /* \"#utility.yul\":6712:6731   */\n      add\n        /* \"LPStaking.sol\":3033:3087  mapping(uint256 => stakeDetails) public depositDetails */\n      tag_48\n        /* \"#utility.yul\":6369:7120   */\n      jump\n        /* \"LPStaking.sol\":5509:5603  function setOnlyAddress(address _only) external onlyOwner {... */\n    tag_19:\n      tag_50\n      tag_107\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n        /* \"LPStaking.sol\":2595:2667  mapping(uint256 => mapping(uint256 => uint256)) public vestingAPRPerPool */\n    tag_20:\n      tag_46\n      tag_110\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_110:\n      0x9c\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"LPStaking.sol\":8718:9347  function withdrawRewardfromPool(uint256 _poolId, uint256 amount) public onlyOwner poolExists(_poolId) {... */\n    tag_21:\n      tag_50\n      tag_114\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n        /* \"LPStaking.sol\":13943:16005  function stake(... */\n    tag_22:\n      tag_46\n      tag_117\n      calldatasize\n      0x04\n      tag_118\n      jump\t// in\n    tag_117:\n      tag_119\n      jump\t// in\n        /* \"LPStaking.sol\":4160:4186  stakingPool[] public pools */\n    tag_23:\n      tag_121\n      tag_122\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n    tag_121:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7761:7776   */\n      swap7\n      dup8\n      and\n        /* \"#utility.yul\":7743:7777   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7813:7828   */\n      swap6\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":7808:7810   */\n      0x20\n        /* \"#utility.yul\":7793:7811   */\n      dup7\n      add\n        /* \"#utility.yul\":7786:7829   */\n      mstore\n        /* \"#utility.yul\":7845:7863   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":7838:7872   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":7903:7905   */\n      0x60\n        /* \"#utility.yul\":7888:7906   */\n      dup4\n      add\n        /* \"#utility.yul\":7881:7915   */\n      mstore\n        /* \"#utility.yul\":7946:7949   */\n      0x80\n        /* \"#utility.yul\":7931:7950   */\n      dup3\n      add\n        /* \"#utility.yul\":7924:7959   */\n      mstore\n        /* \"#utility.yul\":7692:7695   */\n      0xa0\n        /* \"#utility.yul\":7677:7696   */\n      add\n        /* \"LPStaking.sol\":4160:4186  stakingPool[] public pools */\n      tag_48\n        /* \"#utility.yul\":7446:7965   */\n      jump\n        /* \"LPStaking.sol\":1852:1881  IERC20Upgradeable public WETH */\n    tag_24:\n      sload(0x9a)\n      tag_54\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"LPStaking.sol\":22496:22606  function getAccMarketFee() public view returns (uint256) {... */\n    tag_25:\n      tag_46\n      tag_131\n      jump\t// in\n        /* \"LPStaking.sol\":4412:4432  bool public isPaused */\n    tag_26:\n      sload(0xa4)\n      tag_133\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_133:\n      mload(0x40)\n        /* \"#utility.yul\":8368:8382   */\n      swap1\n      iszero\n        /* \"#utility.yul\":8361:8383   */\n      iszero\n        /* \"#utility.yul\":8343:8384   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8331:8333   */\n      0x20\n        /* \"#utility.yul\":8316:8334   */\n      add\n        /* \"LPStaking.sol\":4412:4432  bool public isPaused */\n      tag_48\n        /* \"#utility.yul\":8203:8390   */\n      jump\n        /* \"LPStaking.sol\":13280:13590  function calculateReward(... */\n    tag_27:\n      tag_46\n      tag_138\n      calldatasize\n      0x04\n      tag_139\n      jump\t// in\n    tag_138:\n      tag_140\n      jump\t// in\n        /* \"LPStaking.sol\":2854:2896  mapping(address => bool) public tokenPools */\n    tag_28:\n      tag_133\n      tag_143\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_143:\n      mstore(0x20, 0x9d)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"LPStaking.sol\":4227:4278  mapping(uint256 => periodPool) public periodPoolMap */\n    tag_29:\n      tag_146\n      tag_147\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_147:\n      mstore(0x20, 0xa2)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      dup3\n      jump\n    tag_146:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9024:9049   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":9080:9082   */\n      0x20\n        /* \"#utility.yul\":9065:9083   */\n      dup4\n      add\n        /* \"#utility.yul\":9058:9092   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":8997:9015   */\n      add\n        /* \"LPStaking.sol\":4227:4278  mapping(uint256 => periodPool) public periodPoolMap */\n      tag_48\n        /* \"#utility.yul\":8850:9098   */\n      jump\n        /* \"LPStaking.sol\":4525:4574  uint256 public constant PRECISION_FACTOR = 10**18 */\n    tag_30:\n      tag_46\n        /* \"LPStaking.sol\":4568:4574  10**18 */\n      0x0de0b6b3a7640000\n        /* \"LPStaking.sol\":4525:4574  uint256 public constant PRECISION_FACTOR = 10**18 */\n      dup2\n      jump\n        /* \"LPStaking.sol\":22205:22361  function haveSuffecientFundsForReward(uint256 _poolId) public view returns (bool) {... */\n    tag_31:\n      tag_133\n      tag_155\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_155:\n      tag_156\n      jump\t// in\n        /* \"LPStaking.sol\":2902:2970  mapping(address => mapping(uint256 => stakeDetails)) public deposits */\n    tag_32:\n      tag_100\n      tag_159\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_159:\n      mstore(0x20, 0x9e)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      dup1\n      0x07\n      add\n      sload\n      swap1\n      dup1\n      0x08\n      add\n      sload\n      swap1\n      pop\n      dup10\n      jump\n        /* \"LPStaking.sol\":7185:7353  function ResumeStaking() public onlyOwner {... */\n    tag_33:\n      tag_50\n      tag_163\n      jump\t// in\n        /* \"LPStaking.sol\":5014:5358  function initialize(... */\n    tag_34:\n      tag_50\n      tag_165\n      calldatasize\n      0x04\n      tag_166\n      jump\t// in\n    tag_165:\n      tag_167\n      jump\t// in\n        /* \"LPStaking.sol\":2976:3027  mapping(address => uint256[]) public userDepositMap */\n    tag_35:\n      tag_46\n      tag_169\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_169:\n      tag_170\n      jump\t// in\n        /* \"LPStaking.sol\":10372:10954  function receiveWETHFee(uint256 amount) external onlyAddress nonReentrant {... */\n    tag_36:\n      tag_50\n      tag_173\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_173:\n      tag_174\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2158:2356  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_37:\n      tag_50\n      tag_176\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_176:\n      tag_177\n      jump\t// in\n        /* \"LPStaking.sol\":9672:10259  function addRewardToPool(uint256 _poolId, uint256 amount) public onlyOwner poolExists(_poolId) {... */\n    tag_38:\n      tag_50\n      tag_179\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_179:\n      tag_180\n      jump\t// in\n        /* \"LPStaking.sol\":7974:8242  function updateAPR(uint256 _poolId, interestRate[] memory _periodRates) public onlyOwner poolExists(_poolId) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"LPStaking.sol\":4739:4744  pools */\n      0xa1\n        /* \"LPStaking.sol\":4739:4751  pools.length */\n      sload\n        /* \"LPStaking.sol\":8074:8081  _poolId */\n      dup3\n      swap1\n        /* \"LPStaking.sol\":4729:4751  _poolId < pools.length */\n      dup2\n      lt\n        /* \"LPStaking.sol\":4721:4784  require(_poolId < pools.length, \"Staking: Pool doesn't exists\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_192\n      jump\t// in\n    tag_190:\n        /* \"LPStaking.sol\":8098:8107  uint256 i */\n      0x00\n        /* \"LPStaking.sol\":8093:8236  for (uint256 i; i < _periodRates.length; i++) {... */\n    tag_194:\n        /* \"LPStaking.sol\":8113:8125  _periodRates */\n      dup3\n        /* \"LPStaking.sol\":8113:8132  _periodRates.length */\n      mload\n        /* \"LPStaking.sol\":8109:8110  i */\n      dup2\n        /* \"LPStaking.sol\":8109:8132  i < _periodRates.length */\n      lt\n        /* \"LPStaking.sol\":8093:8236  for (uint256 i; i < _periodRates.length; i++) {... */\n      iszero\n      tag_195\n      jumpi\n        /* \"LPStaking.sol\":8206:8218  _periodRates */\n      dup3\n        /* \"LPStaking.sol\":8219:8220  i */\n      dup2\n        /* \"LPStaking.sol\":8206:8221  _periodRates[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_198\n      jumpi\n      tag_198\n      tag_199\n      jump\t// in\n    tag_198:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"LPStaking.sol\":8206:8225  _periodRates[i].APR */\n      0x20\n      add\n      mload\n        /* \"LPStaking.sol\":8153:8170  vestingAPRPerPool */\n      0x9c\n        /* \"LPStaking.sol\":8153:8179  vestingAPRPerPool[_poolId] */\n      0x00\n        /* \"LPStaking.sol\":8171:8178  _poolId */\n      dup7\n        /* \"LPStaking.sol\":8153:8179  vestingAPRPerPool[_poolId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LPStaking.sol\":8153:8203  vestingAPRPerPool[_poolId][_periodRates[i].period] */\n      0x00\n        /* \"LPStaking.sol\":8180:8192  _periodRates */\n      dup6\n        /* \"LPStaking.sol\":8193:8194  i */\n      dup5\n        /* \"LPStaking.sol\":8180:8195  _periodRates[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_201\n      jumpi\n      tag_201\n      tag_199\n      jump\t// in\n    tag_201:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"LPStaking.sol\":8180:8202  _periodRates[i].period */\n      0x00\n      add\n      mload\n        /* \"LPStaking.sol\":8153:8203  vestingAPRPerPool[_poolId][_periodRates[i].period] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LPStaking.sol\":8153:8225  vestingAPRPerPool[_poolId][_periodRates[i].period] = _periodRates[i].APR */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LPStaking.sol\":8134:8137  i++ */\n      dup1\n      dup1\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      swap2\n      pop\n      pop\n        /* \"LPStaking.sol\":8093:8236  for (uint256 i; i < _periodRates.length; i++) {... */\n      jump(tag_194)\n    tag_195:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1558:1559  _ */\n      pop\n        /* \"LPStaking.sol\":7974:8242  function updateAPR(uint256 _poolId, interestRate[] memory _periodRates) public onlyOwner poolExists(_poolId) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"LPStaking.sol\":19885:20765  function getHavestAmount(address _user, uint256 _dId) public view returns (uint256) {... */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":20009:20024  deposits[_user] */\n      dup3\n      and\n        /* \"LPStaking.sol\":19960:19967  uint256 */\n      0x00\n        /* \"LPStaking.sol\":20009:20024  deposits[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":20009:20017  deposits */\n      0x9e\n        /* \"LPStaking.sol\":20009:20024  deposits[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"LPStaking.sol\":20009:20030  deposits[_user][_dId] */\n      dup5\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"LPStaking.sol\":19979:20030  stakeDetails memory deposit = deposits[_user][_dId] */\n      dup2\n      mload\n      0x0120\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      dup6\n      add\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup4\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup4\n      add\n      mstore\n      0x05\n      dup2\n      add\n      sload\n      0xa0\n      dup4\n      add\n      mstore\n      0x06\n      dup2\n      add\n      sload\n      0xc0\n      dup4\n      add\n      mstore\n      0x07\n      dup2\n      add\n      sload\n      0xe0\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      0x08\n      swap1\n      swap2\n      add\n      sload\n      0x0100\n      dup4\n      add\n      mstore\n        /* \"LPStaking.sol\":20111:20134  periodPoolMap[locktime] */\n      dup1\n      dup5\n      mstore\n        /* \"LPStaking.sol\":20111:20124  periodPoolMap */\n      0xa2\n        /* \"LPStaking.sol\":20111:20134  periodPoolMap[locktime] */\n      swap1\n      swap3\n      mstore\n        /* \"LPStaking.sol\":19979:20030  stakeDetails memory deposit = deposits[_user][_dId] */\n      swap1\n        /* \"LPStaking.sol\":20205:20231  uint256 feeRewardPerSecond */\n      0x00\n        /* \"LPStaking.sol\":20245:20253  locktime */\n      dup2\n        /* \"LPStaking.sol\":20257:20258  0 */\n      0x00\n        /* \"LPStaking.sol\":20245:20258  locktime == 0 */\n      sub\n        /* \"LPStaking.sol\":20241:20503  if (locktime == 0) {... */\n      tag_208\n      jumpi\n        /* \"LPStaking.sol\":20363:20364  1 */\n      0x01\n        /* \"LPStaking.sol\":20358:20360  30 */\n      0x1e\n        /* \"LPStaking.sol\":20353:20355  24 */\n      0x18\n        /* \"LPStaking.sol\":20348:20350  60 */\n      0x3c\n        /* \"LPStaking.sol\":20343:20345  60 */\n      dup1\n        /* \"LPStaking.sol\":20295:20308  periodPoolMap */\n      0xa2\n        /* \"LPStaking.sol\":20295:20318  periodPoolMap[locktime] */\n      0x00\n        /* \"LPStaking.sol\":20309:20317  locktime */\n      dup9\n        /* \"LPStaking.sol\":20295:20318  periodPoolMap[locktime] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LPStaking.sol\":20295:20340  periodPoolMap[locktime].totalAllotedFeeReward */\n      0x01\n      add\n      sload\n        /* \"LPStaking.sol\":20295:20345  periodPoolMap[locktime].totalAllotedFeeReward / 60 */\n      tag_209\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"LPStaking.sol\":20295:20350  periodPoolMap[locktime].totalAllotedFeeReward / 60 / 60 */\n      tag_211\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_211:\n        /* \"LPStaking.sol\":20295:20355  periodPoolMap[locktime].totalAllotedFeeReward / 60 / 60 / 24 */\n      tag_212\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_212:\n        /* \"LPStaking.sol\":20295:20360  periodPoolMap[locktime].totalAllotedFeeReward / 60 / 60 / 24 / 30 */\n      tag_213\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_213:\n        /* \"LPStaking.sol\":20295:20364  periodPoolMap[locktime].totalAllotedFeeReward / 60 / 60 / 24 / 30 / 1 */\n      tag_214\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_214:\n        /* \"LPStaking.sol\":20274:20364  feeRewardPerSecond = periodPoolMap[locktime].totalAllotedFeeReward / 60 / 60 / 24 / 30 / 1 */\n      swap1\n      pop\n        /* \"LPStaking.sol\":20241:20503  if (locktime == 0) {... */\n      jump(tag_215)\n    tag_208:\n        /* \"LPStaking.sol\":20484:20492  locktime */\n      dup2\n        /* \"LPStaking.sol\":20479:20481  30 */\n      0x1e\n        /* \"LPStaking.sol\":20474:20476  24 */\n      0x18\n        /* \"LPStaking.sol\":20469:20471  60 */\n      0x3c\n        /* \"LPStaking.sol\":20464:20466  60 */\n      dup1\n        /* \"LPStaking.sol\":20416:20429  periodPoolMap */\n      0xa2\n        /* \"LPStaking.sol\":20416:20439  periodPoolMap[locktime] */\n      0x00\n        /* \"LPStaking.sol\":20430:20438  locktime */\n      dup9\n        /* \"LPStaking.sol\":20416:20439  periodPoolMap[locktime] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LPStaking.sol\":20416:20461  periodPoolMap[locktime].totalAllotedFeeReward */\n      0x01\n      add\n      sload\n        /* \"LPStaking.sol\":20416:20466  periodPoolMap[locktime].totalAllotedFeeReward / 60 */\n      tag_216\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_216:\n        /* \"LPStaking.sol\":20416:20471  periodPoolMap[locktime].totalAllotedFeeReward / 60 / 60 */\n      tag_217\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_217:\n        /* \"LPStaking.sol\":20416:20476  periodPoolMap[locktime].totalAllotedFeeReward / 60 / 60 / 24 */\n      tag_218\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_218:\n        /* \"LPStaking.sol\":20416:20481  periodPoolMap[locktime].totalAllotedFeeReward / 60 / 60 / 24 / 30 */\n      tag_219\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_219:\n        /* \"LPStaking.sol\":20416:20492  periodPoolMap[locktime].totalAllotedFeeReward / 60 / 60 / 24 / 30 / locktime */\n      tag_220\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_220:\n        /* \"LPStaking.sol\":20395:20492  feeRewardPerSecond = periodPoolMap[locktime].totalAllotedFeeReward / 60 / 60 / 24 / 30 / locktime */\n      swap1\n      pop\n        /* \"LPStaking.sol\":20241:20503  if (locktime == 0) {... */\n    tag_215:\n        /* \"LPStaking.sol\":20512:20533  uint256 pendingReward */\n      0x00\n        /* \"LPStaking.sol\":20587:20605  feeRewardPerSecond */\n      dup2\n        /* \"LPStaking.sol\":20555:20562  deposit */\n      dup5\n        /* \"LPStaking.sol\":20555:20583  deposit.lastRewardCalculated */\n      0xa0\n      add\n      mload\n        /* \"LPStaking.sol\":20537:20552  block.timestamp */\n      timestamp\n        /* \"LPStaking.sol\":20537:20583  block.timestamp - deposit.lastRewardCalculated */\n      tag_221\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"LPStaking.sol\":20536:20605  (block.timestamp - deposit.lastRewardCalculated) * feeRewardPerSecond */\n      tag_223\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"LPStaking.sol\":20512:20605  uint256 pendingReward = (block.timestamp - deposit.lastRewardCalculated) * feeRewardPerSecond */\n      swap1\n      pop\n        /* \"LPStaking.sol\":20616:20630  uint256 reward */\n      0x00\n        /* \"LPStaking.sol\":20702:20715  pendingReward */\n      dup2\n        /* \"LPStaking.sol\":20671:20684  periodPoolMap */\n      0xa2\n        /* \"LPStaking.sol\":20671:20694  periodPoolMap[locktime] */\n      0x00\n        /* \"LPStaking.sol\":20685:20693  locktime */\n      dup7\n        /* \"LPStaking.sol\":20671:20694  periodPoolMap[locktime] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LPStaking.sol\":20671:20698  periodPoolMap[locktime].tvl */\n      0x00\n      add\n      sload\n        /* \"LPStaking.sol\":4568:4574  10**18 */\n      0x0de0b6b3a7640000\n        /* \"LPStaking.sol\":20635:20642  deposit */\n      dup8\n        /* \"LPStaking.sol\":20635:20648  deposit.stake */\n      0x20\n      add\n      mload\n        /* \"LPStaking.sol\":20635:20667  deposit.stake * PRECISION_FACTOR */\n      tag_225\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_225:\n        /* \"LPStaking.sol\":20634:20698  (deposit.stake * PRECISION_FACTOR) / periodPoolMap[locktime].tvl */\n      tag_226\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_226:\n        /* \"LPStaking.sol\":20633:20715  ((deposit.stake * PRECISION_FACTOR) / periodPoolMap[locktime].tvl) * pendingReward */\n      tag_227\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_227:\n        /* \"LPStaking.sol\":20616:20715  uint256 reward = ((deposit.stake * PRECISION_FACTOR) / periodPoolMap[locktime].tvl) * pendingReward */\n      swap1\n      pop\n        /* \"LPStaking.sol\":20733:20758  reward / PRECISION_FACTOR */\n      tag_228\n        /* \"LPStaking.sol\":4568:4574  10**18 */\n      0x0de0b6b3a7640000\n        /* \"LPStaking.sol\":20616:20715  uint256 reward = ((deposit.stake * PRECISION_FACTOR) / periodPoolMap[locktime].tvl) * pendingReward */\n      dup3\n        /* \"LPStaking.sol\":20733:20758  reward / PRECISION_FACTOR */\n      tag_210\n      jump\t// in\n    tag_228:\n        /* \"LPStaking.sol\":20726:20758  return reward / PRECISION_FACTOR */\n      swap9\n        /* \"LPStaking.sol\":19885:20765  function getHavestAmount(address _user, uint256 _dId) public view returns (uint256) {... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"LPStaking.sol\":11058:11313  function AdminWETHWithdraw() external onlyOwner nonReentrant {... */\n    tag_69:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_237\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      sstore\n        /* \"LPStaking.sol\":11152:11156  WETH */\n      sload(0x9a)\n        /* \"LPStaking.sol\":11152:11181  WETH.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"LPStaking.sol\":11175:11179  this */\n      address\n        /* \"LPStaking.sol\":11152:11181  WETH.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2643:2694   */\n      mstore\n        /* \"LPStaking.sol\":11129:11149  uint256 accMarketFee */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":11152:11156  WETH */\n      and\n      swap1\n        /* \"LPStaking.sol\":11152:11166  WETH.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2616:2634   */\n      0x24\n      add\n        /* \"LPStaking.sol\":11152:11181  WETH.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_241\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_241:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_242\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"LPStaking.sol\":11191:11195  WETH */\n      sload(0x9a)\n        /* \"LPStaking.sol\":11191:11251  WETH.transferFrom(address(this), _msgSender(), accMarketFee) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"LPStaking.sol\":11129:11181  uint256 accMarketFee = WETH.balanceOf(address(this)) */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":11191:11195  WETH */\n      and\n      swap1\n        /* \"LPStaking.sol\":11191:11208  WETH.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"LPStaking.sol\":11191:11251  WETH.transferFrom(address(this), _msgSender(), accMarketFee) */\n      tag_245\n      swap1\n        /* \"LPStaking.sol\":11217:11221  this */\n      address\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n      swap1\n        /* \"LPStaking.sol\":11129:11181  uint256 accMarketFee = WETH.balanceOf(address(this)) */\n      dup7\n      swap1\n        /* \"LPStaking.sol\":11191:11251  WETH.transferFrom(address(this), _msgSender(), accMarketFee) */\n      0x04\n      add\n      tag_246\n      jump\t// in\n    tag_245:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_248\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_248:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_249\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      pop\n        /* \"LPStaking.sol\":11266:11306  WETHWithdraw(_msgSender(), accMarketFee) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n      swap1\n        /* \"LPStaking.sol\":11266:11306  WETHWithdraw(_msgSender(), accMarketFee) */\n      0x34042597700906fd41b7ead5497c3bf88ef36150597ddd9193327a09f0604f66\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"LPStaking.sol\":11266:11306  WETHWithdraw(_msgSender(), accMarketFee) */\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"LPStaking.sol\":11058:11313  function AdminWETHWithdraw() external onlyOwner nonReentrant {... */\n      jump\t// out\n        /* \"LPStaking.sol\":16537:18726  function withdraw(... */\n    tag_73:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_237\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      sstore\n        /* \"LPStaking.sol\":16055:16063  isPaused */\n      and(0xff, sload(0xa4))\n        /* \"LPStaking.sol\":16054:16063  !isPaused */\n      iszero\n        /* \"LPStaking.sol\":16046:16084  require(!isPaused, \"contract paused!\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13174:13176   */\n      0x20\n        /* \"LPStaking.sol\":16046:16084  require(!isPaused, \"contract paused!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13156:13177   */\n      mstore\n        /* \"#utility.yul\":13213:13215   */\n      0x10\n        /* \"#utility.yul\":13193:13211   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13186:13216   */\n      mstore\n      shl(0x80, 0x636f6e74726163742070617573656421)\n        /* \"#utility.yul\":13232:13250   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13225:13271   */\n      mstore\n        /* \"#utility.yul\":13288:13306   */\n      0x64\n      add\n        /* \"LPStaking.sol\":16046:16084  require(!isPaused, \"contract paused!\") */\n      tag_187\n        /* \"#utility.yul\":12972:13312   */\n      jump\n        /* \"LPStaking.sol\":16046:16084  require(!isPaused, \"contract paused!\") */\n    tag_257:\n        /* \"LPStaking.sol\":4739:4744  pools */\n      0xa1\n        /* \"LPStaking.sol\":4739:4751  pools.length */\n      sload\n        /* \"LPStaking.sol\":16685:16692  _poolId */\n      dup4\n      swap1\n        /* \"LPStaking.sol\":4729:4751  _poolId < pools.length */\n      dup2\n      lt\n        /* \"LPStaking.sol\":4721:4784  require(_poolId < pools.length, \"Staking: Pool doesn't exists\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_192\n      jump\t// in\n    tag_261:\n        /* \"LPStaking.sol\":16743:16753  msg.sender */\n      caller\n        /* \"LPStaking.sol\":16704:16731  stakeDetails memory details */\n      0x00\n        /* \"LPStaking.sol\":16734:16754  deposits[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":16734:16742  deposits */\n      0x9e\n        /* \"LPStaking.sol\":16734:16754  deposits[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"LPStaking.sol\":16734:16760  deposits[msg.sender][_dId] */\n      dup7\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"LPStaking.sol\":16704:16760  stakeDetails memory details = deposits[msg.sender][_dId] */\n      dup2\n      mload\n      0x0120\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup4\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup4\n      add\n      mstore\n      0x05\n      dup2\n      add\n      sload\n      0xa0\n      dup4\n      add\n      mstore\n      0x06\n      dup2\n      add\n      sload\n      0xc0\n      dup4\n      add\n      mstore\n      0x07\n      dup2\n      add\n      sload\n      0xe0\n      dup4\n      add\n      mstore\n      0x08\n      add\n      sload\n      0x0100\n      dup3\n      add\n      mstore\n      swap1\n        /* \"LPStaking.sol\":16783:16798  isForceWithdraw */\n      dup4\n        /* \"LPStaking.sol\":16783:16840  isForceWithdraw ? true : block.timestamp > details.period */\n      tag_264\n      jumpi\n        /* \"LPStaking.sol\":16826:16833  details */\n      dup2\n        /* \"LPStaking.sol\":16826:16840  details.period */\n      0x80\n      add\n      mload\n        /* \"LPStaking.sol\":16808:16823  block.timestamp */\n      timestamp\n        /* \"LPStaking.sol\":16808:16840  block.timestamp > details.period */\n      gt\n        /* \"LPStaking.sol\":16783:16840  isForceWithdraw ? true : block.timestamp > details.period */\n      jump(tag_265)\n    tag_264:\n        /* \"LPStaking.sol\":16801:16805  true */\n      0x01\n        /* \"LPStaking.sol\":16783:16840  isForceWithdraw ? true : block.timestamp > details.period */\n    tag_265:\n        /* \"LPStaking.sol\":16770:16840  bool check = isForceWithdraw ? true : block.timestamp > details.period */\n      swap1\n      pop\n        /* \"LPStaking.sol\":16874:16875  0 */\n      0x00\n        /* \"LPStaking.sol\":16858:16865  details */\n      dup3\n        /* \"LPStaking.sol\":16858:16871  details.stake */\n      0x20\n      add\n      mload\n        /* \"LPStaking.sol\":16858:16875  details.stake > 0 */\n      gt\n        /* \"LPStaking.sol\":16850:16904  require(details.stake > 0, \"Claim : Nothing to claim\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13519:13521   */\n      0x20\n        /* \"LPStaking.sol\":16850:16904  require(details.stake > 0, \"Claim : Nothing to claim\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13501:13522   */\n      mstore\n        /* \"#utility.yul\":13558:13560   */\n      0x18\n        /* \"#utility.yul\":13538:13556   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13531:13561   */\n      mstore\n        /* \"#utility.yul\":13597:13623   */\n      0x436c61696d203a204e6f7468696e6720746f20636c61696d0000000000000000\n        /* \"#utility.yul\":13577:13595   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13570:13624   */\n      mstore\n        /* \"#utility.yul\":13641:13659   */\n      0x64\n      add\n        /* \"LPStaking.sol\":16850:16904  require(details.stake > 0, \"Claim : Nothing to claim\") */\n      tag_187\n        /* \"#utility.yul\":13317:13665   */\n      jump\n        /* \"LPStaking.sol\":16850:16904  require(details.stake > 0, \"Claim : Nothing to claim\") */\n    tag_266:\n        /* \"LPStaking.sol\":16922:16927  check */\n      dup1\n        /* \"LPStaking.sol\":16914:16982  require(check, \"Claim : cannot withdraw before vesting period ends\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13872:13874   */\n      0x20\n        /* \"LPStaking.sol\":16914:16982  require(check, \"Claim : cannot withdraw before vesting period ends\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13854:13875   */\n      mstore\n        /* \"#utility.yul\":13911:13913   */\n      0x32\n        /* \"#utility.yul\":13891:13909   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13884:13914   */\n      mstore\n        /* \"#utility.yul\":13950:13984   */\n      0x436c61696d203a2063616e6e6f74207769746864726177206265666f72652076\n        /* \"#utility.yul\":13930:13948   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13923:13985   */\n      mstore\n      shl(0x70, 0x657374696e6720706572696f6420656e6473)\n        /* \"#utility.yul\":14001:14019   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13994:14042   */\n      mstore\n        /* \"#utility.yul\":14059:14078   */\n      0x84\n      add\n        /* \"LPStaking.sol\":16914:16982  require(check, \"Claim : cannot withdraw before vesting period ends\") */\n      tag_187\n        /* \"#utility.yul\":13670:14084   */\n      jump\n        /* \"LPStaking.sol\":16914:16982  require(check, \"Claim : cannot withdraw before vesting period ends\") */\n    tag_269:\n        /* \"LPStaking.sol\":17029:17055  uint256 uncalculatedReward */\n      0x00\n        /* \"LPStaking.sol\":17058:17109  _calculateReward(msg.sender, _dId, isForceWithdraw) */\n      tag_272\n        /* \"LPStaking.sol\":17075:17085  msg.sender */\n      caller\n        /* \"LPStaking.sol\":17087:17091  _dId */\n      dup8\n        /* \"LPStaking.sol\":17093:17108  isForceWithdraw */\n      dup8\n        /* \"LPStaking.sol\":17058:17074  _calculateReward */\n      tag_273\n        /* \"LPStaking.sol\":17058:17109  _calculateReward(msg.sender, _dId, isForceWithdraw) */\n      jump\t// in\n    tag_272:\n        /* \"LPStaking.sol\":17029:17109  uint256 uncalculatedReward = _calculateReward(msg.sender, _dId, isForceWithdraw) */\n      swap1\n      pop\n        /* \"LPStaking.sol\":17120:17134  uint256 reward */\n      0x00\n        /* \"LPStaking.sol\":17154:17172  uncalculatedReward */\n      dup2\n        /* \"LPStaking.sol\":17137:17144  details */\n      dup5\n        /* \"LPStaking.sol\":17137:17151  details.reward */\n      0x40\n      add\n      mload\n        /* \"LPStaking.sol\":17137:17172  details.reward + uncalculatedReward */\n      tag_274\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n        /* \"LPStaking.sol\":17120:17172  uint256 reward = details.reward + uncalculatedReward */\n      swap1\n      pop\n        /* \"LPStaking.sol\":17182:17196  uint256 amount */\n      0x00\n        /* \"LPStaking.sol\":17199:17206  details */\n      dup5\n        /* \"LPStaking.sol\":17199:17212  details.stake */\n      0x20\n      add\n      mload\n        /* \"LPStaking.sol\":17182:17212  uint256 amount = details.stake */\n      swap1\n      pop\n        /* \"LPStaking.sol\":17358:17364  reward */\n      dup2\n        /* \"LPStaking.sol\":17315:17320  pools */\n      0xa1\n        /* \"LPStaking.sol\":17321:17328  details */\n      dup7\n        /* \"LPStaking.sol\":17321:17335  details.poolId */\n      0xc0\n      add\n      mload\n        /* \"LPStaking.sol\":17315:17336  pools[details.poolId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_277\n      jumpi\n      tag_277\n      tag_199\n      jump\t// in\n    tag_277:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"LPStaking.sol\":17315:17355  pools[details.poolId].totalAllotedReward */\n      0x03\n      add\n      sload\n        /* \"LPStaking.sol\":17315:17364  pools[details.poolId].totalAllotedReward > reward */\n      gt\n        /* \"LPStaking.sol\":17294:17443  require(... */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14424:14426   */\n      0x20\n        /* \"LPStaking.sol\":17294:17443  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14406:14427   */\n      mstore\n        /* \"#utility.yul\":14463:14465   */\n      0x35\n        /* \"#utility.yul\":14443:14461   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14436:14466   */\n      mstore\n        /* \"#utility.yul\":14502:14536   */\n      0x5374616b696e673a20496e73756666696369656e742072657761726420616c6c\n        /* \"#utility.yul\":14482:14500   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14475:14537   */\n      mstore\n      shl(0x59, 0x37bbb0b731b290333937b6903a34329020b236b4b7)\n        /* \"#utility.yul\":14553:14571   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14546:14597   */\n      mstore\n        /* \"#utility.yul\":14614:14633   */\n      0x84\n      add\n        /* \"LPStaking.sol\":17294:17443  require(... */\n      tag_187\n        /* \"#utility.yul\":14222:14639   */\n      jump\n        /* \"LPStaking.sol\":17294:17443  require(... */\n    tag_279:\n        /* \"LPStaking.sol\":17486:17515  IERC20Upgradeable rewardtoken */\n      0x00\n        /* \"LPStaking.sol\":17536:17541  pools */\n      0xa1\n        /* \"LPStaking.sol\":17542:17549  details */\n      dup7\n        /* \"LPStaking.sol\":17542:17556  details.poolId */\n      0xc0\n      add\n      mload\n        /* \"LPStaking.sol\":17536:17557  pools[details.poolId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_283\n      jumpi\n      tag_283\n      tag_199\n      jump\t// in\n    tag_283:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"LPStaking.sol\":17536:17564  pools[details.poolId].reward */\n      0x01\n      add\n      sload\n        /* \"LPStaking.sol\":17575:17615  rewardtoken.transfer(msg.sender, reward) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"LPStaking.sol\":17596:17606  msg.sender */\n      caller\n        /* \"LPStaking.sol\":17575:17615  rewardtoken.transfer(msg.sender, reward) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14818:14869   */\n      mstore\n        /* \"#utility.yul\":14885:14903   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":14878:14912   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":17536:17564  pools[details.poolId].reward */\n      swap1\n      swap2\n      and\n      swap2\n      pop\n      dup2\n      swap1\n        /* \"LPStaking.sol\":17575:17595  rewardtoken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":14791:14809   */\n      0x44\n      add\n        /* \"LPStaking.sol\":17575:17615  rewardtoken.transfer(msg.sender, reward) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_288\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_288:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_289\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_289:\n      pop\n        /* \"LPStaking.sol\":17676:17705  IERC721Upgradeable staketoken */\n      0x00\n        /* \"LPStaking.sol\":17727:17732  pools */\n      0xa1\n        /* \"LPStaking.sol\":17733:17740  details */\n      dup8\n        /* \"LPStaking.sol\":17733:17747  details.poolId */\n      0xc0\n      add\n      mload\n        /* \"LPStaking.sol\":17727:17748  pools[details.poolId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_291\n      jumpi\n      tag_291\n      tag_199\n      jump\t// in\n    tag_291:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"LPStaking.sol\":17727:17754  pools[details.poolId].token */\n      sload\n      0x0100\n        /* \"LPStaking.sol\":17815:17828  details.NFTId */\n      dup9\n      add\n      mload\n        /* \"LPStaking.sol\":17765:17829  staketoken.transferFrom(address(this),msg.sender, details.NFTId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":17727:17754  pools[details.poolId].token */\n      swap1\n      swap3\n      and\n      swap3\n      pop\n      dup3\n      swap2\n        /* \"LPStaking.sol\":17765:17788  staketoken.transferFrom */\n      0x23b872dd\n      swap2\n        /* \"LPStaking.sol\":17765:17829  staketoken.transferFrom(address(this),msg.sender, details.NFTId) */\n      tag_293\n      swap2\n        /* \"LPStaking.sol\":17797:17801  this */\n      address\n      swap2\n        /* \"LPStaking.sol\":17803:17813  msg.sender */\n      caller\n      swap2\n        /* \"LPStaking.sol\":17765:17829  staketoken.transferFrom(address(this),msg.sender, details.NFTId) */\n      0x04\n      add\n      tag_246\n      jump\t// in\n    tag_293:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_294\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_294:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_296\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_296:\n      pop\n      pop\n      pop\n      pop\n        /* \"LPStaking.sol\":17845:17860  isForceWithdraw */\n      dup9\n        /* \"LPStaking.sol\":17844:17860  !isForceWithdraw */\n      iszero\n        /* \"LPStaking.sol\":17844:17922  !isForceWithdraw && periodPoolMap[details.vestedFor].totalAllotedFeeReward > 0 */\n      dup1\n      iszero\n      tag_297\n      jumpi\n      pop\n        /* \"LPStaking.sol\":17878:17895  details.vestedFor */\n      0xe0\n      dup8\n      add\n      mload\n        /* \"LPStaking.sol\":17921:17922  0 */\n      0x00\n        /* \"LPStaking.sol\":17864:17896  periodPoolMap[details.vestedFor] */\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":17864:17877  periodPoolMap */\n      0xa2\n        /* \"LPStaking.sol\":17864:17896  periodPoolMap[details.vestedFor] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"LPStaking.sol\":17864:17918  periodPoolMap[details.vestedFor].totalAllotedFeeReward */\n      0x01\n      add\n      sload\n        /* \"LPStaking.sol\":17864:17922  periodPoolMap[details.vestedFor].totalAllotedFeeReward > 0 */\n      iszero\n      iszero\n        /* \"LPStaking.sol\":17844:17922  !isForceWithdraw && periodPoolMap[details.vestedFor].totalAllotedFeeReward > 0 */\n    tag_297:\n        /* \"LPStaking.sol\":17840:18017  if (!isForceWithdraw && periodPoolMap[details.vestedFor].totalAllotedFeeReward > 0) {... */\n      iszero\n      tag_299\n      jumpi\n        /* \"LPStaking.sol\":17978:18006  harvestFee(msg.sender, _dId) */\n      tag_299\n        /* \"LPStaking.sol\":17989:17999  msg.sender */\n      caller\n        /* \"LPStaking.sol\":18001:18005  _dId */\n      dup12\n        /* \"LPStaking.sol\":17978:17988  harvestFee */\n      tag_300\n        /* \"LPStaking.sol\":17978:18006  harvestFee(msg.sender, _dId) */\n      jump\t// in\n    tag_299:\n        /* \"LPStaking.sol\":18101:18107  reward */\n      dup4\n        /* \"LPStaking.sol\":18057:18062  pools */\n      0xa1\n        /* \"LPStaking.sol\":18063:18070  details */\n      dup9\n        /* \"LPStaking.sol\":18063:18077  details.poolId */\n      0xc0\n      add\n      mload\n        /* \"LPStaking.sol\":18057:18078  pools[details.poolId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_302\n      jumpi\n      tag_302\n      tag_199\n      jump\t// in\n    tag_302:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"LPStaking.sol\":18057:18097  pools[details.poolId].totalAllotedReward */\n      0x03\n      add\n      0x00\n        /* \"LPStaking.sol\":18057:18107  pools[details.poolId].totalAllotedReward -= reward */\n      dup3\n      dup3\n      sload\n      tag_304\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_304:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LPStaking.sol\":18161:18167  reward */\n      dup4\n        /* \"LPStaking.sol\":18117:18122  pools */\n      0xa1\n        /* \"LPStaking.sol\":18123:18130  details */\n      dup9\n        /* \"LPStaking.sol\":18123:18137  details.poolId */\n      0xc0\n      add\n      mload\n        /* \"LPStaking.sol\":18117:18138  pools[details.poolId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_306\n      jumpi\n      tag_306\n      tag_199\n      jump\t// in\n    tag_306:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"LPStaking.sol\":18117:18157  pools[details.poolId].totalClaimedReward */\n      0x04\n      add\n      0x00\n        /* \"LPStaking.sol\":18117:18167  pools[details.poolId].totalClaimedReward += reward */\n      dup3\n      dup3\n      sload\n      tag_308\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_308:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LPStaking.sol\":18206:18213  details */\n      dup7\n        /* \"LPStaking.sol\":18206:18219  details.stake */\n      0x20\n      add\n      mload\n        /* \"LPStaking.sol\":18177:18182  pools */\n      0xa1\n        /* \"LPStaking.sol\":18183:18190  details */\n      dup9\n        /* \"LPStaking.sol\":18183:18197  details.poolId */\n      0xc0\n      add\n      mload\n        /* \"LPStaking.sol\":18177:18198  pools[details.poolId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_310\n      jumpi\n      tag_310\n      tag_199\n      jump\t// in\n    tag_310:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"LPStaking.sol\":18177:18202  pools[details.poolId].tvl */\n      0x02\n      add\n      0x00\n        /* \"LPStaking.sol\":18177:18219  pools[details.poolId].tvl -= details.stake */\n      dup3\n      dup3\n      sload\n      tag_312\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_312:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"LPStaking.sol\":18244:18261  details.vestedFor */\n      0xe0\n      dup8\n      add\n      mload\n        /* \"LPStaking.sol\":18230:18262  periodPoolMap[details.vestedFor] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":18230:18243  periodPoolMap */\n      0xa2\n        /* \"LPStaking.sol\":18230:18262  periodPoolMap[details.vestedFor] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"LPStaking.sol\":18230:18276  periodPoolMap[details.vestedFor].tvl -= amount */\n      dup1\n      sload\n        /* \"LPStaking.sol\":18270:18276  amount */\n      dup6\n      swap3\n        /* \"LPStaking.sol\":18230:18262  periodPoolMap[details.vestedFor] */\n      swap1\n        /* \"LPStaking.sol\":18230:18276  periodPoolMap[details.vestedFor].tvl -= amount */\n      tag_313\n      swap1\n        /* \"LPStaking.sol\":18270:18276  amount */\n      dup5\n      swap1\n        /* \"LPStaking.sol\":18230:18276  periodPoolMap[details.vestedFor].tvl -= amount */\n      tag_222\n      jump\t// in\n    tag_313:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"LPStaking.sol\":18332:18342  msg.sender */\n      caller\n        /* \"LPStaking.sol\":18359:18360  0 */\n      0x00\n        /* \"LPStaking.sol\":18323:18343  deposits[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":18323:18331  deposits */\n      0x9e\n        /* \"LPStaking.sol\":18323:18343  deposits[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"LPStaking.sol\":18323:18349  deposits[msg.sender][_dId] */\n      dup14\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"LPStaking.sol\":18323:18356  deposits[msg.sender][_dId].reward */\n      0x02\n      dup2\n      add\n        /* \"LPStaking.sol\":18323:18360  deposits[msg.sender][_dId].reward = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"LPStaking.sol\":18370:18402  deposits[msg.sender][_dId].stake */\n      0x01\n      add\n        /* \"LPStaking.sol\":18370:18406  deposits[msg.sender][_dId].stake = 0 */\n      sstore\n        /* \"LPStaking.sol\":18420:18428  isPaused */\n      and(0xff, sload(0xa4))\n        /* \"LPStaking.sol\":18416:18616  if (isPaused) {... */\n      iszero\n      tag_314\n      jumpi\n        /* \"LPStaking.sol\":18494:18509  pausedTimestamp */\n      sload(0xa5)\n        /* \"LPStaking.sol\":18453:18463  msg.sender */\n      caller\n        /* \"LPStaking.sol\":18444:18464  deposits[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":18444:18452  deposits */\n      0x9e\n        /* \"LPStaking.sol\":18444:18464  deposits[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"LPStaking.sol\":18444:18470  deposits[msg.sender][_dId] */\n      dup15\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"LPStaking.sol\":18444:18491  deposits[msg.sender][_dId].lastRewardCalculated */\n      0x05\n      add\n        /* \"LPStaking.sol\":18444:18509  deposits[msg.sender][_dId].lastRewardCalculated = pausedTimestamp */\n      sstore\n        /* \"LPStaking.sol\":18416:18616  if (isPaused) {... */\n      jump(tag_315)\n    tag_314:\n        /* \"LPStaking.sol\":18549:18559  msg.sender */\n      caller\n        /* \"LPStaking.sol\":18540:18560  deposits[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":18540:18548  deposits */\n      0x9e\n        /* \"LPStaking.sol\":18540:18560  deposits[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"LPStaking.sol\":18540:18566  deposits[msg.sender][_dId] */\n      dup14\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"LPStaking.sol\":18590:18605  block.timestamp */\n      timestamp\n        /* \"LPStaking.sol\":18540:18587  deposits[msg.sender][_dId].lastRewardCalculated */\n      0x05\n      swap1\n      swap2\n      add\n        /* \"LPStaking.sol\":18540:18605  deposits[msg.sender][_dId].lastRewardCalculated = block.timestamp */\n      sstore\n        /* \"LPStaking.sol\":18416:18616  if (isPaused) {... */\n    tag_315:\n        /* \"LPStaking.sol\":18660:18719  RewardClaimed(msg.sender, reward, _poolId, block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9024:9049   */\n      dup6\n      dup2\n      mstore\n        /* \"LPStaking.sol\":18703:18718  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":9080:9082   */\n      0x20\n        /* \"#utility.yul\":9065:9083   */\n      dup3\n      add\n        /* \"#utility.yul\":9058:9092   */\n      mstore\n        /* \"LPStaking.sol\":18694:18701  _poolId */\n      dup13\n      swap2\n        /* \"LPStaking.sol\":18674:18684  msg.sender */\n      caller\n      swap2\n        /* \"LPStaking.sol\":18660:18719  RewardClaimed(msg.sender, reward, _poolId, block.timestamp) */\n      0x812be816db82c66cd18ca8457005cd84689642d8ac4d38599cc6af444a2dc72a\n      swap2\n        /* \"#utility.yul\":8997:9015   */\n      add\n        /* \"LPStaking.sol\":18660:18719  RewardClaimed(msg.sender, reward, _poolId, block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      dup1\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"LPStaking.sol\":16537:18726  function withdraw(... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1908:2009  function renounceOwnership() public virtual onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_320\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1972:2002  _transferOwnership(address(0)) */\n      tag_323\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1999:2000  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1972:1990  _transferOwnership */\n      tag_324\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1972:2002  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1908:2009  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"LPStaking.sol\":6942:7104  function PauseStaking() public onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_328:\n        /* \"LPStaking.sol\":7002:7010  isPaused */\n      and(0xff, sload(0xa4))\n        /* \"LPStaking.sol\":7001:7010  !isPaused */\n      iszero\n        /* \"LPStaking.sol\":6993:7029  require(!isPaused, \"Already Paused\") */\n      tag_331\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15125:15127   */\n      0x20\n        /* \"LPStaking.sol\":6993:7029  require(!isPaused, \"Already Paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15107:15128   */\n      mstore\n        /* \"#utility.yul\":15164:15166   */\n      0x0e\n        /* \"#utility.yul\":15144:15162   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15137:15167   */\n      mstore\n      shl(0x92, 0x105b1c9958591e4814185d5cd959)\n        /* \"#utility.yul\":15183:15201   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15176:15220   */\n      mstore\n        /* \"#utility.yul\":15237:15255   */\n      0x64\n      add\n        /* \"LPStaking.sol\":6993:7029  require(!isPaused, \"Already Paused\") */\n      tag_187\n        /* \"#utility.yul\":14923:15261   */\n      jump\n        /* \"LPStaking.sol\":6993:7029  require(!isPaused, \"Already Paused\") */\n    tag_331:\n        /* \"LPStaking.sol\":7039:7047  isPaused */\n      0xa4\n        /* \"LPStaking.sol\":7039:7054  isPaused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"LPStaking.sol\":7050:7054  true */\n      0x01\n        /* \"LPStaking.sol\":7039:7054  isPaused = true */\n      or\n      swap1\n      sstore\n        /* \"LPStaking.sol\":7082:7097  block.timestamp */\n      timestamp\n        /* \"LPStaking.sol\":7064:7079  pausedTimestamp */\n      0xa5\n        /* \"LPStaking.sol\":7064:7097  pausedTimestamp = block.timestamp */\n      sstore\n        /* \"LPStaking.sol\":6942:7104  function PauseStaking() public onlyOwner {... */\n      jump\t// out\n        /* \"LPStaking.sol\":21459:21857  function totalReward() public view returns (uint256 _totalReward) {... */\n    tag_79:\n        /* \"LPStaking.sol\":21503:21523  uint256 _totalReward */\n      0x00\n      dup1\n        /* \"LPStaking.sol\":21577:21578  1 */\n      0x01\n        /* \"LPStaking.sol\":21560:21823  for (uint256 i = 1; i <= _depositIds.current(); i++) {... */\n    tag_335:\n        /* \"LPStaking.sol\":21585:21596  _depositIds */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":929:943  counter._value */\n      sload\n        /* \"LPStaking.sol\":21580:21581  i */\n      dup2\n        /* \"LPStaking.sol\":21580:21606  i <= _depositIds.current() */\n      gt\n        /* \"LPStaking.sol\":21560:21823  for (uint256 i = 1; i <= _depositIds.current(); i++) {... */\n      tag_336\n      jumpi\n        /* \"LPStaking.sol\":21657:21658  0 */\n      0x00\n        /* \"LPStaking.sol\":21631:21648  depositDetails[i] */\n      dup2\n      dup2\n      mstore\n        /* \"LPStaking.sol\":21631:21645  depositDetails */\n      0xa0\n        /* \"LPStaking.sol\":21631:21648  depositDetails[i] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"LPStaking.sol\":21631:21654  depositDetails[i].stake */\n      0x01\n      add\n      sload\n        /* \"LPStaking.sol\":21631:21658  depositDetails[i].stake > 0 */\n      iszero\n        /* \"LPStaking.sol\":21627:21813  if (depositDetails[i].stake > 0) {... */\n      tag_340\n      jumpi\n        /* \"LPStaking.sol\":21685:21702  depositDetails[i] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"LPStaking.sol\":21685:21699  depositDetails */\n      0xa0\n        /* \"LPStaking.sol\":21685:21702  depositDetails[i] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"LPStaking.sol\":21685:21709  depositDetails[i].reward */\n      0x02\n      add\n      sload\n        /* \"LPStaking.sol\":21678:21709  sum += depositDetails[i].reward */\n      tag_341\n      swap1\n      dup4\n      tag_275\n      jump\t// in\n    tag_341:\n        /* \"LPStaking.sol\":21759:21760  0 */\n      0x00\n        /* \"LPStaking.sol\":21763:21780  depositDetails[i] */\n      dup3\n      dup2\n      mstore\n        /* \"LPStaking.sol\":21763:21777  depositDetails */\n      0xa0\n        /* \"LPStaking.sol\":21763:21780  depositDetails[i] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"LPStaking.sol\":21763:21790  depositDetails[i].depositId */\n      sload\n        /* \"LPStaking.sol\":21678:21709  sum += depositDetails[i].reward */\n      swap2\n      swap4\n      pop\n        /* \"LPStaking.sol\":21734:21798  _calculateReward(address(0), depositDetails[i].depositId, false) */\n      tag_342\n      swap2\n        /* \"LPStaking.sol\":21759:21760  0 */\n      dup2\n        /* \"LPStaking.sol\":21734:21750  _calculateReward */\n      tag_273\n        /* \"LPStaking.sol\":21734:21798  _calculateReward(address(0), depositDetails[i].depositId, false) */\n      jump\t// in\n    tag_342:\n        /* \"LPStaking.sol\":21727:21798  sum += _calculateReward(address(0), depositDetails[i].depositId, false) */\n      tag_343\n      swap1\n      dup4\n      tag_275\n      jump\t// in\n    tag_343:\n      swap2\n      pop\n        /* \"LPStaking.sol\":21627:21813  if (depositDetails[i].stake > 0) {... */\n    tag_340:\n        /* \"LPStaking.sol\":21608:21611  i++ */\n      dup1\n      tag_344\n      dup2\n      tag_203\n      jump\t// in\n    tag_344:\n      swap2\n      pop\n      pop\n        /* \"LPStaking.sol\":21560:21823  for (uint256 i = 1; i <= _depositIds.current(); i++) {... */\n      jump(tag_335)\n    tag_336:\n      pop\n        /* \"LPStaking.sol\":21847:21850  sum */\n      swap2\n        /* \"LPStaking.sol\":21459:21857  function totalReward() public view returns (uint256 _totalReward) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"LPStaking.sol\":6307:6862  function addPool(... */\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_348\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_348:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":5432:5450  tokenPools[_token] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":5432:5442  tokenPools */\n      0x9d\n        /* \"LPStaking.sol\":5432:5450  tokenPools[_token] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"LPStaking.sol\":6458:6464  _token */\n      dup4\n      swap1\n        /* \"LPStaking.sol\":5432:5450  tokenPools[_token] */\n      0xff\n      and\n        /* \"LPStaking.sol\":5431:5450  !tokenPools[_token] */\n      iszero\n        /* \"LPStaking.sol\":5423:5485  require(!tokenPools[_token], \"Add : token pool already exits\") */\n      tag_351\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15468:15470   */\n      0x20\n        /* \"LPStaking.sol\":5423:5485  require(!tokenPools[_token], \"Add : token pool already exits\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15450:15471   */\n      mstore\n        /* \"#utility.yul\":15507:15509   */\n      0x1e\n        /* \"#utility.yul\":15487:15505   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15480:15510   */\n      mstore\n        /* \"#utility.yul\":15546:15578   */\n      0x416464203a20746f6b656e20706f6f6c20616c72656164792065786974730000\n        /* \"#utility.yul\":15526:15544   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15519:15579   */\n      mstore\n        /* \"#utility.yul\":15596:15614   */\n      0x64\n      add\n        /* \"LPStaking.sol\":5423:5485  require(!tokenPools[_token], \"Add : token pool already exits\") */\n      tag_187\n        /* \"#utility.yul\":15266:15620   */\n      jump\n        /* \"LPStaking.sol\":5423:5485  require(!tokenPools[_token], \"Add : token pool already exits\") */\n    tag_351:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":6476:6494  tokenPools[_token] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":6476:6486  tokenPools */\n      0x9d\n        /* \"LPStaking.sol\":6476:6494  tokenPools[_token] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"LPStaking.sol\":6476:6501  tokenPools[_token] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"LPStaking.sol\":6497:6501  true */\n      0x01\n        /* \"LPStaking.sol\":6476:6501  tokenPools[_token] = true */\n      or\n      swap1\n      sstore\n        /* \"LPStaking.sol\":6527:6532  pools */\n      0xa1\n        /* \"LPStaking.sol\":6527:6539  pools.length */\n      sload\n        /* \"LPStaking.sol\":6527:6577  pools.length > 0 ? pools.length - 1 : pools.length */\n      tag_355\n      jumpi\n        /* \"LPStaking.sol\":6565:6570  pools */\n      0xa1\n        /* \"LPStaking.sol\":6565:6577  pools.length */\n      sload\n        /* \"LPStaking.sol\":6527:6577  pools.length > 0 ? pools.length - 1 : pools.length */\n      jump(tag_357)\n    tag_355:\n        /* \"LPStaking.sol\":6546:6551  pools */\n      0xa1\n        /* \"LPStaking.sol\":6546:6558  pools.length */\n      sload\n        /* \"LPStaking.sol\":6546:6562  pools.length - 1 */\n      tag_357\n      swap1\n        /* \"LPStaking.sol\":6561:6562  1 */\n      0x01\n      swap1\n        /* \"LPStaking.sol\":6546:6562  pools.length - 1 */\n      tag_222\n      jump\t// in\n    tag_357:\n        /* \"LPStaking.sol\":6511:6577  uint256 index = pools.length > 0 ? pools.length - 1 : pools.length */\n      swap1\n      pop\n        /* \"LPStaking.sol\":6625:6634  uint256 i */\n      0x00\n        /* \"LPStaking.sol\":6620:6761  for (uint256 i; i < _periodRates.length; i++) {... */\n    tag_358:\n        /* \"LPStaking.sol\":6640:6652  _periodRates */\n      dup4\n        /* \"LPStaking.sol\":6640:6659  _periodRates.length */\n      mload\n        /* \"LPStaking.sol\":6636:6637  i */\n      dup2\n        /* \"LPStaking.sol\":6636:6659  i < _periodRates.length */\n      lt\n        /* \"LPStaking.sol\":6620:6761  for (uint256 i; i < _periodRates.length; i++) {... */\n      iszero\n      tag_359\n      jumpi\n        /* \"LPStaking.sol\":6731:6743  _periodRates */\n      dup4\n        /* \"LPStaking.sol\":6744:6745  i */\n      dup2\n        /* \"LPStaking.sol\":6731:6746  _periodRates[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_362\n      jumpi\n      tag_362\n      tag_199\n      jump\t// in\n    tag_362:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"LPStaking.sol\":6731:6750  _periodRates[i].APR */\n      0x20\n      add\n      mload\n        /* \"LPStaking.sol\":6680:6697  vestingAPRPerPool */\n      0x9c\n        /* \"LPStaking.sol\":6680:6704  vestingAPRPerPool[index] */\n      0x00\n        /* \"LPStaking.sol\":6698:6703  index */\n      dup5\n        /* \"LPStaking.sol\":6680:6704  vestingAPRPerPool[index] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LPStaking.sol\":6680:6728  vestingAPRPerPool[index][_periodRates[i].period] */\n      0x00\n        /* \"LPStaking.sol\":6705:6717  _periodRates */\n      dup7\n        /* \"LPStaking.sol\":6718:6719  i */\n      dup5\n        /* \"LPStaking.sol\":6705:6720  _periodRates[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_364\n      jumpi\n      tag_364\n      tag_199\n      jump\t// in\n    tag_364:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"LPStaking.sol\":6705:6727  _periodRates[i].period */\n      0x00\n      add\n      mload\n        /* \"LPStaking.sol\":6680:6728  vestingAPRPerPool[index][_periodRates[i].period] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LPStaking.sol\":6680:6750  vestingAPRPerPool[index][_periodRates[i].period] = _periodRates[i].APR */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LPStaking.sol\":6661:6664  i++ */\n      dup1\n      dup1\n      tag_365\n      swap1\n      tag_203\n      jump\t// in\n    tag_365:\n      swap2\n      pop\n      pop\n        /* \"LPStaking.sol\":6620:6761  for (uint256 i; i < _periodRates.length; i++) {... */\n      jump(tag_358)\n    tag_359:\n      pop\n      pop\n        /* \"LPStaking.sol\":6771:6776  uniV3 */\n      0x9b\n        /* \"LPStaking.sol\":6771:6796  uniV3 = IUNIV3POS(_token) */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      dup7\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"LPStaking.sol\":6817:6854  stakingPool(_token, _reward, 0, 0, 0) */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      swap3\n      dup4\n      mstore\n      swap5\n      dup7\n      and\n      0x20\n      dup4\n      add\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":6771:6776  uniV3 */\n      0x00\n        /* \"LPStaking.sol\":6817:6854  stakingPool(_token, _reward, 0, 0, 0) */\n      swap6\n      dup4\n      add\n      dup7\n      dup2\n      mstore\n      0x60\n      dup5\n      add\n      dup8\n      dup2\n      mstore\n      0x80\n      dup6\n      add\n      dup9\n      dup2\n      mstore\n        /* \"LPStaking.sol\":6806:6811  pools */\n      0xa1\n        /* \"LPStaking.sol\":6806:6855  pools.push(stakingPool(_token, _reward, 0, 0, 0)) */\n      dup1\n      sload\n        /* \"LPStaking.sol\":6771:6796  uniV3 = IUNIV3POS(_token) */\n      0x01\n        /* \"LPStaking.sol\":6806:6855  pools.push(stakingPool(_token, _reward, 0, 0, 0)) */\n      dup2\n      add\n      dup3\n      sstore\n      swap10\n      mstore\n      swap5\n      mload\n      0x05\n      swap1\n      swap9\n      mul\n      0xaadc37b8ba5645e62f4546802db221593a94729ccbfc5a97d01365a88f649878\n      dup2\n      add\n      dup1\n      sload\n      swap10\n      dup12\n      and\n      swap10\n      dup7\n      and\n      swap10\n      swap1\n      swap10\n      or\n      swap1\n      swap9\n      sstore\n      swap2\n      mload\n      0xaadc37b8ba5645e62f4546802db221593a94729ccbfc5a97d01365a88f649879\n      dup9\n      add\n      dup1\n      sload\n      swap2\n      swap1\n      swap10\n      and\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap7\n      sstore\n      mload\n      0xaadc37b8ba5645e62f4546802db221593a94729ccbfc5a97d01365a88f64987a\n      dup6\n      add\n      sstore\n      swap4\n      mload\n      0xaadc37b8ba5645e62f4546802db221593a94729ccbfc5a97d01365a88f64987b\n      dup5\n      add\n      sstore\n      pop\n      pop\n      swap1\n      mload\n      0xaadc37b8ba5645e62f4546802db221593a94729ccbfc5a97d01365a88f64987c\n      swap1\n      swap2\n      add\n      sstore\n        /* \"LPStaking.sol\":6307:6862  function addPool(... */\n      jump\t// out\n        /* \"LPStaking.sol\":20771:21226  function getDeposits(address _user) public view returns (stakeDetails[] memory) {... */\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":20913:20934  userDepositMap[_user] */\n      dup2\n      and\n        /* \"LPStaking.sol\":20862:20891  stakeDetails[] memory details */\n      0x00\n        /* \"LPStaking.sol\":20913:20934  userDepositMap[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":20913:20927  userDepositMap */\n      0x9f\n        /* \"LPStaking.sol\":20913:20934  userDepositMap[_user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"LPStaking.sol\":20913:20941  userDepositMap[_user].length */\n      sload\n        /* \"LPStaking.sol\":20828:20849  stakeDetails[] memory */\n      0x60\n      swap2\n        /* \"LPStaking.sol\":20862:20891  stakeDetails[] memory details */\n      swap1\n        /* \"LPStaking.sol\":20894:20942  new stakeDetails[](userDepositMap[_user].length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_370\n      jumpi\n      tag_370\n      tag_371\n      jump\t// in\n    tag_370:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_372\n      jumpi\n      dup2\n      0x20\n      add\n    tag_373:\n      tag_374\n      mload(0x40)\n      dup1\n      0x0120\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_374:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_373\n      jumpi\n      swap1\n      pop\n    tag_372:\n      pop\n        /* \"LPStaking.sol\":20862:20942  stakeDetails[] memory details = new stakeDetails[](userDepositMap[_user].length) */\n      swap1\n      pop\n        /* \"LPStaking.sol\":20957:20966  uint256 i */\n      0x00\n        /* \"LPStaking.sol\":20952:21196  for (uint256 i = 0; i < userDepositMap[_user].length; i++) {... */\n    tag_376:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":20976:20997  userDepositMap[_user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":20976:20990  userDepositMap */\n      0x9f\n        /* \"LPStaking.sol\":20976:20997  userDepositMap[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"LPStaking.sol\":20976:21004  userDepositMap[_user].length */\n      sload\n        /* \"LPStaking.sol\":20972:21004  i < userDepositMap[_user].length */\n      dup2\n      lt\n        /* \"LPStaking.sol\":20952:21196  for (uint256 i = 0; i < userDepositMap[_user].length; i++) {... */\n      iszero\n      tag_377\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":21055:21070  deposits[_user] */\n      dup5\n      and\n        /* \"LPStaking.sol\":21025:21052  stakeDetails memory deposit */\n      0x00\n        /* \"LPStaking.sol\":21055:21070  deposits[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":21055:21063  deposits */\n      0x9e\n        /* \"LPStaking.sol\":21055:21070  deposits[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"LPStaking.sol\":21071:21085  userDepositMap */\n      0x9f\n        /* \"LPStaking.sol\":21071:21092  userDepositMap[_user] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n        /* \"LPStaking.sol\":21071:21095  userDepositMap[_user][i] */\n      dup1\n      sload\n        /* \"LPStaking.sol\":21025:21052  stakeDetails memory deposit */\n      dup4\n      swap2\n        /* \"LPStaking.sol\":21071:21092  userDepositMap[_user] */\n      swap1\n        /* \"LPStaking.sol\":21093:21094  i */\n      dup6\n      swap1\n        /* \"LPStaking.sol\":21071:21095  userDepositMap[_user][i] */\n      dup2\n      lt\n      tag_380\n      jumpi\n      tag_380\n      tag_199\n      jump\t// in\n    tag_380:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"LPStaking.sol\":21055:21096  deposits[_user][userDepositMap[_user][i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LPStaking.sol\":21025:21096  stakeDetails memory deposit = deposits[_user][userDepositMap[_user][i]] */\n      mload(0x40)\n      dup1\n      0x0120\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x07\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x08\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"LPStaking.sol\":21130:21131  0 */\n      0x00\n        /* \"LPStaking.sol\":21114:21121  deposit */\n      dup2\n        /* \"LPStaking.sol\":21114:21127  deposit.stake */\n      0x20\n      add\n      mload\n        /* \"LPStaking.sol\":21114:21131  deposit.stake > 0 */\n      gt\n        /* \"LPStaking.sol\":21110:21186  if (deposit.stake > 0) {... */\n      iszero\n      tag_382\n      jumpi\n        /* \"LPStaking.sol\":21164:21171  deposit */\n      dup1\n        /* \"LPStaking.sol\":21151:21158  details */\n      dup4\n        /* \"LPStaking.sol\":21159:21160  i */\n      dup4\n        /* \"LPStaking.sol\":21151:21161  details[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_384\n      jumpi\n      tag_384\n      tag_199\n      jump\t// in\n    tag_384:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"LPStaking.sol\":21151:21171  details[i] = deposit */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"LPStaking.sol\":21110:21186  if (deposit.stake > 0) {... */\n    tag_382:\n      pop\n        /* \"LPStaking.sol\":21006:21009  i++ */\n      dup1\n      tag_385\n      dup2\n      tag_203\n      jump\t// in\n    tag_385:\n      swap2\n      pop\n      pop\n        /* \"LPStaking.sol\":20952:21196  for (uint256 i = 0; i < userDepositMap[_user].length; i++) {... */\n      jump(tag_376)\n    tag_377:\n      pop\n        /* \"LPStaking.sol\":21212:21219  details */\n      swap3\n        /* \"LPStaking.sol\":20771:21226  function getDeposits(address _user) public view returns (stakeDetails[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"LPStaking.sol\":5509:5603  function setOnlyAddress(address _only) external onlyOwner {... */\n    tag_108:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_389\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_389:\n        /* \"LPStaking.sol\":5577:5588  onlyaddress */\n      0x99\n        /* \"LPStaking.sol\":5577:5596  onlyaddress = _only */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"LPStaking.sol\":5509:5603  function setOnlyAddress(address _only) external onlyOwner {... */\n      jump\t// out\n        /* \"LPStaking.sol\":8718:9347  function withdrawRewardfromPool(uint256 _poolId, uint256 amount) public onlyOwner poolExists(_poolId) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_395\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_395:\n        /* \"LPStaking.sol\":4739:4744  pools */\n      0xa1\n        /* \"LPStaking.sol\":4739:4751  pools.length */\n      sload\n        /* \"LPStaking.sol\":8811:8818  _poolId */\n      dup3\n      swap1\n        /* \"LPStaking.sol\":4729:4751  _poolId < pools.length */\n      dup2\n      lt\n        /* \"LPStaking.sol\":4721:4784  require(_poolId < pools.length, \"Staking: Pool doesn't exists\") */\n      tag_398\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_192\n      jump\t// in\n    tag_398:\n        /* \"LPStaking.sol\":8865:8894  IERC20Upgradeable rewardToken */\n      0x00\n        /* \"LPStaking.sol\":8915:8920  pools */\n      0xa1\n        /* \"LPStaking.sol\":8921:8928  _poolId */\n      dup5\n        /* \"LPStaking.sol\":8915:8929  pools[_poolId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_402\n      jumpi\n      tag_402\n      tag_199\n      jump\t// in\n    tag_402:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"LPStaking.sol\":8915:8936  pools[_poolId].reward */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"LPStaking.sol\":8865:8937  IERC20Upgradeable rewardToken = IERC20Upgradeable(pools[_poolId].reward) */\n      swap1\n      pop\n        /* \"LPStaking.sol\":9063:9069  amount */\n      dup3\n        /* \"LPStaking.sol\":9026:9031  pools */\n      0xa1\n        /* \"LPStaking.sol\":9032:9039  _poolId */\n      dup6\n        /* \"LPStaking.sol\":9026:9040  pools[_poolId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_405\n      jumpi\n      tag_405\n      tag_199\n      jump\t// in\n    tag_405:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"LPStaking.sol\":9026:9059  pools[_poolId].totalAllotedReward */\n      0x03\n      add\n      sload\n        /* \"LPStaking.sol\":9026:9069  pools[_poolId].totalAllotedReward >= amount */\n      lt\n      iszero\n        /* \"LPStaking.sol\":9005:9158  require(... */\n      tag_407\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15827:15829   */\n      0x20\n        /* \"LPStaking.sol\":9005:9158  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15809:15830   */\n      mstore\n        /* \"#utility.yul\":15866:15868   */\n      0x3f\n        /* \"#utility.yul\":15846:15864   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15839:15869   */\n      mstore\n        /* \"#utility.yul\":15905:15939   */\n      0x5374616b696e673a20616d6f756e74204d757374206265206c65737320746861\n        /* \"#utility.yul\":15885:15903   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15878:15940   */\n      mstore\n        /* \"#utility.yul\":15976:16009   */\n      0x6e206f7220657175616c20746f20617661696c61626c65207265776172647300\n        /* \"#utility.yul\":15956:15974   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15949:16010   */\n      mstore\n        /* \"#utility.yul\":16027:16046   */\n      0x84\n      add\n        /* \"LPStaking.sol\":9005:9158  require(... */\n      tag_187\n        /* \"#utility.yul\":15625:16052   */\n      jump\n        /* \"LPStaking.sol\":9005:9158  require(... */\n    tag_407:\n        /* \"LPStaking.sol\":9211:9251  rewardToken.transfer(msg.sender, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"LPStaking.sol\":9232:9242  msg.sender */\n      caller\n        /* \"LPStaking.sol\":9211:9251  rewardToken.transfer(msg.sender, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14818:14869   */\n      mstore\n        /* \"#utility.yul\":14885:14903   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":14878:14912   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":9211:9231  rewardToken.transfer */\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":14791:14809   */\n      0x44\n      add\n        /* \"LPStaking.sol\":9211:9251  rewardToken.transfer(msg.sender, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_412\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_412:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_413\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_413:\n      pop\n        /* \"LPStaking.sol\":9334:9340  amount */\n      dup3\n        /* \"LPStaking.sol\":9297:9302  pools */\n      0xa1\n        /* \"LPStaking.sol\":9303:9310  _poolId */\n      dup6\n        /* \"LPStaking.sol\":9297:9311  pools[_poolId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_415\n      jumpi\n      tag_415\n      tag_199\n      jump\t// in\n    tag_415:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"LPStaking.sol\":9297:9330  pools[_poolId].totalAllotedReward */\n      0x03\n      add\n      0x00\n        /* \"LPStaking.sol\":9297:9340  pools[_poolId].totalAllotedReward -= amount */\n      dup3\n      dup3\n      sload\n      tag_417\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_417:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"LPStaking.sol\":8718:9347  function withdrawRewardfromPool(uint256 _poolId, uint256 amount) public onlyOwner poolExists(_poolId) {... */\n      jump\t// out\n        /* \"LPStaking.sol\":13943:16005  function stake(... */\n    tag_119:\n        /* \"LPStaking.sol\":14104:14111  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_419\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_237\n      jump\t// in\n    tag_419:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      sstore\n        /* \"LPStaking.sol\":16055:16063  isPaused */\n      and(0xff, sload(0xa4))\n        /* \"LPStaking.sol\":16054:16063  !isPaused */\n      iszero\n        /* \"LPStaking.sol\":16046:16084  require(!isPaused, \"contract paused!\") */\n      tag_422\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13174:13176   */\n      0x20\n        /* \"LPStaking.sol\":16046:16084  require(!isPaused, \"contract paused!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13156:13177   */\n      mstore\n        /* \"#utility.yul\":13213:13215   */\n      0x10\n        /* \"#utility.yul\":13193:13211   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13186:13216   */\n      mstore\n      shl(0x80, 0x636f6e74726163742070617573656421)\n        /* \"#utility.yul\":13232:13250   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13225:13271   */\n      mstore\n        /* \"#utility.yul\":13288:13306   */\n      0x64\n      add\n        /* \"LPStaking.sol\":16046:16084  require(!isPaused, \"contract paused!\") */\n      tag_187\n        /* \"#utility.yul\":12972:13312   */\n      jump\n        /* \"LPStaking.sol\":16046:16084  require(!isPaused, \"contract paused!\") */\n    tag_422:\n        /* \"LPStaking.sol\":4739:4744  pools */\n      0xa1\n        /* \"LPStaking.sol\":4739:4751  pools.length */\n      sload\n        /* \"LPStaking.sol\":14086:14093  _poolId */\n      dup5\n      swap1\n        /* \"LPStaking.sol\":4729:4751  _poolId < pools.length */\n      dup2\n      lt\n        /* \"LPStaking.sol\":4721:4784  require(_poolId < pools.length, \"Staking: Pool doesn't exists\") */\n      tag_425\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_192\n      jump\t// in\n    tag_425:\n        /* \"LPStaking.sol\":14132:14140  isPaused */\n      and(0xff, sload(0xa4))\n        /* \"LPStaking.sol\":14131:14140  !isPaused */\n      iszero\n        /* \"LPStaking.sol\":14123:14162  require(!isPaused, \"Staking is paused\") */\n      tag_428\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16259:16261   */\n      0x20\n        /* \"LPStaking.sol\":14123:14162  require(!isPaused, \"Staking is paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16241:16262   */\n      mstore\n        /* \"#utility.yul\":16298:16300   */\n      0x11\n        /* \"#utility.yul\":16278:16296   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16271:16301   */\n      mstore\n      shl(0x7a, 0x14dd185ada5b99c81a5cc81c185d5cd959)\n        /* \"#utility.yul\":16317:16335   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16310:16357   */\n      mstore\n        /* \"#utility.yul\":16374:16392   */\n      0x64\n      add\n        /* \"LPStaking.sol\":14123:14162  require(!isPaused, \"Staking is paused\") */\n      tag_187\n        /* \"#utility.yul\":16057:16398   */\n      jump\n        /* \"LPStaking.sol\":14123:14162  require(!isPaused, \"Staking is paused\") */\n    tag_428:\n        /* \"LPStaking.sol\":8319:8326  uint256 */\n      0x00\n        /* \"LPStaking.sol\":8345:8371  vestingAPRPerPool[_poolId] */\n      dup6\n      dup2\n      mstore\n        /* \"LPStaking.sol\":8345:8362  vestingAPRPerPool */\n      0x9c\n        /* \"LPStaking.sol\":8345:8371  vestingAPRPerPool[_poolId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"LPStaking.sol\":8345:8380  vestingAPRPerPool[_poolId][_period] */\n      dup7\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"LPStaking.sol\":14257:14258  0 */\n      0x00\n        /* \"LPStaking.sol\":14229:14258  getAPR(_poolId, _period) != 0 */\n      sub\n        /* \"LPStaking.sol\":14221:14285  require(getAPR(_poolId, _period) != 0, \"Invalid staking period\") */\n      tag_432\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16605:16607   */\n      0x20\n        /* \"LPStaking.sol\":14221:14285  require(getAPR(_poolId, _period) != 0, \"Invalid staking period\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16587:16608   */\n      mstore\n        /* \"#utility.yul\":16644:16646   */\n      0x16\n        /* \"#utility.yul\":16624:16642   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16617:16647   */\n      mstore\n      shl(0x52, 0x125b9d985b1a59081cdd185ada5b99c81c195c9a5bd9)\n        /* \"#utility.yul\":16663:16681   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16656:16708   */\n      mstore\n        /* \"#utility.yul\":16725:16743   */\n      0x64\n      add\n        /* \"LPStaking.sol\":14221:14285  require(getAPR(_poolId, _period) != 0, \"Invalid staking period\") */\n      tag_187\n        /* \"#utility.yul\":16403:16749   */\n      jump\n        /* \"LPStaking.sol\":14221:14285  require(getAPR(_poolId, _period) != 0, \"Invalid staking period\") */\n    tag_432:\n        /* \"LPStaking.sol\":14392:14397  uniV3 */\n      sload(0x9b)\n        /* \"LPStaking.sol\":14392:14416  uniV3.positions(tokenId) */\n      mload(0x40)\n      shl(0xe3, 0x133f7571)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup7\n      swap1\n      mstore\n        /* \"LPStaking.sol\":14331:14343  address weth */\n      0x00\n      swap2\n      dup3\n      swap2\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":14392:14397  uniV3 */\n      and\n      swap1\n        /* \"LPStaking.sol\":14392:14407  uniV3.positions */\n      0x99fbab88\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"LPStaking.sol\":14392:14416  uniV3.positions(tokenId) */\n      0x0180\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_437\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_437:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_438\n      swap2\n      swap1\n      tag_439\n      jump\t// in\n    tag_438:\n        /* \"LPStaking.sol\":14327:14416  (, ,address weth , address mprw , , , ,uint128 amount , , , , ) =uniV3.positions(tokenId) */\n      pop\n      pop\n      pop\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n        /* \"LPStaking.sol\":14488:14492  weth */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":14473:14492  address(WETH)==weth */\n      and\n        /* \"LPStaking.sol\":14481:14485  WETH */\n      0x9a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":14473:14492  address(WETH)==weth */\n      and\n      eq\n        /* \"LPStaking.sol\":14473:14524  address(WETH)==weth && pools[_poolId].reward ==mprw */\n      dup1\n      iszero\n      tag_440\n      jumpi\n      pop\n        /* \"LPStaking.sol\":14520:14524  mprw */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":14496:14524  pools[_poolId].reward ==mprw */\n      and\n        /* \"LPStaking.sol\":14496:14501  pools */\n      0xa1\n        /* \"LPStaking.sol\":14502:14509  _poolId */\n      dup10\n        /* \"LPStaking.sol\":14496:14510  pools[_poolId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_442\n      jumpi\n      tag_442\n      tag_199\n      jump\t// in\n    tag_442:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"LPStaking.sol\":14496:14517  pools[_poolId].reward */\n      0x01\n        /* \"LPStaking.sol\":14496:14510  pools[_poolId] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"LPStaking.sol\":14496:14517  pools[_poolId].reward */\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"LPStaking.sol\":14496:14524  pools[_poolId].reward ==mprw */\n      eq\n        /* \"LPStaking.sol\":14473:14524  address(WETH)==weth && pools[_poolId].reward ==mprw */\n    tag_440:\n        /* \"LPStaking.sol\":14465:14543  require(address(WETH)==weth && pools[_poolId].reward ==mprw,\"Invalid LP pool\") */\n      tag_444\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18826:18828   */\n      0x20\n        /* \"LPStaking.sol\":14465:14543  require(address(WETH)==weth && pools[_poolId].reward ==mprw,\"Invalid LP pool\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18808:18829   */\n      mstore\n        /* \"#utility.yul\":18865:18867   */\n      0x0f\n        /* \"#utility.yul\":18845:18863   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18838:18868   */\n      mstore\n      shl(0x8a, 0x125b9d985b1a59081314081c1bdbdb)\n        /* \"#utility.yul\":18884:18902   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18877:18922   */\n      mstore\n        /* \"#utility.yul\":18939:18957   */\n      0x64\n      add\n        /* \"LPStaking.sol\":14465:14543  require(address(WETH)==weth && pools[_poolId].reward ==mprw,\"Invalid LP pool\") */\n      tag_187\n        /* \"#utility.yul\":18624:18963   */\n      jump\n        /* \"LPStaking.sol\":14465:14543  require(address(WETH)==weth && pools[_poolId].reward ==mprw,\"Invalid LP pool\") */\n    tag_444:\n        /* \"LPStaking.sol\":14553:14577  IERC721Upgradeable token */\n      0x00\n        /* \"LPStaking.sol\":14599:14604  pools */\n      0xa1\n        /* \"LPStaking.sol\":14605:14612  _poolId */\n      dup10\n        /* \"LPStaking.sol\":14599:14613  pools[_poolId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_448\n      jumpi\n      tag_448\n      tag_199\n      jump\t// in\n    tag_448:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"LPStaking.sol\":14599:14619  pools[_poolId].token */\n      sload\n        /* \"LPStaking.sol\":14704:14753  token.isApprovedForAll(msg.sender, address(this)) */\n      mload(0x40)\n      shl(0xe0, 0xe985e9c5)\n      dup2\n      mstore\n        /* \"LPStaking.sol\":14727:14737  msg.sender */\n      caller\n        /* \"LPStaking.sol\":14704:14753  token.isApprovedForAll(msg.sender, address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19180:19214   */\n      mstore\n        /* \"LPStaking.sol\":14747:14751  this */\n      address\n        /* \"#utility.yul\":19230:19248   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19223:19266   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":14599:14619  pools[_poolId].token */\n      swap1\n      swap2\n      and\n      swap2\n      pop\n      dup2\n      swap1\n        /* \"LPStaking.sol\":14704:14726  token.isApprovedForAll */\n      0xe985e9c5\n      swap1\n        /* \"#utility.yul\":19115:19133   */\n      0x44\n      add\n        /* \"LPStaking.sol\":14704:14753  token.isApprovedForAll(msg.sender, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_453\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_453:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_454\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_454:\n        /* \"LPStaking.sol\":14704:14798  token.isApprovedForAll(msg.sender, address(this)) || token.getApproved(tokenId)==address(this) */\n      dup1\n      tag_455\n      jumpi\n      pop\n        /* \"LPStaking.sol\":14757:14783  token.getApproved(tokenId) */\n      mload(0x40)\n      shl(0xe2, 0x020604bf)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup10\n      swap1\n      mstore\n        /* \"LPStaking.sol\":14793:14797  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":14757:14774  token.getApproved */\n      dup4\n      and\n      swap1\n      0x081812fc\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"LPStaking.sol\":14757:14783  token.getApproved(tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_458\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_458:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_459\n      swap2\n      swap1\n      tag_460\n      jump\t// in\n    tag_459:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":14757:14798  token.getApproved(tokenId)==address(this) */\n      and\n      eq\n        /* \"LPStaking.sol\":14704:14798  token.isApprovedForAll(msg.sender, address(this)) || token.getApproved(tokenId)==address(this) */\n    tag_455:\n        /* \"LPStaking.sol\":14696:14824  require(token.isApprovedForAll(msg.sender, address(this)) || token.getApproved(tokenId)==address(this), \"Staking: Not approved\") */\n      tag_461\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19735:19737   */\n      0x20\n        /* \"LPStaking.sol\":14696:14824  require(token.isApprovedForAll(msg.sender, address(this)) || token.getApproved(tokenId)==address(this), \"Staking: Not approved\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19717:19738   */\n      mstore\n        /* \"#utility.yul\":19774:19776   */\n      0x15\n        /* \"#utility.yul\":19754:19772   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19747:19777   */\n      mstore\n      shl(0x5a, 0x14dd185ada5b99ce88139bdd08185c1c1c9bdd9959)\n        /* \"#utility.yul\":19793:19811   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19786:19837   */\n      mstore\n        /* \"#utility.yul\":19854:19872   */\n      0x64\n      add\n        /* \"LPStaking.sol\":14696:14824  require(token.isApprovedForAll(msg.sender, address(this)) || token.getApproved(tokenId)==address(this), \"Staking: Not approved\") */\n      tag_187\n        /* \"#utility.yul\":19533:19878   */\n      jump\n        /* \"LPStaking.sol\":14696:14824  require(token.isApprovedForAll(msg.sender, address(this)) || token.getApproved(tokenId)==address(this), \"Staking: Not approved\") */\n    tag_461:\n        /* \"LPStaking.sol\":14885:14939  token.transferFrom(msg.sender, address(this), tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":14885:14903  token.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"LPStaking.sol\":14885:14939  token.transferFrom(msg.sender, address(this), tokenId) */\n      tag_464\n      swap1\n        /* \"LPStaking.sol\":14904:14914  msg.sender */\n      caller\n      swap1\n        /* \"LPStaking.sol\":14924:14928  this */\n      address\n      swap1\n        /* \"LPStaking.sol\":14931:14938  tokenId */\n      dup14\n      swap1\n        /* \"LPStaking.sol\":14885:14939  token.transferFrom(msg.sender, address(this), tokenId) */\n      0x04\n      add\n      tag_246\n      jump\t// in\n    tag_464:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_465\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_465:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_467\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_467:\n      pop\n      pop\n      pop\n      pop\n        /* \"LPStaking.sol\":14950:14973  _depositIds.increment() */\n      tag_468\n        /* \"LPStaking.sol\":14950:14961  _depositIds */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":1043:1062  counter._value += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":1061:1062  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":1043:1062  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":956:1079  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"LPStaking.sol\":14950:14973  _depositIds.increment() */\n    tag_468:\n        /* \"LPStaking.sol\":14983:14993  uint256 id */\n      0x00\n        /* \"LPStaking.sol\":14996:15017  _depositIds.current() */\n      tag_470\n        /* \"LPStaking.sol\":14996:15007  _depositIds */\n      0x97\n        /* \"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":929:943  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":838:950  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"LPStaking.sol\":14996:15017  _depositIds.current() */\n    tag_470:\n        /* \"LPStaking.sol\":14983:15017  uint256 id = _depositIds.current() */\n      swap1\n      pop\n        /* \"LPStaking.sol\":15064:15090  uint256 uncalculatedReward */\n      0x00\n        /* \"LPStaking.sol\":15093:15131  _calculateReward(msg.sender, id, true) */\n      tag_471\n        /* \"LPStaking.sol\":15110:15120  msg.sender */\n      caller\n        /* \"LPStaking.sol\":15122:15124  id */\n      dup4\n        /* \"LPStaking.sol\":15126:15130  true */\n      0x01\n        /* \"LPStaking.sol\":15093:15109  _calculateReward */\n      tag_273\n        /* \"LPStaking.sol\":15093:15131  _calculateReward(msg.sender, id, true) */\n      jump\t// in\n    tag_471:\n        /* \"LPStaking.sol\":15187:15197  msg.sender */\n      caller\n        /* \"LPStaking.sol\":15178:15198  deposits[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":15178:15186  deposits */\n      0x9e\n        /* \"LPStaking.sol\":15178:15198  deposits[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"LPStaking.sol\":15178:15202  deposits[msg.sender][id] */\n      dup7\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"LPStaking.sol\":15178:15217  deposits[msg.sender][id].depositId = id */\n      dup5\n      dup2\n      sstore\n        /* \"LPStaking.sol\":15227:15257  deposits[msg.sender][id].stake */\n      0x01\n      add\n        /* \"LPStaking.sol\":15227:15267  deposits[msg.sender][id].stake += amount */\n      dup1\n      sload\n        /* \"LPStaking.sol\":15064:15131  uint256 uncalculatedReward = _calculateReward(msg.sender, id, true) */\n      swap3\n      swap4\n      pop\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"LPStaking.sol\":15227:15267  deposits[msg.sender][id].stake += amount */\n      dup8\n      and\n      swap3\n        /* \"LPStaking.sol\":15227:15257  deposits[msg.sender][id].stake */\n      swap1\n      swap2\n        /* \"LPStaking.sol\":15178:15198  deposits[msg.sender] */\n      swap1\n        /* \"LPStaking.sol\":15227:15267  deposits[msg.sender][id].stake += amount */\n      tag_472\n      swap1\n      dup5\n      swap1\n      tag_275\n      jump\t// in\n    tag_472:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"LPStaking.sol\":15286:15296  msg.sender */\n      caller\n        /* \"LPStaking.sol\":15277:15297  deposits[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":15277:15285  deposits */\n      0x9e\n        /* \"LPStaking.sol\":15277:15297  deposits[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"LPStaking.sol\":15277:15301  deposits[msg.sender][id] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"LPStaking.sol\":15277:15308  deposits[msg.sender][id].reward */\n      0x02\n      add\n        /* \"LPStaking.sol\":15277:15330  deposits[msg.sender][id].reward += uncalculatedReward */\n      dup1\n      sload\n        /* \"LPStaking.sol\":15312:15330  uncalculatedReward */\n      dup4\n      swap3\n        /* \"LPStaking.sol\":15277:15297  deposits[msg.sender] */\n      swap1\n        /* \"LPStaking.sol\":15277:15330  deposits[msg.sender][id].reward += uncalculatedReward */\n      tag_473\n      swap1\n        /* \"LPStaking.sol\":15312:15330  uncalculatedReward */\n      dup5\n      swap1\n        /* \"LPStaking.sol\":15277:15330  deposits[msg.sender][id].reward += uncalculatedReward */\n      tag_275\n      jump\t// in\n    tag_473:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"LPStaking.sol\":15349:15359  msg.sender */\n      caller\n        /* \"LPStaking.sol\":15340:15360  deposits[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":15340:15348  deposits */\n      0x9e\n        /* \"LPStaking.sol\":15340:15360  deposits[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"LPStaking.sol\":15340:15364  deposits[msg.sender][id] */\n      dup6\n      dup5\n      mstore\n      dup1\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"LPStaking.sol\":15388:15403  block.timestamp */\n      timestamp\n        /* \"LPStaking.sol\":15340:15385  deposits[msg.sender][id].lastRewardCalculated */\n      0x05\n      dup3\n      add\n        /* \"LPStaking.sol\":15340:15403  deposits[msg.sender][id].lastRewardCalculated = block.timestamp */\n      sstore\n        /* \"LPStaking.sol\":8345:8371  vestingAPRPerPool[_poolId] */\n      dup16\n      dup6\n      mstore\n        /* \"LPStaking.sol\":8345:8362  vestingAPRPerPool */\n      0x9c\n        /* \"LPStaking.sol\":8345:8371  vestingAPRPerPool[_poolId] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"LPStaking.sol\":8345:8380  vestingAPRPerPool[_poolId][_period] */\n      dup15\n      dup7\n      mstore\n      dup5\n      mstore\n      swap2\n      dup5\n      keccak256\n      sload\n        /* \"LPStaking.sol\":15413:15437  deposits[msg.sender][id] */\n      swap4\n      dup7\n      swap1\n      mstore\n      swap1\n      swap2\n      mstore\n        /* \"LPStaking.sol\":15413:15441  deposits[msg.sender][id].APR */\n      0x03\n      add\n        /* \"LPStaking.sol\":15413:15468  deposits[msg.sender][id].APR = getAPR(_poolId, _period) */\n      sstore\n        /* \"LPStaking.sol\":15531:15548  _period * 30 days */\n      tag_475\n        /* \"LPStaking.sol\":8345:8380  vestingAPRPerPool[_poolId][_period] */\n      dup10\n        /* \"LPStaking.sol\":15541:15548  30 days */\n      0x278d00\n        /* \"LPStaking.sol\":15531:15548  _period * 30 days */\n      tag_224\n      jump\t// in\n    tag_475:\n        /* \"LPStaking.sol\":15512:15549  block.timestamp + (_period * 30 days) */\n      tag_476\n      swap1\n        /* \"LPStaking.sol\":15512:15527  block.timestamp */\n      timestamp\n        /* \"LPStaking.sol\":15512:15549  block.timestamp + (_period * 30 days) */\n      tag_275\n      jump\t// in\n    tag_476:\n        /* \"LPStaking.sol\":15478:15486  deposits */\n      0x9e\n        /* \"LPStaking.sol\":15478:15498  deposits[msg.sender] */\n      0x00\n        /* \"LPStaking.sol\":15487:15497  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":15478:15498  deposits[msg.sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LPStaking.sol\":15478:15502  deposits[msg.sender][id] */\n      0x00\n        /* \"LPStaking.sol\":15499:15501  id */\n      dup5\n        /* \"LPStaking.sol\":15478:15502  deposits[msg.sender][id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LPStaking.sol\":15478:15509  deposits[msg.sender][id].period */\n      0x04\n      add\n        /* \"LPStaking.sol\":15478:15549  deposits[msg.sender][id].period = block.timestamp + (_period * 30 days) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LPStaking.sol\":15593:15600  _poolId */\n      dup11\n        /* \"LPStaking.sol\":15559:15567  deposits */\n      0x9e\n        /* \"LPStaking.sol\":15559:15579  deposits[msg.sender] */\n      0x00\n        /* \"LPStaking.sol\":15568:15578  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":15559:15579  deposits[msg.sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LPStaking.sol\":15559:15583  deposits[msg.sender][id] */\n      0x00\n        /* \"LPStaking.sol\":15580:15582  id */\n      dup5\n        /* \"LPStaking.sol\":15559:15583  deposits[msg.sender][id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LPStaking.sol\":15559:15590  deposits[msg.sender][id].poolId */\n      0x06\n      add\n        /* \"LPStaking.sol\":15559:15600  deposits[msg.sender][id].poolId = _poolId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LPStaking.sol\":15647:15654  _period */\n      dup9\n        /* \"LPStaking.sol\":15610:15618  deposits */\n      0x9e\n        /* \"LPStaking.sol\":15610:15630  deposits[msg.sender] */\n      0x00\n        /* \"LPStaking.sol\":15619:15629  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":15610:15630  deposits[msg.sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LPStaking.sol\":15610:15634  deposits[msg.sender][id] */\n      0x00\n        /* \"LPStaking.sol\":15631:15633  id */\n      dup5\n        /* \"LPStaking.sol\":15610:15634  deposits[msg.sender][id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LPStaking.sol\":15610:15644  deposits[msg.sender][id].vestedFor */\n      0x07\n      add\n        /* \"LPStaking.sol\":15610:15654  deposits[msg.sender][id].vestedFor = _period */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LPStaking.sol\":15697:15704  tokenId */\n      dup10\n        /* \"LPStaking.sol\":15664:15672  deposits */\n      0x9e\n        /* \"LPStaking.sol\":15664:15684  deposits[msg.sender] */\n      0x00\n        /* \"LPStaking.sol\":15673:15683  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":15664:15684  deposits[msg.sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LPStaking.sol\":15664:15688  deposits[msg.sender][id] */\n      0x00\n        /* \"LPStaking.sol\":15685:15687  id */\n      dup5\n        /* \"LPStaking.sol\":15664:15688  deposits[msg.sender][id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LPStaking.sol\":15664:15694  deposits[msg.sender][id].NFTId */\n      0x08\n      add\n        /* \"LPStaking.sol\":15664:15704  deposits[msg.sender][id].NFTId = tokenId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LPStaking.sol\":15715:15729  userDepositMap */\n      0x9f\n        /* \"LPStaking.sol\":15715:15741  userDepositMap[msg.sender] */\n      0x00\n        /* \"LPStaking.sol\":15730:15740  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":15715:15741  userDepositMap[msg.sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LPStaking.sol\":15747:15749  id */\n      dup3\n        /* \"LPStaking.sol\":15715:15750  userDepositMap[msg.sender].push(id) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"LPStaking.sol\":15781:15789  deposits */\n      0x9e\n        /* \"LPStaking.sol\":15781:15801  deposits[msg.sender] */\n      0x00\n        /* \"LPStaking.sol\":15790:15800  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":15781:15801  deposits[msg.sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LPStaking.sol\":15781:15805  deposits[msg.sender][id] */\n      0x00\n        /* \"LPStaking.sol\":15802:15804  id */\n      dup4\n        /* \"LPStaking.sol\":15781:15805  deposits[msg.sender][id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LPStaking.sol\":15760:15774  depositDetails */\n      0xa0\n        /* \"LPStaking.sol\":15760:15778  depositDetails[id] */\n      0x00\n        /* \"LPStaking.sol\":15775:15777  id */\n      dup5\n        /* \"LPStaking.sol\":15760:15778  depositDetails[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LPStaking.sol\":15760:15805  depositDetails[id] = deposits[msg.sender][id] */\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      0x00\n      add\n      sstore\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      0x01\n      add\n      sstore\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      0x02\n      add\n      sstore\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      0x03\n      add\n      sstore\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      0x04\n      add\n      sstore\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      0x05\n      add\n      sstore\n      0x06\n      dup3\n      add\n      sload\n      dup2\n      0x06\n      add\n      sstore\n      0x07\n      dup3\n      add\n      sload\n      dup2\n      0x07\n      add\n      sstore\n      0x08\n      dup3\n      add\n      sload\n      dup2\n      0x08\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"LPStaking.sol\":15859:15865  amount */\n      dup4\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"LPStaking.sol\":15837:15865  pools[_poolId].tvl += amount */\n      and\n        /* \"LPStaking.sol\":15837:15842  pools */\n      0xa1\n        /* \"LPStaking.sol\":15843:15850  _poolId */\n      dup13\n        /* \"LPStaking.sol\":15837:15851  pools[_poolId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_479\n      jumpi\n      tag_479\n      tag_199\n      jump\t// in\n    tag_479:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"LPStaking.sol\":15837:15855  pools[_poolId].tvl */\n      0x02\n      add\n      0x00\n        /* \"LPStaking.sol\":15837:15865  pools[_poolId].tvl += amount */\n      dup3\n      dup3\n      sload\n      tag_481\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_481:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"LPStaking.sol\":15875:15897  periodPoolMap[_period] */\n      0x00\n      dup10\n      dup2\n      mstore\n        /* \"LPStaking.sol\":15875:15888  periodPoolMap */\n      0xa2\n        /* \"LPStaking.sol\":15875:15897  periodPoolMap[_period] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"LPStaking.sol\":15875:15911  periodPoolMap[_period].tvl += amount */\n      dup1\n      sload\n      sub(shl(0x80, 0x01), 0x01)\n      dup8\n      and\n      swap3\n        /* \"LPStaking.sol\":15875:15897  periodPoolMap[_period] */\n      swap1\n        /* \"LPStaking.sol\":15875:15911  periodPoolMap[_period].tvl += amount */\n      tag_482\n      swap1\n      dup5\n      swap1\n      tag_275\n      jump\t// in\n    tag_482:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"LPStaking.sol\":15927:15979  Staked(msg.sender, amount, _poolId, block.timestamp) */\n      0x40\n      dup1\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":20075:20122   */\n      dup7\n      and\n        /* \"#utility.yul\":20057:20123   */\n      dup2\n      mstore\n        /* \"LPStaking.sol\":15963:15978  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":20154:20156   */\n      0x20\n        /* \"#utility.yul\":20139:20157   */\n      dup3\n      add\n        /* \"#utility.yul\":20132:20166   */\n      mstore\n        /* \"LPStaking.sol\":15954:15961  _poolId */\n      dup13\n      swap2\n        /* \"LPStaking.sol\":15934:15944  msg.sender */\n      caller\n      swap2\n        /* \"LPStaking.sol\":15927:15979  Staked(msg.sender, amount, _poolId, block.timestamp) */\n      0xb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed\n      swap2\n        /* \"#utility.yul\":20030:20048   */\n      add\n        /* \"LPStaking.sol\":15927:15979  Staked(msg.sender, amount, _poolId, block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2872:2894  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"LPStaking.sol\":15996:15998  id */\n      swap10\n        /* \"LPStaking.sol\":13943:16005  function stake(... */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"LPStaking.sol\":4160:4186  stakingPool[] public pools */\n    tag_123:\n      0xa1\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_485\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_485:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      swap1\n      swap5\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      swap6\n      pop\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      swap1\n      dup6\n      jump\t// out\n        /* \"LPStaking.sol\":22496:22606  function getAccMarketFee() public view returns (uint256) {... */\n    tag_131:\n        /* \"LPStaking.sol\":22570:22574  WETH */\n      sload(0x9a)\n        /* \"LPStaking.sol\":22570:22599  WETH.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"LPStaking.sol\":22593:22597  this */\n      address\n        /* \"LPStaking.sol\":22570:22599  WETH.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2643:2694   */\n      mstore\n        /* \"LPStaking.sol\":22544:22551  uint256 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":22570:22574  WETH */\n      and\n      swap1\n        /* \"LPStaking.sol\":22570:22584  WETH.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2616:2634   */\n      0x24\n      add\n        /* \"LPStaking.sol\":22570:22599  WETH.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_490\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_490:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_491\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_491:\n        /* \"LPStaking.sol\":22563:22599  return WETH.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"LPStaking.sol\":22496:22606  function getAccMarketFee() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"LPStaking.sol\":13280:13590  function calculateReward(... */\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":13468:13490  deposits[_stakeHolder] */\n      dup4\n      and\n        /* \"LPStaking.sol\":13408:13422  uint256 reward */\n      0x00\n        /* \"LPStaking.sol\":13468:13490  deposits[_stakeHolder] */\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":13468:13476  deposits */\n      0x9e\n        /* \"LPStaking.sol\":13468:13490  deposits[_stakeHolder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"LPStaking.sol\":13468:13496  deposits[_stakeHolder][_dId] */\n      dup6\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"LPStaking.sol\":13434:13496  stakeDetails memory stakeDetail = deposits[_stakeHolder][_dId] */\n      dup2\n      mload\n      0x0120\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup4\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup4\n      add\n      mstore\n      0x05\n      dup2\n      add\n      sload\n      0xa0\n      dup4\n      add\n      mstore\n      0x06\n      dup2\n      add\n      sload\n      0xc0\n      dup4\n      add\n      mstore\n      0x07\n      dup2\n      add\n      sload\n      0xe0\n      dup4\n      add\n      mstore\n      0x08\n      add\n      sload\n      0x0100\n      dup3\n      add\n      mstore\n        /* \"LPStaking.sol\":13536:13583  _calculateReward(_stakeHolder, _dId, isProrata) */\n      tag_493\n        /* \"LPStaking.sol\":13477:13489  _stakeHolder */\n      dup6\n        /* \"LPStaking.sol\":13491:13495  _dId */\n      dup6\n        /* \"LPStaking.sol\":13573:13582  isProrata */\n      dup6\n        /* \"LPStaking.sol\":13536:13552  _calculateReward */\n      tag_273\n        /* \"LPStaking.sol\":13536:13583  _calculateReward(_stakeHolder, _dId, isProrata) */\n      jump\t// in\n    tag_493:\n        /* \"LPStaking.sol\":13515:13526  stakeDetail */\n      dup2\n        /* \"LPStaking.sol\":13515:13533  stakeDetail.reward */\n      0x40\n      add\n      mload\n        /* \"LPStaking.sol\":13515:13583  stakeDetail.reward + _calculateReward(_stakeHolder, _dId, isProrata) */\n      tag_494\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_494:\n        /* \"LPStaking.sol\":13506:13583  reward = stakeDetail.reward + _calculateReward(_stakeHolder, _dId, isProrata) */\n      swap6\n        /* \"LPStaking.sol\":13280:13590  function calculateReward(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"LPStaking.sol\":22205:22361  function haveSuffecientFundsForReward(uint256 _poolId) public view returns (bool) {... */\n    tag_156:\n        /* \"LPStaking.sol\":22281:22285  bool */\n      0x00\n        /* \"LPStaking.sol\":22341:22354  totalReward() */\n      tag_496\n        /* \"LPStaking.sol\":22341:22352  totalReward */\n      tag_79\n        /* \"LPStaking.sol\":22341:22354  totalReward() */\n      jump\t// in\n    tag_496:\n        /* \"LPStaking.sol\":22304:22309  pools */\n      0xa1\n        /* \"LPStaking.sol\":22310:22317  _poolId */\n      dup4\n        /* \"LPStaking.sol\":22304:22318  pools[_poolId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_498\n      jumpi\n      tag_498\n      tag_199\n      jump\t// in\n    tag_498:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"LPStaking.sol\":22304:22337  pools[_poolId].totalAllotedReward */\n      0x03\n      add\n      sload\n        /* \"LPStaking.sol\":22304:22354  pools[_poolId].totalAllotedReward >= totalReward() */\n      lt\n      iszero\n        /* \"LPStaking.sol\":22297:22354  return pools[_poolId].totalAllotedReward >= totalReward() */\n      swap1\n      pop\n        /* \"LPStaking.sol\":22205:22361  function haveSuffecientFundsForReward(uint256 _poolId) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"LPStaking.sol\":7185:7353  function ResumeStaking() public onlyOwner {... */\n    tag_163:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_503\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_503:\n        /* \"LPStaking.sol\":7245:7253  isPaused */\n      and(0xff, sload(0xa4))\n        /* \"LPStaking.sol\":7237:7277  require(isPaused, \"Already Operational\") */\n      tag_506\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20379:20381   */\n      0x20\n        /* \"LPStaking.sol\":7237:7277  require(isPaused, \"Already Operational\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20361:20382   */\n      mstore\n        /* \"#utility.yul\":20418:20420   */\n      0x13\n        /* \"#utility.yul\":20398:20416   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20391:20421   */\n      mstore\n      shl(0x6a, 0x105b1c9958591e4813dc195c985d1a5bdb985b)\n        /* \"#utility.yul\":20437:20455   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20430:20479   */\n      mstore\n        /* \"#utility.yul\":20496:20514   */\n      0x64\n      add\n        /* \"LPStaking.sol\":7237:7277  require(isPaused, \"Already Operational\") */\n      tag_187\n        /* \"#utility.yul\":20177:20520   */\n      jump\n        /* \"LPStaking.sol\":7237:7277  require(isPaused, \"Already Operational\") */\n    tag_506:\n        /* \"LPStaking.sol\":7287:7295  isPaused */\n      0xa4\n        /* \"LPStaking.sol\":7287:7303  isPaused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"LPStaking.sol\":7331:7346  block.timestamp */\n      timestamp\n        /* \"LPStaking.sol\":7313:7328  pausedTimestamp */\n      0xa5\n        /* \"LPStaking.sol\":7313:7346  pausedTimestamp = block.timestamp */\n      sstore\n        /* \"LPStaking.sol\":7185:7353  function ResumeStaking() public onlyOwner {... */\n      jump\t// out\n        /* \"LPStaking.sol\":5014:5358  function initialize(... */\n    tag_167:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3111:3130  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3133:3158  _setInitializedVersion(1) */\n      tag_510\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3156:3157  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3133:3155  _setInitializedVersion */\n      tag_511\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3133:3158  _setInitializedVersion(1) */\n      jump\t// in\n    tag_510:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3111:3158  bool isTopLevelCall = _setInitializedVersion(1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3172:3186  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3168:3233  if (isTopLevelCall) {... */\n      iszero\n      tag_512\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3202:3215  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3202:3222  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3168:3233  if (isTopLevelCall) {... */\n    tag_512:\n        /* \"LPStaking.sol\":5133:5149  __Context_init() */\n      tag_514\n        /* \"LPStaking.sol\":5133:5147  __Context_init */\n      tag_515\n        /* \"LPStaking.sol\":5133:5149  __Context_init() */\n      jump\t// in\n    tag_514:\n        /* \"LPStaking.sol\":5159:5175  __Ownable_init() */\n      tag_516\n        /* \"LPStaking.sol\":5159:5173  __Ownable_init */\n      tag_517\n        /* \"LPStaking.sol\":5159:5175  __Ownable_init() */\n      jump\t// in\n    tag_516:\n        /* \"LPStaking.sol\":5185:5209  __ReentrancyGuard_init() */\n      tag_518\n        /* \"LPStaking.sol\":5185:5207  __ReentrancyGuard_init */\n      tag_519\n        /* \"LPStaking.sol\":5185:5209  __ReentrancyGuard_init() */\n      jump\t// in\n    tag_518:\n        /* \"LPStaking.sol\":5228:5246  periods = _periods */\n      dup2\n      mload\n      tag_520\n      swap1\n        /* \"LPStaking.sol\":5228:5235  periods */\n      0xa3\n      swap1\n        /* \"LPStaking.sol\":5228:5246  periods = _periods */\n      0x20\n      dup6\n      add\n      swap1\n      tag_521\n      jump\t// in\n    tag_520:\n      pop\n        /* \"LPStaking.sol\":5256:5260  WETH */\n      0x9a\n        /* \"LPStaking.sol\":5256:5291  WETH = IERC20Upgradeable(_feeToken) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      or\n      swap1\n      sstore\n        /* \"LPStaking.sol\":5311:5319  365 days */\n      0x01e13380\n        /* \"LPStaking.sol\":5301:5308  APRTime */\n      0x98\n        /* \"LPStaking.sol\":5301:5319  APRTime = 365 days */\n      sstore\n        /* \"LPStaking.sol\":5329:5351  setPeriodSum(_periods) */\n      tag_522\n        /* \"LPStaking.sol\":5342:5350  _periods */\n      dup3\n        /* \"LPStaking.sol\":5329:5341  setPeriodSum */\n      tag_523\n        /* \"LPStaking.sol\":5329:5351  setPeriodSum(_periods) */\n      jump\t// in\n    tag_522:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3257:3271  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3253:3352  if (isTopLevelCall) {... */\n      iszero\n      tag_524\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3303:3308  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3287:3308  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3327:3341  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":20677:20713   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3327:3341  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":20665:20667   */\n      0x20\n        /* \"#utility.yul\":20650:20668   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3327:3341  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3253:3352  if (isTopLevelCall) {... */\n    tag_524:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3101:3358  {... */\n      pop\n        /* \"LPStaking.sol\":5014:5358  function initialize(... */\n      pop\n      pop\n      jump\t// out\n        /* \"LPStaking.sol\":2976:3027  mapping(address => uint256[]) public userDepositMap */\n    tag_170:\n      mstore(0x20, 0x9f)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_527\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_527:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"LPStaking.sol\":10372:10954  function receiveWETHFee(uint256 amount) external onlyAddress nonReentrant {... */\n    tag_174:\n        /* \"LPStaking.sol\":4865:4876  onlyaddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x99))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":4849:4876  _msgSender() == onlyaddress */\n      and\n      eq\n        /* \"LPStaking.sol\":4841:4895  require(_msgSender() == onlyaddress, \"invalid access\") */\n      tag_531\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20926:20928   */\n      0x20\n        /* \"LPStaking.sol\":4841:4895  require(_msgSender() == onlyaddress, \"invalid access\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20908:20929   */\n      mstore\n        /* \"#utility.yul\":20965:20967   */\n      0x0e\n        /* \"#utility.yul\":20945:20963   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20938:20968   */\n      mstore\n      shl(0x90, 0x696e76616c696420616363657373)\n        /* \"#utility.yul\":20984:21002   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20977:21021   */\n      mstore\n        /* \"#utility.yul\":21038:21056   */\n      0x64\n      add\n        /* \"LPStaking.sol\":4841:4895  require(_msgSender() == onlyaddress, \"invalid access\") */\n      tag_187\n        /* \"#utility.yul\":20724:21062   */\n      jump\n        /* \"LPStaking.sol\":4841:4895  require(_msgSender() == onlyaddress, \"invalid access\") */\n    tag_531:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2576  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2569:2588  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2561:2624  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_535\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_237\n      jump\t// in\n    tag_535:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1815:1816  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2706  _status */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2699:2717  _status = _ENTERED */\n      sstore\n        /* \"LPStaking.sol\":10464:10474  amount > 0 */\n      dup1\n        /* \"LPStaking.sol\":10456:10510  require(amount > 0, \"Collect Fee: Amount must be > 0\") */\n      tag_538\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":21269:21271   */\n      0x20\n        /* \"LPStaking.sol\":10456:10510  require(amount > 0, \"Collect Fee: Amount must be > 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21251:21272   */\n      mstore\n        /* \"#utility.yul\":21308:21310   */\n      0x1f\n        /* \"#utility.yul\":21288:21306   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21281:21311   */\n      mstore\n        /* \"#utility.yul\":21347:21380   */\n      0x436f6c6c656374204665653a20416d6f756e74206d757374206265203e203000\n        /* \"#utility.yul\":21327:21345   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21320:21381   */\n      mstore\n        /* \"#utility.yul\":21398:21416   */\n      0x64\n      add\n        /* \"LPStaking.sol\":10456:10510  require(amount > 0, \"Collect Fee: Amount must be > 0\") */\n      tag_187\n        /* \"#utility.yul\":21067:21422   */\n      jump\n        /* \"LPStaking.sol\":10456:10510  require(amount > 0, \"Collect Fee: Amount must be > 0\") */\n    tag_538:\n        /* \"LPStaking.sol\":10520:10524  WETH */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x9a))\n        /* \"LPStaking.sol\":10520:10537  WETH.transferFrom */\n      0x23b872dd\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"LPStaking.sol\":10560:10564  this */\n      address\n        /* \"LPStaking.sol\":10567:10573  amount */\n      dup5\n        /* \"LPStaking.sol\":10520:10574  WETH.transferFrom(_msgSender(), address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_542\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_542:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_544\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_544:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_545\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_545:\n      pop\n        /* \"LPStaking.sol\":10590:10599  uint256 i */\n      0x00\n        /* \"LPStaking.sol\":10585:10900  for (uint256 i = 0; i < periods.length; i++) {... */\n    tag_546:\n        /* \"LPStaking.sol\":10609:10616  periods */\n      0xa3\n        /* \"LPStaking.sol\":10609:10623  periods.length */\n      sload\n        /* \"LPStaking.sol\":10605:10623  i < periods.length */\n      dup2\n      lt\n        /* \"LPStaking.sol\":10585:10900  for (uint256 i = 0; i < periods.length; i++) {... */\n      iszero\n      tag_547\n      jumpi\n        /* \"LPStaking.sol\":10695:10702  periods */\n      0xa3\n        /* \"LPStaking.sol\":10703:10704  i */\n      dup2\n        /* \"LPStaking.sol\":10695:10705  periods[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_550\n      jumpi\n      tag_550\n      tag_199\n      jump\t// in\n    tag_550:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"LPStaking.sol\":10709:10710  0 */\n      0x00\n        /* \"LPStaking.sol\":10695:10710  periods[i] == 0 */\n      eq\n        /* \"LPStaking.sol\":10695:10889  periods[i] == 0... */\n      tag_552\n      jumpi\n        /* \"LPStaking.sol\":4568:4574  10**18 */\n      0x0de0b6b3a7640000\n        /* \"LPStaking.sol\":10863:10869  amount */\n      dup3\n        /* \"LPStaking.sol\":10850:10859  periodSum */\n      sload(0xa6)\n        /* \"LPStaking.sol\":4568:4574  10**18 */\n      0x0de0b6b3a7640000\n        /* \"LPStaking.sol\":10817:10824  periods */\n      0xa3\n        /* \"LPStaking.sol\":10825:10826  i */\n      dup6\n        /* \"LPStaking.sol\":10817:10827  periods[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_554\n      jumpi\n      tag_554\n      tag_199\n      jump\t// in\n    tag_554:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"LPStaking.sol\":10817:10846  periods[i] * PRECISION_FACTOR */\n      tag_556\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_556:\n        /* \"LPStaking.sol\":10816:10859  (periods[i] * PRECISION_FACTOR) / periodSum */\n      tag_557\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_557:\n        /* \"LPStaking.sol\":10815:10869  ((periods[i] * PRECISION_FACTOR) / periodSum) * amount */\n      tag_558\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_558:\n        /* \"LPStaking.sol\":10814:10889  (((periods[i] * PRECISION_FACTOR) / periodSum) * amount) / PRECISION_FACTOR */\n      tag_559\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_559:\n        /* \"LPStaking.sol\":10695:10889  periods[i] == 0... */\n      jump(tag_564)\n    tag_552:\n        /* \"LPStaking.sol\":4568:4574  10**18 */\n      0x0de0b6b3a7640000\n        /* \"LPStaking.sol\":10769:10775  amount */\n      dup3\n        /* \"LPStaking.sol\":10756:10765  periodSum */\n      sload(0xa6)\n        /* \"LPStaking.sol\":4568:4574  10**18 */\n      0x0de0b6b3a7640000\n        /* \"LPStaking.sol\":10732:10733  1 */\n      0x01\n        /* \"LPStaking.sol\":10732:10752  1 * PRECISION_FACTOR */\n      tag_561\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_561:\n        /* \"LPStaking.sol\":10731:10765  (1 * PRECISION_FACTOR) / periodSum */\n      tag_562\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_562:\n        /* \"LPStaking.sol\":10730:10775  ((1 * PRECISION_FACTOR) / periodSum) * amount */\n      tag_563\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_563:\n        /* \"LPStaking.sol\":10729:10795  (((1 * PRECISION_FACTOR) / periodSum) * amount) / PRECISION_FACTOR */\n      tag_564\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_564:\n        /* \"LPStaking.sol\":10644:10657  periodPoolMap */\n      0xa2\n        /* \"LPStaking.sol\":10644:10669  periodPoolMap[periods[i]] */\n      0x00\n        /* \"LPStaking.sol\":10658:10665  periods */\n      0xa3\n        /* \"LPStaking.sol\":10666:10667  i */\n      dup5\n        /* \"LPStaking.sol\":10658:10668  periods[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_566\n      jumpi\n      tag_566\n      tag_199\n      jump\t// in\n    tag_566:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"LPStaking.sol\":10644:10669  periodPoolMap[periods[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LPStaking.sol\":10644:10691  periodPoolMap[periods[i]].totalAllotedFeeReward */\n      0x01\n      add\n      0x00\n        /* \"LPStaking.sol\":10644:10889  periodPoolMap[periods[i]].totalAllotedFeeReward += periods[i] == 0... */\n      dup3\n      dup3\n      sload\n      tag_568\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_568:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"LPStaking.sol\":10625:10628  i++ */\n      dup2\n      swap1\n      pop\n      tag_569\n      dup2\n      tag_203\n      jump\t// in\n    tag_569:\n      swap2\n      pop\n      pop\n        /* \"LPStaking.sol\":10585:10900  for (uint256 i = 0; i < periods.length; i++) {... */\n      jump(tag_546)\n    tag_547:\n      pop\n        /* \"LPStaking.sol\":10914:10947  WETHDeposit(_msgSender(), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n      swap1\n        /* \"LPStaking.sol\":10914:10947  WETHDeposit(_msgSender(), amount) */\n      0x386d896e9bd972181cfb744681a2de8d2daab22884986fdc60c3947be36ca01b\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"LPStaking.sol\":10914:10947  WETHDeposit(_msgSender(), amount) */\n      tag_252\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2158:2356  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_177:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_575\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_575:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2246:2268  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2238:2311  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_578\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":21629:21631   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2238:2311  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21611:21632   */\n      mstore\n        /* \"#utility.yul\":21668:21670   */\n      0x26\n        /* \"#utility.yul\":21648:21666   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21641:21671   */\n      mstore\n        /* \"#utility.yul\":21707:21741   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":21687:21705   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21680:21742   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":21758:21776   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":21751:21787   */\n      mstore\n        /* \"#utility.yul\":21804:21823   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2238:2311  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_187\n        /* \"#utility.yul\":21427:21829   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2238:2311  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_578:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2349  _transferOwnership(newOwner) */\n      tag_581\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2340:2348  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2339  _transferOwnership */\n      tag_324\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2349  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_581:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2158:2356  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"LPStaking.sol\":9672:10259  function addRewardToPool(uint256 _poolId, uint256 amount) public onlyOwner poolExists(_poolId) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1354  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1488:1511  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1480:1548  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_585\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_585:\n        /* \"LPStaking.sol\":4739:4744  pools */\n      0xa1\n        /* \"LPStaking.sol\":4739:4751  pools.length */\n      sload\n        /* \"LPStaking.sol\":9758:9765  _poolId */\n      dup3\n      swap1\n        /* \"LPStaking.sol\":4729:4751  _poolId < pools.length */\n      dup2\n      lt\n        /* \"LPStaking.sol\":4721:4784  require(_poolId < pools.length, \"Staking: Pool doesn't exists\") */\n      tag_588\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_192\n      jump\t// in\n    tag_588:\n        /* \"LPStaking.sol\":9812:9841  IERC20Upgradeable rewardToken */\n      0x00\n        /* \"LPStaking.sol\":9862:9867  pools */\n      0xa1\n        /* \"LPStaking.sol\":9868:9875  _poolId */\n      dup5\n        /* \"LPStaking.sol\":9862:9876  pools[_poolId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_592\n      jumpi\n      tag_592\n      tag_199\n      jump\t// in\n    tag_592:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"LPStaking.sol\":9862:9883  pools[_poolId].reward */\n      0x01\n      add\n      sload\n        /* \"LPStaking.sol\":9960:10008  rewardToken.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"LPStaking.sol\":9982:9992  msg.sender */\n      caller\n        /* \"LPStaking.sol\":9960:10008  rewardToken.allowance(msg.sender, address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19180:19214   */\n      mstore\n        /* \"LPStaking.sol\":10002:10006  this */\n      address\n        /* \"#utility.yul\":19230:19248   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19223:19266   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":9862:9883  pools[_poolId].reward */\n      swap1\n      swap2\n      and\n      swap2\n      pop\n        /* \"LPStaking.sol\":10012:10018  amount */\n      dup4\n      swap1\n        /* \"LPStaking.sol\":9862:9883  pools[_poolId].reward */\n      dup3\n      swap1\n        /* \"LPStaking.sol\":9960:9981  rewardToken.allowance */\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":19115:19133   */\n      0x44\n      add\n        /* \"LPStaking.sol\":9960:10008  rewardToken.allowance(msg.sender, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_596\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_596:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_597\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_597:\n        /* \"LPStaking.sol\":9960:10018  rewardToken.allowance(msg.sender, address(this)) >= amount */\n      lt\n      iszero\n        /* \"LPStaking.sol\":9952:10051  require(rewardToken.allowance(msg.sender, address(this)) >= amount, \"Staking: Must allow Spending\") */\n      tag_598\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":22036:22038   */\n      0x20\n        /* \"LPStaking.sol\":9952:10051  require(rewardToken.allowance(msg.sender, address(this)) >= amount, \"Staking: Must allow Spending\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":22018:22039   */\n      mstore\n        /* \"#utility.yul\":22075:22077   */\n      0x1c\n        /* \"#utility.yul\":22055:22073   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":22048:22078   */\n      mstore\n        /* \"#utility.yul\":22114:22144   */\n      0x5374616b696e673a204d75737420616c6c6f77205370656e64696e6700000000\n        /* \"#utility.yul\":22094:22112   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":22087:22145   */\n      mstore\n        /* \"#utility.yul\":22162:22180   */\n      0x64\n      add\n        /* \"LPStaking.sol\":9952:10051  require(rewardToken.allowance(msg.sender, address(this)) >= amount, \"Staking: Must allow Spending\") */\n      tag_187\n        /* \"#utility.yul\":21834:22186   */\n      jump\n        /* \"LPStaking.sol\":9952:10051  require(rewardToken.allowance(msg.sender, address(this)) >= amount, \"Staking: Must allow Spending\") */\n    tag_598:\n        /* \"LPStaking.sol\":10104:10163  rewardToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":10104:10128  rewardToken.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"LPStaking.sol\":10104:10163  rewardToken.transferFrom(msg.sender, address(this), amount) */\n      tag_601\n      swap1\n        /* \"LPStaking.sol\":10129:10139  msg.sender */\n      caller\n      swap1\n        /* \"LPStaking.sol\":10149:10153  this */\n      address\n      swap1\n        /* \"LPStaking.sol\":10156:10162  amount */\n      dup9\n      swap1\n        /* \"LPStaking.sol\":10104:10163  rewardToken.transferFrom(msg.sender, address(this), amount) */\n      0x04\n      add\n      tag_246\n      jump\t// in\n    tag_601:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_603\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_603:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_604\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_604:\n      pop\n        /* \"LPStaking.sol\":10246:10252  amount */\n      dup3\n        /* \"LPStaking.sol\":10209:10214  pools */\n      0xa1\n        /* \"LPStaking.sol\":10215:10222  _poolId */\n      dup6\n        /* \"LPStaking.sol\":10209:10223  pools[_poolId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_606\n      jumpi\n      tag_606\n      tag_199\n      jump\t// in\n    tag_606:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"LPStaking.sol\":10209:10242  pools[_poolId].totalAllotedReward */\n      0x03\n      add\n      0x00\n        /* \"LPStaking.sol\":10209:10252  pools[_poolId].totalAllotedReward += amount */\n      dup3\n      dup3\n      sload\n      tag_417\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n        /* \"LPStaking.sol\":11558:12951  function _calculateReward(... */\n    tag_273:\n        /* \"LPStaking.sol\":11689:11703  uint256 reward */\n      0x00\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":11749:11775  _stakeHolder != address(0) */\n      dup6\n      and\n        /* \"LPStaking.sol\":11749:11853  _stakeHolder != address(0)... */\n      tag_611\n      jumpi\n        /* \"LPStaking.sol\":11833:11853  depositDetails[_dId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"LPStaking.sol\":11833:11847  depositDetails */\n      0xa0\n        /* \"LPStaking.sol\":11833:11853  depositDetails[_dId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"LPStaking.sol\":11749:11853  _stakeHolder != address(0)... */\n      jump(tag_612)\n    tag_611:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":11790:11812  deposits[_stakeHolder] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":11790:11798  deposits */\n      0x9e\n        /* \"LPStaking.sol\":11790:11812  deposits[_stakeHolder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"LPStaking.sol\":11790:11818  deposits[_stakeHolder][_dId] */\n      dup8\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"LPStaking.sol\":11749:11853  _stakeHolder != address(0)... */\n    tag_612:\n        /* \"LPStaking.sol\":11715:11853  stakeDetails memory stakeDetail = _stakeHolder != address(0)... */\n      0x40\n      dup1\n      mload\n      0x0120\n      dup2\n      add\n      dup3\n      mstore\n      dup3\n      sload\n      dup2\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x02\n      dup5\n      add\n      sload\n      swap3\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x03\n      dup4\n      add\n      sload\n      0x60\n      dup3\n      add\n      mstore\n      0x04\n      dup4\n      add\n      sload\n      0x80\n      dup3\n      add\n      mstore\n      0x05\n      dup4\n      add\n      sload\n      0xa0\n      dup3\n      add\n      mstore\n      0x06\n      dup4\n      add\n      sload\n      0xc0\n      dup3\n      add\n      mstore\n      0x07\n      dup4\n      add\n      sload\n      0xe0\n      dup3\n      add\n      mstore\n      0x08\n      swap1\n      swap3\n      add\n      sload\n      0x0100\n      dup4\n      add\n      mstore\n      swap1\n      swap2\n      pop\n        /* \"LPStaking.sol\":11868:11889  stakeDetail.stake > 0 */\n      iszero\n        /* \"LPStaking.sol\":11864:12945  if (stakeDetail.stake > 0) {... */\n      tag_613\n      jumpi\n        /* \"LPStaking.sol\":12166:12174  isPaused */\n      and(0xff, sload(0xa4))\n        /* \"LPStaking.sol\":12162:12894  if (isPaused) {... */\n      iszero\n      tag_614\n      jumpi\n        /* \"LPStaking.sol\":12233:12248  pausedTimestamp */\n      sload(0xa5)\n        /* \"LPStaking.sol\":12198:12209  stakeDetail */\n      dup2\n        /* \"LPStaking.sol\":12198:12230  stakeDetail.lastRewardCalculated */\n      0xa0\n      add\n      mload\n        /* \"LPStaking.sol\":12198:12248  stakeDetail.lastRewardCalculated > pausedTimestamp */\n      gt\n        /* \"LPStaking.sol\":12194:12586  if (stakeDetail.lastRewardCalculated > pausedTimestamp) {... */\n      iszero\n      tag_615\n      jumpi\n        /* \"LPStaking.sol\":12281:12282  0 */\n      0x00\n        /* \"LPStaking.sol\":12272:12282  reward = 0 */\n      swap2\n      pop\n        /* \"LPStaking.sol\":11864:12945  if (stakeDetail.stake > 0) {... */\n      jump(tag_636)\n        /* \"LPStaking.sol\":12194:12586  if (stakeDetail.lastRewardCalculated > pausedTimestamp) {... */\n    tag_615:\n        /* \"LPStaking.sol\":12338:12567  stakeDetail... */\n      tag_617\n        /* \"LPStaking.sol\":12540:12566  APRTime.mul(100).mul(1000) */\n      tag_618\n        /* \"LPStaking.sol\":12561:12565  1000 */\n      0x03e8\n        /* \"LPStaking.sol\":12540:12556  APRTime.mul(100) */\n      tag_619\n        /* \"LPStaking.sol\":12552:12555  100 */\n      0x64\n        /* \"LPStaking.sol\":12540:12547  APRTime */\n      sload(0x98)\n        /* \"LPStaking.sol\":12540:12551  APRTime.mul */\n      tag_620\n      swap1\n        /* \"LPStaking.sol\":12540:12556  APRTime.mul(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_619:\n        /* \"LPStaking.sol\":12540:12560  APRTime.mul(100).mul */\n      swap1\n      tag_620\n        /* \"LPStaking.sol\":12540:12566  APRTime.mul(100).mul(1000) */\n      jump\t// in\n    tag_618:\n        /* \"LPStaking.sol\":12338:12510  stakeDetail... */\n      tag_621\n        /* \"LPStaking.sol\":12456:12509  pausedTimestamp.sub(stakeDetail.lastRewardCalculated) */\n      tag_622\n        /* \"LPStaking.sol\":12476:12487  stakeDetail */\n      dup5\n        /* \"LPStaking.sol\":12476:12508  stakeDetail.lastRewardCalculated */\n      0xa0\n      add\n      mload\n        /* \"LPStaking.sol\":12456:12471  pausedTimestamp */\n      sload(0xa5)\n        /* \"LPStaking.sol\":12456:12475  pausedTimestamp.sub */\n      tag_623\n      swap1\n        /* \"LPStaking.sol\":12456:12509  pausedTimestamp.sub(stakeDetail.lastRewardCalculated) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_622:\n        /* \"LPStaking.sol\":12410:12425  stakeDetail.APR */\n      0x60\n      dup6\n      add\n      mload\n        /* \"LPStaking.sol\":12338:12380  stakeDetail... */\n      0x20\n      dup7\n      add\n      mload\n        /* \"LPStaking.sol\":12338:12426  stakeDetail... */\n      tag_619\n      swap2\n        /* \"LPStaking.sol\":12338:12409  stakeDetail... */\n      tag_620\n        /* \"LPStaking.sol\":12338:12426  stakeDetail... */\n      jump\t// in\n        /* \"LPStaking.sol\":12338:12510  stakeDetail... */\n    tag_621:\n        /* \"LPStaking.sol\":12338:12539  stakeDetail... */\n      swap1\n      tag_625\n        /* \"LPStaking.sol\":12338:12567  stakeDetail... */\n      jump\t// in\n    tag_617:\n        /* \"LPStaking.sol\":12329:12567  reward = stakeDetail... */\n      swap2\n      pop\n        /* \"LPStaking.sol\":11864:12945  if (stakeDetail.stake > 0) {... */\n      jump(tag_636)\n        /* \"LPStaking.sol\":12162:12894  if (isPaused) {... */\n    tag_614:\n        /* \"LPStaking.sol\":12624:12635  uint256 APR */\n      0x00\n        /* \"LPStaking.sol\":12638:12647  isProrata */\n      dup4\n        /* \"LPStaking.sol\":12638:12697  isProrata ? getAPR(stakeDetail.poolId, 0) : stakeDetail.APR */\n      tag_627\n      jumpi\n        /* \"LPStaking.sol\":12682:12693  stakeDetail */\n      dup2\n        /* \"LPStaking.sol\":12682:12697  stakeDetail.APR */\n      0x60\n      add\n      mload\n        /* \"LPStaking.sol\":12638:12697  isProrata ? getAPR(stakeDetail.poolId, 0) : stakeDetail.APR */\n      jump(tag_629)\n    tag_627:\n        /* \"LPStaking.sol\":12657:12675  stakeDetail.poolId */\n      0xc0\n      dup3\n      add\n      mload\n        /* \"LPStaking.sol\":12677:12678  0 */\n      0x00\n        /* \"LPStaking.sol\":8345:8371  vestingAPRPerPool[_poolId] */\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":8345:8362  vestingAPRPerPool */\n      0x9c\n        /* \"LPStaking.sol\":8345:8371  vestingAPRPerPool[_poolId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"LPStaking.sol\":8345:8380  vestingAPRPerPool[_poolId][_period] */\n      dup4\n      dup1\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"LPStaking.sol\":12650:12679  getAPR(stakeDetail.poolId, 0) */\n    tag_629:\n        /* \"LPStaking.sol\":12624:12697  uint256 APR = isProrata ? getAPR(stakeDetail.poolId, 0) : stakeDetail.APR */\n      swap1\n      pop\n        /* \"LPStaking.sol\":12724:12879  stakeDetail.stake.mul(APR).mul(block.timestamp.sub(stakeDetail.lastRewardCalculated)).div(... */\n      tag_630\n        /* \"LPStaking.sol\":12835:12861  APRTime.mul(100).mul(1000) */\n      tag_631\n        /* \"LPStaking.sol\":12856:12860  1000 */\n      0x03e8\n        /* \"LPStaking.sol\":12835:12851  APRTime.mul(100) */\n      tag_619\n        /* \"LPStaking.sol\":12847:12850  100 */\n      0x64\n        /* \"LPStaking.sol\":12835:12842  APRTime */\n      sload(0x98)\n        /* \"LPStaking.sol\":12835:12846  APRTime.mul */\n      tag_620\n      swap1\n        /* \"LPStaking.sol\":12835:12851  APRTime.mul(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"LPStaking.sol\":12835:12861  APRTime.mul(100).mul(1000) */\n    tag_631:\n        /* \"LPStaking.sol\":12724:12809  stakeDetail.stake.mul(APR).mul(block.timestamp.sub(stakeDetail.lastRewardCalculated)) */\n      tag_621\n        /* \"LPStaking.sol\":12755:12808  block.timestamp.sub(stakeDetail.lastRewardCalculated) */\n      tag_634\n        /* \"LPStaking.sol\":12775:12786  stakeDetail */\n      dup6\n        /* \"LPStaking.sol\":12775:12807  stakeDetail.lastRewardCalculated */\n      0xa0\n      add\n      mload\n        /* \"LPStaking.sol\":12755:12770  block.timestamp */\n      timestamp\n        /* \"LPStaking.sol\":12755:12774  block.timestamp.sub */\n      tag_623\n      swap1\n        /* \"LPStaking.sol\":12755:12808  block.timestamp.sub(stakeDetail.lastRewardCalculated) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_634:\n        /* \"LPStaking.sol\":12724:12741  stakeDetail.stake */\n      0x20\n      dup7\n      add\n      mload\n        /* \"LPStaking.sol\":12724:12750  stakeDetail.stake.mul(APR) */\n      tag_619\n      swap1\n        /* \"LPStaking.sol\":12746:12749  APR */\n      dup7\n        /* \"LPStaking.sol\":12724:12745  stakeDetail.stake.mul */\n      tag_620\n        /* \"LPStaking.sol\":12724:12750  stakeDetail.stake.mul(APR) */\n      jump\t// in\n        /* \"LPStaking.sol\":12724:12879  stakeDetail.stake.mul(APR).mul(block.timestamp.sub(stakeDetail.lastRewardCalculated)).div(... */\n    tag_630:\n        /* \"LPStaking.sol\":12715:12879  reward = stakeDetail.stake.mul(APR).mul(block.timestamp.sub(stakeDetail.lastRewardCalculated)).div(... */\n      swap3\n      pop\n        /* \"LPStaking.sol\":12606:12894  {... */\n      pop\n        /* \"LPStaking.sol\":11864:12945  if (stakeDetail.stake > 0) {... */\n      jump(tag_636)\n    tag_613:\n        /* \"LPStaking.sol\":12933:12934  0 */\n      0x00\n        /* \"LPStaking.sol\":12924:12934  reward = 0 */\n      swap2\n      pop\n        /* \"LPStaking.sol\":11864:12945  if (stakeDetail.stake > 0) {... */\n    tag_636:\n        /* \"LPStaking.sol\":11705:12951  {... */\n      pop\n        /* \"LPStaking.sol\":11558:12951  function _calculateReward(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"LPStaking.sol\":18977:19639  function harvestFee(address _user, uint256 _dId) internal {... */\n    tag_300:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":19075:19090  deposits[_user] */\n      dup3\n      and\n        /* \"LPStaking.sol\":19045:19072  stakeDetails memory deposit */\n      0x00\n        /* \"LPStaking.sol\":19075:19090  deposits[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":19075:19083  deposits */\n      0x9e\n        /* \"LPStaking.sol\":19075:19090  deposits[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"LPStaking.sol\":19075:19096  deposits[_user][_dId] */\n      dup5\n      dup5\n      mstore\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"LPStaking.sol\":19045:19096  stakeDetails memory deposit = deposits[_user][_dId] */\n      dup3\n      mload\n      0x0120\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup5\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup5\n      add\n      mstore\n      0x05\n      dup2\n      add\n      sload\n      0xa0\n      dup5\n      add\n      mstore\n      0x06\n      dup2\n      add\n      sload\n      0xc0\n      dup5\n      add\n      mstore\n      0x07\n      dup2\n      add\n      sload\n      0xe0\n      dup5\n      add\n      mstore\n      0x08\n      add\n      sload\n      0x0100\n      dup4\n      add\n      mstore\n        /* \"LPStaking.sol\":19106:19157  require(deposit.stake > 0, \"Harvest: Not a staker\") */\n      tag_638\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":22393:22395   */\n      0x20\n        /* \"LPStaking.sol\":19106:19157  require(deposit.stake > 0, \"Harvest: Not a staker\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":22375:22396   */\n      mstore\n        /* \"#utility.yul\":22432:22434   */\n      0x15\n        /* \"#utility.yul\":22412:22430   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":22405:22435   */\n      mstore\n      shl(0x59, 0x2430b93b32b9ba1d102737ba10309039ba30b5b2b9)\n        /* \"#utility.yul\":22451:22469   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":22444:22495   */\n      mstore\n        /* \"#utility.yul\":22512:22530   */\n      0x64\n      add\n        /* \"LPStaking.sol\":19106:19157  require(deposit.stake > 0, \"Harvest: Not a staker\") */\n      tag_187\n        /* \"#utility.yul\":22191:22536   */\n      jump\n        /* \"LPStaking.sol\":19106:19157  require(deposit.stake > 0, \"Harvest: Not a staker\") */\n    tag_638:\n        /* \"LPStaking.sol\":19168:19185  uint256 rewardFee */\n      0x00\n        /* \"LPStaking.sol\":19188:19216  getHavestAmount(_user, _dId) */\n      tag_641\n        /* \"LPStaking.sol\":19204:19209  _user */\n      dup5\n        /* \"LPStaking.sol\":19211:19215  _dId */\n      dup5\n        /* \"LPStaking.sol\":19188:19203  getHavestAmount */\n      tag_66\n        /* \"LPStaking.sol\":19188:19216  getHavestAmount(_user, _dId) */\n      jump\t// in\n    tag_641:\n        /* \"LPStaking.sol\":19168:19216  uint256 rewardFee = getHavestAmount(_user, _dId) */\n      swap1\n      pop\n        /* \"LPStaking.sol\":19230:19244  rewardFee == 0 */\n      dup1\n      iszero\n      dup1\n        /* \"LPStaking.sol\":19230:19307  rewardFee == 0 || periodPoolMap[deposit.vestedFor].totalAllotedFeeReward <= 0 */\n      tag_642\n      jumpi\n      pop\n        /* \"LPStaking.sol\":19262:19279  deposit.vestedFor */\n      0xe0\n      dup3\n      add\n      mload\n        /* \"LPStaking.sol\":19306:19307  0 */\n      0x00\n        /* \"LPStaking.sol\":19248:19280  periodPoolMap[deposit.vestedFor] */\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":19248:19261  periodPoolMap */\n      0xa2\n        /* \"LPStaking.sol\":19248:19280  periodPoolMap[deposit.vestedFor] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"LPStaking.sol\":19248:19302  periodPoolMap[deposit.vestedFor].totalAllotedFeeReward */\n      0x01\n      add\n      sload\n        /* \"LPStaking.sol\":19248:19307  periodPoolMap[deposit.vestedFor].totalAllotedFeeReward <= 0 */\n      iszero\n        /* \"LPStaking.sol\":19230:19307  rewardFee == 0 || periodPoolMap[deposit.vestedFor].totalAllotedFeeReward <= 0 */\n    tag_642:\n        /* \"LPStaking.sol\":19226:19340  if (rewardFee == 0 || periodPoolMap[deposit.vestedFor].totalAllotedFeeReward <= 0) {... */\n      iszero\n      tag_643\n      jumpi\n        /* \"LPStaking.sol\":19323:19330  return; */\n      pop\n      pop\n        /* \"LPStaking.sol\":18977:19639  function harvestFee(address _user, uint256 _dId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"LPStaking.sol\":19226:19340  if (rewardFee == 0 || periodPoolMap[deposit.vestedFor].totalAllotedFeeReward <= 0) {... */\n    tag_643:\n        /* \"LPStaking.sol\":19368:19372  WETH */\n      sload(0x9a)\n        /* \"LPStaking.sol\":19368:19397  WETH.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"LPStaking.sol\":19391:19395  this */\n      address\n        /* \"LPStaking.sol\":19368:19397  WETH.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2643:2694   */\n      mstore\n        /* \"LPStaking.sol\":19350:19365  uint256 balance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":19368:19372  WETH */\n      and\n      swap1\n        /* \"LPStaking.sol\":19368:19382  WETH.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2616:2634   */\n      0x24\n      add\n        /* \"LPStaking.sol\":19368:19397  WETH.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_646\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_646:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_647\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_647:\n        /* \"LPStaking.sol\":19350:19397  uint256 balance = WETH.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"LPStaking.sol\":19412:19419  balance */\n      dup1\n        /* \"LPStaking.sol\":19423:19424  0 */\n      0x00\n        /* \"LPStaking.sol\":19412:19424  balance == 0 */\n      sub\n        /* \"LPStaking.sol\":19408:19457  if (balance == 0) {... */\n      tag_648\n      jumpi\n        /* \"LPStaking.sol\":19440:19447  return; */\n      pop\n      pop\n      pop\n        /* \"LPStaking.sol\":18977:19639  function harvestFee(address _user, uint256 _dId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"LPStaking.sol\":19408:19457  if (balance == 0) {... */\n    tag_648:\n        /* \"LPStaking.sol\":19480:19497  deposit.vestedFor */\n      0xe0\n      dup4\n      add\n      mload\n        /* \"LPStaking.sol\":19466:19498  periodPoolMap[deposit.vestedFor] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"LPStaking.sol\":19466:19479  periodPoolMap */\n      0xa2\n        /* \"LPStaking.sol\":19466:19498  periodPoolMap[deposit.vestedFor] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"LPStaking.sol\":19466:19520  periodPoolMap[deposit.vestedFor].totalAllotedFeeReward */\n      0x01\n      add\n        /* \"LPStaking.sol\":19466:19533  periodPoolMap[deposit.vestedFor].totalAllotedFeeReward -= rewardFee */\n      dup1\n      sload\n        /* \"LPStaking.sol\":19524:19533  rewardFee */\n      dup5\n      swap3\n        /* \"LPStaking.sol\":19466:19498  periodPoolMap[deposit.vestedFor] */\n      swap1\n        /* \"LPStaking.sol\":19466:19533  periodPoolMap[deposit.vestedFor].totalAllotedFeeReward -= rewardFee */\n      tag_649\n      swap1\n        /* \"LPStaking.sol\":19524:19533  rewardFee */\n      dup5\n      swap1\n        /* \"LPStaking.sol\":19466:19533  periodPoolMap[deposit.vestedFor].totalAllotedFeeReward -= rewardFee */\n      tag_222\n      jump\t// in\n    tag_649:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"LPStaking.sol\":19543:19547  WETH */\n      sload(0x9a)\n        /* \"LPStaking.sol\":19543:19592  WETH.transferFrom(address(this),_user, rewardFee) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":19543:19547  WETH */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"LPStaking.sol\":19543:19560  WETH.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"LPStaking.sol\":19543:19592  WETH.transferFrom(address(this),_user, rewardFee) */\n      tag_650\n      swap1\n        /* \"LPStaking.sol\":19569:19573  this */\n      address\n      swap1\n        /* \"LPStaking.sol\":19575:19580  _user */\n      dup10\n      swap1\n        /* \"LPStaking.sol\":19582:19591  rewardFee */\n      dup8\n      swap1\n        /* \"LPStaking.sol\":19543:19592  WETH.transferFrom(address(this),_user, rewardFee) */\n      0x04\n      add\n      tag_246\n      jump\t// in\n    tag_650:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_652\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_652:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_653\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_653:\n      pop\n        /* \"LPStaking.sol\":19615:19620  _user */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LPStaking.sol\":19607:19632  Harvest(_user, rewardFee) */\n      and\n      0xc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba\n        /* \"LPStaking.sol\":19622:19631  rewardFee */\n      dup4\n        /* \"LPStaking.sol\":19607:19632  Harvest(_user, rewardFee) */\n      mload(0x40)\n      tag_654\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"LPStaking.sol\":19607:19632  Harvest(_user, rewardFee) */\n    tag_654:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"LPStaking.sol\":19035:19639  {... */\n      pop\n      pop\n      pop\n        /* \"LPStaking.sol\":18977:19639  function harvestFee(address _user, uint256 _dId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2510:2697  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_324:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2602:2608  _owner */\n      0x65\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2618:2635  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2650:2690  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2602:2608  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2618:2635  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2602:2608  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2650:2690  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2583:2599  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2650:2690  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2573:2697  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2510:2697  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5287:6095  function _setInitializedVersion(uint8 version) private returns (bool) {... */\n    tag_511:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5351:5355  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5684:5697  _initializing */\n      dup1\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5680:6089  if (_initializing) {... */\n      iszero\n      tag_659\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5738:5745  version */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5738:5750  version == 1 */\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5749:5750  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5738:5750  version == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5738:5799  version == 1 && !AddressUpgradeable.isContract(address(this)) */\n      dup1\n      iszero\n      tag_660\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5793:5797  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1495  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1499  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5738:5799  version == 1 && !AddressUpgradeable.isContract(address(this)) */\n    tag_660:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5713:5879  require(... */\n      tag_663\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_665\n      jump\t// in\n    tag_663:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5900:5905  false */\n      0x00\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5287:6095  function _setInitializedVersion(uint8 version) private returns (bool) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5680:6089  if (_initializing) {... */\n    tag_659:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5944:5956  _initialized */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5944:5966  _initialized < version */\n      0xff\n      dup1\n      dup5\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5944:5956  _initialized */\n      swap2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5944:5966  _initialized < version */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5936:6017  require(_initialized < version, \"Initializable: contract is already initialized\") */\n      tag_667\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_665\n      jump\t// in\n    tag_667:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6031:6043  _initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6031:6053  _initialized = version */\n      dup1\n      sload\n      not(0xff)\n      and\n      0xff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x01\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5287:6095  function _setInitializedVersion(uint8 version) private returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5680:6089  if (_initializing) {... */\n    tag_666:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5287:6095  function _setInitializedVersion(uint8 version) private returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":711:770  function __Context_init() internal onlyInitializing {... */\n    tag_515:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4698:4711  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4690:4759  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_672\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":988:1083  function __Ownable_init() internal onlyInitializing {... */\n    tag_517:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4698:4711  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4690:4759  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_675\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_672\n      jump\t// in\n    tag_675:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1050:1076  __Ownable_init_unchained() */\n      tag_323\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1050:1074  __Ownable_init_unchained */\n      tag_679\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1050:1076  __Ownable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1853:1964  function __ReentrancyGuard_init() internal onlyInitializing {... */\n    tag_519:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4698:4711  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4690:4759  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_681\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_672\n      jump\t// in\n    tag_681:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1923:1957  __ReentrancyGuard_init_unchained() */\n      tag_323\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1923:1955  __ReentrancyGuard_init_unchained */\n      tag_685\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1923:1957  __ReentrancyGuard_init_unchained() */\n      jump\t// in\n        /* \"LPStaking.sol\":5688:5903  function setPeriodSum(uint256[] memory _periods) internal {... */\n    tag_523:\n        /* \"LPStaking.sol\":5768:5769  0 */\n      0x00\n        /* \"LPStaking.sol\":5756:5765  periodSum */\n      0xa6\n        /* \"LPStaking.sol\":5756:5769  periodSum = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"LPStaking.sol\":5779:5897  for (uint256 i = 0; i < _periods.length; i++) {... */\n    tag_687:\n        /* \"LPStaking.sol\":5803:5811  _periods */\n      dup2\n        /* \"LPStaking.sol\":5803:5818  _periods.length */\n      mload\n        /* \"LPStaking.sol\":5799:5800  i */\n      dup2\n        /* \"LPStaking.sol\":5799:5818  i < _periods.length */\n      lt\n        /* \"LPStaking.sol\":5779:5897  for (uint256 i = 0; i < _periods.length; i++) {... */\n      iszero\n      tag_688\n      jumpi\n        /* \"LPStaking.sol\":5852:5860  _periods */\n      dup2\n        /* \"LPStaking.sol\":5861:5862  i */\n      dup2\n        /* \"LPStaking.sol\":5852:5863  _periods[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_691\n      jumpi\n      tag_691\n      tag_199\n      jump\t// in\n    tag_691:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"LPStaking.sol\":5867:5868  0 */\n      0x00\n        /* \"LPStaking.sol\":5852:5868  _periods[i] == 0 */\n      eq\n        /* \"LPStaking.sol\":5852:5886  _periods[i] == 0 ? 1 : _periods[i] */\n      tag_692\n      jumpi\n        /* \"LPStaking.sol\":5875:5883  _periods */\n      dup2\n        /* \"LPStaking.sol\":5884:5885  i */\n      dup2\n        /* \"LPStaking.sol\":5875:5886  _periods[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_694\n      jumpi\n      tag_694\n      tag_199\n      jump\t// in\n    tag_694:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"LPStaking.sol\":5852:5886  _periods[i] == 0 ? 1 : _periods[i] */\n      jump(tag_695)\n    tag_692:\n        /* \"LPStaking.sol\":5871:5872  1 */\n      0x01\n        /* \"LPStaking.sol\":5852:5886  _periods[i] == 0 ? 1 : _periods[i] */\n    tag_695:\n        /* \"LPStaking.sol\":5839:5848  periodSum */\n      0xa6\n      0x00\n        /* \"LPStaking.sol\":5839:5886  periodSum += _periods[i] == 0 ? 1 : _periods[i] */\n      dup3\n      dup3\n      sload\n      tag_696\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_696:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"LPStaking.sol\":5820:5823  i++ */\n      dup2\n      swap1\n      pop\n      tag_697\n      dup2\n      tag_203\n      jump\t// in\n    tag_697:\n      swap2\n      pop\n      pop\n        /* \"LPStaking.sol\":5779:5897  for (uint256 i = 0; i < _periods.length; i++) {... */\n      jump(tag_687)\n    tag_688:\n      pop\n        /* \"LPStaking.sol\":5688:5903  function setPeriodSum(uint256[] memory _periods) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3476:3572  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_620:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3534:3541  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3560:3565  a * b */\n      tag_699\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3564:3565  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3560:3561  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3560:3565  a * b */\n      tag_224\n      jump\t// in\n    tag_699:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3553:3565  return a * b */\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3476:3572  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3133:3229  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_623:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3191:3198  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3217:3222  a - b */\n      tag_699\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3221:3222  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3217:3218  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3217:3222  a - b */\n      tag_222\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3861:3957  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_625:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3919:3926  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3945:3950  a / b */\n      tag_699\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3949:3950  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3945:3946  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3945:3950  a / b */\n      tag_210\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1089:1200  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_679:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4698:4711  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4690:4759  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_706\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_672\n      jump\t// in\n    tag_706:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1161:1193  _transferOwnership(_msgSender()) */\n      tag_323\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1161:1179  _transferOwnership */\n      tag_324\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1161:1193  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1970:2079  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n    tag_685:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4698:4711  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4690:4759  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_712\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_672\n      jump\t// in\n    tag_712:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1772:1773  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2050:2072  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1970:2079  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n    tag_521:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_717\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_716:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_717\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_716)\n    tag_717:\n      pop\n      tag_718\n      swap3\n      swap2\n      pop\n      tag_719\n      jump\t// in\n    tag_718:\n      pop\n      swap1\n      jump\t// out\n    tag_719:\n    tag_720:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_718\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_720)\n        /* \"#utility.yul\":196:323   */\n    tag_371:\n        /* \"#utility.yul\":257:267   */\n      0x4e487b71\n        /* \"#utility.yul\":252:255   */\n      0xe0\n        /* \"#utility.yul\":248:268   */\n      shl\n        /* \"#utility.yul\":245:246   */\n      0x00\n        /* \"#utility.yul\":238:269   */\n      mstore\n        /* \"#utility.yul\":288:292   */\n      0x41\n        /* \"#utility.yul\":285:286   */\n      0x04\n        /* \"#utility.yul\":278:293   */\n      mstore\n        /* \"#utility.yul\":312:316   */\n      0x24\n        /* \"#utility.yul\":309:310   */\n      0x00\n        /* \"#utility.yul\":302:317   */\n      revert\n        /* \"#utility.yul\":328:585   */\n    tag_722:\n        /* \"#utility.yul\":400:404   */\n      0x40\n        /* \"#utility.yul\":394:405   */\n      dup1\n      mload\n      swap1\n        /* \"#utility.yul\":432:449   */\n      dup2\n      add\n        /* \"#utility.yul\":479:497   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":464:498   */\n      dup2\n      gt\n        /* \"#utility.yul\":500:522   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":461:523   */\n      or\n        /* \"#utility.yul\":458:546   */\n      iszero\n      tag_738\n      jumpi\n        /* \"#utility.yul\":526:544   */\n      tag_738\n      tag_371\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":562:566   */\n      0x40\n        /* \"#utility.yul\":555:579   */\n      mstore\n        /* \"#utility.yul\":328:585   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":590:865   */\n    tag_723:\n        /* \"#utility.yul\":661:663   */\n      0x40\n        /* \"#utility.yul\":655:664   */\n      mload\n        /* \"#utility.yul\":726:728   */\n      0x1f\n        /* \"#utility.yul\":707:720   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":703:730   */\n      and\n        /* \"#utility.yul\":691:731   */\n      dup2\n      add\n        /* \"#utility.yul\":761:779   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":746:780   */\n      dup2\n      gt\n        /* \"#utility.yul\":782:804   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":743:805   */\n      or\n        /* \"#utility.yul\":740:828   */\n      iszero\n      tag_741\n      jumpi\n        /* \"#utility.yul\":808:826   */\n      tag_741\n      tag_371\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":844:846   */\n      0x40\n        /* \"#utility.yul\":837:859   */\n      mstore\n        /* \"#utility.yul\":590:865   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":870:1065   */\n    tag_724:\n        /* \"#utility.yul\":942:946   */\n      0x00\n        /* \"#utility.yul\":975:993   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":967:973   */\n      dup3\n        /* \"#utility.yul\":964:994   */\n      gt\n        /* \"#utility.yul\":961:1017   */\n      iszero\n      tag_744\n      jumpi\n        /* \"#utility.yul\":997:1015   */\n      tag_744\n      tag_371\n      jump\t// in\n    tag_744:\n      pop\n        /* \"#utility.yul\":1042:1043   */\n      0x05\n        /* \"#utility.yul\":1038:1052   */\n      shl\n        /* \"#utility.yul\":1054:1058   */\n      0x20\n        /* \"#utility.yul\":1034:1059   */\n      add\n      swap1\n        /* \"#utility.yul\":870:1065   */\n      jump\t// out\n        /* \"#utility.yul\":1070:2029   */\n    tag_725:\n        /* \"#utility.yul\":1136:1141   */\n      0x00\n        /* \"#utility.yul\":1189:1192   */\n      dup3\n        /* \"#utility.yul\":1182:1186   */\n      0x1f\n        /* \"#utility.yul\":1174:1180   */\n      dup4\n        /* \"#utility.yul\":1170:1187   */\n      add\n        /* \"#utility.yul\":1166:1193   */\n      slt\n        /* \"#utility.yul\":1156:1211   */\n      tag_746\n      jumpi\n        /* \"#utility.yul\":1207:1208   */\n      0x00\n        /* \"#utility.yul\":1204:1205   */\n      dup1\n        /* \"#utility.yul\":1197:1209   */\n      revert\n        /* \"#utility.yul\":1156:1211   */\n    tag_746:\n        /* \"#utility.yul\":1243:1249   */\n      dup2\n        /* \"#utility.yul\":1230:1250   */\n      calldataload\n        /* \"#utility.yul\":1269:1273   */\n      0x20\n        /* \"#utility.yul\":1293:1365   */\n      tag_747\n        /* \"#utility.yul\":1309:1364   */\n      tag_748\n        /* \"#utility.yul\":1361:1363   */\n      dup4\n        /* \"#utility.yul\":1309:1364   */\n      tag_724\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":1293:1365   */\n      tag_723\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":1399:1414   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":1485:1486   */\n      0x06\n        /* \"#utility.yul\":1481:1491   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":1469:1492   */\n      dup5\n      add\n        /* \"#utility.yul\":1465:1497   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":1430:1442   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1509:1524   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":1506:1541   */\n      iszero\n      tag_749\n      jumpi\n        /* \"#utility.yul\":1537:1538   */\n      0x00\n        /* \"#utility.yul\":1534:1535   */\n      dup1\n        /* \"#utility.yul\":1527:1539   */\n      revert\n        /* \"#utility.yul\":1506:1541   */\n    tag_749:\n        /* \"#utility.yul\":1573:1575   */\n      dup3\n        /* \"#utility.yul\":1565:1571   */\n      dup7\n        /* \"#utility.yul\":1561:1576   */\n      add\n        /* \"#utility.yul\":1585:2000   */\n    tag_750:\n        /* \"#utility.yul\":1601:1607   */\n      dup5\n        /* \"#utility.yul\":1596:1599   */\n      dup2\n        /* \"#utility.yul\":1593:1608   */\n      lt\n        /* \"#utility.yul\":1585:2000   */\n      iszero\n      tag_752\n      jumpi\n        /* \"#utility.yul\":1679:1683   */\n      0x40\n        /* \"#utility.yul\":1673:1676   */\n      dup2\n        /* \"#utility.yul\":1668:1671   */\n      dup10\n        /* \"#utility.yul\":1664:1677   */\n      sub\n        /* \"#utility.yul\":1660:1684   */\n      slt\n        /* \"#utility.yul\":1657:1771   */\n      iszero\n      tag_753\n      jumpi\n        /* \"#utility.yul\":1725:1726   */\n      0x00\n        /* \"#utility.yul\":1754:1756   */\n      dup1\n        /* \"#utility.yul\":1750:1752   */\n      dup2\n        /* \"#utility.yul\":1743:1757   */\n      revert\n        /* \"#utility.yul\":1657:1771   */\n    tag_753:\n        /* \"#utility.yul\":1797:1819   */\n      tag_754\n      tag_722\n      jump\t// in\n    tag_754:\n        /* \"#utility.yul\":1846:1863   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":1832:1864   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1913:1925   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":1900:1926   */\n      calldataload\n        /* \"#utility.yul\":1884:1898   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1877:1927   */\n      mstore\n        /* \"#utility.yul\":1940:1958   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1978:1990   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":1627:1631   */\n      0x40\n        /* \"#utility.yul\":1618:1632   */\n      add\n        /* \"#utility.yul\":1585:2000   */\n      jump(tag_750)\n    tag_752:\n      pop\n        /* \"#utility.yul\":2018:2023   */\n      swap7\n        /* \"#utility.yul\":1070:2029   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2034:2492   */\n    tag_52:\n        /* \"#utility.yul\":2157:2163   */\n      0x00\n        /* \"#utility.yul\":2165:2171   */\n      dup1\n        /* \"#utility.yul\":2218:2220   */\n      0x40\n        /* \"#utility.yul\":2206:2215   */\n      dup4\n        /* \"#utility.yul\":2197:2204   */\n      dup6\n        /* \"#utility.yul\":2193:2216   */\n      sub\n        /* \"#utility.yul\":2189:2221   */\n      slt\n        /* \"#utility.yul\":2186:2238   */\n      iszero\n      tag_756\n      jumpi\n        /* \"#utility.yul\":2234:2235   */\n      0x00\n        /* \"#utility.yul\":2231:2232   */\n      dup1\n        /* \"#utility.yul\":2224:2236   */\n      revert\n        /* \"#utility.yul\":2186:2238   */\n    tag_756:\n        /* \"#utility.yul\":2270:2279   */\n      dup3\n        /* \"#utility.yul\":2257:2280   */\n      calldataload\n        /* \"#utility.yul\":2247:2280   */\n      swap2\n      pop\n        /* \"#utility.yul\":2331:2333   */\n      0x20\n        /* \"#utility.yul\":2320:2329   */\n      dup4\n        /* \"#utility.yul\":2316:2334   */\n      add\n        /* \"#utility.yul\":2303:2335   */\n      calldataload\n        /* \"#utility.yul\":2358:2376   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2350:2356   */\n      dup2\n        /* \"#utility.yul\":2347:2377   */\n      gt\n        /* \"#utility.yul\":2344:2394   */\n      iszero\n      tag_757\n      jumpi\n        /* \"#utility.yul\":2390:2391   */\n      0x00\n        /* \"#utility.yul\":2387:2388   */\n      dup1\n        /* \"#utility.yul\":2380:2392   */\n      revert\n        /* \"#utility.yul\":2344:2394   */\n    tag_757:\n        /* \"#utility.yul\":2413:2486   */\n      tag_758\n        /* \"#utility.yul\":2478:2485   */\n      dup6\n        /* \"#utility.yul\":2469:2475   */\n      dup3\n        /* \"#utility.yul\":2458:2467   */\n      dup7\n        /* \"#utility.yul\":2454:2476   */\n      add\n        /* \"#utility.yul\":2413:2486   */\n      tag_725\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":2403:2486   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2034:2492   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2705:2953   */\n    tag_60:\n        /* \"#utility.yul\":2773:2779   */\n      0x00\n        /* \"#utility.yul\":2781:2787   */\n      dup1\n        /* \"#utility.yul\":2834:2836   */\n      0x40\n        /* \"#utility.yul\":2822:2831   */\n      dup4\n        /* \"#utility.yul\":2813:2820   */\n      dup6\n        /* \"#utility.yul\":2809:2832   */\n      sub\n        /* \"#utility.yul\":2805:2837   */\n      slt\n        /* \"#utility.yul\":2802:2854   */\n      iszero\n      tag_761\n      jumpi\n        /* \"#utility.yul\":2850:2851   */\n      0x00\n        /* \"#utility.yul\":2847:2848   */\n      dup1\n        /* \"#utility.yul\":2840:2852   */\n      revert\n        /* \"#utility.yul\":2802:2854   */\n    tag_761:\n      pop\n      pop\n        /* \"#utility.yul\":2873:2896   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":2943:2945   */\n      0x20\n        /* \"#utility.yul\":2928:2946   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2915:2947   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2705:2953   */\n      jump\t// out\n        /* \"#utility.yul\":2958:3089   */\n    tag_726:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3033:3064   */\n      dup2\n      and\n        /* \"#utility.yul\":3023:3065   */\n      dup2\n      eq\n        /* \"#utility.yul\":3013:3083   */\n      tag_581\n      jumpi\n        /* \"#utility.yul\":3079:3080   */\n      0x00\n        /* \"#utility.yul\":3076:3077   */\n      dup1\n        /* \"#utility.yul\":3069:3081   */\n      revert\n        /* \"#utility.yul\":3094:3409   */\n    tag_65:\n        /* \"#utility.yul\":3162:3168   */\n      0x00\n        /* \"#utility.yul\":3170:3176   */\n      dup1\n        /* \"#utility.yul\":3223:3225   */\n      0x40\n        /* \"#utility.yul\":3211:3220   */\n      dup4\n        /* \"#utility.yul\":3202:3209   */\n      dup6\n        /* \"#utility.yul\":3198:3221   */\n      sub\n        /* \"#utility.yul\":3194:3226   */\n      slt\n        /* \"#utility.yul\":3191:3243   */\n      iszero\n      tag_765\n      jumpi\n        /* \"#utility.yul\":3239:3240   */\n      0x00\n        /* \"#utility.yul\":3236:3237   */\n      dup1\n        /* \"#utility.yul\":3229:3241   */\n      revert\n        /* \"#utility.yul\":3191:3243   */\n    tag_765:\n        /* \"#utility.yul\":3278:3287   */\n      dup3\n        /* \"#utility.yul\":3265:3288   */\n      calldataload\n        /* \"#utility.yul\":3297:3328   */\n      tag_766\n        /* \"#utility.yul\":3322:3327   */\n      dup2\n        /* \"#utility.yul\":3297:3328   */\n      tag_726\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":3347:3352   */\n      swap5\n        /* \"#utility.yul\":3399:3401   */\n      0x20\n        /* \"#utility.yul\":3384:3402   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3371:3403   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3094:3409   */\n      jump\t// out\n        /* \"#utility.yul\":3414:3532   */\n    tag_727:\n        /* \"#utility.yul\":3500:3505   */\n      dup1\n        /* \"#utility.yul\":3493:3506   */\n      iszero\n        /* \"#utility.yul\":3486:3507   */\n      iszero\n        /* \"#utility.yul\":3479:3484   */\n      dup2\n        /* \"#utility.yul\":3476:3508   */\n      eq\n        /* \"#utility.yul\":3466:3526   */\n      tag_581\n      jumpi\n        /* \"#utility.yul\":3522:3523   */\n      0x00\n        /* \"#utility.yul\":3519:3520   */\n      dup1\n        /* \"#utility.yul\":3512:3524   */\n      revert\n        /* \"#utility.yul\":3537:3914   */\n    tag_72:\n        /* \"#utility.yul\":3611:3617   */\n      0x00\n        /* \"#utility.yul\":3619:3625   */\n      dup1\n        /* \"#utility.yul\":3627:3633   */\n      0x00\n        /* \"#utility.yul\":3680:3682   */\n      0x60\n        /* \"#utility.yul\":3668:3677   */\n      dup5\n        /* \"#utility.yul\":3659:3666   */\n      dup7\n        /* \"#utility.yul\":3655:3678   */\n      sub\n        /* \"#utility.yul\":3651:3683   */\n      slt\n        /* \"#utility.yul\":3648:3700   */\n      iszero\n      tag_770\n      jumpi\n        /* \"#utility.yul\":3696:3697   */\n      0x00\n        /* \"#utility.yul\":3693:3694   */\n      dup1\n        /* \"#utility.yul\":3686:3698   */\n      revert\n        /* \"#utility.yul\":3648:3700   */\n    tag_770:\n        /* \"#utility.yul\":3732:3741   */\n      dup4\n        /* \"#utility.yul\":3719:3742   */\n      calldataload\n        /* \"#utility.yul\":3709:3742   */\n      swap3\n      pop\n        /* \"#utility.yul\":3789:3791   */\n      0x20\n        /* \"#utility.yul\":3778:3787   */\n      dup5\n        /* \"#utility.yul\":3774:3792   */\n      add\n        /* \"#utility.yul\":3761:3793   */\n      calldataload\n        /* \"#utility.yul\":3751:3793   */\n      swap2\n      pop\n        /* \"#utility.yul\":3843:3845   */\n      0x40\n        /* \"#utility.yul\":3832:3841   */\n      dup5\n        /* \"#utility.yul\":3828:3846   */\n      add\n        /* \"#utility.yul\":3815:3847   */\n      calldataload\n        /* \"#utility.yul\":3856:3884   */\n      tag_771\n        /* \"#utility.yul\":3878:3883   */\n      dup2\n        /* \"#utility.yul\":3856:3884   */\n      tag_727\n      jump\t// in\n    tag_771:\n        /* \"#utility.yul\":3903:3908   */\n      dup1\n        /* \"#utility.yul\":3893:3908   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3537:3914   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3919:4585   */\n    tag_86:\n        /* \"#utility.yul\":4051:4057   */\n      0x00\n        /* \"#utility.yul\":4059:4065   */\n      dup1\n        /* \"#utility.yul\":4067:4073   */\n      0x00\n        /* \"#utility.yul\":4120:4122   */\n      0x60\n        /* \"#utility.yul\":4108:4117   */\n      dup5\n        /* \"#utility.yul\":4099:4106   */\n      dup7\n        /* \"#utility.yul\":4095:4118   */\n      sub\n        /* \"#utility.yul\":4091:4123   */\n      slt\n        /* \"#utility.yul\":4088:4140   */\n      iszero\n      tag_773\n      jumpi\n        /* \"#utility.yul\":4136:4137   */\n      0x00\n        /* \"#utility.yul\":4133:4134   */\n      dup1\n        /* \"#utility.yul\":4126:4138   */\n      revert\n        /* \"#utility.yul\":4088:4140   */\n    tag_773:\n        /* \"#utility.yul\":4175:4184   */\n      dup4\n        /* \"#utility.yul\":4162:4185   */\n      calldataload\n        /* \"#utility.yul\":4194:4225   */\n      tag_774\n        /* \"#utility.yul\":4219:4224   */\n      dup2\n        /* \"#utility.yul\":4194:4225   */\n      tag_726\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":4244:4249   */\n      swap3\n      pop\n        /* \"#utility.yul\":4301:4303   */\n      0x20\n        /* \"#utility.yul\":4286:4304   */\n      dup5\n      add\n        /* \"#utility.yul\":4273:4305   */\n      calldataload\n        /* \"#utility.yul\":4314:4347   */\n      tag_775\n        /* \"#utility.yul\":4273:4305   */\n      dup2\n        /* \"#utility.yul\":4314:4347   */\n      tag_726\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":4366:4373   */\n      swap2\n      pop\n        /* \"#utility.yul\":4424:4426   */\n      0x40\n        /* \"#utility.yul\":4409:4427   */\n      dup5\n      add\n        /* \"#utility.yul\":4396:4428   */\n      calldataload\n        /* \"#utility.yul\":4451:4469   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4440:4470   */\n      dup2\n      gt\n        /* \"#utility.yul\":4437:4487   */\n      iszero\n      tag_776\n      jumpi\n        /* \"#utility.yul\":4483:4484   */\n      0x00\n        /* \"#utility.yul\":4480:4481   */\n      dup1\n        /* \"#utility.yul\":4473:4485   */\n      revert\n        /* \"#utility.yul\":4437:4487   */\n    tag_776:\n        /* \"#utility.yul\":4506:4579   */\n      tag_777\n        /* \"#utility.yul\":4571:4578   */\n      dup7\n        /* \"#utility.yul\":4562:4568   */\n      dup3\n        /* \"#utility.yul\":4551:4560   */\n      dup8\n        /* \"#utility.yul\":4547:4569   */\n      add\n        /* \"#utility.yul\":4506:4579   */\n      tag_725\n      jump\t// in\n    tag_777:\n        /* \"#utility.yul\":4496:4579   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3919:4585   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4590:4837   */\n    tag_96:\n        /* \"#utility.yul\":4649:4655   */\n      0x00\n        /* \"#utility.yul\":4702:4704   */\n      0x20\n        /* \"#utility.yul\":4690:4699   */\n      dup3\n        /* \"#utility.yul\":4681:4688   */\n      dup5\n        /* \"#utility.yul\":4677:4700   */\n      sub\n        /* \"#utility.yul\":4673:4705   */\n      slt\n        /* \"#utility.yul\":4670:4722   */\n      iszero\n      tag_779\n      jumpi\n        /* \"#utility.yul\":4718:4719   */\n      0x00\n        /* \"#utility.yul\":4715:4716   */\n      dup1\n        /* \"#utility.yul\":4708:4720   */\n      revert\n        /* \"#utility.yul\":4670:4722   */\n    tag_779:\n        /* \"#utility.yul\":4757:4766   */\n      dup2\n        /* \"#utility.yul\":4744:4767   */\n      calldataload\n        /* \"#utility.yul\":4776:4807   */\n      tag_699\n        /* \"#utility.yul\":4801:4806   */\n      dup2\n        /* \"#utility.yul\":4776:4807   */\n      tag_726\n      jump\t// in\n        /* \"#utility.yul\":4842:6179   */\n    tag_99:\n        /* \"#utility.yul\":5073:5075   */\n      0x20\n        /* \"#utility.yul\":5125:5146   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5195:5208   */\n      dup3\n      mload\n        /* \"#utility.yul\":5098:5116   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":5217:5239   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5044:5048   */\n      0x00\n      swap2\n        /* \"#utility.yul\":5073:5075   */\n      swap1\n        /* \"#utility.yul\":5258:5260   */\n      0x40\n      swap1\n        /* \"#utility.yul\":5276:5294   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":5317:5332   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":5044:5048   */\n      dup6\n        /* \"#utility.yul\":5360:6153   */\n    tag_782:\n        /* \"#utility.yul\":5374:5380   */\n      dup3\n        /* \"#utility.yul\":5371:5372   */\n      dup2\n        /* \"#utility.yul\":5368:5381   */\n      lt\n        /* \"#utility.yul\":5360:6153   */\n      iszero\n      tag_784\n      jumpi\n        /* \"#utility.yul\":5433:5446   */\n      dup2\n      mload\n        /* \"#utility.yul\":5471:5480   */\n      dup1\n      mload\n        /* \"#utility.yul\":5459:5481   */\n      dup6\n      mstore\n        /* \"#utility.yul\":5521:5532   */\n      dup7\n      dup2\n      add\n        /* \"#utility.yul\":5515:5533   */\n      mload\n        /* \"#utility.yul\":5501:5513   */\n      dup8\n      dup7\n      add\n        /* \"#utility.yul\":5494:5534   */\n      mstore\n        /* \"#utility.yul\":5574:5585   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":5568:5586   */\n      mload\n        /* \"#utility.yul\":5554:5566   */\n      dup7\n      dup7\n      add\n        /* \"#utility.yul\":5547:5587   */\n      mstore\n        /* \"#utility.yul\":5610:5614   */\n      0x60\n        /* \"#utility.yul\":5654:5665   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5648:5666   */\n      mload\n        /* \"#utility.yul\":5634:5646   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":5627:5667   */\n      mstore\n        /* \"#utility.yul\":5690:5694   */\n      0x80\n        /* \"#utility.yul\":5734:5745   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5728:5746   */\n      mload\n        /* \"#utility.yul\":5714:5726   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":5707:5747   */\n      mstore\n        /* \"#utility.yul\":5770:5774   */\n      0xa0\n        /* \"#utility.yul\":5814:5825   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5808:5826   */\n      mload\n        /* \"#utility.yul\":5794:5806   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":5787:5827   */\n      mstore\n        /* \"#utility.yul\":5850:5854   */\n      0xc0\n        /* \"#utility.yul\":5894:5905   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5888:5906   */\n      mload\n        /* \"#utility.yul\":5874:5886   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":5867:5907   */\n      mstore\n        /* \"#utility.yul\":5930:5934   */\n      0xe0\n        /* \"#utility.yul\":5974:5985   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5968:5986   */\n      mload\n        /* \"#utility.yul\":5954:5966   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":5947:5987   */\n      mstore\n        /* \"#utility.yul\":6010:6016   */\n      0x0100\n        /* \"#utility.yul\":6056:6067   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":6050:6068   */\n      mload\n        /* \"#utility.yul\":6036:6048   */\n      swap1\n      dup6\n      add\n        /* \"#utility.yul\":6029:6069   */\n      mstore\n        /* \"#utility.yul\":6098:6104   */\n      0x0120\n        /* \"#utility.yul\":6089:6105   */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":6128:6143   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":5396:5397   */\n      0x01\n        /* \"#utility.yul\":5389:5398   */\n      add\n        /* \"#utility.yul\":5360:6153   */\n      jump(tag_782)\n    tag_784:\n      pop\n        /* \"#utility.yul\":6170:6173   */\n      swap2\n      swap8\n        /* \"#utility.yul\":4842:6179   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6184:6364   */\n    tag_102:\n        /* \"#utility.yul\":6243:6249   */\n      0x00\n        /* \"#utility.yul\":6296:6298   */\n      0x20\n        /* \"#utility.yul\":6284:6293   */\n      dup3\n        /* \"#utility.yul\":6275:6282   */\n      dup5\n        /* \"#utility.yul\":6271:6294   */\n      sub\n        /* \"#utility.yul\":6267:6299   */\n      slt\n        /* \"#utility.yul\":6264:6316   */\n      iszero\n      tag_786\n      jumpi\n        /* \"#utility.yul\":6312:6313   */\n      0x00\n        /* \"#utility.yul\":6309:6310   */\n      dup1\n        /* \"#utility.yul\":6302:6314   */\n      revert\n        /* \"#utility.yul\":6264:6316   */\n    tag_786:\n      pop\n        /* \"#utility.yul\":6335:6358   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":6184:6364   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7125:7441   */\n    tag_118:\n        /* \"#utility.yul\":7202:7208   */\n      0x00\n        /* \"#utility.yul\":7210:7216   */\n      dup1\n        /* \"#utility.yul\":7218:7224   */\n      0x00\n        /* \"#utility.yul\":7271:7273   */\n      0x60\n        /* \"#utility.yul\":7259:7268   */\n      dup5\n        /* \"#utility.yul\":7250:7257   */\n      dup7\n        /* \"#utility.yul\":7246:7269   */\n      sub\n        /* \"#utility.yul\":7242:7274   */\n      slt\n        /* \"#utility.yul\":7239:7291   */\n      iszero\n      tag_789\n      jumpi\n        /* \"#utility.yul\":7287:7288   */\n      0x00\n        /* \"#utility.yul\":7284:7285   */\n      dup1\n        /* \"#utility.yul\":7277:7289   */\n      revert\n        /* \"#utility.yul\":7239:7291   */\n    tag_789:\n      pop\n      pop\n        /* \"#utility.yul\":7310:7333   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":7380:7382   */\n      0x20\n        /* \"#utility.yul\":7365:7383   */\n      dup4\n      add\n        /* \"#utility.yul\":7352:7384   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":7431:7433   */\n      0x40\n        /* \"#utility.yul\":7416:7434   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":7403:7435   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":7125:7441   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8395:8845   */\n    tag_139:\n        /* \"#utility.yul\":8469:8475   */\n      0x00\n        /* \"#utility.yul\":8477:8483   */\n      dup1\n        /* \"#utility.yul\":8485:8491   */\n      0x00\n        /* \"#utility.yul\":8538:8540   */\n      0x60\n        /* \"#utility.yul\":8526:8535   */\n      dup5\n        /* \"#utility.yul\":8517:8524   */\n      dup7\n        /* \"#utility.yul\":8513:8536   */\n      sub\n        /* \"#utility.yul\":8509:8541   */\n      slt\n        /* \"#utility.yul\":8506:8558   */\n      iszero\n      tag_794\n      jumpi\n        /* \"#utility.yul\":8554:8555   */\n      0x00\n        /* \"#utility.yul\":8551:8552   */\n      dup1\n        /* \"#utility.yul\":8544:8556   */\n      revert\n        /* \"#utility.yul\":8506:8558   */\n    tag_794:\n        /* \"#utility.yul\":8593:8602   */\n      dup4\n        /* \"#utility.yul\":8580:8603   */\n      calldataload\n        /* \"#utility.yul\":8612:8643   */\n      tag_795\n        /* \"#utility.yul\":8637:8642   */\n      dup2\n        /* \"#utility.yul\":8612:8643   */\n      tag_726\n      jump\t// in\n    tag_795:\n        /* \"#utility.yul\":8662:8667   */\n      swap3\n      pop\n        /* \"#utility.yul\":8714:8716   */\n      0x20\n        /* \"#utility.yul\":8699:8717   */\n      dup5\n      add\n        /* \"#utility.yul\":8686:8718   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":8770:8772   */\n      0x40\n        /* \"#utility.yul\":8755:8773   */\n      dup5\n      add\n        /* \"#utility.yul\":8742:8774   */\n      calldataload\n        /* \"#utility.yul\":8783:8813   */\n      tag_771\n        /* \"#utility.yul\":8742:8774   */\n      dup2\n        /* \"#utility.yul\":8783:8813   */\n      tag_727\n      jump\t// in\n        /* \"#utility.yul\":9103:10141   */\n    tag_166:\n        /* \"#utility.yul\":9196:9202   */\n      0x00\n        /* \"#utility.yul\":9204:9210   */\n      dup1\n        /* \"#utility.yul\":9257:9259   */\n      0x40\n        /* \"#utility.yul\":9245:9254   */\n      dup4\n        /* \"#utility.yul\":9236:9243   */\n      dup6\n        /* \"#utility.yul\":9232:9255   */\n      sub\n        /* \"#utility.yul\":9228:9260   */\n      slt\n        /* \"#utility.yul\":9225:9277   */\n      iszero\n      tag_799\n      jumpi\n        /* \"#utility.yul\":9273:9274   */\n      0x00\n        /* \"#utility.yul\":9270:9271   */\n      dup1\n        /* \"#utility.yul\":9263:9275   */\n      revert\n        /* \"#utility.yul\":9225:9277   */\n    tag_799:\n        /* \"#utility.yul\":9312:9321   */\n      dup3\n        /* \"#utility.yul\":9299:9322   */\n      calldataload\n        /* \"#utility.yul\":9331:9362   */\n      tag_800\n        /* \"#utility.yul\":9356:9361   */\n      dup2\n        /* \"#utility.yul\":9331:9362   */\n      tag_726\n      jump\t// in\n    tag_800:\n        /* \"#utility.yul\":9381:9386   */\n      swap2\n      pop\n        /* \"#utility.yul\":9405:9407   */\n      0x20\n        /* \"#utility.yul\":9443:9461   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":9430:9462   */\n      calldataload\n        /* \"#utility.yul\":9485:9503   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9474:9504   */\n      dup2\n      gt\n        /* \"#utility.yul\":9471:9521   */\n      iszero\n      tag_801\n      jumpi\n        /* \"#utility.yul\":9517:9518   */\n      0x00\n        /* \"#utility.yul\":9514:9515   */\n      dup1\n        /* \"#utility.yul\":9507:9519   */\n      revert\n        /* \"#utility.yul\":9471:9521   */\n    tag_801:\n        /* \"#utility.yul\":9540:9562   */\n      dup5\n      add\n        /* \"#utility.yul\":9593:9597   */\n      0x1f\n        /* \"#utility.yul\":9585:9598   */\n      dup2\n      add\n        /* \"#utility.yul\":9581:9608   */\n      dup7\n      sgt\n        /* \"#utility.yul\":9571:9626   */\n      tag_802\n      jumpi\n        /* \"#utility.yul\":9622:9623   */\n      0x00\n        /* \"#utility.yul\":9619:9620   */\n      dup1\n        /* \"#utility.yul\":9612:9624   */\n      revert\n        /* \"#utility.yul\":9571:9626   */\n    tag_802:\n        /* \"#utility.yul\":9658:9660   */\n      dup1\n        /* \"#utility.yul\":9645:9661   */\n      calldataload\n        /* \"#utility.yul\":9681:9753   */\n      tag_803\n        /* \"#utility.yul\":9697:9752   */\n      tag_748\n        /* \"#utility.yul\":9749:9751   */\n      dup3\n        /* \"#utility.yul\":9697:9752   */\n      tag_724\n      jump\t// in\n        /* \"#utility.yul\":9681:9753   */\n    tag_803:\n        /* \"#utility.yul\":9787:9802   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":9869:9870   */\n      0x05\n        /* \"#utility.yul\":9865:9875   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":9857:9876   */\n      dup3\n      add\n        /* \"#utility.yul\":9853:9881   */\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":9818:9830   */\n      dup4\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":9893:9912   */\n      dup9\n      dup4\n      gt\n        /* \"#utility.yul\":9890:9929   */\n      iszero\n      tag_805\n      jumpi\n        /* \"#utility.yul\":9925:9926   */\n      0x00\n        /* \"#utility.yul\":9922:9923   */\n      dup1\n        /* \"#utility.yul\":9915:9927   */\n      revert\n        /* \"#utility.yul\":9890:9929   */\n    tag_805:\n        /* \"#utility.yul\":9949:9960   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":9969:10111   */\n    tag_806:\n        /* \"#utility.yul\":9985:9991   */\n      dup3\n        /* \"#utility.yul\":9980:9983   */\n      dup5\n        /* \"#utility.yul\":9977:9992   */\n      lt\n        /* \"#utility.yul\":9969:10111   */\n      iszero\n      tag_808\n      jumpi\n        /* \"#utility.yul\":10051:10068   */\n      dup4\n      calldataload\n        /* \"#utility.yul\":10039:10069   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10002:10014   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":10089:10101   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":9969:10111   */\n      jump(tag_806)\n    tag_808:\n        /* \"#utility.yul\":10130:10135   */\n      dup1\n        /* \"#utility.yul\":10120:10135   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9103:10141   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10146:10502   */\n    tag_188:\n        /* \"#utility.yul\":10348:10350   */\n      0x20\n        /* \"#utility.yul\":10330:10351   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10367:10385   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":10360:10390   */\n      mstore\n        /* \"#utility.yul\":10426:10460   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":10421:10423   */\n      0x40\n        /* \"#utility.yul\":10406:10424   */\n      dup3\n      add\n        /* \"#utility.yul\":10399:10461   */\n      mstore\n        /* \"#utility.yul\":10493:10495   */\n      0x60\n        /* \"#utility.yul\":10478:10496   */\n      add\n      swap1\n        /* \"#utility.yul\":10146:10502   */\n      jump\t// out\n        /* \"#utility.yul\":10507:10859   */\n    tag_192:\n        /* \"#utility.yul\":10709:10711   */\n      0x20\n        /* \"#utility.yul\":10691:10712   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10748:10750   */\n      0x1c\n        /* \"#utility.yul\":10728:10746   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10721:10751   */\n      mstore\n        /* \"#utility.yul\":10787:10817   */\n      0x5374616b696e673a20506f6f6c20646f65736e27742065786973747300000000\n        /* \"#utility.yul\":10782:10784   */\n      0x40\n        /* \"#utility.yul\":10767:10785   */\n      dup3\n      add\n        /* \"#utility.yul\":10760:10818   */\n      mstore\n        /* \"#utility.yul\":10850:10852   */\n      0x60\n        /* \"#utility.yul\":10835:10853   */\n      add\n      swap1\n        /* \"#utility.yul\":10507:10859   */\n      jump\t// out\n        /* \"#utility.yul\":10864:10991   */\n    tag_199:\n        /* \"#utility.yul\":10925:10935   */\n      0x4e487b71\n        /* \"#utility.yul\":10920:10923   */\n      0xe0\n        /* \"#utility.yul\":10916:10936   */\n      shl\n        /* \"#utility.yul\":10913:10914   */\n      0x00\n        /* \"#utility.yul\":10906:10937   */\n      mstore\n        /* \"#utility.yul\":10956:10960   */\n      0x32\n        /* \"#utility.yul\":10953:10954   */\n      0x04\n        /* \"#utility.yul\":10946:10961   */\n      mstore\n        /* \"#utility.yul\":10980:10984   */\n      0x24\n        /* \"#utility.yul\":10977:10978   */\n      0x00\n        /* \"#utility.yul\":10970:10985   */\n      revert\n        /* \"#utility.yul\":10996:11123   */\n    tag_728:\n        /* \"#utility.yul\":11057:11067   */\n      0x4e487b71\n        /* \"#utility.yul\":11052:11055   */\n      0xe0\n        /* \"#utility.yul\":11048:11068   */\n      shl\n        /* \"#utility.yul\":11045:11046   */\n      0x00\n        /* \"#utility.yul\":11038:11069   */\n      mstore\n        /* \"#utility.yul\":11088:11092   */\n      0x11\n        /* \"#utility.yul\":11085:11086   */\n      0x04\n        /* \"#utility.yul\":11078:11093   */\n      mstore\n        /* \"#utility.yul\":11112:11116   */\n      0x24\n        /* \"#utility.yul\":11109:11110   */\n      0x00\n        /* \"#utility.yul\":11102:11117   */\n      revert\n        /* \"#utility.yul\":11128:11263   */\n    tag_203:\n        /* \"#utility.yul\":11167:11170   */\n      0x00\n        /* \"#utility.yul\":11188:11205   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":11185:11228   */\n      tag_815\n      jumpi\n        /* \"#utility.yul\":11208:11226   */\n      tag_815\n      tag_728\n      jump\t// in\n    tag_815:\n      pop\n        /* \"#utility.yul\":11255:11256   */\n      0x01\n        /* \"#utility.yul\":11244:11257   */\n      add\n      swap1\n        /* \"#utility.yul\":11128:11263   */\n      jump\t// out\n        /* \"#utility.yul\":11268:11485   */\n    tag_210:\n        /* \"#utility.yul\":11308:11309   */\n      0x00\n        /* \"#utility.yul\":11334:11335   */\n      dup3\n        /* \"#utility.yul\":11324:11456   */\n      tag_817\n      jumpi\n        /* \"#utility.yul\":11378:11388   */\n      0x4e487b71\n        /* \"#utility.yul\":11373:11376   */\n      0xe0\n        /* \"#utility.yul\":11369:11389   */\n      shl\n        /* \"#utility.yul\":11366:11367   */\n      0x00\n        /* \"#utility.yul\":11359:11390   */\n      mstore\n        /* \"#utility.yul\":11413:11417   */\n      0x12\n        /* \"#utility.yul\":11410:11411   */\n      0x04\n        /* \"#utility.yul\":11403:11418   */\n      mstore\n        /* \"#utility.yul\":11441:11445   */\n      0x24\n        /* \"#utility.yul\":11438:11439   */\n      0x00\n        /* \"#utility.yul\":11431:11446   */\n      revert\n        /* \"#utility.yul\":11324:11456   */\n    tag_817:\n      pop\n        /* \"#utility.yul\":11470:11479   */\n      div\n      swap1\n        /* \"#utility.yul\":11268:11485   */\n      jump\t// out\n        /* \"#utility.yul\":11490:11615   */\n    tag_222:\n        /* \"#utility.yul\":11530:11534   */\n      0x00\n        /* \"#utility.yul\":11558:11559   */\n      dup3\n        /* \"#utility.yul\":11555:11556   */\n      dup3\n        /* \"#utility.yul\":11552:11560   */\n      lt\n        /* \"#utility.yul\":11549:11583   */\n      iszero\n      tag_820\n      jumpi\n        /* \"#utility.yul\":11563:11581   */\n      tag_820\n      tag_728\n      jump\t// in\n    tag_820:\n      pop\n        /* \"#utility.yul\":11600:11609   */\n      sub\n      swap1\n        /* \"#utility.yul\":11490:11615   */\n      jump\t// out\n        /* \"#utility.yul\":11620:11788   */\n    tag_224:\n        /* \"#utility.yul\":11660:11667   */\n      0x00\n        /* \"#utility.yul\":11726:11727   */\n      dup2\n        /* \"#utility.yul\":11722:11723   */\n      0x00\n        /* \"#utility.yul\":11718:11724   */\n      not\n        /* \"#utility.yul\":11714:11728   */\n      div\n        /* \"#utility.yul\":11711:11712   */\n      dup4\n        /* \"#utility.yul\":11708:11729   */\n      gt\n        /* \"#utility.yul\":11703:11704   */\n      dup3\n        /* \"#utility.yul\":11696:11705   */\n      iszero\n        /* \"#utility.yul\":11689:11706   */\n      iszero\n        /* \"#utility.yul\":11685:11730   */\n      and\n        /* \"#utility.yul\":11682:11753   */\n      iszero\n      tag_823\n      jumpi\n        /* \"#utility.yul\":11733:11751   */\n      tag_823\n      tag_728\n      jump\t// in\n    tag_823:\n      pop\n        /* \"#utility.yul\":11773:11782   */\n      mul\n      swap1\n        /* \"#utility.yul\":11620:11788   */\n      jump\t// out\n        /* \"#utility.yul\":11793:12148   */\n    tag_237:\n        /* \"#utility.yul\":11995:11997   */\n      0x20\n        /* \"#utility.yul\":11977:11998   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12034:12036   */\n      0x1f\n        /* \"#utility.yul\":12014:12032   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12007:12037   */\n      mstore\n        /* \"#utility.yul\":12073:12106   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":12068:12070   */\n      0x40\n        /* \"#utility.yul\":12053:12071   */\n      dup3\n      add\n        /* \"#utility.yul\":12046:12107   */\n      mstore\n        /* \"#utility.yul\":12139:12141   */\n      0x60\n        /* \"#utility.yul\":12124:12142   */\n      add\n      swap1\n        /* \"#utility.yul\":11793:12148   */\n      jump\t// out\n        /* \"#utility.yul\":12153:12337   */\n    tag_243:\n        /* \"#utility.yul\":12223:12229   */\n      0x00\n        /* \"#utility.yul\":12276:12278   */\n      0x20\n        /* \"#utility.yul\":12264:12273   */\n      dup3\n        /* \"#utility.yul\":12255:12262   */\n      dup5\n        /* \"#utility.yul\":12251:12274   */\n      sub\n        /* \"#utility.yul\":12247:12279   */\n      slt\n        /* \"#utility.yul\":12244:12296   */\n      iszero\n      tag_826\n      jumpi\n        /* \"#utility.yul\":12292:12293   */\n      0x00\n        /* \"#utility.yul\":12289:12290   */\n      dup1\n        /* \"#utility.yul\":12282:12294   */\n      revert\n        /* \"#utility.yul\":12244:12296   */\n    tag_826:\n      pop\n        /* \"#utility.yul\":12315:12331   */\n      mload\n      swap2\n        /* \"#utility.yul\":12153:12337   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12342:12717   */\n    tag_246:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12600:12615   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":12582:12616   */\n      dup2\n      mstore\n        /* \"#utility.yul\":12652:12667   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":12647:12649   */\n      0x20\n        /* \"#utility.yul\":12632:12650   */\n      dup3\n      add\n        /* \"#utility.yul\":12625:12668   */\n      mstore\n        /* \"#utility.yul\":12699:12701   */\n      0x40\n        /* \"#utility.yul\":12684:12702   */\n      dup2\n      add\n        /* \"#utility.yul\":12677:12711   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":12532:12534   */\n      0x60\n        /* \"#utility.yul\":12517:12535   */\n      add\n      swap1\n        /* \"#utility.yul\":12342:12717   */\n      jump\t// out\n        /* \"#utility.yul\":12722:12967   */\n    tag_250:\n        /* \"#utility.yul\":12789:12795   */\n      0x00\n        /* \"#utility.yul\":12842:12844   */\n      0x20\n        /* \"#utility.yul\":12830:12839   */\n      dup3\n        /* \"#utility.yul\":12821:12828   */\n      dup5\n        /* \"#utility.yul\":12817:12840   */\n      sub\n        /* \"#utility.yul\":12813:12845   */\n      slt\n        /* \"#utility.yul\":12810:12862   */\n      iszero\n      tag_829\n      jumpi\n        /* \"#utility.yul\":12858:12859   */\n      0x00\n        /* \"#utility.yul\":12855:12856   */\n      dup1\n        /* \"#utility.yul\":12848:12860   */\n      revert\n        /* \"#utility.yul\":12810:12862   */\n    tag_829:\n        /* \"#utility.yul\":12890:12899   */\n      dup2\n        /* \"#utility.yul\":12884:12900   */\n      mload\n        /* \"#utility.yul\":12909:12937   */\n      tag_699\n        /* \"#utility.yul\":12931:12936   */\n      dup2\n        /* \"#utility.yul\":12909:12937   */\n      tag_727\n      jump\t// in\n        /* \"#utility.yul\":14089:14217   */\n    tag_275:\n        /* \"#utility.yul\":14129:14132   */\n      0x00\n        /* \"#utility.yul\":14160:14161   */\n      dup3\n        /* \"#utility.yul\":14156:14162   */\n      not\n        /* \"#utility.yul\":14153:14154   */\n      dup3\n        /* \"#utility.yul\":14150:14163   */\n      gt\n        /* \"#utility.yul\":14147:14186   */\n      iszero\n      tag_836\n      jumpi\n        /* \"#utility.yul\":14166:14184   */\n      tag_836\n      tag_728\n      jump\t// in\n    tag_836:\n      pop\n        /* \"#utility.yul\":14202:14211   */\n      add\n      swap1\n        /* \"#utility.yul\":14089:14217   */\n      jump\t// out\n        /* \"#utility.yul\":16754:16892   */\n    tag_729:\n        /* \"#utility.yul\":16833:16846   */\n      dup1\n      mload\n        /* \"#utility.yul\":16855:16886   */\n      tag_666\n        /* \"#utility.yul\":16833:16846   */\n      dup2\n        /* \"#utility.yul\":16855:16886   */\n      tag_726\n      jump\t// in\n        /* \"#utility.yul\":16897:17062   */\n    tag_730:\n        /* \"#utility.yul\":16975:16988   */\n      dup1\n      mload\n        /* \"#utility.yul\":17028:17036   */\n      0xffffff\n        /* \"#utility.yul\":17017:17037   */\n      dup2\n      and\n        /* \"#utility.yul\":17007:17038   */\n      dup2\n      eq\n        /* \"#utility.yul\":16997:17056   */\n      tag_666\n      jumpi\n        /* \"#utility.yul\":17052:17053   */\n      0x00\n        /* \"#utility.yul\":17049:17050   */\n      dup1\n        /* \"#utility.yul\":17042:17054   */\n      revert\n        /* \"#utility.yul\":17067:17231   */\n    tag_731:\n        /* \"#utility.yul\":17144:17157   */\n      dup1\n      mload\n        /* \"#utility.yul\":17197:17198   */\n      0x02\n        /* \"#utility.yul\":17186:17206   */\n      dup2\n      swap1\n      signextend\n        /* \"#utility.yul\":17176:17207   */\n      dup2\n      eq\n        /* \"#utility.yul\":17166:17225   */\n      tag_666\n      jumpi\n        /* \"#utility.yul\":17221:17222   */\n      0x00\n        /* \"#utility.yul\":17218:17219   */\n      dup1\n        /* \"#utility.yul\":17211:17223   */\n      revert\n        /* \"#utility.yul\":17236:17428   */\n    tag_732:\n        /* \"#utility.yul\":17315:17328   */\n      dup1\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":17357:17403   */\n      dup2\n      and\n        /* \"#utility.yul\":17347:17404   */\n      dup2\n      eq\n        /* \"#utility.yul\":17337:17422   */\n      tag_666\n      jumpi\n        /* \"#utility.yul\":17418:17419   */\n      0x00\n        /* \"#utility.yul\":17415:17416   */\n      dup1\n        /* \"#utility.yul\":17408:17420   */\n      revert\n        /* \"#utility.yul\":17433:18619   */\n    tag_439:\n        /* \"#utility.yul\":17596:17602   */\n      0x00\n        /* \"#utility.yul\":17604:17610   */\n      dup1\n        /* \"#utility.yul\":17612:17618   */\n      0x00\n        /* \"#utility.yul\":17620:17626   */\n      dup1\n        /* \"#utility.yul\":17628:17634   */\n      0x00\n        /* \"#utility.yul\":17636:17642   */\n      dup1\n        /* \"#utility.yul\":17644:17650   */\n      0x00\n        /* \"#utility.yul\":17652:17658   */\n      dup1\n        /* \"#utility.yul\":17660:17666   */\n      0x00\n        /* \"#utility.yul\":17668:17674   */\n      dup1\n        /* \"#utility.yul\":17676:17683   */\n      0x00\n        /* \"#utility.yul\":17685:17692   */\n      dup1\n        /* \"#utility.yul\":17739:17742   */\n      0x0180\n        /* \"#utility.yul\":17727:17736   */\n      dup14\n        /* \"#utility.yul\":17718:17725   */\n      dup16\n        /* \"#utility.yul\":17714:17737   */\n      sub\n        /* \"#utility.yul\":17710:17743   */\n      slt\n        /* \"#utility.yul\":17707:17760   */\n      iszero\n      tag_853\n      jumpi\n        /* \"#utility.yul\":17756:17757   */\n      0x00\n        /* \"#utility.yul\":17753:17754   */\n      dup1\n        /* \"#utility.yul\":17746:17758   */\n      revert\n        /* \"#utility.yul\":17707:17760   */\n    tag_853:\n        /* \"#utility.yul\":17788:17797   */\n      dup13\n        /* \"#utility.yul\":17782:17798   */\n      mload\n        /* \"#utility.yul\":17838:17864   */\n      0xffffffffffffffffffffffff\n        /* \"#utility.yul\":17831:17836   */\n      dup2\n        /* \"#utility.yul\":17827:17865   */\n      and\n        /* \"#utility.yul\":17820:17825   */\n      dup2\n        /* \"#utility.yul\":17817:17866   */\n      eq\n        /* \"#utility.yul\":17807:17884   */\n      tag_854\n      jumpi\n        /* \"#utility.yul\":17880:17881   */\n      0x00\n        /* \"#utility.yul\":17877:17878   */\n      dup1\n        /* \"#utility.yul\":17870:17882   */\n      revert\n        /* \"#utility.yul\":17807:17884   */\n    tag_854:\n        /* \"#utility.yul\":17903:17908   */\n      swap12\n      pop\n        /* \"#utility.yul\":17927:17976   */\n      tag_855\n        /* \"#utility.yul\":17972:17974   */\n      0x20\n        /* \"#utility.yul\":17957:17975   */\n      dup15\n      add\n        /* \"#utility.yul\":17927:17976   */\n      tag_729\n      jump\t// in\n    tag_855:\n        /* \"#utility.yul\":17917:17976   */\n      swap11\n      pop\n        /* \"#utility.yul\":17995:18044   */\n      tag_856\n        /* \"#utility.yul\":18040:18042   */\n      0x40\n        /* \"#utility.yul\":18029:18038   */\n      dup15\n        /* \"#utility.yul\":18025:18043   */\n      add\n        /* \"#utility.yul\":17995:18044   */\n      tag_729\n      jump\t// in\n    tag_856:\n        /* \"#utility.yul\":17985:18044   */\n      swap10\n      pop\n        /* \"#utility.yul\":18063:18112   */\n      tag_857\n        /* \"#utility.yul\":18108:18110   */\n      0x60\n        /* \"#utility.yul\":18097:18106   */\n      dup15\n        /* \"#utility.yul\":18093:18111   */\n      add\n        /* \"#utility.yul\":18063:18112   */\n      tag_729\n      jump\t// in\n    tag_857:\n        /* \"#utility.yul\":18053:18112   */\n      swap9\n      pop\n        /* \"#utility.yul\":18131:18180   */\n      tag_858\n        /* \"#utility.yul\":18175:18178   */\n      0x80\n        /* \"#utility.yul\":18164:18173   */\n      dup15\n        /* \"#utility.yul\":18160:18179   */\n      add\n        /* \"#utility.yul\":18131:18180   */\n      tag_730\n      jump\t// in\n    tag_858:\n        /* \"#utility.yul\":18121:18180   */\n      swap8\n      pop\n        /* \"#utility.yul\":18199:18247   */\n      tag_859\n        /* \"#utility.yul\":18242:18245   */\n      0xa0\n        /* \"#utility.yul\":18231:18240   */\n      dup15\n        /* \"#utility.yul\":18227:18246   */\n      add\n        /* \"#utility.yul\":18199:18247   */\n      tag_731\n      jump\t// in\n    tag_859:\n        /* \"#utility.yul\":18189:18247   */\n      swap7\n      pop\n        /* \"#utility.yul\":18266:18314   */\n      tag_860\n        /* \"#utility.yul\":18309:18312   */\n      0xc0\n        /* \"#utility.yul\":18298:18307   */\n      dup15\n        /* \"#utility.yul\":18294:18313   */\n      add\n        /* \"#utility.yul\":18266:18314   */\n      tag_731\n      jump\t// in\n    tag_860:\n        /* \"#utility.yul\":18256:18314   */\n      swap6\n      pop\n        /* \"#utility.yul\":18333:18383   */\n      tag_861\n        /* \"#utility.yul\":18378:18381   */\n      0xe0\n        /* \"#utility.yul\":18367:18376   */\n      dup15\n        /* \"#utility.yul\":18363:18382   */\n      add\n        /* \"#utility.yul\":18333:18383   */\n      tag_732\n      jump\t// in\n    tag_861:\n        /* \"#utility.yul\":18323:18383   */\n      swap5\n      pop\n        /* \"#utility.yul\":18423:18426   */\n      0x0100\n        /* \"#utility.yul\":18412:18421   */\n      dup14\n        /* \"#utility.yul\":18408:18427   */\n      add\n        /* \"#utility.yul\":18402:18428   */\n      mload\n        /* \"#utility.yul\":18392:18428   */\n      swap4\n      pop\n        /* \"#utility.yul\":18468:18471   */\n      0x0120\n        /* \"#utility.yul\":18457:18466   */\n      dup14\n        /* \"#utility.yul\":18453:18472   */\n      add\n        /* \"#utility.yul\":18447:18473   */\n      mload\n        /* \"#utility.yul\":18437:18473   */\n      swap3\n      pop\n        /* \"#utility.yul\":18493:18543   */\n      tag_862\n        /* \"#utility.yul\":18538:18541   */\n      0x0140\n        /* \"#utility.yul\":18527:18536   */\n      dup15\n        /* \"#utility.yul\":18523:18542   */\n      add\n        /* \"#utility.yul\":18493:18543   */\n      tag_732\n      jump\t// in\n    tag_862:\n        /* \"#utility.yul\":18482:18543   */\n      swap2\n      pop\n        /* \"#utility.yul\":18563:18613   */\n      tag_863\n        /* \"#utility.yul\":18608:18611   */\n      0x0160\n        /* \"#utility.yul\":18597:18606   */\n      dup15\n        /* \"#utility.yul\":18593:18612   */\n      add\n        /* \"#utility.yul\":18563:18613   */\n      tag_732\n      jump\t// in\n    tag_863:\n        /* \"#utility.yul\":18552:18613   */\n      swap1\n      pop\n        /* \"#utility.yul\":17433:18619   */\n      swap3\n      swap6\n      swap9\n      swap12\n      pop\n      swap3\n      swap6\n      swap9\n      swap12\n      pop\n      swap3\n      swap6\n      swap9\n      swap12\n      jump\t// out\n        /* \"#utility.yul\":19277:19528   */\n    tag_460:\n        /* \"#utility.yul\":19347:19353   */\n      0x00\n        /* \"#utility.yul\":19400:19402   */\n      0x20\n        /* \"#utility.yul\":19388:19397   */\n      dup3\n        /* \"#utility.yul\":19379:19386   */\n      dup5\n        /* \"#utility.yul\":19375:19398   */\n      sub\n        /* \"#utility.yul\":19371:19403   */\n      slt\n        /* \"#utility.yul\":19368:19420   */\n      iszero\n      tag_867\n      jumpi\n        /* \"#utility.yul\":19416:19417   */\n      0x00\n        /* \"#utility.yul\":19413:19414   */\n      dup1\n        /* \"#utility.yul\":19406:19418   */\n      revert\n        /* \"#utility.yul\":19368:19420   */\n    tag_867:\n        /* \"#utility.yul\":19448:19457   */\n      dup2\n        /* \"#utility.yul\":19442:19458   */\n      mload\n        /* \"#utility.yul\":19467:19498   */\n      tag_699\n        /* \"#utility.yul\":19492:19497   */\n      dup2\n        /* \"#utility.yul\":19467:19498   */\n      tag_726\n      jump\t// in\n        /* \"#utility.yul\":22541:22951   */\n    tag_665:\n        /* \"#utility.yul\":22743:22745   */\n      0x20\n        /* \"#utility.yul\":22725:22746   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":22782:22784   */\n      0x2e\n        /* \"#utility.yul\":22762:22780   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":22755:22785   */\n      mstore\n        /* \"#utility.yul\":22821:22855   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":22816:22818   */\n      0x40\n        /* \"#utility.yul\":22801:22819   */\n      dup3\n      add\n        /* \"#utility.yul\":22794:22856   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":22887:22889   */\n      0x60\n        /* \"#utility.yul\":22872:22890   */\n      dup3\n      add\n        /* \"#utility.yul\":22865:22909   */\n      mstore\n        /* \"#utility.yul\":22941:22944   */\n      0x80\n        /* \"#utility.yul\":22926:22945   */\n      add\n      swap1\n        /* \"#utility.yul\":22541:22951   */\n      jump\t// out\n        /* \"#utility.yul\":22956:23363   */\n    tag_672:\n        /* \"#utility.yul\":23158:23160   */\n      0x20\n        /* \"#utility.yul\":23140:23161   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":23197:23199   */\n      0x2b\n        /* \"#utility.yul\":23177:23195   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":23170:23200   */\n      mstore\n        /* \"#utility.yul\":23236:23270   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":23231:23233   */\n      0x40\n        /* \"#utility.yul\":23216:23234   */\n      dup3\n      add\n        /* \"#utility.yul\":23209:23271   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":23302:23304   */\n      0x60\n        /* \"#utility.yul\":23287:23305   */\n      dup3\n      add\n        /* \"#utility.yul\":23280:23321   */\n      mstore\n        /* \"#utility.yul\":23353:23356   */\n      0x80\n        /* \"#utility.yul\":23338:23357   */\n      add\n      swap1\n        /* \"#utility.yul\":22956:23363   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cf18c2c42341a3019dee66749b9858bbe1dd1cdd44978a1c860723097bcb042864736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506136ca806100206000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c8063a54c83f611610125578063ccd34cd5116100ad578063e72728661161007c578063e7272866146105c6578063e76ba191146105d9578063e7c928b1146105ec578063f2fde38b146105ff578063f8ce1f311461061257600080fd5b8063ccd34cd514610533578063cf5badc614610542578063d6d6817714610555578063e179b5c3146105be57600080fd5b8063b0203a80116100f4578063b0203a801461049c578063b187bd26146104a4578063ba41795f146104c1578063c3d2c3c1146104d4578063c4b91c4d146104f757600080fd5b8063a54c83f61461041d578063a638f2e214610430578063ac4afa3814610443578063ad5c46481461048957600080fd5b8063750142e6116101a8578063911ef50811610177578063911ef5081461031657806394f649dd1461031f5780639aaab9541461033f578063a2234080146103df578063a32a66a7146103f257600080fd5b8063750142e6146102e157806382a14459146102e957806388f67d77146102f25780638da5cb5b1461030557600080fd5b806324a723d4116101ef57806324a723d4146102a35780632c86714c146102b657806333cfcd3b146102be578063715018a6146102d157806373f64499146102d957600080fd5b8063081e3eda146102215780630c75699714610238578063110d458e1461024d5780631ee7f3c414610278575b600080fd5b60a1545b6040519081526020015b60405180910390f35b61024b610246366004612fda565b610625565b005b609954610260906001600160a01b031681565b6040516001600160a01b03909116815260200161022f565b610225610286366004613021565b6000918252609c6020908152604080842092845291905290205490565b6102256102b1366004613058565b610703565b61024b6108cd565b61024b6102cc366004613092565b610a41565b61024b610ff5565b61024b61102b565b6102256110ac565b61022560a65481565b61024b6103003660046130cb565b61112f565b6065546001600160a01b0316610260565b61022560a55481565b61033261032d36600461312d565b6113c7565b60405161022f919061314a565b61039b61034d3660046131e2565b60a06020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154908060070154908060080154905089565b60408051998a5260208a0198909852968801959095526060870193909352608086019190915260a085015260c084015260e08301526101008201526101200161022f565b61024b6103ed36600461312d565b6115a0565b610225610400366004613021565b609c60209081526000928352604080842090915290825290205481565b61024b61042b366004613021565b6115ec565b61022561043e3660046131fb565b6117c0565b6104566104513660046131e2565b611f84565b604080516001600160a01b039687168152959094166020860152928401919091526060830152608082015260a00161022f565b609a54610260906001600160a01b031681565b610225611fd1565b60a4546104b19060ff1681565b604051901515815260200161022f565b6102256104cf366004613227565b612043565b6104b16104e236600461312d565b609d6020526000908152604090205460ff1681565b61051e6105053660046131e2565b60a2602052600090815260409020805460019091015482565b6040805192835260208301919091520161022f565b610225670de0b6b3a764000081565b6104b16105503660046131e2565b6120ea565b61039b610563366004613058565b609e602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154908060030154908060040154908060050154908060060154908060070154908060080154905089565b61024b612122565b61024b6105d436600461325e565b6121a4565b6102256105e7366004613058565b61226b565b61024b6105fa3660046131e2565b61229c565b61024b61060d36600461312d565b61253a565b61024b610620366004613021565b6125d5565b6065546001600160a01b031633146106585760405162461bcd60e51b815260040161064f90613304565b60405180910390fd5b60a1548290811061067b5760405162461bcd60e51b815260040161064f90613339565b60005b82518110156106fd5782818151811061069957610699613370565b602002602001015160200151609c600086815260200190815260200160002060008584815181106106cc576106cc613370565b60200260200101516000015181526020019081526020016000208190555080806106f59061339c565b91505061067e565b50505050565b6001600160a01b0382166000908152609e602090815260408083208484528252808320815161012081018352815481526001820154818501526002820154928101929092526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e0830181905260089091015461010083015280845260a2909252906000816000036107f4576001601e6018603c8060a26000888152602001908152602001600020600101546107c591906133b5565b6107cf91906133b5565b6107d991906133b5565b6107e391906133b5565b6107ed91906133b5565b9050610848565b81601e6018603c8060a260008881526020019081526020016000206001015461081d91906133b5565b61082791906133b5565b61083191906133b5565b61083b91906133b5565b61084591906133b5565b90505b6000818460a001514261085b91906133d7565b61086591906133ee565b905060008160a2600086815260200190815260200160002060000154670de0b6b3a7640000876020015161089991906133ee565b6108a391906133b5565b6108ad91906133ee565b90506108c1670de0b6b3a7640000826133b5565b98975050505050505050565b6065546001600160a01b031633146108f75760405162461bcd60e51b815260040161064f90613304565b6002600154036109195760405162461bcd60e51b815260040161064f9061340d565b6002600155609a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610967573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098b9190613444565b609a546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd906109c09030903390869060040161345d565b6020604051808303816000875af11580156109df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a039190613481565b5060405181815233907f34042597700906fd41b7ead5497c3bf88ef36150597ddd9193327a09f0604f66906020015b60405180910390a25060018055565b600260015403610a635760405162461bcd60e51b815260040161064f9061340d565b600260015560a45460ff1615610aae5760405162461bcd60e51b815260206004820152601060248201526f636f6e7472616374207061757365642160801b604482015260640161064f565b60a15483908110610ad15760405162461bcd60e51b815260040161064f90613339565b336000908152609e602090815260408083208684528252808320815161012081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e0830152600801546101008201529083610b5e5781608001514211610b61565b60015b90506000826020015111610bb75760405162461bcd60e51b815260206004820152601860248201527f436c61696d203a204e6f7468696e6720746f20636c61696d0000000000000000604482015260640161064f565b80610c1f5760405162461bcd60e51b815260206004820152603260248201527f436c61696d203a2063616e6e6f74207769746864726177206265666f72652076604482015271657374696e6720706572696f6420656e647360701b606482015260840161064f565b6000610c2c3387876127b5565b90506000818460400151610c40919061349e565b90506000846020015190508160a18660c0015181548110610c6357610c63613370565b90600052602060002090600502016003015411610ce05760405162461bcd60e51b815260206004820152603560248201527f5374616b696e673a20496e73756666696369656e742072657761726420616c6c60448201527437bbb0b731b290333937b6903a34329020b236b4b760591b606482015260840161064f565b600060a18660c0015181548110610cf957610cf9613370565b600091825260209091206005909102016001015460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169150819063a9059cbb906044016020604051808303816000875af1158015610d5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d829190613481565b50600060a18760c0015181548110610d9c57610d9c613370565b60009182526020909120600590910201546101008801516040516323b872dd60e01b81526001600160a01b03909216925082916323b872dd91610de5913091339160040161345d565b600060405180830381600087803b158015610dff57600080fd5b505af1158015610e13573d6000803e3d6000fd5b5050505088158015610e3a575060e0870151600090815260a2602052604090206001015415155b15610e4957610e49338b61297d565b8360a18860c0015181548110610e6157610e61613370565b90600052602060002090600502016003016000828254610e8191906133d7565b925050819055508360a18860c0015181548110610ea057610ea0613370565b90600052602060002090600502016004016000828254610ec0919061349e565b92505081905550866020015160a18860c0015181548110610ee357610ee3613370565b90600052602060002090600502016002016000828254610f0391906133d7565b909155505060e0870151600090815260a2602052604081208054859290610f2b9084906133d7565b9091555050336000908152609e602090815260408083208d84529091528120600281018290556001015560a45460ff1615610f865760a554336000908152609e602090815260408083208e8452909152902060050155610fa8565b336000908152609e602090815260408083208d84529091529020426005909101555b604080518581524260208201528c9133917f812be816db82c66cd18ca8457005cd84689642d8ac4d38599cc6af444a2dc72a910160405180910390a3505060018055505050505050505050565b6065546001600160a01b0316331461101f5760405162461bcd60e51b815260040161064f90613304565b6110296000612bea565b565b6065546001600160a01b031633146110555760405162461bcd60e51b815260040161064f90613304565b60a45460ff16156110995760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e4814185d5cd95960921b604482015260640161064f565b60a4805460ff191660011790554260a555565b60008060015b609754811161112957600081815260a060205260409020600101541561111757600081815260a060205260409020600201546110ee908361349e565b600082815260a0602052604081205491935061110a91816127b5565b611114908361349e565b91505b806111218161339c565b9150506110b2565b50919050565b6065546001600160a01b031633146111595760405162461bcd60e51b815260040161064f90613304565b6001600160a01b0383166000908152609d6020526040902054839060ff16156111c45760405162461bcd60e51b815260206004820152601e60248201527f416464203a20746f6b656e20706f6f6c20616c72656164792065786974730000604482015260640161064f565b6001600160a01b0384166000908152609d60205260408120805460ff1916600117905560a1546111f65760a154611205565b60a154611205906001906133d7565b905060005b83518110156112895783818151811061122557611225613370565b602002602001015160200151609c6000848152602001908152602001600020600086848151811061125857611258613370565b60200260200101516000015181526020019081526020016000208190555080806112819061339c565b91505061120a565b5050609b80546001600160a01b039586166001600160a01b031991821681179092556040805160a081018252928352948616602083019081526000958301868152606084018781526080850188815260a180546001810182559952945160059098027faadc37b8ba5645e62f4546802db221593a94729ccbfc5a97d01365a88f64987881018054998b169986169990991790985591517faadc37b8ba5645e62f4546802db221593a94729ccbfc5a97d01365a88f6498798801805491909916931692909217909655517faadc37b8ba5645e62f4546802db221593a94729ccbfc5a97d01365a88f64987a85015593517faadc37b8ba5645e62f4546802db221593a94729ccbfc5a97d01365a88f64987b840155505090517faadc37b8ba5645e62f4546802db221593a94729ccbfc5a97d01365a88f64987c90910155565b6001600160a01b0381166000908152609f60205260408120546060919067ffffffffffffffff8111156113fc576113fc612eb7565b60405190808252806020026020018201604052801561147c57816020015b6114696040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020019060019003908161141a5790505b50905060005b6001600160a01b0384166000908152609f6020526040902054811015611599576001600160a01b0384166000908152609e60209081526040808320609f90925282208054839190859081106114d9576114d9613370565b906000526020600020015481526020019081526020016000206040518061012001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815250509050600081602001511115611586578083838151811061157a5761157a613370565b60200260200101819052505b50806115918161339c565b915050611482565b5092915050565b6065546001600160a01b031633146115ca5760405162461bcd60e51b815260040161064f90613304565b609980546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b031633146116165760405162461bcd60e51b815260040161064f90613304565b60a154829081106116395760405162461bcd60e51b815260040161064f90613339565b600060a1848154811061164e5761164e613370565b906000526020600020906005020160010160009054906101000a90046001600160a01b031690508260a1858154811061168957611689613370565b906000526020600020906005020160030154101561170f5760405162461bcd60e51b815260206004820152603f60248201527f5374616b696e673a20616d6f756e74204d757374206265206c6573732074686160448201527f6e206f7220657175616c20746f20617661696c61626c65207265776172647300606482015260840161064f565b60405163a9059cbb60e01b8152336004820152602481018490526001600160a01b0382169063a9059cbb906044016020604051808303816000875af115801561175c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117809190613481565b508260a1858154811061179557611795613370565b906000526020600020906005020160030160008282546117b591906133d7565b909155505050505050565b60006002600154036117e45760405162461bcd60e51b815260040161064f9061340d565b600260015560a45460ff161561182f5760405162461bcd60e51b815260206004820152601060248201526f636f6e7472616374207061757365642160801b604482015260640161064f565b60a154849081106118525760405162461bcd60e51b815260040161064f90613339565b60a45460ff16156118995760405162461bcd60e51b815260206004820152601160248201527014dd185ada5b99c81a5cc81c185d5cd959607a1b604482015260640161064f565b6000858152609c602090815260408083208684529091529020546000036118fb5760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081cdd185ada5b99c81c195c9a5bd960521b604482015260640161064f565b609b5460405163133f757160e31b815260048101869052600091829182916001600160a01b0316906399fbab889060240161018060405180830381865afa15801561194a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196e91906134fd565b505050509750505050945094505050826001600160a01b0316609a60009054906101000a90046001600160a01b03166001600160a01b03161480156119ea5750816001600160a01b031660a189815481106119cb576119cb613370565b60009182526020909120600160059092020101546001600160a01b0316145b611a285760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081314081c1bdbdb608a1b604482015260640161064f565b600060a18981548110611a3d57611a3d613370565b600091825260209091206005909102015460405163e985e9c560e01b81523360048201523060248201526001600160a01b039091169150819063e985e9c590604401602060405180830381865afa158015611a9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac09190613481565b80611b3c575060405163020604bf60e21b81526004810189905230906001600160a01b0383169063081812fc90602401602060405180830381865afa158015611b0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3191906135de565b6001600160a01b0316145b611b805760405162461bcd60e51b815260206004820152601560248201527414dd185ada5b99ce88139bdd08185c1c1c9bdd9959605a1b604482015260640161064f565b6040516323b872dd60e01b81526001600160a01b038216906323b872dd90611bb090339030908d9060040161345d565b600060405180830381600087803b158015611bca57600080fd5b505af1158015611bde573d6000803e3d6000fd5b50505050611bf0609780546001019055565b6000611bfb60975490565b90506000611c0b338360016127b5565b336000908152609e60209081526040808320868452909152812084815560010180549293506001600160801b03871692909190611c4990849061349e565b9091555050336000908152609e6020908152604080832085845290915281206002018054839290611c7b90849061349e565b9091555050336000908152609e602090815260408083208584528083528184204260058201558f8552609c84528285208e86528452918420549386905290915260030155611ccc8962278d006133ee565b611cd6904261349e565b609e6000336001600160a01b03166001600160a01b031681526020019081526020016000206000848152602001908152602001600020600401819055508a609e6000336001600160a01b03166001600160a01b0316815260200190815260200160002060008481526020019081526020016000206006018190555088609e6000336001600160a01b03166001600160a01b0316815260200190815260200160002060008481526020019081526020016000206007018190555089609e6000336001600160a01b03166001600160a01b03168152602001908152602001600020600084815260200190815260200160002060080181905550609f6000336001600160a01b03166001600160a01b03168152602001908152602001600020829080600181540180825580915050600190039060005260206000200160009091909190915055609e6000336001600160a01b03166001600160a01b03168152602001908152602001600020600083815260200190815260200160002060a06000848152602001908152602001600020600082015481600001556001820154816001015560028201548160020155600382015481600301556004820154816004015560058201548160050155600682015481600601556007820154816007015560088201548160080155905050836001600160801b031660a18c81548110611edc57611edc613370565b90600052602060002090600502016002016000828254611efc919061349e565b9091555050600089815260a26020526040812080546001600160801b0387169290611f2890849061349e565b9091555050604080516001600160801b03861681524260208201528c9133917fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed910160405180910390a350600180559998505050505050505050565b60a18181548110611f9457600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b03938416955091909216929085565b609a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561201a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061203e9190613444565b905090565b6001600160a01b0383166000908152609e602090815260408083208584528252808320815161012081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e0830152600801546101008201526120d28585856127b5565b81604001516120e1919061349e565b95945050505050565b60006120f46110ac565b60a1838154811061210757612107613370565b90600052602060002090600502016003015410159050919050565b6065546001600160a01b0316331461214c5760405162461bcd60e51b815260040161064f90613304565b60a45460ff166121945760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e4813dc195c985d1a5bdb985b606a1b604482015260640161064f565b60a4805460ff191690554260a555565b60006121b06001612c3c565b905080156121c8576000805461ff0019166101001790555b6121d0612cc9565b6121d8612cf0565b6121e0612d1f565b81516121f39060a3906020850190612e57565b50609a80546001600160a01b0319166001600160a01b0385161790556301e1338060985561222082612d4e565b8015612266576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b609f602052816000526040600020818154811061228757600080fd5b90600052602060002001600091509150505481565b6099546001600160a01b0316336001600160a01b0316146122f05760405162461bcd60e51b815260206004820152600e60248201526d696e76616c69642061636365737360901b604482015260640161064f565b6002600154036123125760405162461bcd60e51b815260040161064f9061340d565b6002600155806123645760405162461bcd60e51b815260206004820152601f60248201527f436f6c6c656374204665653a20416d6f756e74206d757374206265203e203000604482015260640161064f565b609a546001600160a01b03166323b872dd3330846040518463ffffffff1660e01b81526004016123969392919061345d565b6020604051808303816000875af11580156123b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123d99190613481565b5060005b60a3548110156125075760a381815481106123fa576123fa613370565b906000526020600020015460001461246d57670de0b6b3a76400008260a654670de0b6b3a764000060a3858154811061243557612435613370565b906000526020600020015461244a91906133ee565b61245491906133b5565b61245e91906133ee565b61246891906133b5565b6124ad565b670de0b6b3a76400008260a654670de0b6b3a7640000600161248f91906133ee565b61249991906133b5565b6124a391906133ee565b6124ad91906133b5565b60a2600060a384815481106124c4576124c4613370565b9060005260206000200154815260200190815260200160002060010160008282546124ef919061349e565b909155508190506124ff8161339c565b9150506123dd565b5060405181815233907f386d896e9bd972181cfb744681a2de8d2daab22884986fdc60c3947be36ca01b90602001610a32565b6065546001600160a01b031633146125645760405162461bcd60e51b815260040161064f90613304565b6001600160a01b0381166125c95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161064f565b6125d281612bea565b50565b6065546001600160a01b031633146125ff5760405162461bcd60e51b815260040161064f90613304565b60a154829081106126225760405162461bcd60e51b815260040161064f90613339565b600060a1848154811061263757612637613370565b6000918252602090912060059091020160010154604051636eb1769f60e11b81523360048201523060248201526001600160a01b0390911691508390829063dd62ed3e90604401602060405180830381865afa15801561269b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126bf9190613444565b101561270d5760405162461bcd60e51b815260206004820152601c60248201527f5374616b696e673a204d75737420616c6c6f77205370656e64696e6700000000604482015260640161064f565b6040516323b872dd60e01b81526001600160a01b038216906323b872dd9061273d9033903090889060040161345d565b6020604051808303816000875af115801561275c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127809190613481565b508260a1858154811061279557612795613370565b906000526020600020906005020160030160008282546117b5919061349e565b6000806001600160a01b0385166127d957600084815260a0602052604090206127fd565b6001600160a01b0385166000908152609e6020908152604080832087845290915290205b6040805161012081018252825481526001830154602082018190526002840154928201929092526003830154606082015260048301546080820152600583015460a0820152600683015460c0820152600783015460e0820152600890920154610100830152909150156129705760a45460ff16156128ed5760a5548160a00151111561288c5760009150612975565b6128e66128b16103e86128ab6064609854612dcf90919063ffffffff16565b90612dcf565b6128e06128cd8460a0015160a554612de290919063ffffffff16565b606085015160208601516128ab91612dcf565b90612dee565b9150612975565b6000836128fe57816060015161291e565b60c08201516000908152609c602090815260408083208380529091529020545b905061296861293f6103e86128ab6064609854612dcf90919063ffffffff16565b6128e06129598560a0015142612de290919063ffffffff16565b60208601516128ab9086612dcf565b925050612975565b600091505b509392505050565b6001600160a01b0382166000908152609e602090815260408083208484528252918290208251610120810184528154815260018201549281018390526002820154938101939093526003810154606084015260048101546080840152600581015460a0840152600681015460c0840152600781015460e084015260080154610100830152612a455760405162461bcd60e51b81526020600482015260156024820152742430b93b32b9ba1d102737ba10309039ba30b5b2b960591b604482015260640161064f565b6000612a518484610703565b9050801580612a74575060e0820151600090815260a26020526040902060010154155b15612a7f5750505050565b609a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015612ac8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612aec9190613444565b905080600003612afd575050505050565b60e0830151600090815260a2602052604081206001018054849290612b239084906133d7565b9091555050609a546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90612b5c9030908990879060040161345d565b6020604051808303816000875af1158015612b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b9f9190613481565b50846001600160a01b03167fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba83604051612bdb91815260200190565b60405180910390a25050505050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff1615612c83578160ff166001148015612c5f5750303b155b612c7b5760405162461bcd60e51b815260040161064f906135fb565b506000919050565b60005460ff808416911610612caa5760405162461bcd60e51b815260040161064f906135fb565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166110295760405162461bcd60e51b815260040161064f90613649565b600054610100900460ff16612d175760405162461bcd60e51b815260040161064f90613649565b611029612dfa565b600054610100900460ff16612d465760405162461bcd60e51b815260040161064f90613649565b611029612e2a565b600060a68190555b8151811015612dcb57818181518110612d7157612d71613370565b6020026020010151600014612d9f57818181518110612d9257612d92613370565b6020026020010151612da2565b60015b60a66000828254612db3919061349e565b90915550819050612dc38161339c565b915050612d56565b5050565b6000612ddb82846133ee565b9392505050565b6000612ddb82846133d7565b6000612ddb82846133b5565b600054610100900460ff16612e215760405162461bcd60e51b815260040161064f90613649565b61102933612bea565b600054610100900460ff16612e515760405162461bcd60e51b815260040161064f90613649565b60018055565b828054828255906000526020600020908101928215612e92579160200282015b82811115612e92578251825591602001919060010190612e77565b50612e9e929150612ea2565b5090565b5b80821115612e9e5760008155600101612ea3565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715612ef057612ef0612eb7565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715612f1f57612f1f612eb7565b604052919050565b600067ffffffffffffffff821115612f4157612f41612eb7565b5060051b60200190565b600082601f830112612f5c57600080fd5b81356020612f71612f6c83612f27565b612ef6565b82815260069290921b84018101918181019086841115612f9057600080fd5b8286015b84811015612fcf5760408189031215612fad5760008081fd5b612fb5612ecd565b813581528482013585820152835291830191604001612f94565b509695505050505050565b60008060408385031215612fed57600080fd5b82359150602083013567ffffffffffffffff81111561300b57600080fd5b61301785828601612f4b565b9150509250929050565b6000806040838503121561303457600080fd5b50508035926020909101359150565b6001600160a01b03811681146125d257600080fd5b6000806040838503121561306b57600080fd5b823561307681613043565b946020939093013593505050565b80151581146125d257600080fd5b6000806000606084860312156130a757600080fd5b833592506020840135915060408401356130c081613084565b809150509250925092565b6000806000606084860312156130e057600080fd5b83356130eb81613043565b925060208401356130fb81613043565b9150604084013567ffffffffffffffff81111561311757600080fd5b61312386828701612f4b565b9150509250925092565b60006020828403121561313f57600080fd5b8135612ddb81613043565b602080825282518282018190526000919060409081850190868401855b828110156131d55781518051855286810151878601528581015186860152606080820151908601526080808201519086015260a0808201519086015260c0808201519086015260e0808201519086015261010090810151908501526101209093019290850190600101613167565b5091979650505050505050565b6000602082840312156131f457600080fd5b5035919050565b60008060006060848603121561321057600080fd5b505081359360208301359350604090920135919050565b60008060006060848603121561323c57600080fd5b833561324781613043565b92506020840135915060408401356130c081613084565b6000806040838503121561327157600080fd5b823561327c81613043565b915060208381013567ffffffffffffffff81111561329957600080fd5b8401601f810186136132aa57600080fd5b80356132b8612f6c82612f27565b81815260059190911b820183019083810190888311156132d757600080fd5b928401925b828410156132f5578335825292840192908401906132dc565b80955050505050509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601c908201527f5374616b696e673a20506f6f6c20646f65736e27742065786973747300000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016133ae576133ae613386565b5060010190565b6000826133d257634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156133e9576133e9613386565b500390565b600081600019048311821515161561340857613408613386565b500290565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60006020828403121561345657600080fd5b5051919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561349357600080fd5b8151612ddb81613084565b600082198211156134b1576134b1613386565b500190565b8051612cc481613043565b805162ffffff81168114612cc457600080fd5b8051600281900b8114612cc457600080fd5b80516001600160801b0381168114612cc457600080fd5b6000806000806000806000806000806000806101808d8f03121561352057600080fd5b8c516bffffffffffffffffffffffff8116811461353c57600080fd5b9b5061354a60208e016134b6565b9a5061355860408e016134b6565b995061356660608e016134b6565b985061357460808e016134c1565b975061358260a08e016134d4565b965061359060c08e016134d4565b955061359e60e08e016134e6565b94506101008d015193506101208d015192506135bd6101408e016134e6565b91506135cc6101608e016134e6565b90509295989b509295989b509295989b565b6000602082840312156135f057600080fd5b8151612ddb81613043565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220cf18c2c42341a3019dee66749b9858bbe1dd1cdd44978a1c860723097bcb042864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36CA DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA54C83F6 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xCCD34CD5 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE7272866 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE7272866 EQ PUSH2 0x5C6 JUMPI DUP1 PUSH4 0xE76BA191 EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0xE7C928B1 EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5FF JUMPI DUP1 PUSH4 0xF8CE1F31 EQ PUSH2 0x612 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCCD34CD5 EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0xCF5BADC6 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xD6D68177 EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0xE179B5C3 EQ PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB0203A80 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0xB0203A80 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0xB187BD26 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0xBA41795F EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0xC3D2C3C1 EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0xC4B91C4D EQ PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA54C83F6 EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0xA638F2E2 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0xAC4AFA38 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x750142E6 GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x911EF508 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x911EF508 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x94F649DD EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x9AAAB954 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0xA2234080 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xA32A66A7 EQ PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x750142E6 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x82A14459 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x88F67D77 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24A723D4 GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x24A723D4 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x2C86714C EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x33CFCD3B EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x73F64499 EQ PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xC756997 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x110D458E EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x1EE7F3C4 EQ PUSH2 0x278 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FDA JUMP JUMPDEST PUSH2 0x625 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x99 SLOAD PUSH2 0x260 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22F JUMP JUMPDEST PUSH2 0x225 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x3021 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x9C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3058 JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x24B PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x3092 JUMP JUMPDEST PUSH2 0xA41 JUMP JUMPDEST PUSH2 0x24B PUSH2 0xFF5 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x102B JUMP JUMPDEST PUSH2 0x225 PUSH2 0x10AC JUMP JUMPDEST PUSH2 0x225 PUSH1 0xA6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x300 CALLDATASIZE PUSH1 0x4 PUSH2 0x30CB JUMP JUMPDEST PUSH2 0x112F JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x260 JUMP JUMPDEST PUSH2 0x225 PUSH1 0xA5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x332 PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0x312D JUMP JUMPDEST PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x314A JUMP JUMPDEST PUSH2 0x39B PUSH2 0x34D CALLDATASIZE PUSH1 0x4 PUSH2 0x31E2 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE SWAP7 DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD PUSH2 0x22F JUMP JUMPDEST PUSH2 0x24B PUSH2 0x3ED CALLDATASIZE PUSH1 0x4 PUSH2 0x312D JUMP JUMPDEST PUSH2 0x15A0 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x400 CALLDATASIZE PUSH1 0x4 PUSH2 0x3021 JUMP JUMPDEST PUSH1 0x9C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x42B CALLDATASIZE PUSH1 0x4 PUSH2 0x3021 JUMP JUMPDEST PUSH2 0x15EC JUMP JUMPDEST PUSH2 0x225 PUSH2 0x43E CALLDATASIZE PUSH1 0x4 PUSH2 0x31FB JUMP JUMPDEST PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x456 PUSH2 0x451 CALLDATASIZE PUSH1 0x4 PUSH2 0x31E2 JUMP JUMPDEST PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x22F JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH2 0x260 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x1FD1 JUMP JUMPDEST PUSH1 0xA4 SLOAD PUSH2 0x4B1 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22F JUMP JUMPDEST PUSH2 0x225 PUSH2 0x4CF CALLDATASIZE PUSH1 0x4 PUSH2 0x3227 JUMP JUMPDEST PUSH2 0x2043 JUMP JUMPDEST PUSH2 0x4B1 PUSH2 0x4E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x312D JUMP JUMPDEST PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x51E PUSH2 0x505 CALLDATASIZE PUSH1 0x4 PUSH2 0x31E2 JUMP JUMPDEST PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x22F JUMP JUMPDEST PUSH2 0x225 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x4B1 PUSH2 0x550 CALLDATASIZE PUSH1 0x4 PUSH2 0x31E2 JUMP JUMPDEST PUSH2 0x20EA JUMP JUMPDEST PUSH2 0x39B PUSH2 0x563 CALLDATASIZE PUSH1 0x4 PUSH2 0x3058 JUMP JUMPDEST PUSH1 0x9E PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 POP DUP10 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x2122 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x5D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x325E JUMP JUMPDEST PUSH2 0x21A4 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x5E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3058 JUMP JUMPDEST PUSH2 0x226B JUMP JUMPDEST PUSH2 0x24B PUSH2 0x5FA CALLDATASIZE PUSH1 0x4 PUSH2 0x31E2 JUMP JUMPDEST PUSH2 0x229C JUMP JUMPDEST PUSH2 0x24B PUSH2 0x60D CALLDATASIZE PUSH1 0x4 PUSH2 0x312D JUMP JUMPDEST PUSH2 0x253A JUMP JUMPDEST PUSH2 0x24B PUSH2 0x620 CALLDATASIZE PUSH1 0x4 PUSH2 0x3021 JUMP JUMPDEST PUSH2 0x25D5 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3339 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x6FD JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x699 JUMPI PUSH2 0x699 PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x9C PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x6CC JUMPI PUSH2 0x6CC PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x6F5 SWAP1 PUSH2 0x339C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x67E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH2 0x120 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 DUP6 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x8 SWAP1 SWAP2 ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE DUP1 DUP5 MSTORE PUSH1 0xA2 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0x7F4 JUMPI PUSH1 0x1 PUSH1 0x1E PUSH1 0x18 PUSH1 0x3C DUP1 PUSH1 0xA2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x7C5 SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x7D9 SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x7E3 SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST SWAP1 POP PUSH2 0x848 JUMP JUMPDEST DUP2 PUSH1 0x1E PUSH1 0x18 PUSH1 0x3C DUP1 PUSH1 0xA2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x81D SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x827 SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x831 SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x83B SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 DUP5 PUSH1 0xA0 ADD MLOAD TIMESTAMP PUSH2 0x85B SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH2 0x865 SWAP2 SWAP1 PUSH2 0x33EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xA2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH8 0xDE0B6B3A7640000 DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x899 SWAP2 SWAP1 PUSH2 0x33EE JUMP JUMPDEST PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x8AD SWAP2 SWAP1 PUSH2 0x33EE JUMP JUMPDEST SWAP1 POP PUSH2 0x8C1 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x33B5 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x919 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x340D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x9A SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x967 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98B SWAP2 SWAP1 PUSH2 0x3444 JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x9C0 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x345D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA03 SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x34042597700906FD41B7EAD5497C3BF88EF36150597DDD9193327A09F0604F66 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xA63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x340D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0xA4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x636F6E74726163742070617573656421 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0xA1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xAD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3339 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH2 0x120 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x8 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE SWAP1 DUP4 PUSH2 0xB5E JUMPI DUP2 PUSH1 0x80 ADD MLOAD TIMESTAMP GT PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD MLOAD GT PUSH2 0xBB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D203A204E6F7468696E6720746F20636C61696D0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST DUP1 PUSH2 0xC1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D203A2063616E6E6F74207769746864726177206265666F72652076 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x657374696E6720706572696F6420656E6473 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2C CALLER DUP8 DUP8 PUSH2 0x27B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0xC40 SWAP2 SWAP1 PUSH2 0x349E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP2 PUSH1 0xA1 DUP7 PUSH1 0xC0 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0xC63 JUMPI PUSH2 0xC63 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD GT PUSH2 0xCE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A20496E73756666696369656E742072657761726420616C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x37BBB0B731B290333937B6903A34329020B236B4B7 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA1 DUP7 PUSH1 0xC0 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0xCF9 JUMPI PUSH2 0xCF9 PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP2 SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD82 SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0xA1 DUP8 PUSH1 0xC0 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0xD9C JUMPI PUSH2 0xD9C PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SLOAD PUSH2 0x100 DUP9 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 POP DUP3 SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0xDE5 SWAP2 ADDRESS SWAP2 CALLER SWAP2 PUSH1 0x4 ADD PUSH2 0x345D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP9 ISZERO DUP1 ISZERO PUSH2 0xE3A JUMPI POP PUSH1 0xE0 DUP8 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xE49 JUMPI PUSH2 0xE49 CALLER DUP12 PUSH2 0x297D JUMP JUMPDEST DUP4 PUSH1 0xA1 DUP9 PUSH1 0xC0 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0xE61 JUMPI PUSH2 0xE61 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE81 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0xA1 DUP9 PUSH1 0xC0 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0xEA0 JUMPI PUSH2 0xEA0 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x349E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0xA1 DUP9 PUSH1 0xC0 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0xEE3 JUMPI PUSH2 0xEE3 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF03 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xE0 DUP8 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xF2B SWAP1 DUP5 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP14 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x1 ADD SSTORE PUSH1 0xA4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF86 JUMPI PUSH1 0xA5 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP15 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x5 ADD SSTORE PUSH2 0xFA8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP14 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 TIMESTAMP PUSH1 0x5 SWAP1 SWAP2 ADD SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE DUP13 SWAP2 CALLER SWAP2 PUSH32 0x812BE816DB82C66CD18CA8457005CD84689642D8AC4D38599CC6AF444A2DC72A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x101F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH2 0x1029 PUSH1 0x0 PUSH2 0x2BEA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1055 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH1 0xA4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1099 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x105B1C9958591E4814185D5CD959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0xA4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE TIMESTAMP PUSH1 0xA5 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 JUMPDEST PUSH1 0x97 SLOAD DUP2 GT PUSH2 0x1129 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x1117 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x10EE SWAP1 DUP4 PUSH2 0x349E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP4 POP PUSH2 0x110A SWAP2 DUP2 PUSH2 0x27B5 JUMP JUMPDEST PUSH2 0x1114 SWAP1 DUP4 PUSH2 0x349E JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 PUSH2 0x1121 DUP2 PUSH2 0x339C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10B2 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1159 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x11C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464203A20746F6B656E20706F6F6C20616C72656164792065786974730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xA1 SLOAD PUSH2 0x11F6 JUMPI PUSH1 0xA1 SLOAD PUSH2 0x1205 JUMP JUMPDEST PUSH1 0xA1 SLOAD PUSH2 0x1205 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1289 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1225 JUMPI PUSH2 0x1225 PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x9C PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1258 JUMPI PUSH2 0x1258 PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x1281 SWAP1 PUSH2 0x339C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x120A JUMP JUMPDEST POP POP PUSH1 0x9B DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE SWAP3 DUP4 MSTORE SWAP5 DUP7 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP6 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP8 DUP2 MSTORE PUSH1 0x80 DUP6 ADD DUP9 DUP2 MSTORE PUSH1 0xA1 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP10 MSTORE SWAP5 MLOAD PUSH1 0x5 SWAP1 SWAP9 MUL PUSH32 0xAADC37B8BA5645E62F4546802DB221593A94729CCBFC5A97D01365A88F649878 DUP2 ADD DUP1 SLOAD SWAP10 DUP12 AND SWAP10 DUP7 AND SWAP10 SWAP1 SWAP10 OR SWAP1 SWAP9 SSTORE SWAP2 MLOAD PUSH32 0xAADC37B8BA5645E62F4546802DB221593A94729CCBFC5A97D01365A88F649879 DUP9 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP10 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP7 SSTORE MLOAD PUSH32 0xAADC37B8BA5645E62F4546802DB221593A94729CCBFC5A97D01365A88F64987A DUP6 ADD SSTORE SWAP4 MLOAD PUSH32 0xAADC37B8BA5645E62F4546802DB221593A94729CCBFC5A97D01365A88F64987B DUP5 ADD SSTORE POP POP SWAP1 MLOAD PUSH32 0xAADC37B8BA5645E62F4546802DB221593A94729CCBFC5A97D01365A88F64987C SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9F PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13FC JUMPI PUSH2 0x13FC PUSH2 0x2EB7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x147C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1469 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x141A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x1599 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x9F SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x14D9 JUMPI PUSH2 0x14D9 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD GT ISZERO PUSH2 0x1586 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x157A JUMPI PUSH2 0x157A PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST POP DUP1 PUSH2 0x1591 DUP2 PUSH2 0x339C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1482 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH1 0x99 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1616 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH1 0xA1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x1639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3339 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA1 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x164E JUMPI PUSH2 0x164E PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP3 PUSH1 0xA1 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1689 JUMPI PUSH2 0x1689 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD LT ISZERO PUSH2 0x170F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A20616D6F756E74204D757374206265206C65737320746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206F7220657175616C20746F20617661696C61626C65207265776172647300 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x175C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1780 SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST POP DUP3 PUSH1 0xA1 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1795 JUMPI PUSH2 0x1795 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x17B5 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x17E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x340D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0xA4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x182F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x636F6E74726163742070617573656421 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0xA1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x1852 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3339 JUMP JUMPDEST PUSH1 0xA4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1899 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14DD185ADA5B99C81A5CC81C185D5CD959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x9C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 SUB PUSH2 0x18FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B9D985B1A59081CDD185ADA5B99C81C195C9A5BD9 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x9B SLOAD PUSH1 0x40 MLOAD PUSH4 0x133F7571 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x99FBAB88 SWAP1 PUSH1 0x24 ADD PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x194A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x196E SWAP2 SWAP1 PUSH2 0x34FD JUMP JUMPDEST POP POP POP POP SWAP8 POP POP POP POP SWAP5 POP SWAP5 POP POP POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x9A PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x19EA JUMPI POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA1 DUP10 DUP2 SLOAD DUP2 LT PUSH2 0x19CB JUMPI PUSH2 0x19CB PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1A28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x125B9D985B1A59081314081C1BDBDB PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA1 DUP10 DUP2 SLOAD DUP2 LT PUSH2 0x1A3D JUMPI PUSH2 0x1A3D PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xE985E9C5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP2 SWAP1 PUSH4 0xE985E9C5 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A9C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AC0 SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST DUP1 PUSH2 0x1B3C JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x20604BF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x81812FC SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B0D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B31 SWAP2 SWAP1 PUSH2 0x35DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1B80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14DD185ADA5B99CE88139BDD08185C1C1C9BDD9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x1BB0 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x345D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BDE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1BF0 PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BFB PUSH1 0x97 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C0B CALLER DUP4 PUSH1 0x1 PUSH2 0x27B5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP5 DUP2 SSTORE PUSH1 0x1 ADD DUP1 SLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP8 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1C49 SWAP1 DUP5 SWAP1 PUSH2 0x349E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1C7B SWAP1 DUP5 SWAP1 PUSH2 0x349E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 TIMESTAMP PUSH1 0x5 DUP3 ADD SSTORE DUP16 DUP6 MSTORE PUSH1 0x9C DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP15 DUP7 MSTORE DUP5 MSTORE SWAP2 DUP5 KECCAK256 SLOAD SWAP4 DUP7 SWAP1 MSTORE SWAP1 SWAP2 MSTORE PUSH1 0x3 ADD SSTORE PUSH2 0x1CCC DUP10 PUSH3 0x278D00 PUSH2 0x33EE JUMP JUMPDEST PUSH2 0x1CD6 SWAP1 TIMESTAMP PUSH2 0x349E JUMP JUMPDEST PUSH1 0x9E PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP11 PUSH1 0x9E PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP DUP9 PUSH1 0x9E PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP DUP10 PUSH1 0x9E PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x9F PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x9E PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA0 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD SLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE SWAP1 POP POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0xA1 DUP13 DUP2 SLOAD DUP2 LT PUSH2 0x1EDC JUMPI PUSH2 0x1EDC PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1EFC SWAP2 SWAP1 PUSH2 0x349E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP8 AND SWAP3 SWAP1 PUSH2 0x1F28 SWAP1 DUP5 SWAP1 PUSH2 0x349E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 AND DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE DUP13 SWAP2 CALLER SWAP2 PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 DUP1 SSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1F94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP SWAP2 SWAP1 SWAP3 AND SWAP3 SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x201A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x203E SWAP2 SWAP1 PUSH2 0x3444 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH2 0x120 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x8 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x20D2 DUP6 DUP6 DUP6 PUSH2 0x27B5 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0x20E1 SWAP2 SWAP1 PUSH2 0x349E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F4 PUSH2 0x10AC JUMP JUMPDEST PUSH1 0xA1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2107 JUMPI PUSH2 0x2107 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD LT ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x214C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH1 0xA4 SLOAD PUSH1 0xFF AND PUSH2 0x2194 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E4813DC195C985D1A5BDB985B PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0xA4 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE TIMESTAMP PUSH1 0xA5 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21B0 PUSH1 0x1 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x21C8 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x21D0 PUSH2 0x2CC9 JUMP JUMPDEST PUSH2 0x21D8 PUSH2 0x2CF0 JUMP JUMPDEST PUSH2 0x21E0 PUSH2 0x2D1F JUMP JUMPDEST DUP2 MLOAD PUSH2 0x21F3 SWAP1 PUSH1 0xA3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x2E57 JUMP JUMPDEST POP PUSH1 0x9A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH4 0x1E13380 PUSH1 0x98 SSTORE PUSH2 0x2220 DUP3 PUSH2 0x2D4E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2266 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9F PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x99 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x22F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x696E76616C696420616363657373 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x2312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x340D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE DUP1 PUSH2 0x2364 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6C6C656374204665653A20416D6F756E74206D757374206265203E203000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2396 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x345D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23D9 SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xA3 SLOAD DUP2 LT ISZERO PUSH2 0x2507 JUMPI PUSH1 0xA3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x23FA JUMPI PUSH2 0x23FA PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x0 EQ PUSH2 0x246D JUMPI PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0xA6 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0xA3 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x2435 JUMPI PUSH2 0x2435 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x244A SWAP2 SWAP1 PUSH2 0x33EE JUMP JUMPDEST PUSH2 0x2454 SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x245E SWAP2 SWAP1 PUSH2 0x33EE JUMP JUMPDEST PUSH2 0x2468 SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x24AD JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0xA6 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH2 0x248F SWAP2 SWAP1 PUSH2 0x33EE JUMP JUMPDEST PUSH2 0x2499 SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x24A3 SWAP2 SWAP1 PUSH2 0x33EE JUMP JUMPDEST PUSH2 0x24AD SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH1 0xA2 PUSH1 0x0 PUSH1 0xA3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x24C4 JUMPI PUSH2 0x24C4 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x24EF SWAP2 SWAP1 PUSH2 0x349E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x24FF DUP2 PUSH2 0x339C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x23DD JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x386D896E9BD972181CFB744681A2DE8D2DAAB22884986FDC60C3947BE36CA01B SWAP1 PUSH1 0x20 ADD PUSH2 0xA32 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2564 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x25C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x64F JUMP JUMPDEST PUSH2 0x25D2 DUP2 PUSH2 0x2BEA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x25FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH1 0xA1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x2622 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3339 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA1 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2637 JUMPI PUSH2 0x2637 PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP4 SWAP1 DUP3 SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x269B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26BF SWAP2 SWAP1 PUSH2 0x3444 JUMP JUMPDEST LT ISZERO PUSH2 0x270D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A204D75737420616C6C6F77205370656E64696E6700000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x273D SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x345D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x275C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2780 SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST POP DUP3 PUSH1 0xA1 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x2795 JUMPI PUSH2 0x2795 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x17B5 SWAP2 SWAP1 PUSH2 0x349E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x27D9 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x27FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x2 DUP5 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 SWAP1 SWAP3 ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE SWAP1 SWAP2 POP ISZERO PUSH2 0x2970 JUMPI PUSH1 0xA4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x28ED JUMPI PUSH1 0xA5 SLOAD DUP2 PUSH1 0xA0 ADD MLOAD GT ISZERO PUSH2 0x288C JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x2975 JUMP JUMPDEST PUSH2 0x28E6 PUSH2 0x28B1 PUSH2 0x3E8 PUSH2 0x28AB PUSH1 0x64 PUSH1 0x98 SLOAD PUSH2 0x2DCF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0x28E0 PUSH2 0x28CD DUP5 PUSH1 0xA0 ADD MLOAD PUSH1 0xA5 SLOAD PUSH2 0x2DE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x20 DUP7 ADD MLOAD PUSH2 0x28AB SWAP2 PUSH2 0x2DCF JUMP JUMPDEST SWAP1 PUSH2 0x2DEE JUMP JUMPDEST SWAP2 POP PUSH2 0x2975 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x28FE JUMPI DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0x291E JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP1 POP PUSH2 0x2968 PUSH2 0x293F PUSH2 0x3E8 PUSH2 0x28AB PUSH1 0x64 PUSH1 0x98 SLOAD PUSH2 0x2DCF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28E0 PUSH2 0x2959 DUP6 PUSH1 0xA0 ADD MLOAD TIMESTAMP PUSH2 0x2DE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD PUSH2 0x28AB SWAP1 DUP7 PUSH2 0x2DCF JUMP JUMPDEST SWAP3 POP POP PUSH2 0x2975 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH2 0x120 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x8 ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x2A45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2430B93B32B9BA1D102737BA10309039BA30B5B2B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A51 DUP5 DUP5 PUSH2 0x703 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0x2A74 JUMPI POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x2A7F JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AEC SWAP2 SWAP1 PUSH2 0x3444 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x2AFD JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2B23 SWAP1 DUP5 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9A SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x2B5C SWAP1 ADDRESS SWAP1 DUP10 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x345D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B9F SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA DUP4 PUSH1 0x40 MLOAD PUSH2 0x2BDB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2C83 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x2C5F JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x2C7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x35FB JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF DUP1 DUP5 AND SWAP2 AND LT PUSH2 0x2CAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x35FB JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1029 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3649 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2D17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3649 JUMP JUMPDEST PUSH2 0x1029 PUSH2 0x2DFA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2D46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3649 JUMP JUMPDEST PUSH2 0x1029 PUSH2 0x2E2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA6 DUP2 SWAP1 SSTORE JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2DCB JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2D71 JUMPI PUSH2 0x2D71 PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 EQ PUSH2 0x2D9F JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2D92 JUMPI PUSH2 0x2D92 PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2DA2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xA6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2DB3 SWAP2 SWAP1 PUSH2 0x349E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x2DC3 DUP2 PUSH2 0x339C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2D56 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DDB DUP3 DUP5 PUSH2 0x33EE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DDB DUP3 DUP5 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DDB DUP3 DUP5 PUSH2 0x33B5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2E21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3649 JUMP JUMPDEST PUSH2 0x1029 CALLER PUSH2 0x2BEA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2E51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3649 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2E92 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2E92 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2E77 JUMP JUMPDEST POP PUSH2 0x2E9E SWAP3 SWAP2 POP PUSH2 0x2EA2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2E9E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2EA3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2EF0 JUMPI PUSH2 0x2EF0 PUSH2 0x2EB7 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2F1F JUMPI PUSH2 0x2F1F PUSH2 0x2EB7 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2F41 JUMPI PUSH2 0x2F41 PUSH2 0x2EB7 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2F5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2F71 PUSH2 0x2F6C DUP4 PUSH2 0x2F27 JUMP JUMPDEST PUSH2 0x2EF6 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x6 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2F90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2FCF JUMPI PUSH1 0x40 DUP2 DUP10 SUB SLT ISZERO PUSH2 0x2FAD JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2FB5 PUSH2 0x2ECD JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE DUP5 DUP3 ADD CALLDATALOAD DUP6 DUP3 ADD MSTORE DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 PUSH1 0x40 ADD PUSH2 0x2F94 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x300B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3017 DUP6 DUP3 DUP7 ADD PUSH2 0x2F4B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3034 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x25D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x306B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3076 DUP2 PUSH2 0x3043 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x25D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x30A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x30C0 DUP2 PUSH2 0x3084 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x30E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x30EB DUP2 PUSH2 0x3043 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x30FB DUP2 PUSH2 0x3043 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3123 DUP7 DUP3 DUP8 ADD PUSH2 0x2F4B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x313F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2DDB DUP2 PUSH2 0x3043 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x31D5 JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xE0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH2 0x100 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x120 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3167 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x323C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3247 DUP2 PUSH2 0x3043 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x30C0 DUP2 PUSH2 0x3084 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x327C DUP2 PUSH2 0x3043 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x32AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x32B8 PUSH2 0x2F6C DUP3 PUSH2 0x2F27 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x32D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x32F5 JUMPI DUP4 CALLDATALOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x32DC JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A20506F6F6C20646F65736E27742065786973747300000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x33AE JUMPI PUSH2 0x33AE PUSH2 0x3386 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x33D2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x33E9 JUMPI PUSH2 0x33E9 PUSH2 0x3386 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3408 JUMPI PUSH2 0x3408 PUSH2 0x3386 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2DDB DUP2 PUSH2 0x3084 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x34B1 JUMPI PUSH2 0x34B1 PUSH2 0x3386 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x2CC4 DUP2 PUSH2 0x3043 JUMP JUMPDEST DUP1 MLOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2CC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x2CC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2CC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP14 DUP16 SUB SLT ISZERO PUSH2 0x3520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP13 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x353C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP12 POP PUSH2 0x354A PUSH1 0x20 DUP15 ADD PUSH2 0x34B6 JUMP JUMPDEST SWAP11 POP PUSH2 0x3558 PUSH1 0x40 DUP15 ADD PUSH2 0x34B6 JUMP JUMPDEST SWAP10 POP PUSH2 0x3566 PUSH1 0x60 DUP15 ADD PUSH2 0x34B6 JUMP JUMPDEST SWAP9 POP PUSH2 0x3574 PUSH1 0x80 DUP15 ADD PUSH2 0x34C1 JUMP JUMPDEST SWAP8 POP PUSH2 0x3582 PUSH1 0xA0 DUP15 ADD PUSH2 0x34D4 JUMP JUMPDEST SWAP7 POP PUSH2 0x3590 PUSH1 0xC0 DUP15 ADD PUSH2 0x34D4 JUMP JUMPDEST SWAP6 POP PUSH2 0x359E PUSH1 0xE0 DUP15 ADD PUSH2 0x34E6 JUMP JUMPDEST SWAP5 POP PUSH2 0x100 DUP14 ADD MLOAD SWAP4 POP PUSH2 0x120 DUP14 ADD MLOAD SWAP3 POP PUSH2 0x35BD PUSH2 0x140 DUP15 ADD PUSH2 0x34E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x35CC PUSH2 0x160 DUP15 ADD PUSH2 0x34E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2DDB DUP2 PUSH2 0x3043 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF XOR 0xC2 0xC4 0x23 COINBASE LOG3 ADD SWAP14 0xEE PUSH7 0x749B9858BBE1DD SHR 0xDD DIFFICULTY SWAP8 DUP11 SHR DUP7 SMOD 0x23 MULMOD PUSH28 0xCB042864736F6C634300080D00330000000000000000000000000000 ",
							"sourceMap": "1433:21175:11:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@AdminWETHWithdraw_2187": {
									"entryPoint": 2253,
									"id": 2187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PRECISION_FACTOR_1631": {
									"entryPoint": null,
									"id": 1631,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PauseStaking_1865": {
									"entryPoint": 4139,
									"id": 1865,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ResumeStaking_1886": {
									"entryPoint": 8482,
									"id": 1886,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WETH_1489": {
									"entryPoint": null,
									"id": 1489,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Context_init_997": {
									"entryPoint": 11465,
									"id": 997,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_26": {
									"entryPoint": 11504,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_37": {
									"entryPoint": 11770,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_288": {
									"entryPoint": 11551,
									"id": 288,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_unchained_298": {
									"entryPoint": 11818,
									"id": 298,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_calculateReward_2307": {
									"entryPoint": 10165,
									"id": 2307,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSender_1012": {
									"entryPoint": null,
									"id": 1012,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setInitializedVersion_264": {
									"entryPoint": 11324,
									"id": 264,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_transferOwnership_117": {
									"entryPoint": 11242,
									"id": 117,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addPool_1843": {
									"entryPoint": 4399,
									"id": 1843,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addRewardToPool_2061": {
									"entryPoint": 9685,
									"id": 2061,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@calculateReward_2340": {
									"entryPoint": 8259,
									"id": 2340,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@current_1045": {
									"entryPoint": null,
									"id": 1045,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@depositDetails_1544": {
									"entryPoint": null,
									"id": 1544,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposits_1534": {
									"entryPoint": null,
									"id": 1534,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_1334": {
									"entryPoint": 11758,
									"id": 1334,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAPR_1954": {
									"entryPoint": null,
									"id": 1954,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAccMarketFee_3213": {
									"entryPoint": 8145,
									"id": 3213,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getDeposits_3123": {
									"entryPoint": 5063,
									"id": 3123,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getHavestAmount_3056": {
									"entryPoint": 1795,
									"id": 3056,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@harvestFee_2942": {
									"entryPoint": 10621,
									"id": 2942,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@haveSuffecientFundsForReward_3198": {
									"entryPoint": 8426,
									"id": 3198,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_1059": {
									"entryPoint": null,
									"id": 1059,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@initialize_1697": {
									"entryPoint": 8612,
									"id": 1697,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isContract_760": {
									"entryPoint": null,
									"id": 760,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isPaused_1622": {
									"entryPoint": null,
									"id": 1622,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_1319": {
									"entryPoint": 11727,
									"id": 1319,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@onlyaddress_1486": {
									"entryPoint": null,
									"id": 1486,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_46": {
									"entryPoint": null,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pausedTimestamp_1624": {
									"entryPoint": null,
									"id": 1624,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@periodPoolMap_1617": {
									"entryPoint": null,
									"id": 1617,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@periodSum_1626": {
									"entryPoint": null,
									"id": 1626,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolLength_1896": {
									"entryPoint": null,
									"id": 1896,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pools_1612": {
									"entryPoint": 8068,
									"id": 1612,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@receiveWETHFee_2150": {
									"entryPoint": 8860,
									"id": 2150,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_74": {
									"entryPoint": 4085,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setOnlyAddress_1723": {
									"entryPoint": 5536,
									"id": 1723,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPeriodSum_1761": {
									"entryPoint": 11598,
									"id": 1761,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_2613": {
									"entryPoint": 6080,
									"id": 2613,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@sub_1304": {
									"entryPoint": 11746,
									"id": 1304,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenPools_1527": {
									"entryPoint": null,
									"id": 1527,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalReward_3181": {
									"entryPoint": 4268,
									"id": 3181,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_97": {
									"entryPoint": 9530,
									"id": 97,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateAPR_1938": {
									"entryPoint": 1573,
									"id": 1938,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@userDepositMap_1539": {
									"entryPoint": 8811,
									"id": 1539,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vestingAPRPerPool_1522": {
									"entryPoint": null,
									"id": 1522,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawRewardfromPool_2003": {
									"entryPoint": 5612,
									"id": 2003,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdraw_2855": {
									"entryPoint": 2625,
									"id": 2855,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 13494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_struct_interestRate_dyn": {
									"entryPoint": 12107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_int24_fromMemory": {
									"entryPoint": 13524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 12589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 13790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_struct$_interestRate_$1516_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 12491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 12894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 12376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_bool": {
									"entryPoint": 12839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 13441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 12770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 13380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_array$_t_struct$_interestRate_$1516_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 12250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 12321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bool": {
									"entryPoint": 12434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 12795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint96t_addresst_addresst_addresst_uint24t_int24t_int24t_uint128t_uint256t_uint256t_uint128t_uint128_fromMemory": {
									"entryPoint": 13565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 12
								},
								"abi_decode_uint128_fromMemory": {
									"entryPoint": 13542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_uint24_fromMemory": {
									"entryPoint": 13505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 13405,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_stakeDetails_$1508_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_stakeDetails_$1508_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 12618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20Upgradeable_$402__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_21c64ae674a86657d133324f4475f79fddb85db7025311858b33abfc26afefaa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2ee82b03ef71c9514254a3658f8815add1189e02180fc7b188e29598e5a701dd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2f2fe437d167b994a3abb080f6cddd75667a646218c9befe653262b5c44e61c8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_34245cc1a8117d130cf3ae06ea398c818e4a18479d917b66513cbc71196f16bc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4c12b94a872bad1d0966bdf5772fd92a84446ef64b59b5e232f639364f8b6ba5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_56c3d5165608fc2642a22e9651431c90fe76728e2826126a77738e167836cd16__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5bd56e6779313a5dd5c6d209b8de3e49e4c3e202e0cdfc1c45f06c2cc7fb7047__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b20d466f3caec787a1cd4be5e23618374546144e86f8c5900c6c061b951dab4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_acc14ac9e54dd8ba4aba0610e1196cf9050e74db5cdb44e739d0cc1c3d3f31c9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_adff2dfe1a548b9f723224428b84bd389ae3a606e0a5e95db043f0710044fb5b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bb26fa751fcadf1ba3ad81429e3b128f919183d07cbf6db0563974ab6716c11b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c27b890af59f93debcee566c8681d43e5506a0fccccb345a516229d92ea41ce6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ca61385b350ba6b0dce22cedc4db9b186f64d71a596b857ee879c0daa3279d6a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e52420b01fcae5b40118d9fd948318b1ceff2980505399729d6fb4b8879ef679__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e725af0f6d63e1fd582e534b48be44b218b395440fae54ec76376eeaaee842d6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebb0e901d5610eb967346b969e4e2aa58f1094b10dc4811881265481ed3bc297__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fd66e8ddbaa4c878ce87f099a1bd3ba5695fd2278729d66c27db0fcb6841600d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint128_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 10,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 12022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory_3321": {
									"entryPoint": 11981,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_array_struct_interestRate_dyn": {
									"entryPoint": 12071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 13470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 13237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 13294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 13271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 13212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 13190,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 13168,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 11959,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 12355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 12420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:23365:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:12",
														"type": ""
													}
												],
												"src": "14:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "228:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "245:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "252:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "257:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "248:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "248:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "238:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "238:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "285:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "288:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "278:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "278:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "278:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "302:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "302:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "196:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "374:211:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "384:21:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "400:4:12",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "394:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "394:11:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "384:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "414:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "436:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:4:12",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "432:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "432:17:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "418:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "524:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "526:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "526:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "526:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "467:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "479:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "464:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "464:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "503:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "515:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "500:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "500:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "461:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "461:62:12"
															},
															"nodeType": "YulIf",
															"src": "458:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "562:4:12",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "568:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "555:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:24:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "555:24:12"
														}
													]
												},
												"name": "allocate_memory_3321",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "363:6:12",
														"type": ""
													}
												],
												"src": "328:257:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "635:230:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "645:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "661:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "655:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "645:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "673:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "695:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "711:4:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "717:2:12",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "726:2:12",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "722:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "722:7:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "703:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "703:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "691:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "691:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "677:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "806:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "808:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "808:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "808:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "749:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "761:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "746:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "746:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "785:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "797:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "782:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "782:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "743:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:62:12"
															},
															"nodeType": "YulIf",
															"src": "740:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "844:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "848:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "837:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "837:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "837:22:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "615:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "624:6:12",
														"type": ""
													}
												],
												"src": "590:275:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "951:114:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "995:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "997:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "997:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "997:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "967:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "975:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "964:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "964:30:12"
															},
															"nodeType": "YulIf",
															"src": "961:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1026:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1042:1:12",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1045:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1038:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1038:14:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1054:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1034:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1034:25:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1026:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_struct_interestRate_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "931:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "942:4:12",
														"type": ""
													}
												],
												"src": "870:195:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1146:883:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1195:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1204:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1207:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1197:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1197:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1197:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1174:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1182:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1170:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1170:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1189:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1166:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1166:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:35:12"
															},
															"nodeType": "YulIf",
															"src": "1156:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1220:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1243:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1230:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1230:20:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1224:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1259:14:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1269:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1263:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1282:83:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1361:2:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_struct_interestRate_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "1309:51:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1309:55:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1293:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:72:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1286:3:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1374:16:12",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "1387:3:12"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "1378:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1406:3:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1411:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1399:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1399:15:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1423:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1434:3:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1439:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1430:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1430:12:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1423:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1451:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1473:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1485:1:12",
																						"type": "",
																						"value": "6"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1488:2:12"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1481:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1481:10:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1469:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1469:23:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1494:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1465:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1465:32:12"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "1455:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1525:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1534:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1527:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1527:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1527:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1512:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1520:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1509:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1509:15:12"
															},
															"nodeType": "YulIf",
															"src": "1506:35:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1550:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1565:6:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1573:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1561:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1561:15:12"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1554:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1643:357:12",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1697:74:12",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "1715:11:12",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1725:1:12",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_3",
																							"nodeType": "YulTypedName",
																							"src": "1719:2:12",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "1750:2:12"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "1754:2:12"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "1743:6:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1743:14:12"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1743:14:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "1668:3:12"
																						},
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1673:3:12"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "1664:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1664:13:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1679:4:12",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "slt",
																				"nodeType": "YulIdentifier",
																				"src": "1660:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1660:24:12"
																		},
																		"nodeType": "YulIf",
																		"src": "1657:114:12"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1784:35:12",
																		"value": {
																			"arguments": [],
																			"functionName": {
																				"name": "allocate_memory_3321",
																				"nodeType": "YulIdentifier",
																				"src": "1797:20:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1797:22:12"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "1788:5:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "1839:5:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1859:3:12"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "1846:12:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:17:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1832:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1832:32:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1832:32:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "1888:5:12"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "1895:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1884:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1884:14:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1917:3:12"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "1922:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1913:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1913:12:12"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "1900:12:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1900:26:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1877:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1877:50:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1877:50:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1947:3:12"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "1952:5:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1940:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1940:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1940:18:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1971:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1982:3:12"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1987:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1978:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1978:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1971:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1596:3:12"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1601:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1593:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:15:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1609:25:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1611:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1627:4:12",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1618:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1618:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1611:3:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1589:3:12",
																"statements": []
															},
															"src": "1585:415:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2009:14:12",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "2018:5:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2009:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_struct_interestRate_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1120:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1128:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1136:5:12",
														"type": ""
													}
												],
												"src": "1070:959:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2176:316:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2222:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2231:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2234:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2224:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2224:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2224:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2197:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2206:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2193:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2193:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2218:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2189:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2189:32:12"
															},
															"nodeType": "YulIf",
															"src": "2186:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2247:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2270:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2257:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2257:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2247:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2289:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2320:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2331:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2316:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2316:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2303:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2303:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2293:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2378:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2387:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2390:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2380:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2380:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2380:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2350:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2358:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2347:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2347:30:12"
															},
															"nodeType": "YulIf",
															"src": "2344:50:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2403:83:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2458:9:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2469:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2454:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2454:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2478:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_struct_interestRate_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2413:40:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2413:73:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2403:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_array$_t_struct$_interestRate_$1516_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2134:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2145:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2157:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2165:6:12",
														"type": ""
													}
												],
												"src": "2034:458:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2598:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2608:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2620:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2631:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2616:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2608:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2650:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2665:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2681:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2686:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2677:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2677:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2690:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2673:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2673:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2661:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2661:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2643:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2643:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2643:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2567:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2578:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2589:4:12",
														"type": ""
													}
												],
												"src": "2497:203:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2792:161:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2838:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2847:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2850:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2840:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2840:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2840:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2813:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2822:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2809:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2809:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2834:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2805:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2805:32:12"
															},
															"nodeType": "YulIf",
															"src": "2802:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2863:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2886:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2873:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2873:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2863:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2905:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2932:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2943:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2928:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2928:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2915:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2915:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2905:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2750:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2761:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2773:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2781:6:12",
														"type": ""
													}
												],
												"src": "2705:248:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3003:86:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3067:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3076:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3079:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3069:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3069:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3069:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3026:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3037:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3052:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3057:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "3048:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3048:11:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3061:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "3044:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3044:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3033:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3033:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3023:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3023:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3016:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3016:50:12"
															},
															"nodeType": "YulIf",
															"src": "3013:70:12"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2992:5:12",
														"type": ""
													}
												],
												"src": "2958:131:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3181:228:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3227:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3236:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3239:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3229:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3229:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3229:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3202:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3211:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3198:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3198:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3223:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3194:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3194:32:12"
															},
															"nodeType": "YulIf",
															"src": "3191:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3252:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3278:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3265:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3265:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3256:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3322:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3297:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3297:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3297:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3337:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3347:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3337:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3361:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3388:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3399:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3384:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3384:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3371:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3371:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3361:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3139:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3150:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3162:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3170:6:12",
														"type": ""
													}
												],
												"src": "3094:315:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3456:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3510:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3519:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3522:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3512:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3512:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3512:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3479:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3500:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3493:6:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3493:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3486:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3486:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3476:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3476:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3469:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3469:40:12"
															},
															"nodeType": "YulIf",
															"src": "3466:60:12"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3445:5:12",
														"type": ""
													}
												],
												"src": "3414:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3638:276:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3684:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3693:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3696:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3686:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3686:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3686:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3659:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3668:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3655:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3655:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3680:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3651:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3651:32:12"
															},
															"nodeType": "YulIf",
															"src": "3648:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3709:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3732:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3719:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3719:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3709:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3751:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3778:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3789:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3774:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3774:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3761:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3761:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3751:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3802:45:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3832:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3843:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3828:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3828:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3815:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3815:32:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3806:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3878:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3856:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3856:28:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3856:28:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3893:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3903:5:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3893:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3588:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3599:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3611:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3619:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3627:6:12",
														"type": ""
													}
												],
												"src": "3537:377:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4078:507:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4124:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4133:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4136:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4126:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4126:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4126:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4099:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4108:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4095:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4095:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4120:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4091:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4091:32:12"
															},
															"nodeType": "YulIf",
															"src": "4088:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4149:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4175:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4162:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4162:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4153:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4219:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4194:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4194:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4194:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4234:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4244:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4234:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4258:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4290:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4301:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4273:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4273:32:12"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "4262:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "4339:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4314:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4314:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4314:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4356:17:12",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "4366:7:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4356:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4382:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4413:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4424:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4409:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4409:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4396:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4386:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4471:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4480:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4483:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4473:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4473:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4473:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4443:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4451:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4440:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4440:30:12"
															},
															"nodeType": "YulIf",
															"src": "4437:50:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4496:83:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4551:9:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4562:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4547:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4547:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4571:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_struct_interestRate_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4506:40:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:73:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4496:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_struct$_interestRate_$1516_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4028:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4039:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4051:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4059:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4067:6:12",
														"type": ""
													}
												],
												"src": "3919:666:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4660:177:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4706:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4715:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4718:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4708:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4708:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4708:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4681:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4690:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4677:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4677:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4702:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4673:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4673:32:12"
															},
															"nodeType": "YulIf",
															"src": "4670:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4731:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4757:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4744:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4744:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4735:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4801:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4776:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4776:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4816:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4826:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4816:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4626:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4637:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4649:6:12",
														"type": ""
													}
												],
												"src": "4590:247:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5053:1126:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5063:12:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5073:2:12",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5067:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5084:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5102:9:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5113:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5098:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5098:18:12"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "5088:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5132:9:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5143:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5125:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5125:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5125:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5155:17:12",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "5166:6:12"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "5159:3:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5181:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5201:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5195:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5195:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5185:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "5224:6:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5232:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5217:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5217:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5217:22:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5248:12:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5258:2:12",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5252:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5269:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5280:9:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5291:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5276:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5276:18:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5269:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5303:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5321:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5329:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5317:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5317:15:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "5307:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5341:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5350:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5345:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5409:744:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5423:23:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5439:6:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "5433:5:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5433:13:12"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "5427:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5466:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "5477:2:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5471:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5471:9:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5459:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5459:22:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5459:22:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "5505:3:12"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "5510:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5501:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5501:12:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "5525:2:12"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "5529:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5521:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5521:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5515:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5515:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5494:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5494:40:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5494:40:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "5558:3:12"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "5563:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5554:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5554:12:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "5578:2:12"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "5582:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5574:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5574:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5568:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5568:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5547:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5547:40:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5547:40:12"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5600:14:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5610:4:12",
																			"type": "",
																			"value": "0x60"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nodeType": "YulTypedName",
																				"src": "5604:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "5638:3:12"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "5643:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5634:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5634:12:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "5658:2:12"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "5662:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5654:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5654:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5648:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5648:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5627:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5627:40:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5627:40:12"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5680:14:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5690:4:12",
																			"type": "",
																			"value": "0x80"
																		},
																		"variables": [
																			{
																				"name": "_5",
																				"nodeType": "YulTypedName",
																				"src": "5684:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "5718:3:12"
																						},
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "5723:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5714:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5714:12:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "5738:2:12"
																								},
																								{
																									"name": "_5",
																									"nodeType": "YulIdentifier",
																									"src": "5742:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5734:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5734:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5728:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5728:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5707:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5707:40:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5707:40:12"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5760:14:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5770:4:12",
																			"type": "",
																			"value": "0xa0"
																		},
																		"variables": [
																			{
																				"name": "_6",
																				"nodeType": "YulTypedName",
																				"src": "5764:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "5798:3:12"
																						},
																						{
																							"name": "_6",
																							"nodeType": "YulIdentifier",
																							"src": "5803:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5794:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5794:12:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "5818:2:12"
																								},
																								{
																									"name": "_6",
																									"nodeType": "YulIdentifier",
																									"src": "5822:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5814:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5814:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5808:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5808:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5787:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5787:40:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5787:40:12"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5840:14:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5850:4:12",
																			"type": "",
																			"value": "0xc0"
																		},
																		"variables": [
																			{
																				"name": "_7",
																				"nodeType": "YulTypedName",
																				"src": "5844:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "5878:3:12"
																						},
																						{
																							"name": "_7",
																							"nodeType": "YulIdentifier",
																							"src": "5883:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5874:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5874:12:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "5898:2:12"
																								},
																								{
																									"name": "_7",
																									"nodeType": "YulIdentifier",
																									"src": "5902:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5894:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5894:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5888:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5888:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5867:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5867:40:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5867:40:12"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5920:14:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5930:4:12",
																			"type": "",
																			"value": "0xe0"
																		},
																		"variables": [
																			{
																				"name": "_8",
																				"nodeType": "YulTypedName",
																				"src": "5924:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "5958:3:12"
																						},
																						{
																							"name": "_8",
																							"nodeType": "YulIdentifier",
																							"src": "5963:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5954:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5954:12:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "5978:2:12"
																								},
																								{
																									"name": "_8",
																									"nodeType": "YulIdentifier",
																									"src": "5982:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5974:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5974:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5968:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5968:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5947:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5947:40:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5947:40:12"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6000:16:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6010:6:12",
																			"type": "",
																			"value": "0x0100"
																		},
																		"variables": [
																			{
																				"name": "_9",
																				"nodeType": "YulTypedName",
																				"src": "6004:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "6040:3:12"
																						},
																						{
																							"name": "_9",
																							"nodeType": "YulIdentifier",
																							"src": "6045:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6036:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6036:12:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "6060:2:12"
																								},
																								{
																									"name": "_9",
																									"nodeType": "YulIdentifier",
																									"src": "6064:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6056:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6056:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6050:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6050:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6029:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6029:40:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6029:40:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6082:23:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6093:3:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6098:6:12",
																					"type": "",
																					"value": "0x0120"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6089:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6089:16:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6082:3:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6118:25:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6132:6:12"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6140:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6128:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6128:15:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6118:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5371:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5374:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5368:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5368:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5382:18:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5384:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5393:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5396:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5389:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5389:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5384:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5364:3:12",
																"statements": []
															},
															"src": "5360:793:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6162:11:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6170:3:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6162:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_stakeDetails_$1508_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_stakeDetails_$1508_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5022:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5033:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5044:4:12",
														"type": ""
													}
												],
												"src": "4842:1337:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6254:110:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6300:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6309:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6312:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6302:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6302:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6302:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6275:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6284:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6271:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6271:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6296:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6267:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6267:32:12"
															},
															"nodeType": "YulIf",
															"src": "6264:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6325:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6348:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6335:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6335:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6325:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6220:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6231:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6243:6:12",
														"type": ""
													}
												],
												"src": "6184:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6694:426:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6704:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6716:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6727:3:12",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6712:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6712:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6704:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6747:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6758:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6740:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6740:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6740:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6785:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6796:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6781:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6781:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6801:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6774:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6774:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6774:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6828:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6839:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6824:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6824:18:12"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6844:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6817:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6817:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6817:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6871:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6882:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6867:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6867:18:12"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6887:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6860:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6860:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6860:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6914:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6925:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6910:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6910:19:12"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "6931:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6903:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6903:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6903:35:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6958:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6969:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6954:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6954:19:12"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "6975:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6947:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6947:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6947:35:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7002:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7013:3:12",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6998:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6998:19:12"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "7019:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6991:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6991:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6991:35:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7046:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7057:3:12",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7042:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7042:19:12"
																	},
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "7063:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7035:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7035:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7035:35:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7090:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7101:3:12",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7086:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7086:19:12"
																	},
																	{
																		"name": "value8",
																		"nodeType": "YulIdentifier",
																		"src": "7107:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7079:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7079:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7079:35:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6599:9:12",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "6610:6:12",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "6618:6:12",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "6626:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "6634:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6642:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6650:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6658:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6666:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6674:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6685:4:12",
														"type": ""
													}
												],
												"src": "6369:751:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7229:212:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7275:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7284:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7287:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7277:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7277:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7277:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7250:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7259:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7246:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7246:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7271:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7242:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7242:32:12"
															},
															"nodeType": "YulIf",
															"src": "7239:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7300:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7323:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7310:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7310:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7300:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7342:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7369:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7380:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7365:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7365:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7352:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7352:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7393:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7420:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7431:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7416:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7416:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7403:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7403:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7393:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7179:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7190:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7202:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7210:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7218:6:12",
														"type": ""
													}
												],
												"src": "7125:316:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7659:306:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7669:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7681:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7692:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7677:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7677:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7669:4:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7705:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7723:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7728:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7719:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7719:11:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7732:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7715:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7715:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7709:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7750:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7765:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7773:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7761:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7761:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7743:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7743:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7743:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7797:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7808:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7793:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7793:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7817:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7825:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7813:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7813:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7786:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7786:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7786:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7849:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7860:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7845:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7845:18:12"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7865:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7838:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7838:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7838:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7892:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7903:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7888:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7888:18:12"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7908:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7881:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7881:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7881:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7935:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7946:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7931:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7931:19:12"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7952:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7924:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7924:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7924:35:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7596:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7607:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7615:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7623:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7631:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7639:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7650:4:12",
														"type": ""
													}
												],
												"src": "7446:519:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8096:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8106:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8118:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8129:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8114:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8114:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8106:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8148:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8163:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8179:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8184:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8175:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8175:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8188:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8171:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8159:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8159:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8141:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8141:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8141:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20Upgradeable_$402__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8065:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8076:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8087:4:12",
														"type": ""
													}
												],
												"src": "7970:228:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8298:92:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8308:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8320:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8331:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8316:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8316:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8308:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8350:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "8375:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8368:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8368:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8361:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8361:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8343:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8343:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8343:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8267:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8278:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8289:4:12",
														"type": ""
													}
												],
												"src": "8203:187:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8496:349:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8542:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8551:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8554:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8544:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8544:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8544:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8517:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8526:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8513:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8513:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8538:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8509:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8509:32:12"
															},
															"nodeType": "YulIf",
															"src": "8506:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8567:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8593:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8580:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8580:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "8571:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8637:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "8612:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8612:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8612:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8652:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8662:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8652:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8676:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8703:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8714:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8699:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8699:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8686:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8686:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8676:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8727:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8759:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8770:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8755:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8755:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8742:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8742:32:12"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "8731:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "8805:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "8783:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8783:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8783:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8822:17:12",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "8832:7:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8822:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8446:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8457:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8469:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8477:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8485:6:12",
														"type": ""
													}
												],
												"src": "8395:450:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8979:119:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8989:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9001:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9012:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8997:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8997:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8989:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9031:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9042:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9024:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9024:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9024:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9069:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9080:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9065:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9065:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9085:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9058:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9058:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9058:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8940:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8951:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8959:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8970:4:12",
														"type": ""
													}
												],
												"src": "8850:248:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9215:926:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9261:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9270:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9273:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9263:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9263:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9263:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9236:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9245:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9232:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9232:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9257:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9228:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9228:32:12"
															},
															"nodeType": "YulIf",
															"src": "9225:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9286:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9312:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9299:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9299:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9290:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9356:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "9331:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9331:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9331:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9371:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9381:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9371:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9395:12:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9405:2:12",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9399:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9416:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9447:9:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9458:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9443:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9443:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9430:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9430:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "9420:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9505:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9514:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9517:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9507:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9507:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9507:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9477:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9485:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9474:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9474:30:12"
															},
															"nodeType": "YulIf",
															"src": "9471:50:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9530:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9544:9:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9555:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9540:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9540:22:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "9534:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9610:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9619:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9622:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9612:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9612:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9612:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "9589:2:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9593:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9585:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9585:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9600:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "9581:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9581:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9574:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9574:35:12"
															},
															"nodeType": "YulIf",
															"src": "9571:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9635:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "9658:2:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9645:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9645:16:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "9639:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9670:83:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "9749:2:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_struct_interestRate_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "9697:51:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9697:55:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "9681:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9681:72:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "9674:3:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9762:16:12",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "9775:3:12"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "9766:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "9794:3:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "9799:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9787:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9787:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9787:15:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9811:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "9822:3:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9827:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9818:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9818:12:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "9811:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9839:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "9861:2:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9869:1:12",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "9872:2:12"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "9865:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9865:10:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9857:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9857:19:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9878:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9853:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9853:28:12"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "9843:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9913:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9922:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9925:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9915:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9915:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9915:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9896:6:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9904:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9893:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9893:19:12"
															},
															"nodeType": "YulIf",
															"src": "9890:39:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9938:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "9953:2:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9957:2:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9949:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9949:11:12"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "9942:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10025:86:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "10046:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "10064:3:12"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "10051:12:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10051:17:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10039:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10039:30:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10039:30:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10082:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "10093:3:12"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "10098:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10089:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10089:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "10082:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "9980:3:12"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9985:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9977:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9977:15:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9993:23:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9995:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "10006:3:12"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "10011:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10002:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10002:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "9995:3:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9973:3:12",
																"statements": []
															},
															"src": "9969:142:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10120:15:12",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "10130:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "10120:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9173:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9184:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9196:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9204:6:12",
														"type": ""
													}
												],
												"src": "9103:1038:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10320:182:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10337:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10348:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10330:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10330:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10330:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10371:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10382:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10367:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10367:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10387:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10360:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10360:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10360:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10410:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10421:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10406:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10406:18:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10426:34:12",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10399:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10399:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10399:62:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10470:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10482:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10493:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10478:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10478:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10470:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10297:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10311:4:12",
														"type": ""
													}
												],
												"src": "10146:356:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10681:178:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10698:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10709:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10691:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10691:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10691:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10732:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10743:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10728:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10728:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10748:2:12",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10721:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10721:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10721:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10771:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10782:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10767:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10767:18:12"
																	},
																	{
																		"hexValue": "5374616b696e673a20506f6f6c20646f65736e277420657869737473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10787:30:12",
																		"type": "",
																		"value": "Staking: Pool doesn't exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10760:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10760:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10760:58:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10827:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10839:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10850:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10835:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10835:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10827:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_34245cc1a8117d130cf3ae06ea398c818e4a18479d917b66513cbc71196f16bc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10658:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10672:4:12",
														"type": ""
													}
												],
												"src": "10507:352:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10896:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10913:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10920:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10925:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10916:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10916:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10906:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10906:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10906:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10953:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10956:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10946:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10946:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10946:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10977:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10980:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10970:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10970:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10970:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10864:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11028:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11045:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11052:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11057:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11048:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11048:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11038:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11038:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11038:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11085:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11088:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11078:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11078:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11078:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11109:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11112:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11102:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11102:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11102:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10996:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11175:88:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11206:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11208:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11208:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11208:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11191:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11202:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11198:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11198:6:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11188:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11188:17:12"
															},
															"nodeType": "YulIf",
															"src": "11185:43:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11237:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11248:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11255:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11244:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11244:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11237:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11157:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11167:3:12",
														"type": ""
													}
												],
												"src": "11128:135:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11314:171:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11345:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11366:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11373:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11378:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "11369:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11369:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11359:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11359:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11359:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11410:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11413:4:12",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11403:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11403:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11403:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11438:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11441:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11431:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11431:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11431:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11334:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11327:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11327:9:12"
															},
															"nodeType": "YulIf",
															"src": "11324:132:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11465:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11474:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11477:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11470:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11470:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11465:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11299:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11302:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11308:1:12",
														"type": ""
													}
												],
												"src": "11268:217:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11539:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11561:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11563:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11563:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11563:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11555:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11558:1:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11552:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11552:8:12"
															},
															"nodeType": "YulIf",
															"src": "11549:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11592:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11604:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11607:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11600:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11600:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11592:4:12"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11521:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11524:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11530:4:12",
														"type": ""
													}
												],
												"src": "11490:125:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11672:116:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11731:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11733:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11733:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11733:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11703:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11696:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11696:9:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11689:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11689:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11711:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11722:1:12",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "11718:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11718:6:12"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11726:1:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "11714:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11714:14:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11708:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11708:21:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11685:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11685:45:12"
															},
															"nodeType": "YulIf",
															"src": "11682:71:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11762:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11777:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11780:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11773:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11773:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11762:7:12"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11651:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11654:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11660:7:12",
														"type": ""
													}
												],
												"src": "11620:168:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11967:181:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11984:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11995:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11977:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11977:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11977:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12018:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12029:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12014:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12014:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12034:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12007:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12007:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12007:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12057:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12068:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12053:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12053:18:12"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12073:33:12",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12046:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12046:61:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12046:61:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12116:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12128:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12139:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12124:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12124:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12116:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11944:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11958:4:12",
														"type": ""
													}
												],
												"src": "11793:355:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12234:103:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12280:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12289:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12292:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12282:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12282:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12282:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12255:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12264:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12251:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12251:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12276:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12247:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12247:32:12"
															},
															"nodeType": "YulIf",
															"src": "12244:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12305:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12321:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12315:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12315:16:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12305:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12200:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12211:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12223:6:12",
														"type": ""
													}
												],
												"src": "12153:184:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12499:218:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12509:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12521:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12532:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12517:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12517:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12509:4:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12544:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12562:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12567:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12558:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12558:11:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12571:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12554:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12554:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12548:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12589:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12604:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12612:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12600:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12600:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12582:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12582:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12582:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12636:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12647:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12632:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12632:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12656:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12664:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12652:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12652:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12625:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12625:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12625:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12688:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12699:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12684:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12684:18:12"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12704:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12677:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12677:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12677:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12452:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12463:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12471:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12479:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12490:4:12",
														"type": ""
													}
												],
												"src": "12342:375:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12800:167:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12846:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12855:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12858:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12848:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12848:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12848:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12821:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12830:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12817:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12817:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12842:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12813:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12813:32:12"
															},
															"nodeType": "YulIf",
															"src": "12810:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12871:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12890:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12884:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12884:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "12875:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12931:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "12909:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12909:28:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12909:28:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12946:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12956:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12946:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12766:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12777:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12789:6:12",
														"type": ""
													}
												],
												"src": "12722:245:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13146:166:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13163:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13174:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13156:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13156:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13156:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13197:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13208:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13193:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13193:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13213:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13186:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13186:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13186:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13236:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13247:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13232:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13232:18:12"
																	},
																	{
																		"hexValue": "636f6e74726163742070617573656421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13252:18:12",
																		"type": "",
																		"value": "contract paused!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13225:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13225:46:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13225:46:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13280:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13292:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13303:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13288:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13288:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13280:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fd66e8ddbaa4c878ce87f099a1bd3ba5695fd2278729d66c27db0fcb6841600d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13123:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13137:4:12",
														"type": ""
													}
												],
												"src": "12972:340:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13491:174:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13508:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13519:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13501:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13501:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13501:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13542:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13553:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13538:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13538:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13558:2:12",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13531:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13531:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13531:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13581:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13592:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13577:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13577:18:12"
																	},
																	{
																		"hexValue": "436c61696d203a204e6f7468696e6720746f20636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13597:26:12",
																		"type": "",
																		"value": "Claim : Nothing to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13570:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13570:54:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13570:54:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13633:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13645:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13656:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13641:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13641:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13633:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_adff2dfe1a548b9f723224428b84bd389ae3a606e0a5e95db043f0710044fb5b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13468:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13482:4:12",
														"type": ""
													}
												],
												"src": "13317:348:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13844:240:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13861:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13872:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13854:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13854:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13854:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13895:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13906:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13891:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13891:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13911:2:12",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13884:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13884:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13884:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13934:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13945:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13930:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13930:18:12"
																	},
																	{
																		"hexValue": "436c61696d203a2063616e6e6f74207769746864726177206265666f72652076",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13950:34:12",
																		"type": "",
																		"value": "Claim : cannot withdraw before v"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13923:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13923:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13923:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14005:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14016:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14001:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14001:18:12"
																	},
																	{
																		"hexValue": "657374696e6720706572696f6420656e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14021:20:12",
																		"type": "",
																		"value": "esting period ends"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13994:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13994:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13994:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14051:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14063:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14074:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14059:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14059:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14051:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ca61385b350ba6b0dce22cedc4db9b186f64d71a596b857ee879c0daa3279d6a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13821:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13835:4:12",
														"type": ""
													}
												],
												"src": "13670:414:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14137:80:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14164:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14166:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14166:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14166:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14153:1:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14160:1:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14156:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14156:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14150:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14150:13:12"
															},
															"nodeType": "YulIf",
															"src": "14147:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14195:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14206:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14209:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14202:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14202:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14195:3:12"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14120:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14123:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14129:3:12",
														"type": ""
													}
												],
												"src": "14089:128:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14396:243:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14413:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14424:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14406:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14406:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14406:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14447:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14458:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14443:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14443:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14463:2:12",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14436:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14436:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14436:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14486:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14497:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14482:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14482:18:12"
																	},
																	{
																		"hexValue": "5374616b696e673a20496e73756666696369656e742072657761726420616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14502:34:12",
																		"type": "",
																		"value": "Staking: Insufficient reward all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14475:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14475:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14475:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14557:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14568:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14553:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14553:18:12"
																	},
																	{
																		"hexValue": "6f77616e63652066726f6d207468652041646d696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14573:23:12",
																		"type": "",
																		"value": "owance from the Admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14546:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14546:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14546:51:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14606:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14618:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14629:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14614:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14614:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14606:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_acc14ac9e54dd8ba4aba0610e1196cf9050e74db5cdb44e739d0cc1c3d3f31c9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14373:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14387:4:12",
														"type": ""
													}
												],
												"src": "14222:417:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14773:145:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14783:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14795:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14806:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14791:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14791:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14783:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14825:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14840:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14856:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14861:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "14852:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14852:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14865:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "14848:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14848:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14836:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14836:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14818:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14818:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14818:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14889:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14900:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14885:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14885:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14905:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14878:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14878:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14878:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14734:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14745:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14753:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14764:4:12",
														"type": ""
													}
												],
												"src": "14644:274:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15097:164:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15114:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15125:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15107:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15107:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15107:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15148:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15159:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15144:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15144:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15164:2:12",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15137:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15137:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15137:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15187:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15198:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15183:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15183:18:12"
																	},
																	{
																		"hexValue": "416c726561647920506175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15203:16:12",
																		"type": "",
																		"value": "Already Paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15176:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15176:44:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15176:44:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15229:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15241:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15252:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15237:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15237:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15229:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c27b890af59f93debcee566c8681d43e5506a0fccccb345a516229d92ea41ce6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15074:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15088:4:12",
														"type": ""
													}
												],
												"src": "14923:338:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15440:180:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15457:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15468:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15450:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15450:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15450:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15491:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15502:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15487:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15487:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15507:2:12",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15480:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15480:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15480:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15530:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15541:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15526:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15526:18:12"
																	},
																	{
																		"hexValue": "416464203a20746f6b656e20706f6f6c20616c7265616479206578697473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15546:32:12",
																		"type": "",
																		"value": "Add : token pool already exits"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15519:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15519:60:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15519:60:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15588:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15600:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15611:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15596:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15596:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15588:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5bd56e6779313a5dd5c6d209b8de3e49e4c3e202e0cdfc1c45f06c2cc7fb7047__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15417:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15431:4:12",
														"type": ""
													}
												],
												"src": "15266:354:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15799:253:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15816:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15827:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15809:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15809:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15809:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15850:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15861:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15846:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15846:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15866:2:12",
																		"type": "",
																		"value": "63"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15839:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15839:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15839:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15889:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15900:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15885:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15885:18:12"
																	},
																	{
																		"hexValue": "5374616b696e673a20616d6f756e74204d757374206265206c65737320746861",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15905:34:12",
																		"type": "",
																		"value": "Staking: amount Must be less tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15878:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15878:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15878:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15960:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15971:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15956:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15956:18:12"
																	},
																	{
																		"hexValue": "6e206f7220657175616c20746f20617661696c61626c652072657761726473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15976:33:12",
																		"type": "",
																		"value": "n or equal to available rewards"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15949:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15949:61:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15949:61:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16019:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16031:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16042:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16027:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16027:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16019:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bb26fa751fcadf1ba3ad81429e3b128f919183d07cbf6db0563974ab6716c11b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15776:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15790:4:12",
														"type": ""
													}
												],
												"src": "15625:427:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16231:167:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16248:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16259:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16241:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16241:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16241:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16282:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16293:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16278:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16278:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16298:2:12",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16271:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16271:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16271:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16321:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16332:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16317:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16317:18:12"
																	},
																	{
																		"hexValue": "5374616b696e6720697320706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16337:19:12",
																		"type": "",
																		"value": "Staking is paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16310:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16310:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16366:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16378:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16389:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16374:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16374:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16366:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e52420b01fcae5b40118d9fd948318b1ceff2980505399729d6fb4b8879ef679__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16208:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16222:4:12",
														"type": ""
													}
												],
												"src": "16057:341:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16577:172:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16594:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16605:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16587:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16587:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16587:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16628:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16639:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16624:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16624:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16644:2:12",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16617:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16617:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16617:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16667:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16678:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16663:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16663:18:12"
																	},
																	{
																		"hexValue": "496e76616c6964207374616b696e6720706572696f64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16683:24:12",
																		"type": "",
																		"value": "Invalid staking period"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16656:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16656:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16656:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16717:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16729:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16740:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16725:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16725:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16717:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b20d466f3caec787a1cd4be5e23618374546144e86f8c5900c6c061b951dab4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16554:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16568:4:12",
														"type": ""
													}
												],
												"src": "16403:346:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16814:78:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16824:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16839:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16833:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16833:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16824:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16880:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "16855:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16855:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16855:31:12"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16793:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16804:5:12",
														"type": ""
													}
												],
												"src": "16754:138:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16956:106:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16966:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16981:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16975:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16975:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16966:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17040:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17049:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17052:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17042:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17042:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17042:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17010:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17021:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17028:8:12",
																						"type": "",
																						"value": "0xffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "17017:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17017:20:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17007:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17007:31:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17000:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17000:39:12"
															},
															"nodeType": "YulIf",
															"src": "16997:59:12"
														}
													]
												},
												"name": "abi_decode_uint24_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16935:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16946:5:12",
														"type": ""
													}
												],
												"src": "16897:165:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17125:106:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17135:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17150:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17144:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17144:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17135:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17209:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17218:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17221:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17211:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17211:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17211:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17179:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17197:1:12",
																						"type": "",
																						"value": "2"
																					},
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17200:5:12"
																					}
																				],
																				"functionName": {
																					"name": "signextend",
																					"nodeType": "YulIdentifier",
																					"src": "17186:10:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17186:20:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17176:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17176:31:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17169:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17169:39:12"
															},
															"nodeType": "YulIf",
															"src": "17166:59:12"
														}
													]
												},
												"name": "abi_decode_int24_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "17104:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17115:5:12",
														"type": ""
													}
												],
												"src": "17067:164:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17296:132:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17306:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17321:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17315:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17315:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17306:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17406:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17415:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17418:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17408:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17408:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17408:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17350:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17361:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17368:34:12",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "17357:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17357:46:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17347:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17347:57:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17340:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17340:65:12"
															},
															"nodeType": "YulIf",
															"src": "17337:85:12"
														}
													]
												},
												"name": "abi_decode_uint128_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "17275:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17286:5:12",
														"type": ""
													}
												],
												"src": "17236:192:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17697:922:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17744:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17753:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17756:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17746:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17746:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17746:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17718:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17727:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17714:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17714:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17739:3:12",
																		"type": "",
																		"value": "384"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "17710:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17710:33:12"
															},
															"nodeType": "YulIf",
															"src": "17707:53:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17769:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17788:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17782:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17782:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "17773:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17868:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17877:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17880:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17870:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17870:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17870:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17820:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17831:5:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17838:26:12",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "17827:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17827:38:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17817:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17817:49:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17810:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17810:57:12"
															},
															"nodeType": "YulIf",
															"src": "17807:77:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17893:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "17903:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "17893:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17917:59:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17961:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17972:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17957:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17957:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "17927:29:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17927:49:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "17917:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17985:59:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18029:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18040:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18025:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18025:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "17995:29:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17995:49:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "17985:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18053:59:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18097:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18108:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18093:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18093:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "18063:29:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18063:49:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "18053:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18121:59:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18164:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18175:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18160:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18160:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint24_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "18131:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18131:49:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "18121:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18189:58:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18231:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18242:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18227:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18227:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_int24_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "18199:27:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18199:48:12"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "18189:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18256:58:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18298:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18309:3:12",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18294:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18294:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_int24_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "18266:27:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18266:48:12"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "18256:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18323:60:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18367:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18378:3:12",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18363:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18363:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "18333:29:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18333:50:12"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "18323:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18392:36:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18412:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18423:3:12",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18408:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18408:19:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18402:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18402:26:12"
															},
															"variableNames": [
																{
																	"name": "value8",
																	"nodeType": "YulIdentifier",
																	"src": "18392:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18437:36:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18457:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18468:3:12",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18453:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18453:19:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18447:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18447:26:12"
															},
															"variableNames": [
																{
																	"name": "value9",
																	"nodeType": "YulIdentifier",
																	"src": "18437:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18482:61:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18527:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18538:3:12",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18523:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18523:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "18493:29:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18493:50:12"
															},
															"variableNames": [
																{
																	"name": "value10",
																	"nodeType": "YulIdentifier",
																	"src": "18482:7:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18552:61:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18597:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18608:3:12",
																				"type": "",
																				"value": "352"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18593:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18593:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "18563:29:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18563:50:12"
															},
															"variableNames": [
																{
																	"name": "value11",
																	"nodeType": "YulIdentifier",
																	"src": "18552:7:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint96t_addresst_addresst_addresst_uint24t_int24t_int24t_uint128t_uint256t_uint256t_uint128t_uint128_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17573:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "17584:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17596:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17604:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17612:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "17620:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "17628:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "17636:6:12",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "17644:6:12",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "17652:6:12",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "17660:6:12",
														"type": ""
													},
													{
														"name": "value9",
														"nodeType": "YulTypedName",
														"src": "17668:6:12",
														"type": ""
													},
													{
														"name": "value10",
														"nodeType": "YulTypedName",
														"src": "17676:7:12",
														"type": ""
													},
													{
														"name": "value11",
														"nodeType": "YulTypedName",
														"src": "17685:7:12",
														"type": ""
													}
												],
												"src": "17433:1186:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18798:165:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18815:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18826:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18808:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18808:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18808:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18849:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18860:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18845:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18845:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18865:2:12",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18838:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18838:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18838:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18888:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18899:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18884:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18884:18:12"
																	},
																	{
																		"hexValue": "496e76616c6964204c5020706f6f6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18904:17:12",
																		"type": "",
																		"value": "Invalid LP pool"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18877:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18877:45:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18877:45:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18931:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18943:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18954:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18939:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18939:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18931:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_21c64ae674a86657d133324f4475f79fddb85db7025311858b33abfc26afefaa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18775:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18789:4:12",
														"type": ""
													}
												],
												"src": "18624:339:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19097:175:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19107:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19119:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19130:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19115:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19115:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19107:4:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19142:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19160:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19165:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "19156:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19156:11:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19169:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "19152:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19152:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "19146:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19187:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "19202:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "19210:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19198:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19198:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19180:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19180:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19180:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19234:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19245:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19230:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19230:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "19254:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "19262:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19250:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19250:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19223:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19223:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19223:43:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19058:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19069:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19077:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19088:4:12",
														"type": ""
													}
												],
												"src": "18968:304:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19358:170:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19404:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19413:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19416:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19406:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19406:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19406:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19379:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19388:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19375:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19375:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19400:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19371:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19371:32:12"
															},
															"nodeType": "YulIf",
															"src": "19368:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19429:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19448:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19442:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19442:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "19433:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19492:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "19467:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19467:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19467:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19507:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "19517:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "19507:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19324:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19335:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19347:6:12",
														"type": ""
													}
												],
												"src": "19277:251:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19707:171:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19724:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19735:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19717:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19717:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19717:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19758:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19769:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19754:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19754:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19774:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19747:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19747:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19747:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19797:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19808:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19793:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19793:18:12"
																	},
																	{
																		"hexValue": "5374616b696e673a204e6f7420617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19813:23:12",
																		"type": "",
																		"value": "Staking: Not approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19786:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19786:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19786:51:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19846:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19858:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19869:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19854:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19854:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19846:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebb0e901d5610eb967346b969e4e2aa58f1094b10dc4811881265481ed3bc297__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19684:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19698:4:12",
														"type": ""
													}
												],
												"src": "19533:345:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20012:160:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20022:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20034:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20045:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20030:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20030:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20022:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20064:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "20079:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20087:34:12",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "20075:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20075:47:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20057:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20057:66:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20057:66:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20143:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20154:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20139:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20139:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20159:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20132:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20132:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20132:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19973:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19984:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19992:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20003:4:12",
														"type": ""
													}
												],
												"src": "19883:289:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20351:169:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20368:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20379:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20361:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20361:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20361:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20402:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20413:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20398:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20398:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20418:2:12",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20391:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20391:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20391:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20441:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20452:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20437:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20437:18:12"
																	},
																	{
																		"hexValue": "416c7265616479204f7065726174696f6e616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20457:21:12",
																		"type": "",
																		"value": "Already Operational"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20430:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20430:49:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20430:49:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20488:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20500:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20511:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20496:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20496:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20488:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2f2fe437d167b994a3abb080f6cddd75667a646218c9befe653262b5c44e61c8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20328:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20342:4:12",
														"type": ""
													}
												],
												"src": "20177:343:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20632:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20642:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20654:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20665:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20650:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20650:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20642:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20684:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "20699:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20707:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "20695:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20695:17:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20677:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20677:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20677:36:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20601:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20612:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20623:4:12",
														"type": ""
													}
												],
												"src": "20525:194:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20898:164:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20915:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20926:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20908:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20908:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20908:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20949:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20960:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20945:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20945:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20965:2:12",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20938:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20938:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20938:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20988:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20999:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20984:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20984:18:12"
																	},
																	{
																		"hexValue": "696e76616c696420616363657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21004:16:12",
																		"type": "",
																		"value": "invalid access"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20977:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20977:44:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20977:44:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21030:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21042:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21053:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21038:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21038:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21030:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_56c3d5165608fc2642a22e9651431c90fe76728e2826126a77738e167836cd16__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20875:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20889:4:12",
														"type": ""
													}
												],
												"src": "20724:338:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21241:181:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21258:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21269:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21251:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21251:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21251:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21292:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21303:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21288:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21288:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21308:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21281:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21281:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21281:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21331:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21342:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21327:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21327:18:12"
																	},
																	{
																		"hexValue": "436f6c6c656374204665653a20416d6f756e74206d757374206265203e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21347:33:12",
																		"type": "",
																		"value": "Collect Fee: Amount must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21320:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21320:61:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21320:61:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21390:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21402:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21413:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21398:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21398:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21390:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e725af0f6d63e1fd582e534b48be44b218b395440fae54ec76376eeaaee842d6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21218:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21232:4:12",
														"type": ""
													}
												],
												"src": "21067:355:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21601:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21618:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21629:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21611:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21611:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21611:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21652:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21663:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21648:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21648:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21668:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21641:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21641:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21641:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21691:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21702:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21687:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21687:18:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21707:34:12",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21680:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21680:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21680:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21762:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21773:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21758:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21758:18:12"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21778:8:12",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21751:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21751:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21751:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21796:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21808:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21819:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21804:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21804:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21796:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21578:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21592:4:12",
														"type": ""
													}
												],
												"src": "21427:402:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22008:178:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22025:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22036:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22018:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22018:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22018:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22059:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22070:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22055:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22055:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22075:2:12",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22048:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22048:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22048:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22098:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22109:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22094:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22094:18:12"
																	},
																	{
																		"hexValue": "5374616b696e673a204d75737420616c6c6f77205370656e64696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22114:30:12",
																		"type": "",
																		"value": "Staking: Must allow Spending"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22087:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22087:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22087:58:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22154:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22166:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22177:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22162:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22162:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22154:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4c12b94a872bad1d0966bdf5772fd92a84446ef64b59b5e232f639364f8b6ba5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21985:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21999:4:12",
														"type": ""
													}
												],
												"src": "21834:352:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22365:171:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22382:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22393:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22375:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22375:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22375:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22416:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22427:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22412:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22412:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22432:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22405:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22405:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22405:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22455:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22466:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22451:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22451:18:12"
																	},
																	{
																		"hexValue": "486172766573743a204e6f742061207374616b6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22471:23:12",
																		"type": "",
																		"value": "Harvest: Not a staker"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22444:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22444:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22444:51:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22504:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22516:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22527:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22512:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22512:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22504:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2ee82b03ef71c9514254a3658f8815add1189e02180fc7b188e29598e5a701dd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22342:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22356:4:12",
														"type": ""
													}
												],
												"src": "22191:345:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22715:236:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22732:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22743:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22725:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22725:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22725:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22766:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22777:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22762:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22762:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22782:2:12",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22755:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22755:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22755:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22805:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22816:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22801:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22801:18:12"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22821:34:12",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22794:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22794:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22794:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22876:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22887:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22872:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22872:18:12"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22892:16:12",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22865:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22865:44:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22865:44:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22918:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22930:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22941:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22926:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22926:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22918:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22692:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22706:4:12",
														"type": ""
													}
												],
												"src": "22541:410:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23130:233:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23147:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23158:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23140:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23140:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23140:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23181:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23192:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23177:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23177:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23197:2:12",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23170:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23170:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23170:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23220:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23231:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23216:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23216:18:12"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23236:34:12",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23209:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23209:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23209:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23291:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23302:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23287:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23287:18:12"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23307:13:12",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23280:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23280:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23280:41:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23330:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23342:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23353:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23338:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23338:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23330:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23107:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23121:4:12",
														"type": ""
													}
												],
												"src": "22956:407:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_3321() -> memPtr\n    {\n        memPtr := mload(0x40)\n        let newFreePtr := add(memPtr, 0x40)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(0x40, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_struct_interestRate_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_struct_interestRate_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_struct_interestRate_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(6, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, 0x40) }\n        {\n            if slt(sub(end, src), 0x40)\n            {\n                let _3 := 0\n                revert(_3, _3)\n            }\n            let value := allocate_memory_3321()\n            mstore(value, calldataload(src))\n            mstore(add(value, _2), calldataload(add(src, _2)))\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_struct$_interestRate_$1516_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_array_struct_interestRate_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_struct$_interestRate_$1516_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_array_struct_interestRate_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_array$_t_struct$_stakeDetails_$1508_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_stakeDetails_$1508_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, mload(_3))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            let _4 := 0x60\n            mstore(add(pos, _4), mload(add(_3, _4)))\n            let _5 := 0x80\n            mstore(add(pos, _5), mload(add(_3, _5)))\n            let _6 := 0xa0\n            mstore(add(pos, _6), mload(add(_3, _6)))\n            let _7 := 0xc0\n            mstore(add(pos, _7), mload(add(_3, _7)))\n            let _8 := 0xe0\n            mstore(add(pos, _8), mload(add(_3, _8)))\n            let _9 := 0x0100\n            mstore(add(pos, _9), mload(add(_3, _9)))\n            pos := add(pos, 0x0120)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 288)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_contract$_IERC20Upgradeable_$402__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_bool(value_1)\n        value2 := value_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let dst := allocate_memory(array_allocation_size_array_struct_interestRate_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_2, shl(5, _3)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n        }\n        value1 := dst_1\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_34245cc1a8117d130cf3ae06ea398c818e4a18479d917b66513cbc71196f16bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Staking: Pool doesn't exists\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_fd66e8ddbaa4c878ce87f099a1bd3ba5695fd2278729d66c27db0fcb6841600d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"contract paused!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_adff2dfe1a548b9f723224428b84bd389ae3a606e0a5e95db043f0710044fb5b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Claim : Nothing to claim\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ca61385b350ba6b0dce22cedc4db9b186f64d71a596b857ee879c0daa3279d6a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"Claim : cannot withdraw before v\")\n        mstore(add(headStart, 96), \"esting period ends\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_acc14ac9e54dd8ba4aba0610e1196cf9050e74db5cdb44e739d0cc1c3d3f31c9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"Staking: Insufficient reward all\")\n        mstore(add(headStart, 96), \"owance from the Admin\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_c27b890af59f93debcee566c8681d43e5506a0fccccb345a516229d92ea41ce6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Already Paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5bd56e6779313a5dd5c6d209b8de3e49e4c3e202e0cdfc1c45f06c2cc7fb7047__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Add : token pool already exits\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bb26fa751fcadf1ba3ad81429e3b128f919183d07cbf6db0563974ab6716c11b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 63)\n        mstore(add(headStart, 64), \"Staking: amount Must be less tha\")\n        mstore(add(headStart, 96), \"n or equal to available rewards\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e52420b01fcae5b40118d9fd948318b1ceff2980505399729d6fb4b8879ef679__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Staking is paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9b20d466f3caec787a1cd4be5e23618374546144e86f8c5900c6c061b951dab4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid staking period\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_uint24_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffff))) { revert(0, 0) }\n    }\n    function abi_decode_int24_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, signextend(2, value))) { revert(0, 0) }\n    }\n    function abi_decode_uint128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint96t_addresst_addresst_addresst_uint24t_int24t_int24t_uint128t_uint256t_uint256t_uint128t_uint128_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11\n    {\n        if slt(sub(dataEnd, headStart), 384) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_uint24_fromMemory(add(headStart, 128))\n        value5 := abi_decode_int24_fromMemory(add(headStart, 160))\n        value6 := abi_decode_int24_fromMemory(add(headStart, 192))\n        value7 := abi_decode_uint128_fromMemory(add(headStart, 224))\n        value8 := mload(add(headStart, 256))\n        value9 := mload(add(headStart, 288))\n        value10 := abi_decode_uint128_fromMemory(add(headStart, 320))\n        value11 := abi_decode_uint128_fromMemory(add(headStart, 352))\n    }\n    function abi_encode_tuple_t_stringliteral_21c64ae674a86657d133324f4475f79fddb85db7025311858b33abfc26afefaa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid LP pool\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_ebb0e901d5610eb967346b969e4e2aa58f1094b10dc4811881265481ed3bc297__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Staking: Not approved\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint128_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_2f2fe437d167b994a3abb080f6cddd75667a646218c9befe653262b5c44e61c8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Already Operational\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_56c3d5165608fc2642a22e9651431c90fe76728e2826126a77738e167836cd16__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"invalid access\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e725af0f6d63e1fd582e534b48be44b218b395440fae54ec76376eeaaee842d6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Collect Fee: Amount must be > 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4c12b94a872bad1d0966bdf5772fd92a84446ef64b59b5e232f639364f8b6ba5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Staking: Must allow Spending\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2ee82b03ef71c9514254a3658f8815add1189e02180fc7b188e29598e5a701dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Harvest: Not a staker\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061021c5760003560e01c8063a54c83f611610125578063ccd34cd5116100ad578063e72728661161007c578063e7272866146105c6578063e76ba191146105d9578063e7c928b1146105ec578063f2fde38b146105ff578063f8ce1f311461061257600080fd5b8063ccd34cd514610533578063cf5badc614610542578063d6d6817714610555578063e179b5c3146105be57600080fd5b8063b0203a80116100f4578063b0203a801461049c578063b187bd26146104a4578063ba41795f146104c1578063c3d2c3c1146104d4578063c4b91c4d146104f757600080fd5b8063a54c83f61461041d578063a638f2e214610430578063ac4afa3814610443578063ad5c46481461048957600080fd5b8063750142e6116101a8578063911ef50811610177578063911ef5081461031657806394f649dd1461031f5780639aaab9541461033f578063a2234080146103df578063a32a66a7146103f257600080fd5b8063750142e6146102e157806382a14459146102e957806388f67d77146102f25780638da5cb5b1461030557600080fd5b806324a723d4116101ef57806324a723d4146102a35780632c86714c146102b657806333cfcd3b146102be578063715018a6146102d157806373f64499146102d957600080fd5b8063081e3eda146102215780630c75699714610238578063110d458e1461024d5780631ee7f3c414610278575b600080fd5b60a1545b6040519081526020015b60405180910390f35b61024b610246366004612fda565b610625565b005b609954610260906001600160a01b031681565b6040516001600160a01b03909116815260200161022f565b610225610286366004613021565b6000918252609c6020908152604080842092845291905290205490565b6102256102b1366004613058565b610703565b61024b6108cd565b61024b6102cc366004613092565b610a41565b61024b610ff5565b61024b61102b565b6102256110ac565b61022560a65481565b61024b6103003660046130cb565b61112f565b6065546001600160a01b0316610260565b61022560a55481565b61033261032d36600461312d565b6113c7565b60405161022f919061314a565b61039b61034d3660046131e2565b60a06020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154908060070154908060080154905089565b60408051998a5260208a0198909852968801959095526060870193909352608086019190915260a085015260c084015260e08301526101008201526101200161022f565b61024b6103ed36600461312d565b6115a0565b610225610400366004613021565b609c60209081526000928352604080842090915290825290205481565b61024b61042b366004613021565b6115ec565b61022561043e3660046131fb565b6117c0565b6104566104513660046131e2565b611f84565b604080516001600160a01b039687168152959094166020860152928401919091526060830152608082015260a00161022f565b609a54610260906001600160a01b031681565b610225611fd1565b60a4546104b19060ff1681565b604051901515815260200161022f565b6102256104cf366004613227565b612043565b6104b16104e236600461312d565b609d6020526000908152604090205460ff1681565b61051e6105053660046131e2565b60a2602052600090815260409020805460019091015482565b6040805192835260208301919091520161022f565b610225670de0b6b3a764000081565b6104b16105503660046131e2565b6120ea565b61039b610563366004613058565b609e602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154908060030154908060040154908060050154908060060154908060070154908060080154905089565b61024b612122565b61024b6105d436600461325e565b6121a4565b6102256105e7366004613058565b61226b565b61024b6105fa3660046131e2565b61229c565b61024b61060d36600461312d565b61253a565b61024b610620366004613021565b6125d5565b6065546001600160a01b031633146106585760405162461bcd60e51b815260040161064f90613304565b60405180910390fd5b60a1548290811061067b5760405162461bcd60e51b815260040161064f90613339565b60005b82518110156106fd5782818151811061069957610699613370565b602002602001015160200151609c600086815260200190815260200160002060008584815181106106cc576106cc613370565b60200260200101516000015181526020019081526020016000208190555080806106f59061339c565b91505061067e565b50505050565b6001600160a01b0382166000908152609e602090815260408083208484528252808320815161012081018352815481526001820154818501526002820154928101929092526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e0830181905260089091015461010083015280845260a2909252906000816000036107f4576001601e6018603c8060a26000888152602001908152602001600020600101546107c591906133b5565b6107cf91906133b5565b6107d991906133b5565b6107e391906133b5565b6107ed91906133b5565b9050610848565b81601e6018603c8060a260008881526020019081526020016000206001015461081d91906133b5565b61082791906133b5565b61083191906133b5565b61083b91906133b5565b61084591906133b5565b90505b6000818460a001514261085b91906133d7565b61086591906133ee565b905060008160a2600086815260200190815260200160002060000154670de0b6b3a7640000876020015161089991906133ee565b6108a391906133b5565b6108ad91906133ee565b90506108c1670de0b6b3a7640000826133b5565b98975050505050505050565b6065546001600160a01b031633146108f75760405162461bcd60e51b815260040161064f90613304565b6002600154036109195760405162461bcd60e51b815260040161064f9061340d565b6002600155609a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610967573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098b9190613444565b609a546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd906109c09030903390869060040161345d565b6020604051808303816000875af11580156109df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a039190613481565b5060405181815233907f34042597700906fd41b7ead5497c3bf88ef36150597ddd9193327a09f0604f66906020015b60405180910390a25060018055565b600260015403610a635760405162461bcd60e51b815260040161064f9061340d565b600260015560a45460ff1615610aae5760405162461bcd60e51b815260206004820152601060248201526f636f6e7472616374207061757365642160801b604482015260640161064f565b60a15483908110610ad15760405162461bcd60e51b815260040161064f90613339565b336000908152609e602090815260408083208684528252808320815161012081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e0830152600801546101008201529083610b5e5781608001514211610b61565b60015b90506000826020015111610bb75760405162461bcd60e51b815260206004820152601860248201527f436c61696d203a204e6f7468696e6720746f20636c61696d0000000000000000604482015260640161064f565b80610c1f5760405162461bcd60e51b815260206004820152603260248201527f436c61696d203a2063616e6e6f74207769746864726177206265666f72652076604482015271657374696e6720706572696f6420656e647360701b606482015260840161064f565b6000610c2c3387876127b5565b90506000818460400151610c40919061349e565b90506000846020015190508160a18660c0015181548110610c6357610c63613370565b90600052602060002090600502016003015411610ce05760405162461bcd60e51b815260206004820152603560248201527f5374616b696e673a20496e73756666696369656e742072657761726420616c6c60448201527437bbb0b731b290333937b6903a34329020b236b4b760591b606482015260840161064f565b600060a18660c0015181548110610cf957610cf9613370565b600091825260209091206005909102016001015460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169150819063a9059cbb906044016020604051808303816000875af1158015610d5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d829190613481565b50600060a18760c0015181548110610d9c57610d9c613370565b60009182526020909120600590910201546101008801516040516323b872dd60e01b81526001600160a01b03909216925082916323b872dd91610de5913091339160040161345d565b600060405180830381600087803b158015610dff57600080fd5b505af1158015610e13573d6000803e3d6000fd5b5050505088158015610e3a575060e0870151600090815260a2602052604090206001015415155b15610e4957610e49338b61297d565b8360a18860c0015181548110610e6157610e61613370565b90600052602060002090600502016003016000828254610e8191906133d7565b925050819055508360a18860c0015181548110610ea057610ea0613370565b90600052602060002090600502016004016000828254610ec0919061349e565b92505081905550866020015160a18860c0015181548110610ee357610ee3613370565b90600052602060002090600502016002016000828254610f0391906133d7565b909155505060e0870151600090815260a2602052604081208054859290610f2b9084906133d7565b9091555050336000908152609e602090815260408083208d84529091528120600281018290556001015560a45460ff1615610f865760a554336000908152609e602090815260408083208e8452909152902060050155610fa8565b336000908152609e602090815260408083208d84529091529020426005909101555b604080518581524260208201528c9133917f812be816db82c66cd18ca8457005cd84689642d8ac4d38599cc6af444a2dc72a910160405180910390a3505060018055505050505050505050565b6065546001600160a01b0316331461101f5760405162461bcd60e51b815260040161064f90613304565b6110296000612bea565b565b6065546001600160a01b031633146110555760405162461bcd60e51b815260040161064f90613304565b60a45460ff16156110995760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e4814185d5cd95960921b604482015260640161064f565b60a4805460ff191660011790554260a555565b60008060015b609754811161112957600081815260a060205260409020600101541561111757600081815260a060205260409020600201546110ee908361349e565b600082815260a0602052604081205491935061110a91816127b5565b611114908361349e565b91505b806111218161339c565b9150506110b2565b50919050565b6065546001600160a01b031633146111595760405162461bcd60e51b815260040161064f90613304565b6001600160a01b0383166000908152609d6020526040902054839060ff16156111c45760405162461bcd60e51b815260206004820152601e60248201527f416464203a20746f6b656e20706f6f6c20616c72656164792065786974730000604482015260640161064f565b6001600160a01b0384166000908152609d60205260408120805460ff1916600117905560a1546111f65760a154611205565b60a154611205906001906133d7565b905060005b83518110156112895783818151811061122557611225613370565b602002602001015160200151609c6000848152602001908152602001600020600086848151811061125857611258613370565b60200260200101516000015181526020019081526020016000208190555080806112819061339c565b91505061120a565b5050609b80546001600160a01b039586166001600160a01b031991821681179092556040805160a081018252928352948616602083019081526000958301868152606084018781526080850188815260a180546001810182559952945160059098027faadc37b8ba5645e62f4546802db221593a94729ccbfc5a97d01365a88f64987881018054998b169986169990991790985591517faadc37b8ba5645e62f4546802db221593a94729ccbfc5a97d01365a88f6498798801805491909916931692909217909655517faadc37b8ba5645e62f4546802db221593a94729ccbfc5a97d01365a88f64987a85015593517faadc37b8ba5645e62f4546802db221593a94729ccbfc5a97d01365a88f64987b840155505090517faadc37b8ba5645e62f4546802db221593a94729ccbfc5a97d01365a88f64987c90910155565b6001600160a01b0381166000908152609f60205260408120546060919067ffffffffffffffff8111156113fc576113fc612eb7565b60405190808252806020026020018201604052801561147c57816020015b6114696040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020019060019003908161141a5790505b50905060005b6001600160a01b0384166000908152609f6020526040902054811015611599576001600160a01b0384166000908152609e60209081526040808320609f90925282208054839190859081106114d9576114d9613370565b906000526020600020015481526020019081526020016000206040518061012001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815250509050600081602001511115611586578083838151811061157a5761157a613370565b60200260200101819052505b50806115918161339c565b915050611482565b5092915050565b6065546001600160a01b031633146115ca5760405162461bcd60e51b815260040161064f90613304565b609980546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b031633146116165760405162461bcd60e51b815260040161064f90613304565b60a154829081106116395760405162461bcd60e51b815260040161064f90613339565b600060a1848154811061164e5761164e613370565b906000526020600020906005020160010160009054906101000a90046001600160a01b031690508260a1858154811061168957611689613370565b906000526020600020906005020160030154101561170f5760405162461bcd60e51b815260206004820152603f60248201527f5374616b696e673a20616d6f756e74204d757374206265206c6573732074686160448201527f6e206f7220657175616c20746f20617661696c61626c65207265776172647300606482015260840161064f565b60405163a9059cbb60e01b8152336004820152602481018490526001600160a01b0382169063a9059cbb906044016020604051808303816000875af115801561175c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117809190613481565b508260a1858154811061179557611795613370565b906000526020600020906005020160030160008282546117b591906133d7565b909155505050505050565b60006002600154036117e45760405162461bcd60e51b815260040161064f9061340d565b600260015560a45460ff161561182f5760405162461bcd60e51b815260206004820152601060248201526f636f6e7472616374207061757365642160801b604482015260640161064f565b60a154849081106118525760405162461bcd60e51b815260040161064f90613339565b60a45460ff16156118995760405162461bcd60e51b815260206004820152601160248201527014dd185ada5b99c81a5cc81c185d5cd959607a1b604482015260640161064f565b6000858152609c602090815260408083208684529091529020546000036118fb5760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081cdd185ada5b99c81c195c9a5bd960521b604482015260640161064f565b609b5460405163133f757160e31b815260048101869052600091829182916001600160a01b0316906399fbab889060240161018060405180830381865afa15801561194a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196e91906134fd565b505050509750505050945094505050826001600160a01b0316609a60009054906101000a90046001600160a01b03166001600160a01b03161480156119ea5750816001600160a01b031660a189815481106119cb576119cb613370565b60009182526020909120600160059092020101546001600160a01b0316145b611a285760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081314081c1bdbdb608a1b604482015260640161064f565b600060a18981548110611a3d57611a3d613370565b600091825260209091206005909102015460405163e985e9c560e01b81523360048201523060248201526001600160a01b039091169150819063e985e9c590604401602060405180830381865afa158015611a9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac09190613481565b80611b3c575060405163020604bf60e21b81526004810189905230906001600160a01b0383169063081812fc90602401602060405180830381865afa158015611b0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3191906135de565b6001600160a01b0316145b611b805760405162461bcd60e51b815260206004820152601560248201527414dd185ada5b99ce88139bdd08185c1c1c9bdd9959605a1b604482015260640161064f565b6040516323b872dd60e01b81526001600160a01b038216906323b872dd90611bb090339030908d9060040161345d565b600060405180830381600087803b158015611bca57600080fd5b505af1158015611bde573d6000803e3d6000fd5b50505050611bf0609780546001019055565b6000611bfb60975490565b90506000611c0b338360016127b5565b336000908152609e60209081526040808320868452909152812084815560010180549293506001600160801b03871692909190611c4990849061349e565b9091555050336000908152609e6020908152604080832085845290915281206002018054839290611c7b90849061349e565b9091555050336000908152609e602090815260408083208584528083528184204260058201558f8552609c84528285208e86528452918420549386905290915260030155611ccc8962278d006133ee565b611cd6904261349e565b609e6000336001600160a01b03166001600160a01b031681526020019081526020016000206000848152602001908152602001600020600401819055508a609e6000336001600160a01b03166001600160a01b0316815260200190815260200160002060008481526020019081526020016000206006018190555088609e6000336001600160a01b03166001600160a01b0316815260200190815260200160002060008481526020019081526020016000206007018190555089609e6000336001600160a01b03166001600160a01b03168152602001908152602001600020600084815260200190815260200160002060080181905550609f6000336001600160a01b03166001600160a01b03168152602001908152602001600020829080600181540180825580915050600190039060005260206000200160009091909190915055609e6000336001600160a01b03166001600160a01b03168152602001908152602001600020600083815260200190815260200160002060a06000848152602001908152602001600020600082015481600001556001820154816001015560028201548160020155600382015481600301556004820154816004015560058201548160050155600682015481600601556007820154816007015560088201548160080155905050836001600160801b031660a18c81548110611edc57611edc613370565b90600052602060002090600502016002016000828254611efc919061349e565b9091555050600089815260a26020526040812080546001600160801b0387169290611f2890849061349e565b9091555050604080516001600160801b03861681524260208201528c9133917fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed910160405180910390a350600180559998505050505050505050565b60a18181548110611f9457600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b03938416955091909216929085565b609a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561201a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061203e9190613444565b905090565b6001600160a01b0383166000908152609e602090815260408083208584528252808320815161012081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e0830152600801546101008201526120d28585856127b5565b81604001516120e1919061349e565b95945050505050565b60006120f46110ac565b60a1838154811061210757612107613370565b90600052602060002090600502016003015410159050919050565b6065546001600160a01b0316331461214c5760405162461bcd60e51b815260040161064f90613304565b60a45460ff166121945760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e4813dc195c985d1a5bdb985b606a1b604482015260640161064f565b60a4805460ff191690554260a555565b60006121b06001612c3c565b905080156121c8576000805461ff0019166101001790555b6121d0612cc9565b6121d8612cf0565b6121e0612d1f565b81516121f39060a3906020850190612e57565b50609a80546001600160a01b0319166001600160a01b0385161790556301e1338060985561222082612d4e565b8015612266576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b609f602052816000526040600020818154811061228757600080fd5b90600052602060002001600091509150505481565b6099546001600160a01b0316336001600160a01b0316146122f05760405162461bcd60e51b815260206004820152600e60248201526d696e76616c69642061636365737360901b604482015260640161064f565b6002600154036123125760405162461bcd60e51b815260040161064f9061340d565b6002600155806123645760405162461bcd60e51b815260206004820152601f60248201527f436f6c6c656374204665653a20416d6f756e74206d757374206265203e203000604482015260640161064f565b609a546001600160a01b03166323b872dd3330846040518463ffffffff1660e01b81526004016123969392919061345d565b6020604051808303816000875af11580156123b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123d99190613481565b5060005b60a3548110156125075760a381815481106123fa576123fa613370565b906000526020600020015460001461246d57670de0b6b3a76400008260a654670de0b6b3a764000060a3858154811061243557612435613370565b906000526020600020015461244a91906133ee565b61245491906133b5565b61245e91906133ee565b61246891906133b5565b6124ad565b670de0b6b3a76400008260a654670de0b6b3a7640000600161248f91906133ee565b61249991906133b5565b6124a391906133ee565b6124ad91906133b5565b60a2600060a384815481106124c4576124c4613370565b9060005260206000200154815260200190815260200160002060010160008282546124ef919061349e565b909155508190506124ff8161339c565b9150506123dd565b5060405181815233907f386d896e9bd972181cfb744681a2de8d2daab22884986fdc60c3947be36ca01b90602001610a32565b6065546001600160a01b031633146125645760405162461bcd60e51b815260040161064f90613304565b6001600160a01b0381166125c95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161064f565b6125d281612bea565b50565b6065546001600160a01b031633146125ff5760405162461bcd60e51b815260040161064f90613304565b60a154829081106126225760405162461bcd60e51b815260040161064f90613339565b600060a1848154811061263757612637613370565b6000918252602090912060059091020160010154604051636eb1769f60e11b81523360048201523060248201526001600160a01b0390911691508390829063dd62ed3e90604401602060405180830381865afa15801561269b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126bf9190613444565b101561270d5760405162461bcd60e51b815260206004820152601c60248201527f5374616b696e673a204d75737420616c6c6f77205370656e64696e6700000000604482015260640161064f565b6040516323b872dd60e01b81526001600160a01b038216906323b872dd9061273d9033903090889060040161345d565b6020604051808303816000875af115801561275c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127809190613481565b508260a1858154811061279557612795613370565b906000526020600020906005020160030160008282546117b5919061349e565b6000806001600160a01b0385166127d957600084815260a0602052604090206127fd565b6001600160a01b0385166000908152609e6020908152604080832087845290915290205b6040805161012081018252825481526001830154602082018190526002840154928201929092526003830154606082015260048301546080820152600583015460a0820152600683015460c0820152600783015460e0820152600890920154610100830152909150156129705760a45460ff16156128ed5760a5548160a00151111561288c5760009150612975565b6128e66128b16103e86128ab6064609854612dcf90919063ffffffff16565b90612dcf565b6128e06128cd8460a0015160a554612de290919063ffffffff16565b606085015160208601516128ab91612dcf565b90612dee565b9150612975565b6000836128fe57816060015161291e565b60c08201516000908152609c602090815260408083208380529091529020545b905061296861293f6103e86128ab6064609854612dcf90919063ffffffff16565b6128e06129598560a0015142612de290919063ffffffff16565b60208601516128ab9086612dcf565b925050612975565b600091505b509392505050565b6001600160a01b0382166000908152609e602090815260408083208484528252918290208251610120810184528154815260018201549281018390526002820154938101939093526003810154606084015260048101546080840152600581015460a0840152600681015460c0840152600781015460e084015260080154610100830152612a455760405162461bcd60e51b81526020600482015260156024820152742430b93b32b9ba1d102737ba10309039ba30b5b2b960591b604482015260640161064f565b6000612a518484610703565b9050801580612a74575060e0820151600090815260a26020526040902060010154155b15612a7f5750505050565b609a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015612ac8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612aec9190613444565b905080600003612afd575050505050565b60e0830151600090815260a2602052604081206001018054849290612b239084906133d7565b9091555050609a546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90612b5c9030908990879060040161345d565b6020604051808303816000875af1158015612b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b9f9190613481565b50846001600160a01b03167fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba83604051612bdb91815260200190565b60405180910390a25050505050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff1615612c83578160ff166001148015612c5f5750303b155b612c7b5760405162461bcd60e51b815260040161064f906135fb565b506000919050565b60005460ff808416911610612caa5760405162461bcd60e51b815260040161064f906135fb565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166110295760405162461bcd60e51b815260040161064f90613649565b600054610100900460ff16612d175760405162461bcd60e51b815260040161064f90613649565b611029612dfa565b600054610100900460ff16612d465760405162461bcd60e51b815260040161064f90613649565b611029612e2a565b600060a68190555b8151811015612dcb57818181518110612d7157612d71613370565b6020026020010151600014612d9f57818181518110612d9257612d92613370565b6020026020010151612da2565b60015b60a66000828254612db3919061349e565b90915550819050612dc38161339c565b915050612d56565b5050565b6000612ddb82846133ee565b9392505050565b6000612ddb82846133d7565b6000612ddb82846133b5565b600054610100900460ff16612e215760405162461bcd60e51b815260040161064f90613649565b61102933612bea565b600054610100900460ff16612e515760405162461bcd60e51b815260040161064f90613649565b60018055565b828054828255906000526020600020908101928215612e92579160200282015b82811115612e92578251825591602001919060010190612e77565b50612e9e929150612ea2565b5090565b5b80821115612e9e5760008155600101612ea3565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715612ef057612ef0612eb7565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715612f1f57612f1f612eb7565b604052919050565b600067ffffffffffffffff821115612f4157612f41612eb7565b5060051b60200190565b600082601f830112612f5c57600080fd5b81356020612f71612f6c83612f27565b612ef6565b82815260069290921b84018101918181019086841115612f9057600080fd5b8286015b84811015612fcf5760408189031215612fad5760008081fd5b612fb5612ecd565b813581528482013585820152835291830191604001612f94565b509695505050505050565b60008060408385031215612fed57600080fd5b82359150602083013567ffffffffffffffff81111561300b57600080fd5b61301785828601612f4b565b9150509250929050565b6000806040838503121561303457600080fd5b50508035926020909101359150565b6001600160a01b03811681146125d257600080fd5b6000806040838503121561306b57600080fd5b823561307681613043565b946020939093013593505050565b80151581146125d257600080fd5b6000806000606084860312156130a757600080fd5b833592506020840135915060408401356130c081613084565b809150509250925092565b6000806000606084860312156130e057600080fd5b83356130eb81613043565b925060208401356130fb81613043565b9150604084013567ffffffffffffffff81111561311757600080fd5b61312386828701612f4b565b9150509250925092565b60006020828403121561313f57600080fd5b8135612ddb81613043565b602080825282518282018190526000919060409081850190868401855b828110156131d55781518051855286810151878601528581015186860152606080820151908601526080808201519086015260a0808201519086015260c0808201519086015260e0808201519086015261010090810151908501526101209093019290850190600101613167565b5091979650505050505050565b6000602082840312156131f457600080fd5b5035919050565b60008060006060848603121561321057600080fd5b505081359360208301359350604090920135919050565b60008060006060848603121561323c57600080fd5b833561324781613043565b92506020840135915060408401356130c081613084565b6000806040838503121561327157600080fd5b823561327c81613043565b915060208381013567ffffffffffffffff81111561329957600080fd5b8401601f810186136132aa57600080fd5b80356132b8612f6c82612f27565b81815260059190911b820183019083810190888311156132d757600080fd5b928401925b828410156132f5578335825292840192908401906132dc565b80955050505050509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601c908201527f5374616b696e673a20506f6f6c20646f65736e27742065786973747300000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016133ae576133ae613386565b5060010190565b6000826133d257634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156133e9576133e9613386565b500390565b600081600019048311821515161561340857613408613386565b500290565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60006020828403121561345657600080fd5b5051919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561349357600080fd5b8151612ddb81613084565b600082198211156134b1576134b1613386565b500190565b8051612cc481613043565b805162ffffff81168114612cc457600080fd5b8051600281900b8114612cc457600080fd5b80516001600160801b0381168114612cc457600080fd5b6000806000806000806000806000806000806101808d8f03121561352057600080fd5b8c516bffffffffffffffffffffffff8116811461353c57600080fd5b9b5061354a60208e016134b6565b9a5061355860408e016134b6565b995061356660608e016134b6565b985061357460808e016134c1565b975061358260a08e016134d4565b965061359060c08e016134d4565b955061359e60e08e016134e6565b94506101008d015193506101208d015192506135bd6101408e016134e6565b91506135cc6101608e016134e6565b90509295989b509295989b509295989b565b6000602082840312156135f057600080fd5b8151612ddb81613043565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220cf18c2c42341a3019dee66749b9858bbe1dd1cdd44978a1c860723097bcb042864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA54C83F6 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xCCD34CD5 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE7272866 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE7272866 EQ PUSH2 0x5C6 JUMPI DUP1 PUSH4 0xE76BA191 EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0xE7C928B1 EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5FF JUMPI DUP1 PUSH4 0xF8CE1F31 EQ PUSH2 0x612 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCCD34CD5 EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0xCF5BADC6 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xD6D68177 EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0xE179B5C3 EQ PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB0203A80 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0xB0203A80 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0xB187BD26 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0xBA41795F EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0xC3D2C3C1 EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0xC4B91C4D EQ PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA54C83F6 EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0xA638F2E2 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0xAC4AFA38 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x750142E6 GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x911EF508 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x911EF508 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x94F649DD EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x9AAAB954 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0xA2234080 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xA32A66A7 EQ PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x750142E6 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x82A14459 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x88F67D77 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24A723D4 GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x24A723D4 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x2C86714C EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x33CFCD3B EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x73F64499 EQ PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xC756997 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x110D458E EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x1EE7F3C4 EQ PUSH2 0x278 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FDA JUMP JUMPDEST PUSH2 0x625 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x99 SLOAD PUSH2 0x260 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22F JUMP JUMPDEST PUSH2 0x225 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x3021 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x9C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3058 JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x24B PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x3092 JUMP JUMPDEST PUSH2 0xA41 JUMP JUMPDEST PUSH2 0x24B PUSH2 0xFF5 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x102B JUMP JUMPDEST PUSH2 0x225 PUSH2 0x10AC JUMP JUMPDEST PUSH2 0x225 PUSH1 0xA6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x300 CALLDATASIZE PUSH1 0x4 PUSH2 0x30CB JUMP JUMPDEST PUSH2 0x112F JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x260 JUMP JUMPDEST PUSH2 0x225 PUSH1 0xA5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x332 PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0x312D JUMP JUMPDEST PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x314A JUMP JUMPDEST PUSH2 0x39B PUSH2 0x34D CALLDATASIZE PUSH1 0x4 PUSH2 0x31E2 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE SWAP7 DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD PUSH2 0x22F JUMP JUMPDEST PUSH2 0x24B PUSH2 0x3ED CALLDATASIZE PUSH1 0x4 PUSH2 0x312D JUMP JUMPDEST PUSH2 0x15A0 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x400 CALLDATASIZE PUSH1 0x4 PUSH2 0x3021 JUMP JUMPDEST PUSH1 0x9C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x42B CALLDATASIZE PUSH1 0x4 PUSH2 0x3021 JUMP JUMPDEST PUSH2 0x15EC JUMP JUMPDEST PUSH2 0x225 PUSH2 0x43E CALLDATASIZE PUSH1 0x4 PUSH2 0x31FB JUMP JUMPDEST PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x456 PUSH2 0x451 CALLDATASIZE PUSH1 0x4 PUSH2 0x31E2 JUMP JUMPDEST PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x22F JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH2 0x260 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x1FD1 JUMP JUMPDEST PUSH1 0xA4 SLOAD PUSH2 0x4B1 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22F JUMP JUMPDEST PUSH2 0x225 PUSH2 0x4CF CALLDATASIZE PUSH1 0x4 PUSH2 0x3227 JUMP JUMPDEST PUSH2 0x2043 JUMP JUMPDEST PUSH2 0x4B1 PUSH2 0x4E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x312D JUMP JUMPDEST PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x51E PUSH2 0x505 CALLDATASIZE PUSH1 0x4 PUSH2 0x31E2 JUMP JUMPDEST PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x22F JUMP JUMPDEST PUSH2 0x225 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x4B1 PUSH2 0x550 CALLDATASIZE PUSH1 0x4 PUSH2 0x31E2 JUMP JUMPDEST PUSH2 0x20EA JUMP JUMPDEST PUSH2 0x39B PUSH2 0x563 CALLDATASIZE PUSH1 0x4 PUSH2 0x3058 JUMP JUMPDEST PUSH1 0x9E PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 POP DUP10 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x2122 JUMP JUMPDEST PUSH2 0x24B PUSH2 0x5D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x325E JUMP JUMPDEST PUSH2 0x21A4 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x5E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3058 JUMP JUMPDEST PUSH2 0x226B JUMP JUMPDEST PUSH2 0x24B PUSH2 0x5FA CALLDATASIZE PUSH1 0x4 PUSH2 0x31E2 JUMP JUMPDEST PUSH2 0x229C JUMP JUMPDEST PUSH2 0x24B PUSH2 0x60D CALLDATASIZE PUSH1 0x4 PUSH2 0x312D JUMP JUMPDEST PUSH2 0x253A JUMP JUMPDEST PUSH2 0x24B PUSH2 0x620 CALLDATASIZE PUSH1 0x4 PUSH2 0x3021 JUMP JUMPDEST PUSH2 0x25D5 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3339 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x6FD JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x699 JUMPI PUSH2 0x699 PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x9C PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x6CC JUMPI PUSH2 0x6CC PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x6F5 SWAP1 PUSH2 0x339C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x67E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH2 0x120 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 DUP6 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x8 SWAP1 SWAP2 ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE DUP1 DUP5 MSTORE PUSH1 0xA2 SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0x7F4 JUMPI PUSH1 0x1 PUSH1 0x1E PUSH1 0x18 PUSH1 0x3C DUP1 PUSH1 0xA2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x7C5 SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x7D9 SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x7E3 SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST SWAP1 POP PUSH2 0x848 JUMP JUMPDEST DUP2 PUSH1 0x1E PUSH1 0x18 PUSH1 0x3C DUP1 PUSH1 0xA2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x81D SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x827 SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x831 SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x83B SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 DUP5 PUSH1 0xA0 ADD MLOAD TIMESTAMP PUSH2 0x85B SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST PUSH2 0x865 SWAP2 SWAP1 PUSH2 0x33EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xA2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH8 0xDE0B6B3A7640000 DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x899 SWAP2 SWAP1 PUSH2 0x33EE JUMP JUMPDEST PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x8AD SWAP2 SWAP1 PUSH2 0x33EE JUMP JUMPDEST SWAP1 POP PUSH2 0x8C1 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x33B5 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x919 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x340D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x9A SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x967 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98B SWAP2 SWAP1 PUSH2 0x3444 JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x9C0 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x345D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA03 SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x34042597700906FD41B7EAD5497C3BF88EF36150597DDD9193327A09F0604F66 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xA63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x340D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0xA4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x636F6E74726163742070617573656421 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0xA1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xAD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3339 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH2 0x120 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x8 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE SWAP1 DUP4 PUSH2 0xB5E JUMPI DUP2 PUSH1 0x80 ADD MLOAD TIMESTAMP GT PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD MLOAD GT PUSH2 0xBB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D203A204E6F7468696E6720746F20636C61696D0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST DUP1 PUSH2 0xC1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D203A2063616E6E6F74207769746864726177206265666F72652076 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x657374696E6720706572696F6420656E6473 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2C CALLER DUP8 DUP8 PUSH2 0x27B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0xC40 SWAP2 SWAP1 PUSH2 0x349E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP2 PUSH1 0xA1 DUP7 PUSH1 0xC0 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0xC63 JUMPI PUSH2 0xC63 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD GT PUSH2 0xCE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A20496E73756666696369656E742072657761726420616C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x37BBB0B731B290333937B6903A34329020B236B4B7 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA1 DUP7 PUSH1 0xC0 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0xCF9 JUMPI PUSH2 0xCF9 PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP2 SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD82 SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0xA1 DUP8 PUSH1 0xC0 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0xD9C JUMPI PUSH2 0xD9C PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SLOAD PUSH2 0x100 DUP9 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 POP DUP3 SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0xDE5 SWAP2 ADDRESS SWAP2 CALLER SWAP2 PUSH1 0x4 ADD PUSH2 0x345D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP9 ISZERO DUP1 ISZERO PUSH2 0xE3A JUMPI POP PUSH1 0xE0 DUP8 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xE49 JUMPI PUSH2 0xE49 CALLER DUP12 PUSH2 0x297D JUMP JUMPDEST DUP4 PUSH1 0xA1 DUP9 PUSH1 0xC0 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0xE61 JUMPI PUSH2 0xE61 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE81 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0xA1 DUP9 PUSH1 0xC0 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0xEA0 JUMPI PUSH2 0xEA0 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x349E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0xA1 DUP9 PUSH1 0xC0 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0xEE3 JUMPI PUSH2 0xEE3 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF03 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xE0 DUP8 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xF2B SWAP1 DUP5 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP14 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x1 ADD SSTORE PUSH1 0xA4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF86 JUMPI PUSH1 0xA5 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP15 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x5 ADD SSTORE PUSH2 0xFA8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP14 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 TIMESTAMP PUSH1 0x5 SWAP1 SWAP2 ADD SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE DUP13 SWAP2 CALLER SWAP2 PUSH32 0x812BE816DB82C66CD18CA8457005CD84689642D8AC4D38599CC6AF444A2DC72A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x101F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH2 0x1029 PUSH1 0x0 PUSH2 0x2BEA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1055 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH1 0xA4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1099 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x105B1C9958591E4814185D5CD959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0xA4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE TIMESTAMP PUSH1 0xA5 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 JUMPDEST PUSH1 0x97 SLOAD DUP2 GT PUSH2 0x1129 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x1117 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x10EE SWAP1 DUP4 PUSH2 0x349E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP4 POP PUSH2 0x110A SWAP2 DUP2 PUSH2 0x27B5 JUMP JUMPDEST PUSH2 0x1114 SWAP1 DUP4 PUSH2 0x349E JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 PUSH2 0x1121 DUP2 PUSH2 0x339C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10B2 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1159 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x11C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464203A20746F6B656E20706F6F6C20616C72656164792065786974730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xA1 SLOAD PUSH2 0x11F6 JUMPI PUSH1 0xA1 SLOAD PUSH2 0x1205 JUMP JUMPDEST PUSH1 0xA1 SLOAD PUSH2 0x1205 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1289 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1225 JUMPI PUSH2 0x1225 PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x9C PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1258 JUMPI PUSH2 0x1258 PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x1281 SWAP1 PUSH2 0x339C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x120A JUMP JUMPDEST POP POP PUSH1 0x9B DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE SWAP3 DUP4 MSTORE SWAP5 DUP7 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP6 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP8 DUP2 MSTORE PUSH1 0x80 DUP6 ADD DUP9 DUP2 MSTORE PUSH1 0xA1 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP10 MSTORE SWAP5 MLOAD PUSH1 0x5 SWAP1 SWAP9 MUL PUSH32 0xAADC37B8BA5645E62F4546802DB221593A94729CCBFC5A97D01365A88F649878 DUP2 ADD DUP1 SLOAD SWAP10 DUP12 AND SWAP10 DUP7 AND SWAP10 SWAP1 SWAP10 OR SWAP1 SWAP9 SSTORE SWAP2 MLOAD PUSH32 0xAADC37B8BA5645E62F4546802DB221593A94729CCBFC5A97D01365A88F649879 DUP9 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP10 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP7 SSTORE MLOAD PUSH32 0xAADC37B8BA5645E62F4546802DB221593A94729CCBFC5A97D01365A88F64987A DUP6 ADD SSTORE SWAP4 MLOAD PUSH32 0xAADC37B8BA5645E62F4546802DB221593A94729CCBFC5A97D01365A88F64987B DUP5 ADD SSTORE POP POP SWAP1 MLOAD PUSH32 0xAADC37B8BA5645E62F4546802DB221593A94729CCBFC5A97D01365A88F64987C SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9F PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13FC JUMPI PUSH2 0x13FC PUSH2 0x2EB7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x147C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1469 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x141A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x1599 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x9F SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x14D9 JUMPI PUSH2 0x14D9 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD GT ISZERO PUSH2 0x1586 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x157A JUMPI PUSH2 0x157A PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST POP DUP1 PUSH2 0x1591 DUP2 PUSH2 0x339C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1482 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH1 0x99 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1616 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH1 0xA1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x1639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3339 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA1 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x164E JUMPI PUSH2 0x164E PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP3 PUSH1 0xA1 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1689 JUMPI PUSH2 0x1689 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD LT ISZERO PUSH2 0x170F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A20616D6F756E74204D757374206265206C65737320746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206F7220657175616C20746F20617661696C61626C65207265776172647300 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x175C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1780 SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST POP DUP3 PUSH1 0xA1 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1795 JUMPI PUSH2 0x1795 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x17B5 SWAP2 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x17E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x340D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0xA4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x182F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x636F6E74726163742070617573656421 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0xA1 SLOAD DUP5 SWAP1 DUP2 LT PUSH2 0x1852 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3339 JUMP JUMPDEST PUSH1 0xA4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1899 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14DD185ADA5B99C81A5CC81C185D5CD959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x9C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 SUB PUSH2 0x18FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B9D985B1A59081CDD185ADA5B99C81C195C9A5BD9 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x9B SLOAD PUSH1 0x40 MLOAD PUSH4 0x133F7571 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x99FBAB88 SWAP1 PUSH1 0x24 ADD PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x194A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x196E SWAP2 SWAP1 PUSH2 0x34FD JUMP JUMPDEST POP POP POP POP SWAP8 POP POP POP POP SWAP5 POP SWAP5 POP POP POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x9A PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x19EA JUMPI POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA1 DUP10 DUP2 SLOAD DUP2 LT PUSH2 0x19CB JUMPI PUSH2 0x19CB PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1A28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x125B9D985B1A59081314081C1BDBDB PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA1 DUP10 DUP2 SLOAD DUP2 LT PUSH2 0x1A3D JUMPI PUSH2 0x1A3D PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xE985E9C5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP2 SWAP1 PUSH4 0xE985E9C5 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A9C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AC0 SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST DUP1 PUSH2 0x1B3C JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x20604BF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x81812FC SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B0D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B31 SWAP2 SWAP1 PUSH2 0x35DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1B80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14DD185ADA5B99CE88139BDD08185C1C1C9BDD9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x1BB0 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x345D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BDE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1BF0 PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BFB PUSH1 0x97 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C0B CALLER DUP4 PUSH1 0x1 PUSH2 0x27B5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP5 DUP2 SSTORE PUSH1 0x1 ADD DUP1 SLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP8 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1C49 SWAP1 DUP5 SWAP1 PUSH2 0x349E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1C7B SWAP1 DUP5 SWAP1 PUSH2 0x349E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 TIMESTAMP PUSH1 0x5 DUP3 ADD SSTORE DUP16 DUP6 MSTORE PUSH1 0x9C DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP15 DUP7 MSTORE DUP5 MSTORE SWAP2 DUP5 KECCAK256 SLOAD SWAP4 DUP7 SWAP1 MSTORE SWAP1 SWAP2 MSTORE PUSH1 0x3 ADD SSTORE PUSH2 0x1CCC DUP10 PUSH3 0x278D00 PUSH2 0x33EE JUMP JUMPDEST PUSH2 0x1CD6 SWAP1 TIMESTAMP PUSH2 0x349E JUMP JUMPDEST PUSH1 0x9E PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP11 PUSH1 0x9E PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP DUP9 PUSH1 0x9E PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP DUP10 PUSH1 0x9E PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x9F PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x9E PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA0 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x3 DUP3 ADD SLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x4 DUP3 ADD SLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0x5 DUP3 ADD SLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0x6 DUP3 ADD SLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0x7 DUP3 ADD SLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH1 0x8 DUP3 ADD SLOAD DUP2 PUSH1 0x8 ADD SSTORE SWAP1 POP POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0xA1 DUP13 DUP2 SLOAD DUP2 LT PUSH2 0x1EDC JUMPI PUSH2 0x1EDC PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1EFC SWAP2 SWAP1 PUSH2 0x349E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP8 AND SWAP3 SWAP1 PUSH2 0x1F28 SWAP1 DUP5 SWAP1 PUSH2 0x349E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 AND DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE DUP13 SWAP2 CALLER SWAP2 PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 DUP1 SSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1F94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP SWAP2 SWAP1 SWAP3 AND SWAP3 SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x201A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x203E SWAP2 SWAP1 PUSH2 0x3444 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH2 0x120 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x8 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x20D2 DUP6 DUP6 DUP6 PUSH2 0x27B5 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0x20E1 SWAP2 SWAP1 PUSH2 0x349E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F4 PUSH2 0x10AC JUMP JUMPDEST PUSH1 0xA1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2107 JUMPI PUSH2 0x2107 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD LT ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x214C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH1 0xA4 SLOAD PUSH1 0xFF AND PUSH2 0x2194 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E4813DC195C985D1A5BDB985B PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0xA4 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE TIMESTAMP PUSH1 0xA5 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21B0 PUSH1 0x1 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x21C8 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x21D0 PUSH2 0x2CC9 JUMP JUMPDEST PUSH2 0x21D8 PUSH2 0x2CF0 JUMP JUMPDEST PUSH2 0x21E0 PUSH2 0x2D1F JUMP JUMPDEST DUP2 MLOAD PUSH2 0x21F3 SWAP1 PUSH1 0xA3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x2E57 JUMP JUMPDEST POP PUSH1 0x9A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH4 0x1E13380 PUSH1 0x98 SSTORE PUSH2 0x2220 DUP3 PUSH2 0x2D4E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2266 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9F PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x99 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x22F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x696E76616C696420616363657373 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x2312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x340D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE DUP1 PUSH2 0x2364 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6C6C656374204665653A20416D6F756E74206D757374206265203E203000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2396 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x345D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23D9 SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xA3 SLOAD DUP2 LT ISZERO PUSH2 0x2507 JUMPI PUSH1 0xA3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x23FA JUMPI PUSH2 0x23FA PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x0 EQ PUSH2 0x246D JUMPI PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0xA6 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0xA3 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x2435 JUMPI PUSH2 0x2435 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x244A SWAP2 SWAP1 PUSH2 0x33EE JUMP JUMPDEST PUSH2 0x2454 SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x245E SWAP2 SWAP1 PUSH2 0x33EE JUMP JUMPDEST PUSH2 0x2468 SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x24AD JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0xA6 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH2 0x248F SWAP2 SWAP1 PUSH2 0x33EE JUMP JUMPDEST PUSH2 0x2499 SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH2 0x24A3 SWAP2 SWAP1 PUSH2 0x33EE JUMP JUMPDEST PUSH2 0x24AD SWAP2 SWAP1 PUSH2 0x33B5 JUMP JUMPDEST PUSH1 0xA2 PUSH1 0x0 PUSH1 0xA3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x24C4 JUMPI PUSH2 0x24C4 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x24EF SWAP2 SWAP1 PUSH2 0x349E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x24FF DUP2 PUSH2 0x339C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x23DD JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x386D896E9BD972181CFB744681A2DE8D2DAAB22884986FDC60C3947BE36CA01B SWAP1 PUSH1 0x20 ADD PUSH2 0xA32 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2564 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x25C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x64F JUMP JUMPDEST PUSH2 0x25D2 DUP2 PUSH2 0x2BEA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x25FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3304 JUMP JUMPDEST PUSH1 0xA1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x2622 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3339 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA1 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2637 JUMPI PUSH2 0x2637 PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP4 SWAP1 DUP3 SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x269B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26BF SWAP2 SWAP1 PUSH2 0x3444 JUMP JUMPDEST LT ISZERO PUSH2 0x270D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A204D75737420616C6C6F77205370656E64696E6700000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x273D SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x345D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x275C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2780 SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST POP DUP3 PUSH1 0xA1 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x2795 JUMPI PUSH2 0x2795 PUSH2 0x3370 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x17B5 SWAP2 SWAP1 PUSH2 0x349E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x27D9 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x27FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE DUP3 SLOAD DUP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x2 DUP5 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 SWAP1 SWAP3 ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE SWAP1 SWAP2 POP ISZERO PUSH2 0x2970 JUMPI PUSH1 0xA4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x28ED JUMPI PUSH1 0xA5 SLOAD DUP2 PUSH1 0xA0 ADD MLOAD GT ISZERO PUSH2 0x288C JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x2975 JUMP JUMPDEST PUSH2 0x28E6 PUSH2 0x28B1 PUSH2 0x3E8 PUSH2 0x28AB PUSH1 0x64 PUSH1 0x98 SLOAD PUSH2 0x2DCF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x2DCF JUMP JUMPDEST PUSH2 0x28E0 PUSH2 0x28CD DUP5 PUSH1 0xA0 ADD MLOAD PUSH1 0xA5 SLOAD PUSH2 0x2DE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x20 DUP7 ADD MLOAD PUSH2 0x28AB SWAP2 PUSH2 0x2DCF JUMP JUMPDEST SWAP1 PUSH2 0x2DEE JUMP JUMPDEST SWAP2 POP PUSH2 0x2975 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x28FE JUMPI DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0x291E JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP1 POP PUSH2 0x2968 PUSH2 0x293F PUSH2 0x3E8 PUSH2 0x28AB PUSH1 0x64 PUSH1 0x98 SLOAD PUSH2 0x2DCF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28E0 PUSH2 0x2959 DUP6 PUSH1 0xA0 ADD MLOAD TIMESTAMP PUSH2 0x2DE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD PUSH2 0x28AB SWAP1 DUP7 PUSH2 0x2DCF JUMP JUMPDEST SWAP3 POP POP PUSH2 0x2975 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH2 0x120 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x8 ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x2A45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2430B93B32B9BA1D102737BA10309039BA30B5B2B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x64F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A51 DUP5 DUP5 PUSH2 0x703 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0x2A74 JUMPI POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x2A7F JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AEC SWAP2 SWAP1 PUSH2 0x3444 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x2AFD JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2B23 SWAP1 DUP5 SWAP1 PUSH2 0x33D7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9A SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x2B5C SWAP1 ADDRESS SWAP1 DUP10 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x345D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B9F SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA DUP4 PUSH1 0x40 MLOAD PUSH2 0x2BDB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2C83 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x2C5F JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x2C7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x35FB JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF DUP1 DUP5 AND SWAP2 AND LT PUSH2 0x2CAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x35FB JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1029 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3649 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2D17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3649 JUMP JUMPDEST PUSH2 0x1029 PUSH2 0x2DFA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2D46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3649 JUMP JUMPDEST PUSH2 0x1029 PUSH2 0x2E2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA6 DUP2 SWAP1 SSTORE JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2DCB JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2D71 JUMPI PUSH2 0x2D71 PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 EQ PUSH2 0x2D9F JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2D92 JUMPI PUSH2 0x2D92 PUSH2 0x3370 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2DA2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xA6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2DB3 SWAP2 SWAP1 PUSH2 0x349E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x2DC3 DUP2 PUSH2 0x339C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2D56 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DDB DUP3 DUP5 PUSH2 0x33EE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DDB DUP3 DUP5 PUSH2 0x33D7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DDB DUP3 DUP5 PUSH2 0x33B5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2E21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3649 JUMP JUMPDEST PUSH2 0x1029 CALLER PUSH2 0x2BEA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2E51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP1 PUSH2 0x3649 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2E92 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2E92 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2E77 JUMP JUMPDEST POP PUSH2 0x2E9E SWAP3 SWAP2 POP PUSH2 0x2EA2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2E9E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2EA3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2EF0 JUMPI PUSH2 0x2EF0 PUSH2 0x2EB7 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2F1F JUMPI PUSH2 0x2F1F PUSH2 0x2EB7 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2F41 JUMPI PUSH2 0x2F41 PUSH2 0x2EB7 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2F5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2F71 PUSH2 0x2F6C DUP4 PUSH2 0x2F27 JUMP JUMPDEST PUSH2 0x2EF6 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x6 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2F90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2FCF JUMPI PUSH1 0x40 DUP2 DUP10 SUB SLT ISZERO PUSH2 0x2FAD JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2FB5 PUSH2 0x2ECD JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE DUP5 DUP3 ADD CALLDATALOAD DUP6 DUP3 ADD MSTORE DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 PUSH1 0x40 ADD PUSH2 0x2F94 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x300B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3017 DUP6 DUP3 DUP7 ADD PUSH2 0x2F4B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3034 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x25D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x306B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3076 DUP2 PUSH2 0x3043 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x25D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x30A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x30C0 DUP2 PUSH2 0x3084 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x30E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x30EB DUP2 PUSH2 0x3043 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x30FB DUP2 PUSH2 0x3043 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3123 DUP7 DUP3 DUP8 ADD PUSH2 0x2F4B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x313F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2DDB DUP2 PUSH2 0x3043 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x31D5 JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xE0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH2 0x100 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x120 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3167 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x323C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3247 DUP2 PUSH2 0x3043 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x30C0 DUP2 PUSH2 0x3084 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x327C DUP2 PUSH2 0x3043 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x32AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x32B8 PUSH2 0x2F6C DUP3 PUSH2 0x2F27 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x32D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x32F5 JUMPI DUP4 CALLDATALOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x32DC JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A20506F6F6C20646F65736E27742065786973747300000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x33AE JUMPI PUSH2 0x33AE PUSH2 0x3386 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x33D2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x33E9 JUMPI PUSH2 0x33E9 PUSH2 0x3386 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3408 JUMPI PUSH2 0x3408 PUSH2 0x3386 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2DDB DUP2 PUSH2 0x3084 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x34B1 JUMPI PUSH2 0x34B1 PUSH2 0x3386 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x2CC4 DUP2 PUSH2 0x3043 JUMP JUMPDEST DUP1 MLOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2CC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x2CC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2CC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP14 DUP16 SUB SLT ISZERO PUSH2 0x3520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP13 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x353C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP12 POP PUSH2 0x354A PUSH1 0x20 DUP15 ADD PUSH2 0x34B6 JUMP JUMPDEST SWAP11 POP PUSH2 0x3558 PUSH1 0x40 DUP15 ADD PUSH2 0x34B6 JUMP JUMPDEST SWAP10 POP PUSH2 0x3566 PUSH1 0x60 DUP15 ADD PUSH2 0x34B6 JUMP JUMPDEST SWAP9 POP PUSH2 0x3574 PUSH1 0x80 DUP15 ADD PUSH2 0x34C1 JUMP JUMPDEST SWAP8 POP PUSH2 0x3582 PUSH1 0xA0 DUP15 ADD PUSH2 0x34D4 JUMP JUMPDEST SWAP7 POP PUSH2 0x3590 PUSH1 0xC0 DUP15 ADD PUSH2 0x34D4 JUMP JUMPDEST SWAP6 POP PUSH2 0x359E PUSH1 0xE0 DUP15 ADD PUSH2 0x34E6 JUMP JUMPDEST SWAP5 POP PUSH2 0x100 DUP14 ADD MLOAD SWAP4 POP PUSH2 0x120 DUP14 ADD MLOAD SWAP3 POP PUSH2 0x35BD PUSH2 0x140 DUP15 ADD PUSH2 0x34E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x35CC PUSH2 0x160 DUP15 ADD PUSH2 0x34E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2DDB DUP2 PUSH2 0x3043 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF XOR 0xC2 0xC4 0x23 COINBASE LOG3 ADD SWAP14 0xEE PUSH7 0x749B9858BBE1DD SHR 0xDD DIFFICULTY SWAP8 DUP11 SHR DUP7 SMOD 0x23 MULMOD PUSH28 0xCB042864736F6C634300080D00330000000000000000000000000000 ",
							"sourceMap": "1433:21175:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7590:88;7659:5;:12;7590:88;;;160:25:12;;;148:2;133:18;7590:88:11;;;;;;;;7974:268;;;;;;:::i;:::-;;:::i;:::-;;1820:26;;;;;-1:-1:-1;;;;;1820:26:11;;;;;;-1:-1:-1;;;;;2661:32:12;;;2643:51;;2631:2;2616:18;1820:26:11;2497:203:12;8248:139:11;;;;;;:::i;:::-;8319:7;8345:26;;;:17;:26;;;;;;;;:35;;;;;;;;;;8248:139;19885:880;;;;;;:::i;:::-;;:::i;11058:255::-;;;:::i;16537:2189::-;;;;;;:::i;:::-;;:::i;1908:101:0:-;;;:::i;6942:162:11:-;;;:::i;21459:398::-;;;:::i;4474:24::-;;;;;;6307:555;;;;;;:::i;:::-;;:::i;1276:85:0:-;1348:6;;-1:-1:-1;;;;;1348:6:0;1276:85;;4438:30:11;;;;;;20771:455;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3033:54::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6740:25:12;;;6796:2;6781:18;;6774:34;;;;6824:18;;;6817:34;;;;6882:2;6867:18;;6860:34;;;;6925:3;6910:19;;6903:35;;;;6969:3;6954:19;;6947:35;7013:3;6998:19;;6991:35;7057:3;7042:19;;7035:35;7101:3;7086:19;;7079:35;6727:3;6712:19;3033:54:11;6369:751:12;5509:94:11;;;;;;:::i;:::-;;:::i;2595:72::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;8718:629;;;;;;:::i;:::-;;:::i;13943:2062::-;;;;;;:::i;:::-;;:::i;4160:26::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;7761:15:12;;;7743:34;;7813:15;;;;7808:2;7793:18;;7786:43;7845:18;;;7838:34;;;;7903:2;7888:18;;7881:34;7946:3;7931:19;;7924:35;7692:3;7677:19;4160:26:11;7446:519:12;1852:29:11;;;;;-1:-1:-1;;;;;1852:29:11;;;22496:110;;;:::i;4412:20::-;;;;;;;;;;;;8368:14:12;;8361:22;8343:41;;8331:2;8316:18;4412:20:11;8203:187:12;13280:310:11;;;;;;:::i;:::-;;:::i;2854:42::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4227:51;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;9024:25:12;;;9080:2;9065:18;;9058:34;;;;8997:18;4227:51:11;8850:248:12;4525:49:11;;4568:6;4525:49;;22205:156;;;;;;:::i;:::-;;:::i;2902:68::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7185:168;;;:::i;5014:344::-;;;;;;:::i;:::-;;:::i;2976:51::-;;;;;;:::i;:::-;;:::i;10372:582::-;;;;;;:::i;:::-;;:::i;2158:198:0:-;;;;;;:::i;:::-;;:::i;9672:587:11:-;;;;;;:::i;:::-;;:::i;7974:268::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:7;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;;;;;;;;;4739:5:11::1;:12:::0;8074:7;;4729:22;::::1;4721:63;;;;-1:-1:-1::0;;;4721:63:11::1;;;;;;;:::i;:::-;8098:9:::2;8093:143;8113:12;:19;8109:1;:23;8093:143;;;8206:12;8219:1;8206:15;;;;;;;;:::i;:::-;;;;;;;:19;;;8153:17;:26;8171:7;8153:26;;;;;;;;;;;:50;8180:12;8193:1;8180:15;;;;;;;;:::i;:::-;;;;;;;:22;;;8153:50;;;;;;;;;;;:72;;;;8134:3;;;;;:::i;:::-;;;;8093:143;;;;1558:1:0::1;7974:268:11::0;;:::o;19885:880::-;-1:-1:-1;;;;;20009:15:11;;19960:7;20009:15;;;:8;:15;;;;;;;;:21;;;;;;;;19979:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20111:23;;;:13;:23;;;19979:51;20205:26;20245:8;20257:1;20245:13;20241:262;;20363:1;20358:2;20353;20348;20343;20295:13;:23;20309:8;20295:23;;;;;;;;;;;:45;;;:50;;;;:::i;:::-;:55;;;;:::i;:::-;:60;;;;:::i;:::-;:65;;;;:::i;:::-;:69;;;;:::i;:::-;20274:90;;20241:262;;;20484:8;20479:2;20474;20469;20464;20416:13;:23;20430:8;20416:23;;;;;;;;;;;:45;;;:50;;;;:::i;:::-;:55;;;;:::i;:::-;:60;;;;:::i;:::-;:65;;;;:::i;:::-;:76;;;;:::i;:::-;20395:97;;20241:262;20512:21;20587:18;20555:7;:28;;;20537:15;:46;;;;:::i;:::-;20536:69;;;;:::i;:::-;20512:93;;20616:14;20702:13;20671;:23;20685:8;20671:23;;;;;;;;;;;:27;;;4568:6;20635:7;:13;;;:32;;;;:::i;:::-;20634:64;;;;:::i;:::-;20633:82;;;;:::i;:::-;20616:99;-1:-1:-1;20733:25:11;4568:6;20616:99;20733:25;:::i;:::-;20726:32;19885:880;-1:-1:-1;;;;;;;;19885:880:11:o;11058:255::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:7;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;1815:1:2::1;2569:7;;:19:::0;2561:63:::1;;;;-1:-1:-1::0;;;2561:63:2::1;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;11152:4:11::2;::::0;:29:::2;::::0;-1:-1:-1;;;11152:29:11;;11175:4:::2;11152:29;::::0;::::2;2643:51:12::0;11129:20:11::2;::::0;-1:-1:-1;;;;;11152:4:11::2;::::0;:14:::2;::::0;2616:18:12;;11152:29:11::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11191:4;::::0;:60:::2;::::0;-1:-1:-1;;;11191:60:11;;11129:52;;-1:-1:-1;;;;;;11191:4:11::2;::::0;:17:::2;::::0;:60:::2;::::0;11217:4:::2;::::0;929:10:7;;11129:52:11;;11191:60:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;11266:40:11::2;::::0;160:25:12;;;929:10:7;;11266:40:11::2;::::0;148:2:12;133:18;11266:40:11::2;;;;;;;;-1:-1:-1::0;1772:1:2::1;2872:22:::0;;11058:255:11:o;16537:2189::-;1815:1:2;2569:7;;:19;2561:63;;;;-1:-1:-1;;;2561:63:2;;;;;;;:::i;:::-;1815:1;2699:7;:18;16055:8:11::1;::::0;::::1;;16054:9;16046:38;;;::::0;-1:-1:-1;;;16046:38:11;;13174:2:12;16046:38:11::1;::::0;::::1;13156:21:12::0;13213:2;13193:18;;;13186:30;-1:-1:-1;;;13232:18:12;;;13225:46;13288:18;;16046:38:11::1;12972:340:12::0;16046:38:11::1;4739:5:::2;:12:::0;16685:7;;4729:22;::::2;4721:63;;;;-1:-1:-1::0;;;4721:63:11::2;;;;;;;:::i;:::-;16743:10:::3;16704:27;16734:20:::0;;;:8:::3;:20;::::0;;;;;;;:26;;;;;;;;16704:56;;::::3;::::0;::::3;::::0;;;;;;::::3;::::0;::::3;::::0;;;::::3;::::0;;;;::::3;::::0;::::3;::::0;;;;;;;;::::3;::::0;::::3;::::0;;;;;::::3;::::0;::::3;::::0;;;;;::::3;::::0;::::3;::::0;;;;;::::3;::::0;::::3;::::0;;;;;::::3;::::0;::::3;::::0;;;;;::::3;;::::0;;;;;;16783:15;:57:::3;;16826:7;:14;;;16808:15;:32;16783:57;;;16801:4;16783:57;16770:70;;16874:1;16858:7;:13;;;:17;16850:54;;;::::0;-1:-1:-1;;;16850:54:11;;13519:2:12;16850:54:11::3;::::0;::::3;13501:21:12::0;13558:2;13538:18;;;13531:30;13597:26;13577:18;;;13570:54;13641:18;;16850:54:11::3;13317:348:12::0;16850:54:11::3;16922:5;16914:68;;;::::0;-1:-1:-1;;;16914:68:11;;13872:2:12;16914:68:11::3;::::0;::::3;13854:21:12::0;13911:2;13891:18;;;13884:30;13950:34;13930:18;;;13923:62;-1:-1:-1;;;14001:18:12;;;13994:48;14059:19;;16914:68:11::3;13670:414:12::0;16914:68:11::3;17029:26;17058:51;17075:10;17087:4;17093:15;17058:16;:51::i;:::-;17029:80;;17120:14;17154:18;17137:7;:14;;;:35;;;;:::i;:::-;17120:52;;17182:14;17199:7;:13;;;17182:30;;17358:6;17315:5;17321:7;:14;;;17315:21;;;;;;;;:::i;:::-;;;;;;;;;;;:40;;;:49;17294:149;;;::::0;-1:-1:-1;;;17294:149:11;;14424:2:12;17294:149:11::3;::::0;::::3;14406:21:12::0;14463:2;14443:18;;;14436:30;14502:34;14482:18;;;14475:62;-1:-1:-1;;;14553:18:12;;;14546:51;14614:19;;17294:149:11::3;14222:417:12::0;17294:149:11::3;17486:29;17536:5;17542:7;:14;;;17536:21;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;::::3;::::0;;::::3;;:28;;::::0;17575:40:::3;::::0;-1:-1:-1;;;17575:40:11;;17596:10:::3;17575:40;::::0;::::3;14818:51:12::0;14885:18;;;14878:34;;;-1:-1:-1;;;;;17536:28:11;;::::3;::::0;-1:-1:-1;17536:28:11;;17575:20:::3;::::0;14791:18:12;;17575:40:11::3;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17676:29;17727:5;17733:7;:14;;;17727:21;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;::::3;::::0;;::::3;;:27:::0;::::3;17815:13:::0;::::3;::::0;17765:64:::3;::::0;-1:-1:-1;;;17765:64:11;;-1:-1:-1;;;;;17727:27:11;;::::3;::::0;-1:-1:-1;17727:27:11;;17765:23:::3;::::0;:64:::3;::::0;17797:4:::3;::::0;17803:10:::3;::::0;17765:64:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;17845:15;17844:16;:78;;;;-1:-1:-1::0;17878:17:11::3;::::0;::::3;::::0;17921:1:::3;17864:32:::0;;;:13:::3;:32;::::0;;;;:54:::3;;::::0;:58;;17844:78:::3;17840:177;;;17978:28;17989:10;18001:4;17978:10;:28::i;:::-;18101:6;18057:5;18063:7;:14;;;18057:21;;;;;;;;:::i;:::-;;;;;;;;;;;:40;;;:50;;;;;;;:::i;:::-;;;;;;;;18161:6;18117:5;18123:7;:14;;;18117:21;;;;;;;;:::i;:::-;;;;;;;;;;;:40;;;:50;;;;;;;:::i;:::-;;;;;;;;18206:7;:13;;;18177:5;18183:7;:14;;;18177:21;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;;:42;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;18244:17:11::3;::::0;::::3;::::0;18230:32:::3;::::0;;;:13:::3;:32;::::0;;;;:46;;18270:6;;18230:32;:46:::3;::::0;18270:6;;18230:46:::3;:::i;:::-;::::0;;;-1:-1:-1;;18332:10:11::3;18359:1;18323:20:::0;;;:8:::3;:20;::::0;;;;;;;:26;;;;;;;;:33:::3;::::0;::::3;:37:::0;;;18370:32:::3;;:36:::0;18420:8:::3;::::0;::::3;;18416:200;;;18494:15;::::0;18453:10:::3;18444:20;::::0;;;:8:::3;:20;::::0;;;;;;;:26;;;;;;;;:47:::3;;:65:::0;18416:200:::3;;;18549:10;18540:20;::::0;;;:8:::3;:20;::::0;;;;;;;:26;;;;;;;;18590:15:::3;18540:47;::::0;;::::3;:65:::0;18416:200:::3;18660:59;::::0;;9024:25:12;;;18703:15:11::3;9080:2:12::0;9065:18;;9058:34;18694:7:11;;18674:10:::3;::::0;18660:59:::3;::::0;8997:18:12;18660:59:11::3;;;;;;;-1:-1:-1::0;;1772:1:2;2872:22;;-1:-1:-1;;;;;;;;;16537:2189:11:o;1908:101:0:-;1348:6;;-1:-1:-1;;;;;1348:6:0;929:10:7;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;1972:30:::1;1999:1;1972:18;:30::i;:::-;1908:101::o:0;6942:162:11:-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:7;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;7002:8:11::1;::::0;::::1;;7001:9;6993:36;;;::::0;-1:-1:-1;;;6993:36:11;;15125:2:12;6993:36:11::1;::::0;::::1;15107:21:12::0;15164:2;15144:18;;;15137:30;-1:-1:-1;;;15183:18:12;;;15176:44;15237:18;;6993:36:11::1;14923:338:12::0;6993:36:11::1;7039:8;:15:::0;;-1:-1:-1;;7039:15:11::1;7050:4;7039:15;::::0;;7082::::1;7064;:33:::0;6942:162::o;21459:398::-;21503:20;;21577:1;21560:263;21585:11;929:14:8;21580:1:11;:26;21560:263;;21657:1;21631:17;;;:14;:17;;;;;:23;;;:27;21627:186;;21685:17;;;;:14;:17;;;;;:24;;;21678:31;;;;:::i;:::-;21759:1;21763:17;;;:14;:17;;;;;:27;21678:31;;-1:-1:-1;21734:64:11;;21759:1;21734:16;:64::i;:::-;21727:71;;;;:::i;:::-;;;21627:186;21608:3;;;;:::i;:::-;;;;21560:263;;;-1:-1:-1;21847:3:11;21459:398;-1:-1:-1;21459:398:11:o;6307:555::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:7;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5432:18:11;::::1;;::::0;;;:10:::1;:18;::::0;;;;;6458:6;;5432:18:::1;;5431:19;5423:62;;;::::0;-1:-1:-1;;;5423:62:11;;15468:2:12;5423:62:11::1;::::0;::::1;15450:21:12::0;15507:2;15487:18;;;15480:30;15546:32;15526:18;;;15519:60;15596:18;;5423:62:11::1;15266:354:12::0;5423:62:11::1;-1:-1:-1::0;;;;;6476:18:11;::::2;;::::0;;;:10:::2;:18;::::0;;;;:25;;-1:-1:-1;;6476:25:11::2;6497:4;6476:25;::::0;;6527:5:::2;:12:::0;:50:::2;;6565:5;:12:::0;6527:50:::2;;;6546:5;:12:::0;:16:::2;::::0;6561:1:::2;::::0;6546:16:::2;:::i;:::-;6511:66;;6625:9;6620:141;6640:12;:19;6636:1;:23;6620:141;;;6731:12;6744:1;6731:15;;;;;;;;:::i;:::-;;;;;;;:19;;;6680:17;:24;6698:5;6680:24;;;;;;;;;;;:48;6705:12;6718:1;6705:15;;;;;;;;:::i;:::-;;;;;;;:22;;;6680:48;;;;;;;;;;;:70;;;;6661:3;;;;;:::i;:::-;;;;6620:141;;;-1:-1:-1::0;;6771:5:11::2;:25:::0;;-1:-1:-1;;;;;6771:25:11;;::::2;-1:-1:-1::0;;;;;;6771:25:11;;::::2;::::0;::::2;::::0;;;6817:37:::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;::::2;;::::0;::::2;::::0;;;6771:5:::2;6817:37:::0;;;;;;;;;;;;;;;;;;6806:5:::2;:49:::0;;6771:25;6806:49;::::2;::::0;;;;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;;;;;;;;;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;;;;;;;;;;;;-1:-1:-1;;6806:49:11;;;;;;;6307:555::o;20771:455::-;-1:-1:-1;;;;;20913:21:11;;20862:29;20913:21;;;:14;:21;;;;;:28;20828:21;;20862:29;20894:48;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20894:48:11;;;;;;;;;;;;;;;;;20862:80;;20957:9;20952:244;-1:-1:-1;;;;;20976:21:11;;;;;;:14;:21;;;;;:28;20972:32;;20952:244;;;-1:-1:-1;;;;;21055:15:11;;21025:27;21055:15;;;:8;:15;;;;;;;;21071:14;:21;;;;;:24;;21025:27;;21071:21;21093:1;;21071:24;;;;;;:::i;:::-;;;;;;;;;21055:41;;;;;;;;;;;21025:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21130:1;21114:7;:13;;;:17;21110:76;;;21164:7;21151;21159:1;21151:10;;;;;;;;:::i;:::-;;;;;;:20;;;;21110:76;-1:-1:-1;21006:3:11;;;;:::i;:::-;;;;20952:244;;;-1:-1:-1;21212:7:11;20771:455;-1:-1:-1;;20771:455:11:o;5509:94::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:7;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;5577:11:11::1;:19:::0;;-1:-1:-1;;;;;;5577:19:11::1;-1:-1:-1::0;;;;;5577:19:11;;;::::1;::::0;;;::::1;::::0;;5509:94::o;8718:629::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:7;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;4739:5:11::1;:12:::0;8811:7;;4729:22;::::1;4721:63;;;;-1:-1:-1::0;;;4721:63:11::1;;;;;;;:::i;:::-;8865:29:::2;8915:5;8921:7;8915:14;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;;;;;;;;-1:-1:-1::0;;;;;8915:21:11::2;8865:72;;9063:6;9026:5;9032:7;9026:14;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;;:43;;9005:153;;;::::0;-1:-1:-1;;;9005:153:11;;15827:2:12;9005:153:11::2;::::0;::::2;15809:21:12::0;15866:2;15846:18;;;15839:30;15905:34;15885:18;;;15878:62;15976:33;15956:18;;;15949:61;16027:19;;9005:153:11::2;15625:427:12::0;9005:153:11::2;9211:40;::::0;-1:-1:-1;;;9211:40:11;;9232:10:::2;9211:40;::::0;::::2;14818:51:12::0;14885:18;;;14878:34;;;-1:-1:-1;;;;;9211:20:11;::::2;::::0;::::2;::::0;14791:18:12;;9211:40:11::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9334:6;9297:5;9303:7;9297:14;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;;:43;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;8718:629:11:o;13943:2062::-;14104:7;1815:1:2;2569:7;;:19;2561:63;;;;-1:-1:-1;;;2561:63:2;;;;;;;:::i;:::-;1815:1;2699:7;:18;16055:8:11::1;::::0;::::1;;16054:9;16046:38;;;::::0;-1:-1:-1;;;16046:38:11;;13174:2:12;16046:38:11::1;::::0;::::1;13156:21:12::0;13213:2;13193:18;;;13186:30;-1:-1:-1;;;13232:18:12;;;13225:46;13288:18;;16046:38:11::1;12972:340:12::0;16046:38:11::1;4739:5:::2;:12:::0;14086:7;;4729:22;::::2;4721:63;;;;-1:-1:-1::0;;;4721:63:11::2;;;;;;;:::i;:::-;14132:8:::3;::::0;::::3;;14131:9;14123:39;;;::::0;-1:-1:-1;;;14123:39:11;;16259:2:12;14123:39:11::3;::::0;::::3;16241:21:12::0;16298:2;16278:18;;;16271:30;-1:-1:-1;;;16317:18:12;;;16310:47;16374:18;;14123:39:11::3;16057:341:12::0;14123:39:11::3;8319:7:::0;8345:26;;;:17;:26;;;;;;;;:35;;;;;;;;;14257:1:::3;14229:29:::0;14221:64:::3;;;::::0;-1:-1:-1;;;14221:64:11;;16605:2:12;14221:64:11::3;::::0;::::3;16587:21:12::0;16644:2;16624:18;;;16617:30;-1:-1:-1;;;16663:18:12;;;16656:52;16725:18;;14221:64:11::3;16403:346:12::0;14221:64:11::3;14392:5;::::0;:24:::3;::::0;-1:-1:-1;;;14392:24:11;;::::3;::::0;::::3;160:25:12::0;;;14331:12:11::3;::::0;;;;;-1:-1:-1;;;;;14392:5:11::3;::::0;:15:::3;::::0;133:18:12;;14392:24:11::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14327:89;;;;;;;;;;;;;;;14488:4;-1:-1:-1::0;;;;;14473:19:11::3;14481:4;;;;;;;;;-1:-1:-1::0;;;;;14481:4:11::3;-1:-1:-1::0;;;;;14473:19:11::3;;:51;;;;;14520:4;-1:-1:-1::0;;;;;14496:28:11::3;:5;14502:7;14496:14;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;:21:::3;:14;::::0;;::::3;;:21;::::0;-1:-1:-1;;;;;14496:21:11::3;:28;14473:51;14465:78;;;::::0;-1:-1:-1;;;14465:78:11;;18826:2:12;14465:78:11::3;::::0;::::3;18808:21:12::0;18865:2;18845:18;;;18838:30;-1:-1:-1;;;18884:18:12;;;18877:45;18939:18;;14465:78:11::3;18624:339:12::0;14465:78:11::3;14553:24;14599:5;14605:7;14599:14;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;::::3;::::0;;::::3;;:20:::0;14704:49:::3;::::0;-1:-1:-1;;;14704:49:11;;14727:10:::3;14704:49;::::0;::::3;19180:34:12::0;14747:4:11::3;19230:18:12::0;;;19223:43;-1:-1:-1;;;;;14599:20:11;;::::3;::::0;-1:-1:-1;14599:20:11;;14704:22:::3;::::0;19115:18:12;;14704:49:11::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:94;;;-1:-1:-1::0;14757:26:11::3;::::0;-1:-1:-1;;;14757:26:11;;::::3;::::0;::::3;160:25:12::0;;;14793:4:11::3;::::0;-1:-1:-1;;;;;14757:17:11;::::3;::::0;::::3;::::0;133:18:12;;14757:26:11::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;14757:41:11::3;;14704:94;14696:128;;;::::0;-1:-1:-1;;;14696:128:11;;19735:2:12;14696:128:11::3;::::0;::::3;19717:21:12::0;19774:2;19754:18;;;19747:30;-1:-1:-1;;;19793:18:12;;;19786:51;19854:18;;14696:128:11::3;19533:345:12::0;14696:128:11::3;14885:54;::::0;-1:-1:-1;;;14885:54:11;;-1:-1:-1;;;;;14885:18:11;::::3;::::0;::::3;::::0;:54:::3;::::0;14904:10:::3;::::0;14924:4:::3;::::0;14931:7;;14885:54:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;14950:23;:11;1043:19:8::0;;1061:1;1043:19;;;956:123;14950:23:11::3;14983:10;14996:21;:11;929:14:8::0;;838:112;14996:21:11::3;14983:34;;15064:26;15093:38;15110:10;15122:2;15126:4;15093:16;:38::i;:::-;15187:10;15178:20;::::0;;;:8:::3;:20;::::0;;;;;;;:24;;;;;;;;:39;;;15227:30:::3;;:40:::0;;15064:67;;-1:-1:-1;;;;;;15227:40:11;::::3;::::0;:30;;15178:20;15227:40:::3;::::0;;;::::3;:::i;:::-;::::0;;;-1:-1:-1;;15286:10:11::3;15277:20;::::0;;;:8:::3;:20;::::0;;;;;;;:24;;;;;;;;:31:::3;;:53:::0;;15312:18;;15277:20;:53:::3;::::0;15312:18;;15277:53:::3;:::i;:::-;::::0;;;-1:-1:-1;;15349:10:11::3;15340:20;::::0;;;:8:::3;:20;::::0;;;;;;;:24;;;;;;;;;15388:15:::3;15340:45;::::0;::::3;:63:::0;8345:26;;;:17;:26;;;;;:35;;;;;;;;;15413:24;;;;;;;:28:::3;;:55:::0;15531:17:::3;8345:35:::0;15541:7:::3;15531:17;:::i;:::-;15512:37;::::0;:15:::3;:37;:::i;:::-;15478:8;:20;15487:10;-1:-1:-1::0;;;;;15478:20:11::3;-1:-1:-1::0;;;;;15478:20:11::3;;;;;;;;;;;;:24;15499:2;15478:24;;;;;;;;;;;:31;;:71;;;;15593:7;15559:8;:20;15568:10;-1:-1:-1::0;;;;;15559:20:11::3;-1:-1:-1::0;;;;;15559:20:11::3;;;;;;;;;;;;:24;15580:2;15559:24;;;;;;;;;;;:31;;:41;;;;15647:7;15610:8;:20;15619:10;-1:-1:-1::0;;;;;15610:20:11::3;-1:-1:-1::0;;;;;15610:20:11::3;;;;;;;;;;;;:24;15631:2;15610:24;;;;;;;;;;;:34;;:44;;;;15697:7;15664:8;:20;15673:10;-1:-1:-1::0;;;;;15664:20:11::3;-1:-1:-1::0;;;;;15664:20:11::3;;;;;;;;;;;;:24;15685:2;15664:24;;;;;;;;;;;:30;;:40;;;;15715:14;:26;15730:10;-1:-1:-1::0;;;;;15715:26:11::3;-1:-1:-1::0;;;;;15715:26:11::3;;;;;;;;;;;;15747:2;15715:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15781:8;:20;15790:10;-1:-1:-1::0;;;;;15781:20:11::3;-1:-1:-1::0;;;;;15781:20:11::3;;;;;;;;;;;;:24;15802:2;15781:24;;;;;;;;;;;15760:14;:18;15775:2;15760:18;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15859:6;-1:-1:-1::0;;;;;15837:28:11::3;:5;15843:7;15837:14;;;;;;;;:::i;:::-;;;;;;;;;;;:18;;;:28;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;15875:22:11::3;::::0;;;:13:::3;:22;::::0;;;;:36;;-1:-1:-1;;;;;15875:36:11;::::3;::::0;:22;:36:::3;::::0;;;::::3;:::i;:::-;::::0;;;-1:-1:-1;;15927:52:11::3;::::0;;-1:-1:-1;;;;;20075:47:12;;20057:66;;15963:15:11::3;20154:2:12::0;20139:18;;20132:34;15954:7:11;;15934:10:::3;::::0;15927:52:::3;::::0;20030:18:12;15927:52:11::3;;;;;;;-1:-1:-1::0;1772:1:2;2872:22;;15996:2:11;13943:2062;-1:-1:-1;;;;;;;;;13943:2062:11:o;4160:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4160:26:11;;;;-1:-1:-1;4160:26:11;;;;;;;:::o;22496:110::-;22570:4;;:29;;-1:-1:-1;;;22570:29:11;;22593:4;22570:29;;;2643:51:12;22544:7:11;;-1:-1:-1;;;;;22570:4:11;;:14;;2616:18:12;;22570:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22563:36;;22496:110;:::o;13280:310::-;-1:-1:-1;;;;;13468:22:11;;13408:14;13468:22;;;:8;:22;;;;;;;;:28;;;;;;;;13434:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13536:47;13477:12;13491:4;13573:9;13536:16;:47::i;:::-;13515:11;:18;;;:68;;;;:::i;:::-;13506:77;13280:310;-1:-1:-1;;;;;13280:310:11:o;22205:156::-;22281:4;22341:13;:11;:13::i;:::-;22304:5;22310:7;22304:14;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;;:50;;22297:57;;22205:156;;;:::o;7185:168::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:7;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;7245:8:11::1;::::0;::::1;;7237:40;;;::::0;-1:-1:-1;;;7237:40:11;;20379:2:12;7237:40:11::1;::::0;::::1;20361:21:12::0;20418:2;20398:18;;;20391:30;-1:-1:-1;;;20437:18:12;;;20430:49;20496:18;;7237:40:11::1;20177:343:12::0;7237:40:11::1;7287:8;:16:::0;;-1:-1:-1;;7287:16:11::1;::::0;;7331:15:::1;7313;:33:::0;7185:168::o;5014:344::-;3111:19:1;3133:25;3156:1;3133:22;:25::i;:::-;3111:47;;3172:14;3168:65;;;3202:13;:20;;-1:-1:-1;;3202:20:1;;;;;3168:65;5133:16:11::1;:14;:16::i;:::-;5159;:14;:16::i;:::-;5185:24;:22;:24::i;:::-;5228:18:::0;;::::1;::::0;:7:::1;::::0;:18:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;5256:4:11::1;:35:::0;;-1:-1:-1;;;;;;5256:35:11::1;-1:-1:-1::0;;;;;5256:35:11;::::1;;::::0;;5311:8:::1;5301:7;:18:::0;5329:22:::1;5342:8:::0;5329:12:::1;:22::i;:::-;3257:14:1::0;3253:99;;;3303:5;3287:21;;-1:-1:-1;;3287:21:1;;;3327:14;;-1:-1:-1;20677:36:12;;3327:14:1;;20665:2:12;20650:18;3327:14:1;;;;;;;3253:99;3101:257;5014:344:11;;:::o;2976:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10372:582::-;4865:11;;-1:-1:-1;;;;;4865:11:11;929:10:7;-1:-1:-1;;;;;4849:27:11;;4841:54;;;;-1:-1:-1;;;4841:54:11;;20926:2:12;4841:54:11;;;20908:21:12;20965:2;20945:18;;;20938:30;-1:-1:-1;;;20984:18:12;;;20977:44;21038:18;;4841:54:11;20724:338:12;4841:54:11;1815:1:2::1;2569:7;;:19:::0;2561:63:::1;;;;-1:-1:-1::0;;;2561:63:2::1;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;10464:10:11;10456:54:::2;;;::::0;-1:-1:-1;;;10456:54:11;;21269:2:12;10456:54:11::2;::::0;::::2;21251:21:12::0;21308:2;21288:18;;;21281:30;21347:33;21327:18;;;21320:61;21398:18;;10456:54:11::2;21067:355:12::0;10456:54:11::2;10520:4;::::0;-1:-1:-1;;;;;10520:4:11::2;:17;929:10:7::0;10560:4:11::2;10567:6;10520:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10590:9;10585:315;10609:7;:14:::0;10605:18;::::2;10585:315;;;10695:7;10703:1;10695:10;;;;;;;;:::i;:::-;;;;;;;;;10709:1;10695:15;:194;;4568:6;10863;10850:9;;4568:6;10817:7;10825:1;10817:10;;;;;;;;:::i;:::-;;;;;;;;;:29;;;;:::i;:::-;10816:43;;;;:::i;:::-;10815:54;;;;:::i;:::-;10814:75;;;;:::i;:::-;10695:194;;;4568:6;10769;10756:9;;4568:6;10732:1;:20;;;;:::i;:::-;10731:34;;;;:::i;:::-;10730:45;;;;:::i;:::-;10729:66;;;;:::i;:::-;10644:13;:25;10658:7;10666:1;10658:10;;;;;;;;:::i;:::-;;;;;;;;;10644:25;;;;;;;;;;;:47;;;:245;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;10625:3:11;;-1:-1:-1;10625:3:11::2;::::0;::::2;:::i;:::-;;;;10585:315;;;-1:-1:-1::0;10914:33:11::2;::::0;160:25:12;;;929:10:7;;10914:33:11::2;::::0;148:2:12;133:18;10914:33:11::2;14:177:12::0;2158:198:0;1348:6;;-1:-1:-1;;;;;1348:6:0;929:10:7;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2246:22:0;::::1;2238:73;;;::::0;-1:-1:-1;;;2238:73:0;;21629:2:12;2238:73:0::1;::::0;::::1;21611:21:12::0;21668:2;21648:18;;;21641:30;21707:34;21687:18;;;21680:62;-1:-1:-1;;;21758:18:12;;;21751:36;21804:19;;2238:73:0::1;21427:402:12::0;2238:73:0::1;2321:28;2340:8;2321:18;:28::i;:::-;2158:198:::0;:::o;9672:587:11:-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:7;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;4739:5:11::1;:12:::0;9758:7;;4729:22;::::1;4721:63;;;;-1:-1:-1::0;;;4721:63:11::1;;;;;;;:::i;:::-;9812:29:::2;9862:5;9868:7;9862:14;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;::::2;::::0;;::::2;;:21;;::::0;9960:48:::2;::::0;-1:-1:-1;;;9960:48:11;;9982:10:::2;9960:48;::::0;::::2;19180:34:12::0;10002:4:11::2;19230:18:12::0;;;19223:43;-1:-1:-1;;;;;9862:21:11;;::::2;::::0;-1:-1:-1;10012:6:11;;9862:21;;9960::::2;::::0;19115:18:12;;9960:48:11::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:58;;9952:99;;;::::0;-1:-1:-1;;;9952:99:11;;22036:2:12;9952:99:11::2;::::0;::::2;22018:21:12::0;22075:2;22055:18;;;22048:30;22114;22094:18;;;22087:58;22162:18;;9952:99:11::2;21834:352:12::0;9952:99:11::2;10104:59;::::0;-1:-1:-1;;;10104:59:11;;-1:-1:-1;;;;;10104:24:11;::::2;::::0;::::2;::::0;:59:::2;::::0;10129:10:::2;::::0;10149:4:::2;::::0;10156:6;;10104:59:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10246:6;10209:5;10215:7;10209:14;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;;:43;;;;;;;:::i;11558:1393::-:0;11689:14;;-1:-1:-1;;;;;11749:26:11;;:104;;11833:20;;;;:14;:20;;;;;11749:104;;;-1:-1:-1;;;;;11790:22:11;;;;;;:8;:22;;;;;;;;:28;;;;;;;;11749:104;11715:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11868:21:11;11864:1081;;12166:8;;;;12162:732;;;12233:15;;12198:11;:32;;;:50;12194:392;;;12281:1;12272:10;;11864:1081;;12194:392;12338:229;12540:26;12561:4;12540:16;12552:3;12540:7;;:11;;:16;;;;:::i;:::-;:20;;:26::i;:::-;12338:172;12456:53;12476:11;:32;;;12456:15;;:19;;:53;;;;:::i;:::-;12410:15;;;;12338:42;;;;:88;;:71;:88::i;:172::-;:201;;:229::i;:::-;12329:238;;11864:1081;;12162:732;12624:11;12638:9;:59;;12682:11;:15;;;12638:59;;;12657:18;;;;12677:1;8345:26;;;:17;:26;;;;;;;;:35;;;;;;;;;12650:29;12624:73;;12724:155;12835:26;12856:4;12835:16;12847:3;12835:7;;:11;;:16;;;;:::i;:26::-;12724:85;12755:53;12775:11;:32;;;12755:15;:19;;:53;;;;:::i;:::-;12724:17;;;;:26;;12746:3;12724:21;:26::i;:155::-;12715:164;;12606:288;11864:1081;;;12933:1;12924:10;;11864:1081;11705:1246;11558:1393;;;;;:::o;18977:662::-;-1:-1:-1;;;;;19075:15:11;;19045:27;19075:15;;;:8;:15;;;;;;;;:21;;;;;;;;;19045:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19106;;;;-1:-1:-1;;;19106:51:11;;22393:2:12;19106:51:11;;;22375:21:12;22432:2;22412:18;;;22405:30;-1:-1:-1;;;22451:18:12;;;22444:51;22512:18;;19106:51:11;22191:345:12;19106:51:11;19168:17;19188:28;19204:5;19211:4;19188:15;:28::i;:::-;19168:48;-1:-1:-1;19230:14:11;;;:77;;-1:-1:-1;19262:17:11;;;;19306:1;19248:32;;;:13;:32;;;;;:54;;;:59;19230:77;19226:114;;;19323:7;;18977:662;;:::o;19226:114::-;19368:4;;:29;;-1:-1:-1;;;19368:29:11;;19391:4;19368:29;;;2643:51:12;19350:15:11;;-1:-1:-1;;;;;19368:4:11;;:14;;2616:18:12;;19368:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19350:47;;19412:7;19423:1;19412:12;19408:49;;19440:7;;;18977:662;;:::o;19408:49::-;19480:17;;;;19466:32;;;;:13;:32;;;;;:54;;:67;;19524:9;;19466:32;:67;;19524:9;;19466:67;:::i;:::-;;;;-1:-1:-1;;19543:4:11;;:49;;-1:-1:-1;;;19543:49:11;;-1:-1:-1;;;;;19543:4:11;;;;:17;;:49;;19569:4;;19575:5;;19582:9;;19543:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;19615:5;-1:-1:-1;;;;;19607:25:11;;19622:9;19607:25;;;;160::12;;148:2;133:18;;14:177;19607:25:11;;;;;;;;19035:604;;;18977:662;;:::o;2510:187:0:-;2602:6;;;-1:-1:-1;;;;;2618:17:0;;;-1:-1:-1;;;;;;2618:17:0;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;5287:808:1:-;5351:4;5684:13;;;;;;;5680:409;;;5738:7;:12;;5749:1;5738:12;:61;;;;-1:-1:-1;5793:4:1;1476:19:6;:23;5738:61:1;5713:166;;;;-1:-1:-1;;;5713:166:1;;;;;;;:::i;:::-;-1:-1:-1;5900:5:1;;5287:808;-1:-1:-1;5287:808:1:o;5680:409::-;5944:12;;:22;;;;:12;;:22;5936:81;;;;-1:-1:-1;;;5936:81:1;;;;;;;:::i;:::-;-1:-1:-1;6031:12:1;:22;;-1:-1:-1;;6031:22:1;;;;;;;;;;;;-1:-1:-1;;5287:808:1:o;5680:409::-;5287:808;;;:::o;711:59:7:-;4698:13:1;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:1;;;;;;;:::i;988:95:0:-;4698:13:1;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:1;;;;;;;:::i;:::-;1050:26:0::1;:24;:26::i;1853:111:2:-:0;4698:13:1;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:1;;;;;;;:::i;:::-;1923:34:2::1;:32;:34::i;5688:215:11:-:0;5768:1;5756:9;:13;;;5779:118;5803:8;:15;5799:1;:19;5779:118;;;5852:8;5861:1;5852:11;;;;;;;;:::i;:::-;;;;;;;5867:1;5852:16;:34;;5875:8;5884:1;5875:11;;;;;;;;:::i;:::-;;;;;;;5852:34;;;5871:1;5852:34;5839:9;;:47;;;;;;;:::i;:::-;;;;-1:-1:-1;5820:3:11;;-1:-1:-1;5820:3:11;;;:::i;:::-;;;;5779:118;;;;5688:215;:::o;3476:96:10:-;3534:7;3560:5;3564:1;3560;:5;:::i;:::-;3553:12;3476:96;-1:-1:-1;;;3476:96:10:o;3133:::-;3191:7;3217:5;3221:1;3217;:5;:::i;3861:96::-;3919:7;3945:5;3949:1;3945;:5;:::i;1089:111:0:-;4698:13:1;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:1;;;;;;;:::i;:::-;1161:32:0::1;929:10:7::0;1161:18:0::1;:32::i;1970:109:2:-:0;4698:13:1;;;;;;;4690:69;;;;-1:-1:-1;;;4690:69:1;;;;;;;:::i;:::-;1772:1:2::1;2050:22:::0;;1970:109::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:127:12;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:257;400:4;394:11;;;432:17;;479:18;464:34;;500:22;;;461:62;458:88;;;526:18;;:::i;:::-;562:4;555:24;328:257;:::o;590:275::-;661:2;655:9;726:2;707:13;;-1:-1:-1;;703:27:12;691:40;;761:18;746:34;;782:22;;;743:62;740:88;;;808:18;;:::i;:::-;844:2;837:22;590:275;;-1:-1:-1;590:275:12:o;870:195::-;942:4;975:18;967:6;964:30;961:56;;;997:18;;:::i;:::-;-1:-1:-1;1042:1:12;1038:14;1054:4;1034:25;;870:195::o;1070:959::-;1136:5;1189:3;1182:4;1174:6;1170:17;1166:27;1156:55;;1207:1;1204;1197:12;1156:55;1243:6;1230:20;1269:4;1293:72;1309:55;1361:2;1309:55;:::i;:::-;1293:72;:::i;:::-;1399:15;;;1485:1;1481:10;;;;1469:23;;1465:32;;;1430:12;;;;1509:15;;;1506:35;;;1537:1;1534;1527:12;1506:35;1573:2;1565:6;1561:15;1585:415;1601:6;1596:3;1593:15;1585:415;;;1679:4;1673:3;1668;1664:13;1660:24;1657:114;;;1725:1;1754:2;1750;1743:14;1657:114;1797:22;;:::i;:::-;1846:17;;1832:32;;1913:12;;;1900:26;1884:14;;;1877:50;1940:18;;1978:12;;;;1627:4;1618:14;1585:415;;;-1:-1:-1;2018:5:12;1070:959;-1:-1:-1;;;;;;1070:959:12:o;2034:458::-;2157:6;2165;2218:2;2206:9;2197:7;2193:23;2189:32;2186:52;;;2234:1;2231;2224:12;2186:52;2270:9;2257:23;2247:33;;2331:2;2320:9;2316:18;2303:32;2358:18;2350:6;2347:30;2344:50;;;2390:1;2387;2380:12;2344:50;2413:73;2478:7;2469:6;2458:9;2454:22;2413:73;:::i;:::-;2403:83;;;2034:458;;;;;:::o;2705:248::-;2773:6;2781;2834:2;2822:9;2813:7;2809:23;2805:32;2802:52;;;2850:1;2847;2840:12;2802:52;-1:-1:-1;;2873:23:12;;;2943:2;2928:18;;;2915:32;;-1:-1:-1;2705:248:12:o;2958:131::-;-1:-1:-1;;;;;3033:31:12;;3023:42;;3013:70;;3079:1;3076;3069:12;3094:315;3162:6;3170;3223:2;3211:9;3202:7;3198:23;3194:32;3191:52;;;3239:1;3236;3229:12;3191:52;3278:9;3265:23;3297:31;3322:5;3297:31;:::i;:::-;3347:5;3399:2;3384:18;;;;3371:32;;-1:-1:-1;;;3094:315:12:o;3414:118::-;3500:5;3493:13;3486:21;3479:5;3476:32;3466:60;;3522:1;3519;3512:12;3537:377;3611:6;3619;3627;3680:2;3668:9;3659:7;3655:23;3651:32;3648:52;;;3696:1;3693;3686:12;3648:52;3732:9;3719:23;3709:33;;3789:2;3778:9;3774:18;3761:32;3751:42;;3843:2;3832:9;3828:18;3815:32;3856:28;3878:5;3856:28;:::i;:::-;3903:5;3893:15;;;3537:377;;;;;:::o;3919:666::-;4051:6;4059;4067;4120:2;4108:9;4099:7;4095:23;4091:32;4088:52;;;4136:1;4133;4126:12;4088:52;4175:9;4162:23;4194:31;4219:5;4194:31;:::i;:::-;4244:5;-1:-1:-1;4301:2:12;4286:18;;4273:32;4314:33;4273:32;4314:33;:::i;:::-;4366:7;-1:-1:-1;4424:2:12;4409:18;;4396:32;4451:18;4440:30;;4437:50;;;4483:1;4480;4473:12;4437:50;4506:73;4571:7;4562:6;4551:9;4547:22;4506:73;:::i;:::-;4496:83;;;3919:666;;;;;:::o;4590:247::-;4649:6;4702:2;4690:9;4681:7;4677:23;4673:32;4670:52;;;4718:1;4715;4708:12;4670:52;4757:9;4744:23;4776:31;4801:5;4776:31;:::i;4842:1337::-;5073:2;5125:21;;;5195:13;;5098:18;;;5217:22;;;5044:4;;5073:2;5258;;5276:18;;;;5317:15;;;5044:4;5360:793;5374:6;5371:1;5368:13;5360:793;;;5433:13;;5471:9;;5459:22;;5521:11;;;5515:18;5501:12;;;5494:40;5574:11;;;5568:18;5554:12;;;5547:40;5610:4;5654:11;;;5648:18;5634:12;;;5627:40;5690:4;5734:11;;;5728:18;5714:12;;;5707:40;5770:4;5814:11;;;5808:18;5794:12;;;5787:40;5850:4;5894:11;;;5888:18;5874:12;;;5867:40;5930:4;5974:11;;;5968:18;5954:12;;;5947:40;6010:6;6056:11;;;6050:18;6036:12;;;6029:40;6098:6;6089:16;;;;6128:15;;;;5396:1;5389:9;5360:793;;;-1:-1:-1;6170:3:12;;4842:1337;-1:-1:-1;;;;;;;4842:1337:12:o;6184:180::-;6243:6;6296:2;6284:9;6275:7;6271:23;6267:32;6264:52;;;6312:1;6309;6302:12;6264:52;-1:-1:-1;6335:23:12;;6184:180;-1:-1:-1;6184:180:12:o;7125:316::-;7202:6;7210;7218;7271:2;7259:9;7250:7;7246:23;7242:32;7239:52;;;7287:1;7284;7277:12;7239:52;-1:-1:-1;;7310:23:12;;;7380:2;7365:18;;7352:32;;-1:-1:-1;7431:2:12;7416:18;;;7403:32;;7125:316;-1:-1:-1;7125:316:12:o;8395:450::-;8469:6;8477;8485;8538:2;8526:9;8517:7;8513:23;8509:32;8506:52;;;8554:1;8551;8544:12;8506:52;8593:9;8580:23;8612:31;8637:5;8612:31;:::i;:::-;8662:5;-1:-1:-1;8714:2:12;8699:18;;8686:32;;-1:-1:-1;8770:2:12;8755:18;;8742:32;8783:30;8742:32;8783:30;:::i;9103:1038::-;9196:6;9204;9257:2;9245:9;9236:7;9232:23;9228:32;9225:52;;;9273:1;9270;9263:12;9225:52;9312:9;9299:23;9331:31;9356:5;9331:31;:::i;:::-;9381:5;-1:-1:-1;9405:2:12;9443:18;;;9430:32;9485:18;9474:30;;9471:50;;;9517:1;9514;9507:12;9471:50;9540:22;;9593:4;9585:13;;9581:27;-1:-1:-1;9571:55:12;;9622:1;9619;9612:12;9571:55;9658:2;9645:16;9681:72;9697:55;9749:2;9697:55;:::i;9681:72::-;9787:15;;;9869:1;9865:10;;;;9857:19;;9853:28;;;9818:12;;;;9893:19;;;9890:39;;;9925:1;9922;9915:12;9890:39;9949:11;;;;9969:142;9985:6;9980:3;9977:15;9969:142;;;10051:17;;10039:30;;10002:12;;;;10089;;;;9969:142;;;10130:5;10120:15;;;;;;;9103:1038;;;;;:::o;10146:356::-;10348:2;10330:21;;;10367:18;;;10360:30;10426:34;10421:2;10406:18;;10399:62;10493:2;10478:18;;10146:356::o;10507:352::-;10709:2;10691:21;;;10748:2;10728:18;;;10721:30;10787;10782:2;10767:18;;10760:58;10850:2;10835:18;;10507:352::o;10864:127::-;10925:10;10920:3;10916:20;10913:1;10906:31;10956:4;10953:1;10946:15;10980:4;10977:1;10970:15;10996:127;11057:10;11052:3;11048:20;11045:1;11038:31;11088:4;11085:1;11078:15;11112:4;11109:1;11102:15;11128:135;11167:3;11188:17;;;11185:43;;11208:18;;:::i;:::-;-1:-1:-1;11255:1:12;11244:13;;11128:135::o;11268:217::-;11308:1;11334;11324:132;;11378:10;11373:3;11369:20;11366:1;11359:31;11413:4;11410:1;11403:15;11441:4;11438:1;11431:15;11324:132;-1:-1:-1;11470:9:12;;11268:217::o;11490:125::-;11530:4;11558:1;11555;11552:8;11549:34;;;11563:18;;:::i;:::-;-1:-1:-1;11600:9:12;;11490:125::o;11620:168::-;11660:7;11726:1;11722;11718:6;11714:14;11711:1;11708:21;11703:1;11696:9;11689:17;11685:45;11682:71;;;11733:18;;:::i;:::-;-1:-1:-1;11773:9:12;;11620:168::o;11793:355::-;11995:2;11977:21;;;12034:2;12014:18;;;12007:30;12073:33;12068:2;12053:18;;12046:61;12139:2;12124:18;;11793:355::o;12153:184::-;12223:6;12276:2;12264:9;12255:7;12251:23;12247:32;12244:52;;;12292:1;12289;12282:12;12244:52;-1:-1:-1;12315:16:12;;12153:184;-1:-1:-1;12153:184:12:o;12342:375::-;-1:-1:-1;;;;;12600:15:12;;;12582:34;;12652:15;;;;12647:2;12632:18;;12625:43;12699:2;12684:18;;12677:34;;;;12532:2;12517:18;;12342:375::o;12722:245::-;12789:6;12842:2;12830:9;12821:7;12817:23;12813:32;12810:52;;;12858:1;12855;12848:12;12810:52;12890:9;12884:16;12909:28;12931:5;12909:28;:::i;14089:128::-;14129:3;14160:1;14156:6;14153:1;14150:13;14147:39;;;14166:18;;:::i;:::-;-1:-1:-1;14202:9:12;;14089:128::o;16754:138::-;16833:13;;16855:31;16833:13;16855:31;:::i;16897:165::-;16975:13;;17028:8;17017:20;;17007:31;;16997:59;;17052:1;17049;17042:12;17067:164;17144:13;;17197:1;17186:20;;;17176:31;;17166:59;;17221:1;17218;17211:12;17236:192;17315:13;;-1:-1:-1;;;;;17357:46:12;;17347:57;;17337:85;;17418:1;17415;17408:12;17433:1186;17596:6;17604;17612;17620;17628;17636;17644;17652;17660;17668;17676:7;17685;17739:3;17727:9;17718:7;17714:23;17710:33;17707:53;;;17756:1;17753;17746:12;17707:53;17788:9;17782:16;17838:26;17831:5;17827:38;17820:5;17817:49;17807:77;;17880:1;17877;17870:12;17807:77;17903:5;-1:-1:-1;17927:49:12;17972:2;17957:18;;17927:49;:::i;:::-;17917:59;;17995:49;18040:2;18029:9;18025:18;17995:49;:::i;:::-;17985:59;;18063:49;18108:2;18097:9;18093:18;18063:49;:::i;:::-;18053:59;;18131:49;18175:3;18164:9;18160:19;18131:49;:::i;:::-;18121:59;;18199:48;18242:3;18231:9;18227:19;18199:48;:::i;:::-;18189:58;;18266:48;18309:3;18298:9;18294:19;18266:48;:::i;:::-;18256:58;;18333:50;18378:3;18367:9;18363:19;18333:50;:::i;:::-;18323:60;;18423:3;18412:9;18408:19;18402:26;18392:36;;18468:3;18457:9;18453:19;18447:26;18437:36;;18493:50;18538:3;18527:9;18523:19;18493:50;:::i;:::-;18482:61;;18563:50;18608:3;18597:9;18593:19;18563:50;:::i;:::-;18552:61;;17433:1186;;;;;;;;;;;;;;:::o;19277:251::-;19347:6;19400:2;19388:9;19379:7;19375:23;19371:32;19368:52;;;19416:1;19413;19406:12;19368:52;19448:9;19442:16;19467:31;19492:5;19467:31;:::i;22541:410::-;22743:2;22725:21;;;22782:2;22762:18;;;22755:30;22821:34;22816:2;22801:18;;22794:62;-1:-1:-1;;;22887:2:12;22872:18;;22865:44;22941:3;22926:19;;22541:410::o;22956:407::-;23158:2;23140:21;;;23197:2;23177:18;;;23170:30;23236:34;23231:2;23216:18;;23209:62;-1:-1:-1;;;23302:2:12;23287:18;;23280:41;23353:3;23338:19;;22956:407::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2805200",
								"executionCost": "3061",
								"totalCost": "2808261"
							},
							"external": {
								"AdminWETHWithdraw()": "infinite",
								"PRECISION_FACTOR()": "229",
								"PauseStaking()": "50873",
								"ResumeStaking()": "50841",
								"WETH()": "2449",
								"addPool(address,address,(uint256,uint256)[])": "infinite",
								"addRewardToPool(uint256,uint256)": "infinite",
								"calculateReward(address,uint256,bool)": "infinite",
								"depositDetails(uint256)": "19606",
								"deposits(address,uint256)": "19767",
								"getAPR(uint256,uint256)": "2635",
								"getAccMarketFee()": "infinite",
								"getDeposits(address)": "infinite",
								"getHavestAmount(address,uint256)": "infinite",
								"haveSuffecientFundsForReward(uint256)": "infinite",
								"initialize(address,uint256[])": "infinite",
								"isPaused()": "2377",
								"onlyaddress()": "2428",
								"owner()": "2443",
								"pausedTimestamp()": "2329",
								"periodPoolMap(uint256)": "4710",
								"periodSum()": "2352",
								"poolLength()": "2317",
								"pools(uint256)": "13268",
								"receiveWETHFee(uint256)": "infinite",
								"renounceOwnership()": "28229",
								"setOnlyAddress(address)": "26816",
								"stake(uint256,uint256,uint256)": "infinite",
								"tokenPools(address)": "2636",
								"totalReward()": "infinite",
								"transferOwnership(address)": "infinite",
								"updateAPR(uint256,(uint256,uint256)[])": "infinite",
								"userDepositMap(address,uint256)": "4793",
								"vestingAPRPerPool(uint256,uint256)": "2655",
								"withdraw(uint256,uint256,bool)": "infinite",
								"withdrawRewardfromPool(uint256,uint256)": "infinite"
							},
							"internal": {
								"_calculateReward(address,uint256,bool)": "infinite",
								"harvestFee(address,uint256)": "infinite",
								"setPeriodSum(uint256[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1433,
									"end": 22608,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 1433,
									"end": 22608,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1433,
									"end": 22608,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1433,
									"end": 22608,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1433,
									"end": 22608,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1433,
									"end": 22608,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1433,
									"end": 22608,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1433,
									"end": 22608,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1433,
									"end": 22608,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1433,
									"end": 22608,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1433,
									"end": 22608,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1433,
									"end": 22608,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1433,
									"end": 22608,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1433,
									"end": 22608,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1433,
									"end": 22608,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1433,
									"end": 22608,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1433,
									"end": 22608,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1433,
									"end": 22608,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1433,
									"end": 22608,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1433,
									"end": 22608,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1433,
									"end": 22608,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cf18c2c42341a3019dee66749b9858bbe1dd1cdd44978a1c860723097bcb042864736f6c634300080d0033",
									".code": [
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "A54C83F6"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "CCD34CD5"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "E7272866"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "E7272866"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "E76BA191"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "E7C928B1"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "F8CE1F31"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "CCD34CD5"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "CF5BADC6"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "D6D68177"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "E179B5C3"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "B0203A80"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "B0203A80"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "B187BD26"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "BA41795F"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "C3D2C3C1"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "C4B91C4D"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "A54C83F6"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "A638F2E2"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "AC4AFA38"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "AD5C4648"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "750142E6"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "911EF508"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "911EF508"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "94F649DD"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "9AAAB954"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "A2234080"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "A32A66A7"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "750142E6"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "82A14459"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "88F67D77"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "24A723D4"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "24A723D4"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "2C86714C"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "33CFCD3B"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "73F64499"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "81E3EDA"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "C756997"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "110D458E"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "1EE7F3C4"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 22608,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7590,
											"end": 7678,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 7590,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7659,
											"end": 7664,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 7659,
											"end": 7671,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7590,
											"end": 7678,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 7590,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7590,
											"end": 7678,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7590,
											"end": 7678,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7590,
											"end": 7678,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 7590,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7590,
											"end": 7678,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7590,
											"end": 7678,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7590,
											"end": 7678,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7590,
											"end": 7678,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7590,
											"end": 7678,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7590,
											"end": 7678,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7590,
											"end": 7678,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 7974,
											"end": 8242,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7974,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7974,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 7974,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 7974,
											"end": 8242,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 7974,
											"end": 8242,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7974,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 7974,
											"end": 8242,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7974,
											"end": 8242,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 7974,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7974,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 7974,
											"end": 8242,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7974,
											"end": 8242,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 7974,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7974,
											"end": 8242,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1820,
											"end": 1846,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1820,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1820,
											"end": 1846,
											"name": "PUSH",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 1820,
											"end": 1846,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1820,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1820,
											"end": 1846,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1820,
											"end": 1846,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1820,
											"end": 1846,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1820,
											"end": 1846,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1820,
											"end": 1846,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1820,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1820,
											"end": 1846,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1820,
											"end": 1846,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2661,
											"end": 2693,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2661,
											"end": 2693,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2661,
											"end": 2693,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2631,
											"end": 2633,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2616,
											"end": 2634,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1820,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 2497,
											"end": 2700,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8248,
											"end": 8387,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 8248,
											"end": 8387,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8248,
											"end": 8387,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 8248,
											"end": 8387,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 8248,
											"end": 8387,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 8248,
											"end": 8387,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8248,
											"end": 8387,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8248,
											"end": 8387,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8248,
											"end": 8387,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 8248,
											"end": 8387,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8319,
											"end": 8326,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8362,
											"name": "PUSH",
											"source": 11,
											"value": "9C"
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8248,
											"end": 8387,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19885,
											"end": 20765,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 19885,
											"end": 20765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19885,
											"end": 20765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 19885,
											"end": 20765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 19885,
											"end": 20765,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 19885,
											"end": 20765,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 19885,
											"end": 20765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 19885,
											"end": 20765,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 19885,
											"end": 20765,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 19885,
											"end": 20765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19885,
											"end": 20765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 19885,
											"end": 20765,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 11058,
											"end": 11313,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 11058,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11058,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 11058,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 11058,
											"end": 11313,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 16537,
											"end": 18726,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 16537,
											"end": 18726,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16537,
											"end": 18726,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 16537,
											"end": 18726,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 16537,
											"end": 18726,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 16537,
											"end": 18726,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 16537,
											"end": 18726,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 16537,
											"end": 18726,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 16537,
											"end": 18726,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 16537,
											"end": 18726,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16537,
											"end": 18726,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 16537,
											"end": 18726,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1908,
											"end": 2009,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1908,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1908,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1908,
											"end": 2009,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6942,
											"end": 7104,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 6942,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6942,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 6942,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 6942,
											"end": 7104,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 21459,
											"end": 21857,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 21459,
											"end": 21857,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21459,
											"end": 21857,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 21459,
											"end": 21857,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 21459,
											"end": 21857,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4474,
											"end": 4498,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 4474,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4474,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 4474,
											"end": 4498,
											"name": "PUSH",
											"source": 11,
											"value": "A6"
										},
										{
											"begin": 4474,
											"end": 4498,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4474,
											"end": 4498,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4474,
											"end": 4498,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6307,
											"end": 6862,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 6307,
											"end": 6862,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6307,
											"end": 6862,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 6307,
											"end": 6862,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 6307,
											"end": 6862,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6307,
											"end": 6862,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6307,
											"end": 6862,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 6307,
											"end": 6862,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6307,
											"end": 6862,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 6307,
											"end": 6862,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6307,
											"end": 6862,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 6307,
											"end": 6862,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1276,
											"end": 1361,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1276,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1276,
											"end": 1361,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4438,
											"end": 4468,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 4438,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4438,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 4438,
											"end": 4468,
											"name": "PUSH",
											"source": 11,
											"value": "A5"
										},
										{
											"begin": 4438,
											"end": 4468,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4438,
											"end": 4468,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4438,
											"end": 4468,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6740,
											"end": 6765,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 6740,
											"end": 6765,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 6740,
											"end": 6765,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6796,
											"end": 6798,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6781,
											"end": 6799,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 6781,
											"end": 6799,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6774,
											"end": 6808,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 6774,
											"end": 6808,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6774,
											"end": 6808,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 6774,
											"end": 6808,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6824,
											"end": 6842,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 6824,
											"end": 6842,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6824,
											"end": 6842,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6817,
											"end": 6851,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6817,
											"end": 6851,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6817,
											"end": 6851,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6817,
											"end": 6851,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6882,
											"end": 6884,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6867,
											"end": 6885,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6867,
											"end": 6885,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6860,
											"end": 6894,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6860,
											"end": 6894,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6860,
											"end": 6894,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6860,
											"end": 6894,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6928,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 6910,
											"end": 6929,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 6929,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6903,
											"end": 6938,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6903,
											"end": 6938,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6903,
											"end": 6938,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6903,
											"end": 6938,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6969,
											"end": 6972,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 6954,
											"end": 6973,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6954,
											"end": 6973,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6947,
											"end": 6982,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7013,
											"end": 7016,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 6998,
											"end": 7017,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6998,
											"end": 7017,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6991,
											"end": 7026,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7057,
											"end": 7060,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7042,
											"end": 7061,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7035,
											"end": 7070,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7101,
											"end": 7104,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 7086,
											"end": 7105,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7086,
											"end": 7105,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7079,
											"end": 7114,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6727,
											"end": 6730,
											"name": "PUSH",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 6712,
											"end": 6731,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3033,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 6369,
											"end": 7120,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5509,
											"end": 5603,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 5509,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5509,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 5509,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 5509,
											"end": 5603,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5509,
											"end": 5603,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5509,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 5509,
											"end": 5603,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5509,
											"end": 5603,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 5509,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5509,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 5509,
											"end": 5603,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "PUSH",
											"source": 11,
											"value": "9C"
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2667,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8718,
											"end": 9347,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 8718,
											"end": 9347,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8718,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 8718,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 8718,
											"end": 9347,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 8718,
											"end": 9347,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8718,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8718,
											"end": 9347,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8718,
											"end": 9347,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 8718,
											"end": 9347,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8718,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 8718,
											"end": 9347,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13943,
											"end": 16005,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 13943,
											"end": 16005,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13943,
											"end": 16005,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 13943,
											"end": 16005,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 13943,
											"end": 16005,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 13943,
											"end": 16005,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13943,
											"end": 16005,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 13943,
											"end": 16005,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13943,
											"end": 16005,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 13943,
											"end": 16005,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13943,
											"end": 16005,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 13943,
											"end": 16005,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7761,
											"end": 7776,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 7761,
											"end": 7776,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7761,
											"end": 7776,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7743,
											"end": 7777,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7743,
											"end": 7777,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7813,
											"end": 7828,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 7813,
											"end": 7828,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7813,
											"end": 7828,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7813,
											"end": 7828,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7808,
											"end": 7810,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7811,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7793,
											"end": 7811,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7786,
											"end": 7829,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7838,
											"end": 7872,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7838,
											"end": 7872,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7838,
											"end": 7872,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7838,
											"end": 7872,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7903,
											"end": 7905,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7888,
											"end": 7906,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7888,
											"end": 7906,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7881,
											"end": 7915,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7946,
											"end": 7949,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 7931,
											"end": 7950,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7931,
											"end": 7950,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7924,
											"end": 7959,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7692,
											"end": 7695,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 7677,
											"end": 7696,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 7446,
											"end": 7965,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1852,
											"end": 1881,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1852,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1852,
											"end": 1881,
											"name": "PUSH",
											"source": 11,
											"value": "9A"
										},
										{
											"begin": 1852,
											"end": 1881,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1852,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1852,
											"end": 1881,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1852,
											"end": 1881,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1852,
											"end": 1881,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1852,
											"end": 1881,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22496,
											"end": 22606,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 22496,
											"end": 22606,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22496,
											"end": 22606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 22496,
											"end": 22606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 22496,
											"end": 22606,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4412,
											"end": 4432,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 4412,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4412,
											"end": 4432,
											"name": "PUSH",
											"source": 11,
											"value": "A4"
										},
										{
											"begin": 4412,
											"end": 4432,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4412,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 4412,
											"end": 4432,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4412,
											"end": 4432,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4412,
											"end": 4432,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4412,
											"end": 4432,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4412,
											"end": 4432,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4412,
											"end": 4432,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 4412,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4412,
											"end": 4432,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4412,
											"end": 4432,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8368,
											"end": 8382,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8368,
											"end": 8382,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8343,
											"end": 8384,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8343,
											"end": 8384,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8331,
											"end": 8333,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4412,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 8203,
											"end": 8390,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13280,
											"end": 13590,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 13280,
											"end": 13590,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13280,
											"end": 13590,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 13280,
											"end": 13590,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 13280,
											"end": 13590,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 13280,
											"end": 13590,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13280,
											"end": 13590,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 13280,
											"end": 13590,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13280,
											"end": 13590,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 13280,
											"end": 13590,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13280,
											"end": 13590,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 13280,
											"end": 13590,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "PUSH",
											"source": 11,
											"value": "9D"
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2896,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "PUSH",
											"source": 11,
											"value": "A2"
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9024,
											"end": 9049,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9024,
											"end": 9049,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9024,
											"end": 9049,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9080,
											"end": 9082,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9065,
											"end": 9083,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9065,
											"end": 9083,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9058,
											"end": 9092,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9058,
											"end": 9092,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9058,
											"end": 9092,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9058,
											"end": 9092,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8997,
											"end": 9015,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4227,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 8850,
											"end": 9098,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4525,
											"end": 4574,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 4525,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4525,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "PUSH",
											"source": 11,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4525,
											"end": 4574,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4525,
											"end": 4574,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22205,
											"end": 22361,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 22205,
											"end": 22361,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22205,
											"end": 22361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 22205,
											"end": 22361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 22205,
											"end": 22361,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 22205,
											"end": 22361,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 22205,
											"end": 22361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 22205,
											"end": 22361,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 22205,
											"end": 22361,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 22205,
											"end": 22361,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22205,
											"end": 22361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 22205,
											"end": 22361,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH",
											"source": 11,
											"value": "9E"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2970,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7185,
											"end": 7353,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 7185,
											"end": 7353,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7185,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 7185,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 7185,
											"end": 7353,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5014,
											"end": 5358,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 5014,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5014,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 5014,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 5014,
											"end": 5358,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5014,
											"end": 5358,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5014,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 5014,
											"end": 5358,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5014,
											"end": 5358,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 5014,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5014,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 5014,
											"end": 5358,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10372,
											"end": 10954,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 10372,
											"end": 10954,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10372,
											"end": 10954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 10372,
											"end": 10954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 10372,
											"end": 10954,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 10372,
											"end": 10954,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10372,
											"end": 10954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 10372,
											"end": 10954,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10372,
											"end": 10954,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 10372,
											"end": 10954,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10372,
											"end": 10954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 10372,
											"end": 10954,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9672,
											"end": 10259,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 9672,
											"end": 10259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9672,
											"end": 10259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 9672,
											"end": 10259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 9672,
											"end": 10259,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 9672,
											"end": 10259,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9672,
											"end": 10259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9672,
											"end": 10259,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9672,
											"end": 10259,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 9672,
											"end": 10259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9672,
											"end": 10259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 9672,
											"end": 10259,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7974,
											"end": 8242,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 7974,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4739,
											"end": 4744,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 4739,
											"end": 4751,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8074,
											"end": 8081,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8074,
											"end": 8081,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4729,
											"end": 4751,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4729,
											"end": 4751,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8098,
											"end": 8107,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8093,
											"end": 8236,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 8093,
											"end": 8236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8113,
											"end": 8125,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8113,
											"end": 8132,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8109,
											"end": 8110,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8109,
											"end": 8132,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 8093,
											"end": 8236,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8093,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 8093,
											"end": 8236,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8206,
											"end": 8218,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8219,
											"end": 8220,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8206,
											"end": 8225,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8206,
											"end": 8225,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8206,
											"end": 8225,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8170,
											"name": "PUSH",
											"source": 11,
											"value": "9C"
										},
										{
											"begin": 8153,
											"end": 8179,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8171,
											"end": 8178,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8179,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8179,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8179,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8153,
											"end": 8179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8179,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8179,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8179,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8179,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8153,
											"end": 8179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8179,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8153,
											"end": 8179,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8203,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8180,
											"end": 8192,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8193,
											"end": 8194,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8180,
											"end": 8202,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8180,
											"end": 8202,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8180,
											"end": 8202,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8203,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8203,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8203,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8153,
											"end": 8203,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8203,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8203,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8203,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8203,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8153,
											"end": 8203,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8203,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8153,
											"end": 8203,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8225,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8225,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8225,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8153,
											"end": 8225,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8134,
											"end": 8137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8134,
											"end": 8137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8134,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 8134,
											"end": 8137,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8134,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 8134,
											"end": 8137,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8134,
											"end": 8137,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 8134,
											"end": 8137,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8134,
											"end": 8137,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8134,
											"end": 8137,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8134,
											"end": 8137,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8093,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 8093,
											"end": 8236,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8093,
											"end": 8236,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 8093,
											"end": 8236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8093,
											"end": 8236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7974,
											"end": 8242,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7974,
											"end": 8242,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7974,
											"end": 8242,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 19885,
											"end": 20765,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 19885,
											"end": 20765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20009,
											"end": 20024,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20009,
											"end": 20024,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 19960,
											"end": 19967,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20009,
											"end": 20024,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20009,
											"end": 20024,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20009,
											"end": 20024,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20009,
											"end": 20017,
											"name": "PUSH",
											"source": 11,
											"value": "9E"
										},
										{
											"begin": 20009,
											"end": 20024,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20009,
											"end": 20024,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20009,
											"end": 20024,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20009,
											"end": 20024,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20009,
											"end": 20024,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 20009,
											"end": 20024,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 20009,
											"end": 20024,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20009,
											"end": 20024,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 20009,
											"end": 20030,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 20009,
											"end": 20030,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 20009,
											"end": 20030,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20009,
											"end": 20030,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20009,
											"end": 20030,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20009,
											"end": 20030,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 20009,
											"end": 20030,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20009,
											"end": 20030,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "PUSH",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20111,
											"end": 20134,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 20111,
											"end": 20134,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 20111,
											"end": 20134,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20111,
											"end": 20124,
											"name": "PUSH",
											"source": 11,
											"value": "A2"
										},
										{
											"begin": 20111,
											"end": 20134,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20111,
											"end": 20134,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 20111,
											"end": 20134,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19979,
											"end": 20030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20205,
											"end": 20231,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20245,
											"end": 20253,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20257,
											"end": 20258,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20245,
											"end": 20258,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 20241,
											"end": 20503,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 20241,
											"end": 20503,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 20363,
											"end": 20364,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 20358,
											"end": 20360,
											"name": "PUSH",
											"source": 11,
											"value": "1E"
										},
										{
											"begin": 20353,
											"end": 20355,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 20348,
											"end": 20350,
											"name": "PUSH",
											"source": 11,
											"value": "3C"
										},
										{
											"begin": 20343,
											"end": 20345,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20308,
											"name": "PUSH",
											"source": 11,
											"value": "A2"
										},
										{
											"begin": 20295,
											"end": 20318,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20309,
											"end": 20317,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20318,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20318,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20318,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20295,
											"end": 20318,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20318,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20318,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20318,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20318,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20295,
											"end": 20318,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20318,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20295,
											"end": 20318,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20340,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 20295,
											"end": 20340,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20340,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 20295,
											"end": 20345,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20345,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 20295,
											"end": 20345,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 20295,
											"end": 20345,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 20295,
											"end": 20345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 20295,
											"end": 20350,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20350,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 20295,
											"end": 20350,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 20295,
											"end": 20350,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 20295,
											"end": 20350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20355,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 20295,
											"end": 20355,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20355,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20355,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 20295,
											"end": 20355,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 20295,
											"end": 20355,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 20295,
											"end": 20355,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 20295,
											"end": 20360,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20360,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 20295,
											"end": 20360,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 20295,
											"end": 20360,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 20295,
											"end": 20360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 20295,
											"end": 20364,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20364,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20295,
											"end": 20364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 20295,
											"end": 20364,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 20295,
											"end": 20364,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 20295,
											"end": 20364,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20274,
											"end": 20364,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20274,
											"end": 20364,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20241,
											"end": 20503,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 20241,
											"end": 20503,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20241,
											"end": 20503,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 20241,
											"end": 20503,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20484,
											"end": 20492,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20479,
											"end": 20481,
											"name": "PUSH",
											"source": 11,
											"value": "1E"
										},
										{
											"begin": 20474,
											"end": 20476,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 20469,
											"end": 20471,
											"name": "PUSH",
											"source": 11,
											"value": "3C"
										},
										{
											"begin": 20464,
											"end": 20466,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20429,
											"name": "PUSH",
											"source": 11,
											"value": "A2"
										},
										{
											"begin": 20416,
											"end": 20439,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20430,
											"end": 20438,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20439,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20439,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20439,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20416,
											"end": 20439,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20439,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20439,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20439,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20439,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20416,
											"end": 20439,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20439,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20416,
											"end": 20439,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20461,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 20416,
											"end": 20461,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20461,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20466,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 20416,
											"end": 20466,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20466,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20466,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 20416,
											"end": 20466,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 20416,
											"end": 20466,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 20416,
											"end": 20466,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 20416,
											"end": 20471,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20471,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 20416,
											"end": 20471,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 20416,
											"end": 20471,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 20416,
											"end": 20471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20476,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 20416,
											"end": 20476,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20476,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20476,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 20416,
											"end": 20476,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 20416,
											"end": 20476,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 20416,
											"end": 20476,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20481,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 20416,
											"end": 20481,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20481,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20481,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 20416,
											"end": 20481,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 20416,
											"end": 20481,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 20416,
											"end": 20481,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 20416,
											"end": 20492,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20492,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20416,
											"end": 20492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 20416,
											"end": 20492,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 20416,
											"end": 20492,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 20416,
											"end": 20492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20395,
											"end": 20492,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20395,
											"end": 20492,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20241,
											"end": 20503,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 20241,
											"end": 20503,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20512,
											"end": 20533,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20587,
											"end": 20605,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20555,
											"end": 20562,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 20555,
											"end": 20583,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 20555,
											"end": 20583,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20555,
											"end": 20583,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 20537,
											"end": 20552,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 20537,
											"end": 20583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 20537,
											"end": 20583,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20537,
											"end": 20583,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20537,
											"end": 20583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 20537,
											"end": 20583,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 20537,
											"end": 20583,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 20537,
											"end": 20583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20536,
											"end": 20605,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 20536,
											"end": 20605,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20536,
											"end": 20605,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20536,
											"end": 20605,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 20536,
											"end": 20605,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 20536,
											"end": 20605,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 20536,
											"end": 20605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20512,
											"end": 20605,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20512,
											"end": 20605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20616,
											"end": 20630,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20702,
											"end": 20715,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20671,
											"end": 20684,
											"name": "PUSH",
											"source": 11,
											"value": "A2"
										},
										{
											"begin": 20671,
											"end": 20694,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20685,
											"end": 20693,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 20671,
											"end": 20694,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20671,
											"end": 20694,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20671,
											"end": 20694,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20671,
											"end": 20694,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20671,
											"end": 20694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20671,
											"end": 20694,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20671,
											"end": 20694,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20671,
											"end": 20694,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20671,
											"end": 20694,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20671,
											"end": 20694,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20671,
											"end": 20694,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 20671,
											"end": 20698,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20671,
											"end": 20698,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20671,
											"end": 20698,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "PUSH",
											"source": 11,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 20635,
											"end": 20642,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 20635,
											"end": 20648,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20635,
											"end": 20648,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20635,
											"end": 20648,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 20635,
											"end": 20667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 20635,
											"end": 20667,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20635,
											"end": 20667,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20635,
											"end": 20667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 20635,
											"end": 20667,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 20635,
											"end": 20667,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 20635,
											"end": 20667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20634,
											"end": 20698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 20634,
											"end": 20698,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20634,
											"end": 20698,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20634,
											"end": 20698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 20634,
											"end": 20698,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 20634,
											"end": 20698,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 20634,
											"end": 20698,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20633,
											"end": 20715,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 20633,
											"end": 20715,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20633,
											"end": 20715,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20633,
											"end": 20715,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 20633,
											"end": 20715,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 20633,
											"end": 20715,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 20633,
											"end": 20715,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20616,
											"end": 20715,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20733,
											"end": 20758,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "PUSH",
											"source": 11,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 20616,
											"end": 20715,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20733,
											"end": 20758,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 20733,
											"end": 20758,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 20733,
											"end": 20758,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 20733,
											"end": 20758,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20726,
											"end": 20758,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 19885,
											"end": 20765,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19885,
											"end": 20765,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 11058,
											"end": 11313,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 11058,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11152,
											"end": 11156,
											"name": "PUSH",
											"source": 11,
											"value": "9A"
										},
										{
											"begin": 11152,
											"end": 11156,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11175,
											"end": 11179,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11129,
											"end": 11149,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11129,
											"end": 11149,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11152,
											"end": 11156,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11156,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11166,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 11152,
											"end": 11166,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2616,
											"end": 2634,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2616,
											"end": 2634,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 11152,
											"end": 11181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11195,
											"name": "PUSH",
											"source": 11,
											"value": "9A"
										},
										{
											"begin": 11191,
											"end": 11195,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11129,
											"end": 11181,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11129,
											"end": 11181,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11191,
											"end": 11195,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11195,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11208,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 11191,
											"end": 11208,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11217,
											"end": 11221,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 11217,
											"end": 11221,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 929,
											"end": 939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11129,
											"end": 11181,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11129,
											"end": 11181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 11191,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11266,
											"end": 11306,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11266,
											"end": 11306,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 929,
											"end": 939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11266,
											"end": 11306,
											"name": "PUSH",
											"source": 11,
											"value": "34042597700906FD41B7EAD5497C3BF88EF36150597DDD9193327A09F0604F66"
										},
										{
											"begin": 11266,
											"end": 11306,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11266,
											"end": 11306,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 11266,
											"end": 11306,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11266,
											"end": 11306,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11266,
											"end": 11306,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11266,
											"end": 11306,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11266,
											"end": 11306,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11266,
											"end": 11306,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11266,
											"end": 11306,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11266,
											"end": 11306,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11058,
											"end": 11313,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 16537,
											"end": 18726,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 16537,
											"end": 18726,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 16055,
											"end": 16063,
											"name": "PUSH",
											"source": 11,
											"value": "A4"
										},
										{
											"begin": 16055,
											"end": 16063,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16055,
											"end": 16063,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 16055,
											"end": 16063,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13174,
											"end": 13176,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13156,
											"end": 13177,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13213,
											"end": 13215,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 13193,
											"end": 13211,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13193,
											"end": 13211,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13193,
											"end": 13211,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13186,
											"end": 13216,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "636F6E74726163742070617573656421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13232,
											"end": 13250,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 13232,
											"end": 13250,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13232,
											"end": 13250,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13225,
											"end": 13271,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13288,
											"end": 13306,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 13288,
											"end": 13306,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 12972,
											"end": 13312,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4739,
											"end": 4744,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 4739,
											"end": 4751,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16685,
											"end": 16692,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16685,
											"end": 16692,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4729,
											"end": 4751,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4729,
											"end": 4751,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16743,
											"end": 16753,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16731,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16734,
											"end": 16754,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16734,
											"end": 16754,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16734,
											"end": 16754,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16734,
											"end": 16742,
											"name": "PUSH",
											"source": 11,
											"value": "9E"
										},
										{
											"begin": 16734,
											"end": 16754,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16734,
											"end": 16754,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16734,
											"end": 16754,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16734,
											"end": 16754,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16734,
											"end": 16754,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16734,
											"end": 16754,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16734,
											"end": 16754,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16734,
											"end": 16754,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 16734,
											"end": 16760,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 16734,
											"end": 16760,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16734,
											"end": 16760,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16734,
											"end": 16760,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16734,
											"end": 16760,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16734,
											"end": 16760,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16734,
											"end": 16760,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16734,
											"end": 16760,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "PUSH",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16760,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16783,
											"end": 16798,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16783,
											"end": 16840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 16783,
											"end": 16840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16826,
											"end": 16833,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16826,
											"end": 16840,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 16826,
											"end": 16840,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16826,
											"end": 16840,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 16808,
											"end": 16823,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 16808,
											"end": 16840,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 16783,
											"end": 16840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 16783,
											"end": 16840,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16783,
											"end": 16840,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 16783,
											"end": 16840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16801,
											"end": 16805,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 16783,
											"end": 16840,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 16783,
											"end": 16840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16770,
											"end": 16840,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16770,
											"end": 16840,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16874,
											"end": 16875,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16858,
											"end": 16865,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16858,
											"end": 16871,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16858,
											"end": 16871,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16858,
											"end": 16871,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 16858,
											"end": 16875,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 16850,
											"end": 16904,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 16850,
											"end": 16904,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16850,
											"end": 16904,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16850,
											"end": 16904,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16850,
											"end": 16904,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16850,
											"end": 16904,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13519,
											"end": 13521,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16850,
											"end": 16904,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 16850,
											"end": 16904,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16850,
											"end": 16904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13501,
											"end": 13522,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13558,
											"end": 13560,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 13538,
											"end": 13556,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13538,
											"end": 13556,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13538,
											"end": 13556,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13531,
											"end": 13561,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13597,
											"end": 13623,
											"name": "PUSH",
											"source": 12,
											"value": "436C61696D203A204E6F7468696E6720746F20636C61696D0000000000000000"
										},
										{
											"begin": 13577,
											"end": 13595,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 13577,
											"end": 13595,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13577,
											"end": 13595,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13570,
											"end": 13624,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13641,
											"end": 13659,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 13641,
											"end": 13659,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16850,
											"end": 16904,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 13317,
											"end": 13665,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16850,
											"end": 16904,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 16850,
											"end": 16904,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16922,
											"end": 16927,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16914,
											"end": 16982,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 16914,
											"end": 16982,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16914,
											"end": 16982,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16914,
											"end": 16982,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16914,
											"end": 16982,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16914,
											"end": 16982,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13872,
											"end": 13874,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16914,
											"end": 16982,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 16914,
											"end": 16982,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16914,
											"end": 16982,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13854,
											"end": 13875,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13911,
											"end": 13913,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 13891,
											"end": 13909,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13891,
											"end": 13909,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13891,
											"end": 13909,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13884,
											"end": 13914,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13950,
											"end": 13984,
											"name": "PUSH",
											"source": 12,
											"value": "436C61696D203A2063616E6E6F74207769746864726177206265666F72652076"
										},
										{
											"begin": 13930,
											"end": 13948,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 13930,
											"end": 13948,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13930,
											"end": 13948,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13923,
											"end": 13985,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657374696E6720706572696F6420656E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14001,
											"end": 14019,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 14001,
											"end": 14019,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14001,
											"end": 14019,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13994,
											"end": 14042,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14059,
											"end": 14078,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 14059,
											"end": 14078,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16914,
											"end": 16982,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 13670,
											"end": 14084,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16914,
											"end": 16982,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 16914,
											"end": 16982,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17029,
											"end": 17055,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17058,
											"end": 17109,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 17075,
											"end": 17085,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 17087,
											"end": 17091,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 17093,
											"end": 17108,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 17058,
											"end": 17074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 17058,
											"end": 17109,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 17058,
											"end": 17109,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 17058,
											"end": 17109,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17029,
											"end": 17109,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17029,
											"end": 17109,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17120,
											"end": 17134,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17154,
											"end": 17172,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17137,
											"end": 17144,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17137,
											"end": 17151,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17137,
											"end": 17151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17137,
											"end": 17151,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 17137,
											"end": 17172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 17137,
											"end": 17172,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17137,
											"end": 17172,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17137,
											"end": 17172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 17137,
											"end": 17172,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 17137,
											"end": 17172,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 17137,
											"end": 17172,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17120,
											"end": 17172,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17120,
											"end": 17172,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17182,
											"end": 17196,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17199,
											"end": 17206,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17199,
											"end": 17212,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 17182,
											"end": 17212,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17182,
											"end": 17212,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17358,
											"end": 17364,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17315,
											"end": 17320,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 17321,
											"end": 17328,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 17321,
											"end": 17335,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 17321,
											"end": 17335,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17321,
											"end": 17335,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 17315,
											"end": 17336,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17315,
											"end": 17336,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 17315,
											"end": 17336,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17315,
											"end": 17336,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 17315,
											"end": 17336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 17315,
											"end": 17336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 17315,
											"end": 17336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 17315,
											"end": 17336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 17315,
											"end": 17336,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 17315,
											"end": 17336,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 17315,
											"end": 17336,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17315,
											"end": 17336,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17315,
											"end": 17336,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17315,
											"end": 17336,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17315,
											"end": 17336,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17315,
											"end": 17336,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17315,
											"end": 17336,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 17315,
											"end": 17336,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17315,
											"end": 17336,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 17315,
											"end": 17336,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 17315,
											"end": 17336,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17315,
											"end": 17355,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 17315,
											"end": 17355,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17315,
											"end": 17355,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 17315,
											"end": 17364,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 17294,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 17294,
											"end": 17443,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 17294,
											"end": 17443,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17294,
											"end": 17443,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17294,
											"end": 17443,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17294,
											"end": 17443,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14424,
											"end": 14426,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17294,
											"end": 17443,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 17294,
											"end": 17443,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17294,
											"end": 17443,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14406,
											"end": 14427,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14463,
											"end": 14465,
											"name": "PUSH",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 14443,
											"end": 14461,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14443,
											"end": 14461,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14443,
											"end": 14461,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14436,
											"end": 14466,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14502,
											"end": 14536,
											"name": "PUSH",
											"source": 12,
											"value": "5374616B696E673A20496E73756666696369656E742072657761726420616C6C"
										},
										{
											"begin": 14482,
											"end": 14500,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 14482,
											"end": 14500,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14482,
											"end": 14500,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14475,
											"end": 14537,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB0B731B290333937B6903A34329020B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14546,
											"end": 14597,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14614,
											"end": 14633,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 14614,
											"end": 14633,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17294,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 14222,
											"end": 14639,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17294,
											"end": 17443,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 17294,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17486,
											"end": 17515,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17536,
											"end": 17541,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 17542,
											"end": 17549,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 17542,
											"end": 17556,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 17542,
											"end": 17556,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17542,
											"end": 17556,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17557,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17564,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 17536,
											"end": 17564,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17564,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17596,
											"end": 17606,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14818,
											"end": 14869,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14885,
											"end": 14903,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14885,
											"end": 14903,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14885,
											"end": 14903,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14878,
											"end": 14912,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14878,
											"end": 14912,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14878,
											"end": 14912,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17536,
											"end": 17564,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17564,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17564,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17564,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17536,
											"end": 17564,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17536,
											"end": 17564,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17595,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 17575,
											"end": 17595,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14791,
											"end": 14809,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 14791,
											"end": 14809,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17575,
											"end": 17615,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17676,
											"end": 17705,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17727,
											"end": 17732,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 17733,
											"end": 17740,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 17733,
											"end": 17747,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 17733,
											"end": 17747,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17733,
											"end": 17747,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17748,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17754,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17754,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 17815,
											"end": 17828,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 17815,
											"end": 17828,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17815,
											"end": 17828,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17727,
											"end": 17754,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17754,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17754,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17754,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17727,
											"end": 17754,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17727,
											"end": 17754,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17788,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 17765,
											"end": 17788,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17797,
											"end": 17801,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 17797,
											"end": 17801,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17803,
											"end": 17813,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 17803,
											"end": 17813,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17829,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17845,
											"end": 17860,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 17844,
											"end": 17860,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 17844,
											"end": 17922,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 17844,
											"end": 17922,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 17844,
											"end": 17922,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 17844,
											"end": 17922,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17878,
											"end": 17895,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 17878,
											"end": 17895,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 17878,
											"end": 17895,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17878,
											"end": 17895,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 17921,
											"end": 17922,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17864,
											"end": 17896,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17864,
											"end": 17896,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17864,
											"end": 17896,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17864,
											"end": 17877,
											"name": "PUSH",
											"source": 11,
											"value": "A2"
										},
										{
											"begin": 17864,
											"end": 17896,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17864,
											"end": 17896,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17864,
											"end": 17896,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17864,
											"end": 17896,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17864,
											"end": 17896,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 17864,
											"end": 17918,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 17864,
											"end": 17918,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17864,
											"end": 17918,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 17864,
											"end": 17922,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 17864,
											"end": 17922,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 17844,
											"end": 17922,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 17844,
											"end": 17922,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17840,
											"end": 18017,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 17840,
											"end": 18017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 17840,
											"end": 18017,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 17978,
											"end": 18006,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 17989,
											"end": 17999,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 18001,
											"end": 18005,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 17978,
											"end": 17988,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 17978,
											"end": 18006,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 17978,
											"end": 18006,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 17978,
											"end": 18006,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18101,
											"end": 18107,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18062,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 18063,
											"end": 18070,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 18063,
											"end": 18077,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 18063,
											"end": 18077,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18063,
											"end": 18077,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18078,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18078,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18078,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18078,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18078,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 18057,
											"end": 18078,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18078,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 18057,
											"end": 18078,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 18057,
											"end": 18078,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 18057,
											"end": 18078,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 18057,
											"end": 18078,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18078,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18078,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18057,
											"end": 18078,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18078,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18057,
											"end": 18078,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18057,
											"end": 18078,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18078,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18078,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 18057,
											"end": 18078,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18078,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18097,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 18057,
											"end": 18097,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18097,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18057,
											"end": 18107,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18107,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18107,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18107,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 18057,
											"end": 18107,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18107,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18107,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 18057,
											"end": 18107,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 18057,
											"end": 18107,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 18057,
											"end": 18107,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18107,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18107,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18107,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18107,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18107,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18107,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 18057,
											"end": 18107,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18161,
											"end": 18167,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18122,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 18123,
											"end": 18130,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 18123,
											"end": 18137,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 18123,
											"end": 18137,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18123,
											"end": 18137,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18138,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18138,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18138,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18138,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18138,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 18117,
											"end": 18138,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18138,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 18117,
											"end": 18138,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 18117,
											"end": 18138,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 18117,
											"end": 18138,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 18117,
											"end": 18138,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18138,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18138,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18117,
											"end": 18138,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18138,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18117,
											"end": 18138,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18117,
											"end": 18138,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18138,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18138,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 18117,
											"end": 18138,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18138,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18157,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 18117,
											"end": 18157,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18157,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18117,
											"end": 18167,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18167,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18167,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18167,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 18117,
											"end": 18167,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18167,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18167,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 18117,
											"end": 18167,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 18117,
											"end": 18167,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 18117,
											"end": 18167,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18167,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18167,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18167,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18167,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18167,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18167,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 18117,
											"end": 18167,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18206,
											"end": 18213,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 18206,
											"end": 18219,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18206,
											"end": 18219,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18206,
											"end": 18219,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18182,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 18183,
											"end": 18190,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 18183,
											"end": 18197,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 18183,
											"end": 18197,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18183,
											"end": 18197,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18198,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18198,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18198,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18198,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18198,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 18177,
											"end": 18198,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18198,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 18177,
											"end": 18198,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 18177,
											"end": 18198,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 18177,
											"end": 18198,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 18177,
											"end": 18198,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18198,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18177,
											"end": 18198,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18198,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18177,
											"end": 18198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18177,
											"end": 18198,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18198,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18198,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 18177,
											"end": 18198,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18198,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18202,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 18177,
											"end": 18202,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18202,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18177,
											"end": 18219,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18219,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18219,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18219,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 18177,
											"end": 18219,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18219,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18219,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 18177,
											"end": 18219,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 18177,
											"end": 18219,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 18177,
											"end": 18219,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18219,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18219,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18177,
											"end": 18219,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18244,
											"end": 18261,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 18230,
											"end": 18262,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18230,
											"end": 18262,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18230,
											"end": 18262,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18230,
											"end": 18262,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18230,
											"end": 18243,
											"name": "PUSH",
											"source": 11,
											"value": "A2"
										},
										{
											"begin": 18230,
											"end": 18262,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18230,
											"end": 18262,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18230,
											"end": 18262,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18230,
											"end": 18262,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18230,
											"end": 18262,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 18230,
											"end": 18276,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 18230,
											"end": 18276,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 18270,
											"end": 18276,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 18270,
											"end": 18276,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 18230,
											"end": 18262,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18230,
											"end": 18276,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 18230,
											"end": 18276,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18270,
											"end": 18276,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18270,
											"end": 18276,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18230,
											"end": 18276,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 18230,
											"end": 18276,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 18230,
											"end": 18276,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 18230,
											"end": 18276,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18230,
											"end": 18276,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18230,
											"end": 18276,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18230,
											"end": 18276,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18332,
											"end": 18342,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 18359,
											"end": 18360,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18323,
											"end": 18343,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18343,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18343,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18331,
											"name": "PUSH",
											"source": 11,
											"value": "9E"
										},
										{
											"begin": 18323,
											"end": 18343,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18323,
											"end": 18343,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18343,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18343,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18343,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18323,
											"end": 18343,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18343,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18343,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18349,
											"name": "DUP14",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18349,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18349,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18349,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18349,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18349,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18349,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18349,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18356,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 18323,
											"end": 18356,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18356,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18360,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18360,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18360,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 18370,
											"end": 18402,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 18370,
											"end": 18402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18370,
											"end": 18406,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 18420,
											"end": 18428,
											"name": "PUSH",
											"source": 11,
											"value": "A4"
										},
										{
											"begin": 18420,
											"end": 18428,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 18420,
											"end": 18428,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 18420,
											"end": 18428,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 18416,
											"end": 18616,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 18416,
											"end": 18616,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 18416,
											"end": 18616,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 18494,
											"end": 18509,
											"name": "PUSH",
											"source": 11,
											"value": "A5"
										},
										{
											"begin": 18494,
											"end": 18509,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 18453,
											"end": 18463,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 18444,
											"end": 18464,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18444,
											"end": 18464,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18444,
											"end": 18464,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18444,
											"end": 18464,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18444,
											"end": 18452,
											"name": "PUSH",
											"source": 11,
											"value": "9E"
										},
										{
											"begin": 18444,
											"end": 18464,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18444,
											"end": 18464,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18444,
											"end": 18464,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18444,
											"end": 18464,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18444,
											"end": 18464,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18444,
											"end": 18464,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 18444,
											"end": 18464,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18444,
											"end": 18464,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 18444,
											"end": 18470,
											"name": "DUP15",
											"source": 11
										},
										{
											"begin": 18444,
											"end": 18470,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18444,
											"end": 18470,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18444,
											"end": 18470,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18444,
											"end": 18470,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18444,
											"end": 18470,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18444,
											"end": 18470,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18444,
											"end": 18470,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 18444,
											"end": 18491,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 18444,
											"end": 18491,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18444,
											"end": 18509,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 18416,
											"end": 18616,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 18416,
											"end": 18616,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18416,
											"end": 18616,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 18416,
											"end": 18616,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18549,
											"end": 18559,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18560,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18540,
											"end": 18560,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18560,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18560,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18548,
											"name": "PUSH",
											"source": 11,
											"value": "9E"
										},
										{
											"begin": 18540,
											"end": 18560,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18540,
											"end": 18560,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18560,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18560,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18560,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18540,
											"end": 18560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18560,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18560,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18566,
											"name": "DUP14",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18566,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18566,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18566,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18566,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18566,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18566,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18566,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 18590,
											"end": 18605,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18587,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 18540,
											"end": 18587,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18587,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18587,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18540,
											"end": 18605,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 18416,
											"end": 18616,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 18416,
											"end": 18616,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18660,
											"end": 18719,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18660,
											"end": 18719,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 18660,
											"end": 18719,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9024,
											"end": 9049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9024,
											"end": 9049,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9024,
											"end": 9049,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18703,
											"end": 18718,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 9080,
											"end": 9082,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9065,
											"end": 9083,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9065,
											"end": 9083,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9058,
											"end": 9092,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18694,
											"end": 18701,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 18694,
											"end": 18701,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18674,
											"end": 18684,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 18674,
											"end": 18684,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18660,
											"end": 18719,
											"name": "PUSH",
											"source": 11,
											"value": "812BE816DB82C66CD18CA8457005CD84689642D8AC4D38599CC6AF444A2DC72A"
										},
										{
											"begin": 18660,
											"end": 18719,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8997,
											"end": 9015,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18660,
											"end": 18719,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18660,
											"end": 18719,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 18660,
											"end": 18719,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 18660,
											"end": 18719,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18660,
											"end": 18719,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18660,
											"end": 18719,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18660,
											"end": 18719,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16537,
											"end": 18726,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1908,
											"end": 2009,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1908,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1972,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1999,
											"end": 2000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 1972,
											"end": 2002,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2002,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1972,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 2009,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6942,
											"end": 7104,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 6942,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7002,
											"end": 7010,
											"name": "PUSH",
											"source": 11,
											"value": "A4"
										},
										{
											"begin": 7002,
											"end": 7010,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7002,
											"end": 7010,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7002,
											"end": 7010,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7001,
											"end": 7010,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6993,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 6993,
											"end": 7029,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6993,
											"end": 7029,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6993,
											"end": 7029,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6993,
											"end": 7029,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6993,
											"end": 7029,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15125,
											"end": 15127,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6993,
											"end": 7029,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6993,
											"end": 7029,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6993,
											"end": 7029,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15107,
											"end": 15128,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15164,
											"end": 15166,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15137,
											"end": 15167,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E4814185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15183,
											"end": 15201,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 15183,
											"end": 15201,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15183,
											"end": 15201,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15176,
											"end": 15220,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15237,
											"end": 15255,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 15237,
											"end": 15255,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6993,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 14923,
											"end": 15261,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6993,
											"end": 7029,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 6993,
											"end": 7029,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7039,
											"end": 7047,
											"name": "PUSH",
											"source": 11,
											"value": "A4"
										},
										{
											"begin": 7039,
											"end": 7054,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7039,
											"end": 7054,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7039,
											"end": 7054,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7050,
											"end": 7054,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7039,
											"end": 7054,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7039,
											"end": 7054,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7039,
											"end": 7054,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7082,
											"end": 7097,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7079,
											"name": "PUSH",
											"source": 11,
											"value": "A5"
										},
										{
											"begin": 7064,
											"end": 7097,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6942,
											"end": 7104,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 21459,
											"end": 21857,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 21459,
											"end": 21857,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21503,
											"end": 21523,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21503,
											"end": 21523,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 21577,
											"end": 21578,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 21560,
											"end": 21823,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 21560,
											"end": 21823,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21585,
											"end": 21596,
											"name": "PUSH",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 929,
											"end": 943,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 21580,
											"end": 21581,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21580,
											"end": 21606,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 21560,
											"end": 21823,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 21560,
											"end": 21823,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 21657,
											"end": 21658,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21631,
											"end": 21648,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21631,
											"end": 21648,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21631,
											"end": 21648,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21631,
											"end": 21645,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 21631,
											"end": 21648,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21631,
											"end": 21648,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21631,
											"end": 21648,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 21631,
											"end": 21648,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21631,
											"end": 21648,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 21631,
											"end": 21654,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 21631,
											"end": 21654,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21631,
											"end": 21654,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 21631,
											"end": 21658,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 21627,
											"end": 21813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 21627,
											"end": 21813,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 21685,
											"end": 21702,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21685,
											"end": 21702,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21685,
											"end": 21702,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21685,
											"end": 21702,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21685,
											"end": 21699,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 21685,
											"end": 21702,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21685,
											"end": 21702,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21685,
											"end": 21702,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 21685,
											"end": 21702,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21685,
											"end": 21702,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 21685,
											"end": 21709,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 21685,
											"end": 21709,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21685,
											"end": 21709,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 21678,
											"end": 21709,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 21678,
											"end": 21709,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21678,
											"end": 21709,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21678,
											"end": 21709,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 21678,
											"end": 21709,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 21678,
											"end": 21709,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 21678,
											"end": 21709,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21759,
											"end": 21760,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21763,
											"end": 21780,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21763,
											"end": 21780,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21763,
											"end": 21780,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21763,
											"end": 21777,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 21763,
											"end": 21780,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21763,
											"end": 21780,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21763,
											"end": 21780,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 21763,
											"end": 21780,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21763,
											"end": 21780,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 21763,
											"end": 21790,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 21678,
											"end": 21709,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21678,
											"end": 21709,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21734,
											"end": 21798,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 21734,
											"end": 21798,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21759,
											"end": 21760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21734,
											"end": 21750,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 21734,
											"end": 21798,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 21734,
											"end": 21798,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 21734,
											"end": 21798,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21727,
											"end": 21798,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 21727,
											"end": 21798,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21727,
											"end": 21798,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21727,
											"end": 21798,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 21727,
											"end": 21798,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 21727,
											"end": 21798,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 21727,
											"end": 21798,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21727,
											"end": 21798,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21727,
											"end": 21798,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21627,
											"end": 21813,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 21627,
											"end": 21813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21608,
											"end": 21611,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 21608,
											"end": 21611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 21608,
											"end": 21611,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21608,
											"end": 21611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 21608,
											"end": 21611,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 21608,
											"end": 21611,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 21608,
											"end": 21611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21608,
											"end": 21611,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21608,
											"end": 21611,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21608,
											"end": 21611,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21560,
											"end": 21823,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 21560,
											"end": 21823,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21560,
											"end": 21823,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 21560,
											"end": 21823,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21847,
											"end": 21850,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21459,
											"end": 21857,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21459,
											"end": 21857,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6307,
											"end": 6862,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 6307,
											"end": 6862,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5442,
											"name": "PUSH",
											"source": 11,
											"value": "9D"
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6458,
											"end": 6464,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6458,
											"end": 6464,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5431,
											"end": 5450,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5423,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 5423,
											"end": 5485,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5423,
											"end": 5485,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5423,
											"end": 5485,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5423,
											"end": 5485,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5423,
											"end": 5485,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15468,
											"end": 15470,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5423,
											"end": 5485,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5423,
											"end": 5485,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5423,
											"end": 5485,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15450,
											"end": 15471,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15507,
											"end": 15509,
											"name": "PUSH",
											"source": 12,
											"value": "1E"
										},
										{
											"begin": 15487,
											"end": 15505,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15487,
											"end": 15505,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15487,
											"end": 15505,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15480,
											"end": 15510,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15546,
											"end": 15578,
											"name": "PUSH",
											"source": 12,
											"value": "416464203A20746F6B656E20706F6F6C20616C72656164792065786974730000"
										},
										{
											"begin": 15526,
											"end": 15544,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 15526,
											"end": 15544,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15526,
											"end": 15544,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15519,
											"end": 15579,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15596,
											"end": 15614,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 15596,
											"end": 15614,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5423,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 15266,
											"end": 15620,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5423,
											"end": 5485,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 5423,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6476,
											"end": 6494,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6476,
											"end": 6494,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6476,
											"end": 6494,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6476,
											"end": 6494,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6476,
											"end": 6494,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6476,
											"end": 6494,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6476,
											"end": 6486,
											"name": "PUSH",
											"source": 11,
											"value": "9D"
										},
										{
											"begin": 6476,
											"end": 6494,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6476,
											"end": 6494,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6476,
											"end": 6494,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6476,
											"end": 6494,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6476,
											"end": 6494,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6476,
											"end": 6501,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6476,
											"end": 6501,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6476,
											"end": 6501,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6497,
											"end": 6501,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6476,
											"end": 6501,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 6476,
											"end": 6501,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6476,
											"end": 6501,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6527,
											"end": 6532,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6527,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 6527,
											"end": 6577,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6565,
											"end": 6570,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 6565,
											"end": 6577,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6527,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 6527,
											"end": 6577,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6527,
											"end": 6577,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 6527,
											"end": 6577,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6546,
											"end": 6551,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 6546,
											"end": 6558,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6561,
											"end": 6562,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6561,
											"end": 6562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6511,
											"end": 6577,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6511,
											"end": 6577,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6625,
											"end": 6634,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6620,
											"end": 6761,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 6620,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6640,
											"end": 6652,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6640,
											"end": 6659,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6636,
											"end": 6637,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6636,
											"end": 6659,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6620,
											"end": 6761,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6620,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 6620,
											"end": 6761,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6731,
											"end": 6743,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6744,
											"end": 6745,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6731,
											"end": 6750,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6731,
											"end": 6750,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6731,
											"end": 6750,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6697,
											"name": "PUSH",
											"source": 11,
											"value": "9C"
										},
										{
											"begin": 6680,
											"end": 6704,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6698,
											"end": 6703,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6704,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6704,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6680,
											"end": 6704,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6704,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6704,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6704,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6680,
											"end": 6704,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6704,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6680,
											"end": 6704,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6705,
											"end": 6717,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6718,
											"end": 6719,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 6720,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 6720,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 6720,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 6720,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 6705,
											"end": 6720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 6705,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 6705,
											"end": 6720,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6705,
											"end": 6720,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 6705,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 6720,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6705,
											"end": 6720,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 6720,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6705,
											"end": 6720,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 6720,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 6720,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 6727,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6705,
											"end": 6727,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 6727,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6680,
											"end": 6728,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6750,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6750,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6750,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6680,
											"end": 6750,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6661,
											"end": 6664,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6661,
											"end": 6664,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6661,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 6661,
											"end": 6664,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6661,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 6661,
											"end": 6664,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6661,
											"end": 6664,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 6661,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6661,
											"end": 6664,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6661,
											"end": 6664,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6661,
											"end": 6664,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6620,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 6620,
											"end": 6761,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6620,
											"end": 6761,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 6620,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6771,
											"end": 6776,
											"name": "PUSH",
											"source": 11,
											"value": "9B"
										},
										{
											"begin": 6771,
											"end": 6796,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6771,
											"end": 6796,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6771,
											"end": 6796,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 6771,
											"end": 6796,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6771,
											"end": 6796,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6771,
											"end": 6796,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6771,
											"end": 6796,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6771,
											"end": 6796,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6771,
											"end": 6796,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6771,
											"end": 6796,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 6771,
											"end": 6796,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6771,
											"end": 6796,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6771,
											"end": 6796,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6771,
											"end": 6776,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6811,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6771,
											"end": 6796,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP10",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "PUSH",
											"source": 11,
											"value": "AADC37B8BA5645E62F4546802DB221593A94729CCBFC5A97D01365A88F649878"
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP10",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP10",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP10",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP10",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "PUSH",
											"source": 11,
											"value": "AADC37B8BA5645E62F4546802DB221593A94729CCBFC5A97D01365A88F649879"
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP10",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "PUSH",
											"source": 11,
											"value": "AADC37B8BA5645E62F4546802DB221593A94729CCBFC5A97D01365A88F64987A"
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "PUSH",
											"source": 11,
											"value": "AADC37B8BA5645E62F4546802DB221593A94729CCBFC5A97D01365A88F64987B"
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "PUSH",
											"source": 11,
											"value": "AADC37B8BA5645E62F4546802DB221593A94729CCBFC5A97D01365A88F64987C"
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6806,
											"end": 6855,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6307,
											"end": 6862,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20913,
											"end": 20934,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20913,
											"end": 20934,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 20862,
											"end": 20891,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20913,
											"end": 20934,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20913,
											"end": 20934,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20913,
											"end": 20934,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20913,
											"end": 20927,
											"name": "PUSH",
											"source": 11,
											"value": "9F"
										},
										{
											"begin": 20913,
											"end": 20934,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20913,
											"end": 20934,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20913,
											"end": 20934,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 20913,
											"end": 20934,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20913,
											"end": 20934,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 20913,
											"end": 20941,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 20828,
											"end": 20849,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 20828,
											"end": 20849,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20862,
											"end": 20891,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "120"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20894,
											"end": 20942,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20862,
											"end": 20942,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20862,
											"end": 20942,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20957,
											"end": 20966,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20952,
											"end": 21196,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 20952,
											"end": 21196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20976,
											"end": 20997,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 20976,
											"end": 20997,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 20976,
											"end": 20997,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20976,
											"end": 20997,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20976,
											"end": 20997,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20976,
											"end": 20997,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20976,
											"end": 20990,
											"name": "PUSH",
											"source": 11,
											"value": "9F"
										},
										{
											"begin": 20976,
											"end": 20997,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20976,
											"end": 20997,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20976,
											"end": 20997,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 20976,
											"end": 20997,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20976,
											"end": 20997,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 20976,
											"end": 21004,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 20972,
											"end": 21004,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20972,
											"end": 21004,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 20952,
											"end": 21196,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 20952,
											"end": 21196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 20952,
											"end": 21196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21055,
											"end": 21070,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 21055,
											"end": 21070,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21052,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21055,
											"end": 21070,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21055,
											"end": 21070,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21055,
											"end": 21070,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21055,
											"end": 21063,
											"name": "PUSH",
											"source": 11,
											"value": "9E"
										},
										{
											"begin": 21055,
											"end": 21070,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21055,
											"end": 21070,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21055,
											"end": 21070,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21055,
											"end": 21070,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21055,
											"end": 21070,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 21055,
											"end": 21070,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 21055,
											"end": 21070,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21055,
											"end": 21070,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 21071,
											"end": 21085,
											"name": "PUSH",
											"source": 11,
											"value": "9F"
										},
										{
											"begin": 21071,
											"end": 21092,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21071,
											"end": 21092,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 21071,
											"end": 21092,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21071,
											"end": 21092,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21071,
											"end": 21092,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 21071,
											"end": 21095,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 21071,
											"end": 21095,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21052,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21052,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21071,
											"end": 21092,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21093,
											"end": 21094,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 21093,
											"end": 21094,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21071,
											"end": 21095,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21071,
											"end": 21095,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 21071,
											"end": 21095,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 21071,
											"end": 21095,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 21071,
											"end": 21095,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 21071,
											"end": 21095,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 21071,
											"end": 21095,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 21071,
											"end": 21095,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 21071,
											"end": 21095,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21071,
											"end": 21095,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21071,
											"end": 21095,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21071,
											"end": 21095,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21071,
											"end": 21095,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21071,
											"end": 21095,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21071,
											"end": 21095,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 21071,
											"end": 21095,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21071,
											"end": 21095,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 21055,
											"end": 21096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21055,
											"end": 21096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21055,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21055,
											"end": 21096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21055,
											"end": 21096,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21055,
											"end": 21096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21055,
											"end": 21096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21055,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21055,
											"end": 21096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21055,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21055,
											"end": 21096,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21025,
											"end": 21096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21130,
											"end": 21131,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21114,
											"end": 21121,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21114,
											"end": 21127,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21114,
											"end": 21127,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21114,
											"end": 21127,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 21114,
											"end": 21131,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 21110,
											"end": 21186,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 21110,
											"end": 21186,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 21110,
											"end": 21186,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 21164,
											"end": 21171,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 21151,
											"end": 21158,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21159,
											"end": 21160,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21151,
											"end": 21161,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21151,
											"end": 21161,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 21151,
											"end": 21161,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21151,
											"end": 21161,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 21151,
											"end": 21161,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 21151,
											"end": 21161,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 21151,
											"end": 21161,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 21151,
											"end": 21161,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 21151,
											"end": 21161,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 21151,
											"end": 21161,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 21151,
											"end": 21161,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21151,
											"end": 21161,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21151,
											"end": 21161,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 21151,
											"end": 21161,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21151,
											"end": 21161,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21151,
											"end": 21161,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21151,
											"end": 21171,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21151,
											"end": 21171,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21151,
											"end": 21171,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21151,
											"end": 21171,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21110,
											"end": 21186,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 21110,
											"end": 21186,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21006,
											"end": 21009,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 21006,
											"end": 21009,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 21006,
											"end": 21009,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21006,
											"end": 21009,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 21006,
											"end": 21009,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 21006,
											"end": 21009,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 21006,
											"end": 21009,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21006,
											"end": 21009,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21006,
											"end": 21009,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21006,
											"end": 21009,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20952,
											"end": 21196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 20952,
											"end": 21196,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20952,
											"end": 21196,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 20952,
											"end": 21196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21212,
											"end": 21219,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20771,
											"end": 21226,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5509,
											"end": 5603,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 5509,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5577,
											"end": 5588,
											"name": "PUSH",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 5577,
											"end": 5596,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5577,
											"end": 5596,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5577,
											"end": 5596,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5577,
											"end": 5596,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5577,
											"end": 5596,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5577,
											"end": 5596,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5577,
											"end": 5596,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5577,
											"end": 5596,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5577,
											"end": 5596,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5577,
											"end": 5596,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5577,
											"end": 5596,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5577,
											"end": 5596,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5577,
											"end": 5596,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5509,
											"end": 5603,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8718,
											"end": 9347,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 8718,
											"end": 9347,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4739,
											"end": 4744,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 4739,
											"end": 4751,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8811,
											"end": 8818,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4729,
											"end": 4751,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4729,
											"end": 4751,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8865,
											"end": 8894,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8915,
											"end": 8920,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 8921,
											"end": 8928,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8929,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8929,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8929,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8929,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 8915,
											"end": 8929,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 8915,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 8915,
											"end": 8929,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8915,
											"end": 8929,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 8915,
											"end": 8929,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8929,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8929,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8915,
											"end": 8929,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8929,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8915,
											"end": 8929,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8915,
											"end": 8929,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8929,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8929,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 8915,
											"end": 8929,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8929,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8936,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8915,
											"end": 8936,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8936,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8915,
											"end": 8936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8936,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8936,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 8915,
											"end": 8936,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8936,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8915,
											"end": 8936,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8865,
											"end": 8937,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8865,
											"end": 8937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9063,
											"end": 9069,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9026,
											"end": 9031,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 9032,
											"end": 9039,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9026,
											"end": 9059,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 9026,
											"end": 9059,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9026,
											"end": 9059,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9026,
											"end": 9069,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 9026,
											"end": 9069,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9005,
											"end": 9158,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 9005,
											"end": 9158,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9005,
											"end": 9158,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9005,
											"end": 9158,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9005,
											"end": 9158,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9005,
											"end": 9158,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15827,
											"end": 15829,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9005,
											"end": 9158,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9005,
											"end": 9158,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9005,
											"end": 9158,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15809,
											"end": 15830,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15866,
											"end": 15868,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 15846,
											"end": 15864,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15846,
											"end": 15864,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15846,
											"end": 15864,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15839,
											"end": 15869,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15905,
											"end": 15939,
											"name": "PUSH",
											"source": 12,
											"value": "5374616B696E673A20616D6F756E74204D757374206265206C65737320746861"
										},
										{
											"begin": 15885,
											"end": 15903,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 15885,
											"end": 15903,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15885,
											"end": 15903,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15878,
											"end": 15940,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15976,
											"end": 16009,
											"name": "PUSH",
											"source": 12,
											"value": "6E206F7220657175616C20746F20617661696C61626C65207265776172647300"
										},
										{
											"begin": 15956,
											"end": 15974,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 15956,
											"end": 15974,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15956,
											"end": 15974,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15949,
											"end": 16010,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16027,
											"end": 16046,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 16027,
											"end": 16046,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9005,
											"end": 9158,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 15625,
											"end": 16052,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9005,
											"end": 9158,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 9005,
											"end": 9158,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9232,
											"end": 9242,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14818,
											"end": 14869,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14885,
											"end": 14903,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14885,
											"end": 14903,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14885,
											"end": 14903,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14878,
											"end": 14912,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14878,
											"end": 14912,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14878,
											"end": 14912,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9211,
											"end": 9231,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9231,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9231,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9231,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 9211,
											"end": 9231,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14791,
											"end": 14809,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 14791,
											"end": 14809,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9211,
											"end": 9251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9334,
											"end": 9340,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9302,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 9303,
											"end": 9310,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9311,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9311,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9311,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9311,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 9297,
											"end": 9311,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 9297,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 9297,
											"end": 9311,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9297,
											"end": 9311,
											"name": "tag",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 9297,
											"end": 9311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9311,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9311,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9297,
											"end": 9311,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9311,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9297,
											"end": 9311,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9297,
											"end": 9311,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9311,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9311,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 9297,
											"end": 9311,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9311,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9330,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9297,
											"end": 9340,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9340,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9340,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9340,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 9297,
											"end": 9340,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9340,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9340,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 9297,
											"end": 9340,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9297,
											"end": 9340,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 9297,
											"end": 9340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9340,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9340,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9340,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8718,
											"end": 9347,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 13943,
											"end": 16005,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 13943,
											"end": 16005,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14104,
											"end": 14111,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 16055,
											"end": 16063,
											"name": "PUSH",
											"source": 11,
											"value": "A4"
										},
										{
											"begin": 16055,
											"end": 16063,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16055,
											"end": 16063,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 16055,
											"end": 16063,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13174,
											"end": 13176,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13156,
											"end": 13177,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13213,
											"end": 13215,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 13193,
											"end": 13211,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13193,
											"end": 13211,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13193,
											"end": 13211,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13186,
											"end": 13216,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "636F6E74726163742070617573656421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13232,
											"end": 13250,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 13232,
											"end": 13250,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13232,
											"end": 13250,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13225,
											"end": 13271,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13288,
											"end": 13306,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 13288,
											"end": 13306,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 12972,
											"end": 13312,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 16046,
											"end": 16084,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4739,
											"end": 4744,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 4739,
											"end": 4751,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 14086,
											"end": 14093,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14086,
											"end": 14093,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4729,
											"end": 4751,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4729,
											"end": 4751,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "tag",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14132,
											"end": 14140,
											"name": "PUSH",
											"source": 11,
											"value": "A4"
										},
										{
											"begin": 14132,
											"end": 14140,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 14132,
											"end": 14140,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 14132,
											"end": 14140,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14131,
											"end": 14140,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14123,
											"end": 14162,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 14123,
											"end": 14162,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14123,
											"end": 14162,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14123,
											"end": 14162,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14123,
											"end": 14162,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14123,
											"end": 14162,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16259,
											"end": 16261,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14123,
											"end": 14162,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14123,
											"end": 14162,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14123,
											"end": 14162,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16241,
											"end": 16262,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16298,
											"end": 16300,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 16278,
											"end": 16296,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 16278,
											"end": 16296,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16278,
											"end": 16296,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16271,
											"end": 16301,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14DD185ADA5B99C81A5CC81C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16317,
											"end": 16335,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 16317,
											"end": 16335,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16317,
											"end": 16335,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16310,
											"end": 16357,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16374,
											"end": 16392,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 16374,
											"end": 16392,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14123,
											"end": 14162,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 16057,
											"end": 16398,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14123,
											"end": 14162,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 14123,
											"end": 14162,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8319,
											"end": 8326,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8362,
											"name": "PUSH",
											"source": 11,
											"value": "9C"
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 14257,
											"end": 14258,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14229,
											"end": 14258,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14221,
											"end": 14285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 14221,
											"end": 14285,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14221,
											"end": 14285,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14221,
											"end": 14285,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14221,
											"end": 14285,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14221,
											"end": 14285,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16605,
											"end": 16607,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14221,
											"end": 14285,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14221,
											"end": 14285,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14221,
											"end": 14285,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16587,
											"end": 16608,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16644,
											"end": 16646,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 16624,
											"end": 16642,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 16624,
											"end": 16642,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16624,
											"end": 16642,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16617,
											"end": 16647,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081CDD185ADA5B99C81C195C9A5BD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16663,
											"end": 16681,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 16663,
											"end": 16681,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16663,
											"end": 16681,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16656,
											"end": 16708,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16725,
											"end": 16743,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 16725,
											"end": 16743,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14221,
											"end": 14285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 16403,
											"end": 16749,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14221,
											"end": 14285,
											"name": "tag",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 14221,
											"end": 14285,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14397,
											"name": "PUSH",
											"source": 11,
											"value": "9B"
										},
										{
											"begin": 14392,
											"end": 14397,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "133F7571"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14331,
											"end": 14343,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14331,
											"end": 14343,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14331,
											"end": 14343,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14331,
											"end": 14343,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14331,
											"end": 14343,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14331,
											"end": 14343,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14392,
											"end": 14397,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14397,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14407,
											"name": "PUSH",
											"source": 11,
											"value": "99FBAB88"
										},
										{
											"begin": 14392,
											"end": 14407,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "tag",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 14392,
											"end": 14416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14327,
											"end": 14416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14327,
											"end": 14416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14327,
											"end": 14416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14327,
											"end": 14416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14327,
											"end": 14416,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 14327,
											"end": 14416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14327,
											"end": 14416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14327,
											"end": 14416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14327,
											"end": 14416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14327,
											"end": 14416,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 14327,
											"end": 14416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14327,
											"end": 14416,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 14327,
											"end": 14416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14327,
											"end": 14416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14327,
											"end": 14416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14488,
											"end": 14492,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14473,
											"end": 14492,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14481,
											"end": 14485,
											"name": "PUSH",
											"source": 11,
											"value": "9A"
										},
										{
											"begin": 14481,
											"end": 14485,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14481,
											"end": 14485,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14481,
											"end": 14485,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 14481,
											"end": 14485,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14481,
											"end": 14485,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 14481,
											"end": 14485,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 14481,
											"end": 14485,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14481,
											"end": 14485,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14481,
											"end": 14485,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14473,
											"end": 14492,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14473,
											"end": 14492,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 14473,
											"end": 14524,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14473,
											"end": 14524,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14473,
											"end": 14524,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 14473,
											"end": 14524,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14473,
											"end": 14524,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14496,
											"end": 14524,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14501,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 14502,
											"end": 14509,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "tag",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14517,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14510,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14517,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14517,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14496,
											"end": 14517,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14524,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 14473,
											"end": 14524,
											"name": "tag",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 14473,
											"end": 14524,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14465,
											"end": 14543,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 14465,
											"end": 14543,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14465,
											"end": 14543,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14465,
											"end": 14543,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14465,
											"end": 14543,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14465,
											"end": 14543,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18826,
											"end": 18828,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14465,
											"end": 14543,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14465,
											"end": 14543,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14465,
											"end": 14543,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18808,
											"end": 18829,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18865,
											"end": 18867,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 18845,
											"end": 18863,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 18845,
											"end": 18863,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18845,
											"end": 18863,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18838,
											"end": 18868,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081314081C1BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18884,
											"end": 18902,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 18884,
											"end": 18902,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18884,
											"end": 18902,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18877,
											"end": 18922,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18939,
											"end": 18957,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 18939,
											"end": 18957,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14465,
											"end": 14543,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 18624,
											"end": 18963,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14465,
											"end": 14543,
											"name": "tag",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 14465,
											"end": 14543,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14553,
											"end": 14577,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14599,
											"end": 14604,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 14605,
											"end": 14612,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "tag",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 14599,
											"end": 14613,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14599,
											"end": 14619,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E985E9C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14727,
											"end": 14737,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19180,
											"end": 19214,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14747,
											"end": 14751,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 19230,
											"end": 19248,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 19230,
											"end": 19248,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19230,
											"end": 19248,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19223,
											"end": 19266,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14599,
											"end": 14619,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14599,
											"end": 14619,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14599,
											"end": 14619,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14599,
											"end": 14619,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14599,
											"end": 14619,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14599,
											"end": 14619,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14726,
											"name": "PUSH",
											"source": 11,
											"value": "E985E9C5"
										},
										{
											"begin": 14704,
											"end": 14726,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19115,
											"end": 19133,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 19115,
											"end": 19133,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "tag",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "tag",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 14704,
											"end": 14753,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14798,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14798,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 14704,
											"end": 14798,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20604BF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14793,
											"end": 14797,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 14793,
											"end": 14797,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14757,
											"end": 14774,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14774,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14774,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14774,
											"name": "PUSH",
											"source": 11,
											"value": "81812FC"
										},
										{
											"begin": 14757,
											"end": 14774,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "tag",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "tag",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 14757,
											"end": 14783,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14757,
											"end": 14798,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14757,
											"end": 14798,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 14704,
											"end": 14798,
											"name": "tag",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 14704,
											"end": 14798,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14696,
											"end": 14824,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 14696,
											"end": 14824,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14696,
											"end": 14824,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14696,
											"end": 14824,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14696,
											"end": 14824,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14696,
											"end": 14824,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19735,
											"end": 19737,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14696,
											"end": 14824,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14696,
											"end": 14824,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14696,
											"end": 14824,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19717,
											"end": 19738,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19774,
											"end": 19776,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 19754,
											"end": 19772,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 19754,
											"end": 19772,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19754,
											"end": 19772,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19747,
											"end": 19777,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14DD185ADA5B99CE88139BDD08185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19793,
											"end": 19811,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 19793,
											"end": 19811,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19793,
											"end": 19811,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19786,
											"end": 19837,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19854,
											"end": 19872,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 19854,
											"end": 19872,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14696,
											"end": 14824,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 19533,
											"end": 19878,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14696,
											"end": 14824,
											"name": "tag",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 14696,
											"end": 14824,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14885,
											"end": 14903,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14903,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14903,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14903,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 14885,
											"end": 14903,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14904,
											"end": 14914,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 14904,
											"end": 14914,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14924,
											"end": 14928,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 14924,
											"end": 14928,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14931,
											"end": 14938,
											"name": "DUP14",
											"source": 11
										},
										{
											"begin": 14931,
											"end": 14938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "tag",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "tag",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "tag",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14885,
											"end": 14939,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14950,
											"end": 14973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 14950,
											"end": 14961,
											"name": "PUSH",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 1043,
											"end": 1062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1043,
											"end": 1062,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1061,
											"end": 1062,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1043,
											"end": 1062,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1043,
											"end": 1062,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1043,
											"end": 1062,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 956,
											"end": 1079,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14950,
											"end": 14973,
											"name": "tag",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 14950,
											"end": 14973,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14983,
											"end": 14993,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14996,
											"end": 15017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "470"
										},
										{
											"begin": 14996,
											"end": 15007,
											"name": "PUSH",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 929,
											"end": 943,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 929,
											"end": 943,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 838,
											"end": 950,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14996,
											"end": 15017,
											"name": "tag",
											"source": 11,
											"value": "470"
										},
										{
											"begin": 14996,
											"end": 15017,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14983,
											"end": 15017,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14983,
											"end": 15017,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15064,
											"end": 15090,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15131,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 15110,
											"end": 15120,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 15122,
											"end": 15124,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15126,
											"end": 15130,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 15093,
											"end": 15109,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 15093,
											"end": 15131,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 15093,
											"end": 15131,
											"name": "tag",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 15093,
											"end": 15131,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15187,
											"end": 15197,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15178,
											"end": 15198,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15198,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15198,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15186,
											"name": "PUSH",
											"source": 11,
											"value": "9E"
										},
										{
											"begin": 15178,
											"end": 15198,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15178,
											"end": 15198,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15198,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15198,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15198,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15178,
											"end": 15198,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15198,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15198,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15202,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15202,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15202,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15202,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15202,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15202,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15202,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15202,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15217,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15217,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15217,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15227,
											"end": 15257,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 15227,
											"end": 15257,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15227,
											"end": 15267,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15227,
											"end": 15267,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15064,
											"end": 15131,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15064,
											"end": 15131,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15227,
											"end": 15267,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 15227,
											"end": 15267,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15227,
											"end": 15267,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15227,
											"end": 15257,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15227,
											"end": 15257,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15178,
											"end": 15198,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15227,
											"end": 15267,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 15227,
											"end": 15267,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15227,
											"end": 15267,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15227,
											"end": 15267,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15227,
											"end": 15267,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 15227,
											"end": 15267,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 15227,
											"end": 15267,
											"name": "tag",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 15227,
											"end": 15267,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15227,
											"end": 15267,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15227,
											"end": 15267,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15227,
											"end": 15267,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15286,
											"end": 15296,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15297,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15277,
											"end": 15297,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15297,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15297,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15285,
											"name": "PUSH",
											"source": 11,
											"value": "9E"
										},
										{
											"begin": 15277,
											"end": 15297,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15277,
											"end": 15297,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15297,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15297,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15297,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15277,
											"end": 15297,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15297,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15297,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15301,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15301,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15301,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15301,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15301,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15301,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15301,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15308,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 15277,
											"end": 15308,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15330,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15330,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15312,
											"end": 15330,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15312,
											"end": 15330,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15297,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15330,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 15277,
											"end": 15330,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15312,
											"end": 15330,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15312,
											"end": 15330,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15330,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 15277,
											"end": 15330,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 15277,
											"end": 15330,
											"name": "tag",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 15277,
											"end": 15330,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15330,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15330,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15277,
											"end": 15330,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15349,
											"end": 15359,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15360,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15340,
											"end": 15360,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15360,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15360,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15348,
											"name": "PUSH",
											"source": 11,
											"value": "9E"
										},
										{
											"begin": 15340,
											"end": 15360,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15340,
											"end": 15360,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15360,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15360,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15360,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15340,
											"end": 15360,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15360,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15360,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15364,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15364,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15364,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15364,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15364,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15364,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15364,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15364,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15364,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15388,
											"end": 15403,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15385,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 15340,
											"end": 15385,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15385,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15340,
											"end": 15403,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "DUP16",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8362,
											"name": "PUSH",
											"source": 11,
											"value": "9C"
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "DUP15",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15413,
											"end": 15437,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 15413,
											"end": 15437,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 15413,
											"end": 15437,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15413,
											"end": 15437,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15413,
											"end": 15437,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15413,
											"end": 15437,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15413,
											"end": 15437,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15413,
											"end": 15441,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 15413,
											"end": 15441,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15413,
											"end": 15468,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15531,
											"end": 15548,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 15541,
											"end": 15548,
											"name": "PUSH",
											"source": 11,
											"value": "278D00"
										},
										{
											"begin": 15531,
											"end": 15548,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 15531,
											"end": 15548,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 15531,
											"end": 15548,
											"name": "tag",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 15531,
											"end": 15548,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15512,
											"end": 15549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 15512,
											"end": 15549,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15512,
											"end": 15527,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 15512,
											"end": 15549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 15512,
											"end": 15549,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 15512,
											"end": 15549,
											"name": "tag",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 15512,
											"end": 15549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15486,
											"name": "PUSH",
											"source": 11,
											"value": "9E"
										},
										{
											"begin": 15478,
											"end": 15498,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15487,
											"end": 15497,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15478,
											"end": 15498,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15478,
											"end": 15498,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15498,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15498,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15498,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15478,
											"end": 15498,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15498,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15498,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15498,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15498,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15478,
											"end": 15498,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15498,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15478,
											"end": 15498,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15499,
											"end": 15501,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15509,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 15478,
											"end": 15509,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15549,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15549,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15549,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15478,
											"end": 15549,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15593,
											"end": 15600,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15567,
											"name": "PUSH",
											"source": 11,
											"value": "9E"
										},
										{
											"begin": 15559,
											"end": 15579,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15568,
											"end": 15578,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15559,
											"end": 15579,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15559,
											"end": 15579,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15579,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15579,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15579,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15559,
											"end": 15579,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15579,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15579,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15579,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15579,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15559,
											"end": 15579,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15579,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15559,
											"end": 15579,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15583,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15580,
											"end": 15582,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15583,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15583,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15559,
											"end": 15583,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15583,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15583,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15583,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15559,
											"end": 15583,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15583,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15559,
											"end": 15583,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15600,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15600,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15600,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15559,
											"end": 15600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15647,
											"end": 15654,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15618,
											"name": "PUSH",
											"source": 11,
											"value": "9E"
										},
										{
											"begin": 15610,
											"end": 15630,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15619,
											"end": 15629,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15610,
											"end": 15630,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15610,
											"end": 15630,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15630,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15630,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15630,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15610,
											"end": 15630,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15630,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15630,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15630,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15630,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15610,
											"end": 15630,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15630,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15610,
											"end": 15630,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15634,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15631,
											"end": 15633,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15634,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15634,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15634,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15610,
											"end": 15634,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15634,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15634,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15634,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15634,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15610,
											"end": 15634,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15634,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15610,
											"end": 15634,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15644,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 15610,
											"end": 15644,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15654,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15654,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15654,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15610,
											"end": 15654,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15697,
											"end": 15704,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15672,
											"name": "PUSH",
											"source": 11,
											"value": "9E"
										},
										{
											"begin": 15664,
											"end": 15684,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15673,
											"end": 15683,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15664,
											"end": 15684,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15664,
											"end": 15684,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15684,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15684,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15684,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15664,
											"end": 15684,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15684,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15684,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15684,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15684,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15664,
											"end": 15684,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15684,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15664,
											"end": 15684,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15688,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15685,
											"end": 15687,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15688,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15688,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15664,
											"end": 15688,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15688,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15688,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15664,
											"end": 15688,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15688,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15664,
											"end": 15688,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15694,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 15664,
											"end": 15694,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15704,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15704,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15664,
											"end": 15704,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15729,
											"name": "PUSH",
											"source": 11,
											"value": "9F"
										},
										{
											"begin": 15715,
											"end": 15741,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15730,
											"end": 15740,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15715,
											"end": 15741,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15715,
											"end": 15741,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15741,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15741,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15741,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15715,
											"end": 15741,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15741,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15741,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15741,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15741,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15715,
											"end": 15741,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15741,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15715,
											"end": 15741,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15747,
											"end": 15749,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15750,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15781,
											"end": 15789,
											"name": "PUSH",
											"source": 11,
											"value": "9E"
										},
										{
											"begin": 15781,
											"end": 15801,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15790,
											"end": 15800,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15781,
											"end": 15801,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15781,
											"end": 15801,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15781,
											"end": 15801,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15781,
											"end": 15801,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15781,
											"end": 15801,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15781,
											"end": 15801,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15781,
											"end": 15801,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15781,
											"end": 15801,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15781,
											"end": 15801,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15781,
											"end": 15801,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15781,
											"end": 15801,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15781,
											"end": 15801,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15781,
											"end": 15801,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15781,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15802,
											"end": 15804,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15781,
											"end": 15805,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15781,
											"end": 15805,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15781,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15781,
											"end": 15805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15781,
											"end": 15805,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15781,
											"end": 15805,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15781,
											"end": 15805,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15781,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15781,
											"end": 15805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15781,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15781,
											"end": 15805,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15774,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 15760,
											"end": 15778,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15775,
											"end": 15777,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15778,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15778,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15778,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15760,
											"end": 15778,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15778,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15778,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15778,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15778,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15760,
											"end": 15778,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15778,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15760,
											"end": 15778,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15760,
											"end": 15805,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15859,
											"end": 15865,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15837,
											"end": 15865,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15842,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 15843,
											"end": 15850,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "tag",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15855,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 15837,
											"end": 15855,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15855,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15837,
											"end": 15865,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15865,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15865,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15865,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 15837,
											"end": 15865,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15865,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15865,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 15837,
											"end": 15865,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 15837,
											"end": 15865,
											"name": "tag",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 15837,
											"end": 15865,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15865,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15865,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15865,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15875,
											"end": 15897,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15875,
											"end": 15897,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 15875,
											"end": 15897,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15875,
											"end": 15897,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15875,
											"end": 15888,
											"name": "PUSH",
											"source": 11,
											"value": "A2"
										},
										{
											"begin": 15875,
											"end": 15897,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15875,
											"end": 15897,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15875,
											"end": 15897,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15875,
											"end": 15897,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15875,
											"end": 15897,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15875,
											"end": 15897,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "tag",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15875,
											"end": 15911,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15927,
											"end": 15979,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15927,
											"end": 15979,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15927,
											"end": 15979,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20075,
											"end": 20122,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 20075,
											"end": 20122,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 20057,
											"end": 20123,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20057,
											"end": 20123,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15963,
											"end": 15978,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 20154,
											"end": 20156,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20139,
											"end": 20157,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20139,
											"end": 20157,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20132,
											"end": 20166,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15954,
											"end": 15961,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 15954,
											"end": 15961,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15934,
											"end": 15944,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 15934,
											"end": 15944,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15927,
											"end": 15979,
											"name": "PUSH",
											"source": 11,
											"value": "B4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED"
										},
										{
											"begin": 15927,
											"end": 15979,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20030,
											"end": 20048,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15927,
											"end": 15979,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15927,
											"end": 15979,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15927,
											"end": 15979,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15927,
											"end": 15979,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15927,
											"end": 15979,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15927,
											"end": 15979,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15927,
											"end": 15979,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15996,
											"end": 15998,
											"name": "SWAP10",
											"source": 11
										},
										{
											"begin": 13943,
											"end": 16005,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13943,
											"end": 16005,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "tag",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4186,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 22496,
											"end": 22606,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 22496,
											"end": 22606,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22574,
											"name": "PUSH",
											"source": 11,
											"value": "9A"
										},
										{
											"begin": 22570,
											"end": 22574,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22593,
											"end": 22597,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22544,
											"end": 22551,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22544,
											"end": 22551,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22570,
											"end": 22574,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22574,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22584,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 22570,
											"end": 22584,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2616,
											"end": 2634,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2616,
											"end": 2634,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "tag",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "tag",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 22570,
											"end": 22599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22563,
											"end": 22599,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22563,
											"end": 22599,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22496,
											"end": 22606,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22496,
											"end": 22606,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 13280,
											"end": 13590,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 13280,
											"end": 13590,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13468,
											"end": 13490,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13468,
											"end": 13490,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13408,
											"end": 13422,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13468,
											"end": 13490,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13468,
											"end": 13490,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13468,
											"end": 13490,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13468,
											"end": 13476,
											"name": "PUSH",
											"source": 11,
											"value": "9E"
										},
										{
											"begin": 13468,
											"end": 13490,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13468,
											"end": 13490,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13468,
											"end": 13490,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13468,
											"end": 13490,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13468,
											"end": 13490,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13468,
											"end": 13490,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13468,
											"end": 13490,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13468,
											"end": 13490,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 13468,
											"end": 13496,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13468,
											"end": 13496,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13468,
											"end": 13496,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13468,
											"end": 13496,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13468,
											"end": 13496,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13468,
											"end": 13496,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13468,
											"end": 13496,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13468,
											"end": 13496,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "PUSH",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13496,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13536,
											"end": 13583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 13477,
											"end": 13489,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13491,
											"end": 13495,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13573,
											"end": 13582,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13536,
											"end": 13552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 13536,
											"end": 13583,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13536,
											"end": 13583,
											"name": "tag",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 13536,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13515,
											"end": 13526,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13515,
											"end": 13533,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13515,
											"end": 13533,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13515,
											"end": 13533,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13515,
											"end": 13583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 13515,
											"end": 13583,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13515,
											"end": 13583,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13515,
											"end": 13583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 13515,
											"end": 13583,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13515,
											"end": 13583,
											"name": "tag",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 13515,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13506,
											"end": 13583,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 13280,
											"end": 13590,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13280,
											"end": 13590,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 22205,
											"end": 22361,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 22205,
											"end": 22361,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22281,
											"end": 22285,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22341,
											"end": 22354,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 22341,
											"end": 22352,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 22341,
											"end": 22354,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 22341,
											"end": 22354,
											"name": "tag",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 22341,
											"end": 22354,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22304,
											"end": 22309,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 22310,
											"end": 22317,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22304,
											"end": 22318,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22304,
											"end": 22318,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 22304,
											"end": 22318,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22304,
											"end": 22318,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 22304,
											"end": 22318,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 22304,
											"end": 22318,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 22304,
											"end": 22318,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 22304,
											"end": 22318,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 22304,
											"end": 22318,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 22304,
											"end": 22318,
											"name": "tag",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 22304,
											"end": 22318,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22304,
											"end": 22318,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22304,
											"end": 22318,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22304,
											"end": 22318,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22304,
											"end": 22318,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22304,
											"end": 22318,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22304,
											"end": 22318,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 22304,
											"end": 22318,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22304,
											"end": 22318,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 22304,
											"end": 22318,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 22304,
											"end": 22318,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22304,
											"end": 22337,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 22304,
											"end": 22337,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22304,
											"end": 22337,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 22304,
											"end": 22354,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 22304,
											"end": 22354,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 22297,
											"end": 22354,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22297,
											"end": 22354,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22205,
											"end": 22361,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22205,
											"end": 22361,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22205,
											"end": 22361,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22205,
											"end": 22361,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7185,
											"end": 7353,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 7185,
											"end": 7353,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7253,
											"name": "PUSH",
											"source": 11,
											"value": "A4"
										},
										{
											"begin": 7245,
											"end": 7253,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7245,
											"end": 7253,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7245,
											"end": 7253,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7237,
											"end": 7277,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 7237,
											"end": 7277,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7237,
											"end": 7277,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7237,
											"end": 7277,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7237,
											"end": 7277,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7237,
											"end": 7277,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20379,
											"end": 20381,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7237,
											"end": 7277,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7237,
											"end": 7277,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7237,
											"end": 7277,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20361,
											"end": 20382,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20418,
											"end": 20420,
											"name": "PUSH",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 20398,
											"end": 20416,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 20398,
											"end": 20416,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20398,
											"end": 20416,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20391,
											"end": 20421,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E4813DC195C985D1A5BDB985B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20437,
											"end": 20455,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 20437,
											"end": 20455,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20437,
											"end": 20455,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20430,
											"end": 20479,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20496,
											"end": 20514,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 20496,
											"end": 20514,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7237,
											"end": 7277,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 20177,
											"end": 20520,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7237,
											"end": 7277,
											"name": "tag",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 7237,
											"end": 7277,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7287,
											"end": 7295,
											"name": "PUSH",
											"source": 11,
											"value": "A4"
										},
										{
											"begin": 7287,
											"end": 7303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7287,
											"end": 7303,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7287,
											"end": 7303,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7287,
											"end": 7303,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7287,
											"end": 7303,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7331,
											"end": 7346,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 7313,
											"end": 7328,
											"name": "PUSH",
											"source": 11,
											"value": "A5"
										},
										{
											"begin": 7313,
											"end": 7346,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7185,
											"end": 7353,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5014,
											"end": 5358,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 5014,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3111,
											"end": 3130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 3156,
											"end": 3157,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3133,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 3133,
											"end": 3158,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3133,
											"end": 3158,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 3133,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3111,
											"end": 3158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3111,
											"end": 3158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3172,
											"end": 3186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3233,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 3168,
											"end": 3233,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3222,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3202,
											"end": 3222,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3222,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3202,
											"end": 3222,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3222,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3233,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 3168,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5133,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 5133,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 5133,
											"end": 5149,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5133,
											"end": 5149,
											"name": "tag",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 5133,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5159,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "516"
										},
										{
											"begin": 5159,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 5159,
											"end": 5175,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5159,
											"end": 5175,
											"name": "tag",
											"source": 11,
											"value": "516"
										},
										{
											"begin": 5159,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5185,
											"end": 5209,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 5185,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 5185,
											"end": 5209,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5185,
											"end": 5209,
											"name": "tag",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 5185,
											"end": 5209,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "PUSH",
											"source": 11,
											"value": "A3"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "tag",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5256,
											"end": 5260,
											"name": "PUSH",
											"source": 11,
											"value": "9A"
										},
										{
											"begin": 5256,
											"end": 5291,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5291,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5256,
											"end": 5291,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5256,
											"end": 5291,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5291,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5291,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5291,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5291,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5311,
											"end": 5319,
											"name": "PUSH",
											"source": 11,
											"value": "1E13380"
										},
										{
											"begin": 5301,
											"end": 5308,
											"name": "PUSH",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 5301,
											"end": 5319,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5329,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 5342,
											"end": 5350,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5329,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 5329,
											"end": 5351,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5329,
											"end": 5351,
											"name": "tag",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 5329,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3257,
											"end": 3271,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3253,
											"end": 3352,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3253,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 3253,
											"end": 3352,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3308,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 20677,
											"end": 20713,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20677,
											"end": 20713,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "PUSH",
											"source": 1,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20665,
											"end": 20667,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20650,
											"end": 20668,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 3253,
											"end": 3352,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 3253,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5014,
											"end": 5358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5014,
											"end": 5358,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "PUSH",
											"source": 11,
											"value": "9F"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "tag",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10372,
											"end": 10954,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 10372,
											"end": 10954,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4865,
											"end": 4876,
											"name": "PUSH",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 4865,
											"end": 4876,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4865,
											"end": 4876,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4849,
											"end": 4876,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4849,
											"end": 4876,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4841,
											"end": 4895,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "531"
										},
										{
											"begin": 4841,
											"end": 4895,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4841,
											"end": 4895,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4841,
											"end": 4895,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4841,
											"end": 4895,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4841,
											"end": 4895,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20926,
											"end": 20928,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4841,
											"end": 4895,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4841,
											"end": 4895,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4841,
											"end": 4895,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20908,
											"end": 20929,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20965,
											"end": 20967,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 20945,
											"end": 20963,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 20945,
											"end": 20963,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20945,
											"end": 20963,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20938,
											"end": 20968,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E76616C696420616363657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20984,
											"end": 21002,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 20984,
											"end": 21002,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20984,
											"end": 21002,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20977,
											"end": 21021,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21038,
											"end": 21056,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 21038,
											"end": 21056,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4841,
											"end": 4895,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 20724,
											"end": 21062,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4841,
											"end": 4895,
											"name": "tag",
											"source": 11,
											"value": "531"
										},
										{
											"begin": 4841,
											"end": 4895,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2588,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "535"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "tag",
											"source": 2,
											"value": "535"
										},
										{
											"begin": 2561,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2699,
											"end": 2717,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10464,
											"end": 10474,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10456,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "538"
										},
										{
											"begin": 10456,
											"end": 10510,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10456,
											"end": 10510,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10456,
											"end": 10510,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10456,
											"end": 10510,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10456,
											"end": 10510,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21269,
											"end": 21271,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10456,
											"end": 10510,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10456,
											"end": 10510,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10456,
											"end": 10510,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21251,
											"end": 21272,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21308,
											"end": 21310,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 21288,
											"end": 21306,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 21288,
											"end": 21306,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21288,
											"end": 21306,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21281,
											"end": 21311,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21347,
											"end": 21380,
											"name": "PUSH",
											"source": 12,
											"value": "436F6C6C656374204665653A20416D6F756E74206D757374206265203E203000"
										},
										{
											"begin": 21327,
											"end": 21345,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 21327,
											"end": 21345,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21327,
											"end": 21345,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21320,
											"end": 21381,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21398,
											"end": 21416,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 21398,
											"end": 21416,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10456,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 21067,
											"end": 21422,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10456,
											"end": 10510,
											"name": "tag",
											"source": 11,
											"value": "538"
										},
										{
											"begin": 10456,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10524,
											"name": "PUSH",
											"source": 11,
											"value": "9A"
										},
										{
											"begin": 10520,
											"end": 10524,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10520,
											"end": 10524,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10537,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 10560,
											"end": 10564,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 10567,
											"end": 10573,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "542"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "tag",
											"source": 11,
											"value": "542"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "tag",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "545"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "tag",
											"source": 11,
											"value": "545"
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10574,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10590,
											"end": 10599,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10585,
											"end": 10900,
											"name": "tag",
											"source": 11,
											"value": "546"
										},
										{
											"begin": 10585,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10609,
											"end": 10616,
											"name": "PUSH",
											"source": 11,
											"value": "A3"
										},
										{
											"begin": 10609,
											"end": 10623,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10605,
											"end": 10623,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10605,
											"end": 10623,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10585,
											"end": 10900,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10585,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 10585,
											"end": 10900,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "PUSH",
											"source": 11,
											"value": "A3"
										},
										{
											"begin": 10703,
											"end": 10704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10695,
											"end": 10705,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10695,
											"end": 10705,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10695,
											"end": 10705,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10695,
											"end": 10705,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10695,
											"end": 10705,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 10695,
											"end": 10705,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10695,
											"end": 10705,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 10695,
											"end": 10705,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 10695,
											"end": 10705,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10695,
											"end": 10705,
											"name": "tag",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 10695,
											"end": 10705,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10695,
											"end": 10705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10695,
											"end": 10705,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10695,
											"end": 10705,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10695,
											"end": 10705,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10695,
											"end": 10705,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10695,
											"end": 10705,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 10695,
											"end": 10705,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10695,
											"end": 10705,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10709,
											"end": 10710,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10695,
											"end": 10710,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 10695,
											"end": 10889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "552"
										},
										{
											"begin": 10695,
											"end": 10889,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "PUSH",
											"source": 11,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 10863,
											"end": 10869,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10850,
											"end": 10859,
											"name": "PUSH",
											"source": 11,
											"value": "A6"
										},
										{
											"begin": 10850,
											"end": 10859,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "PUSH",
											"source": 11,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 10817,
											"end": 10824,
											"name": "PUSH",
											"source": 11,
											"value": "A3"
										},
										{
											"begin": 10825,
											"end": 10826,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10817,
											"end": 10827,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10817,
											"end": 10827,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10817,
											"end": 10827,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10817,
											"end": 10827,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10817,
											"end": 10827,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 10817,
											"end": 10827,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10817,
											"end": 10827,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 10817,
											"end": 10827,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 10817,
											"end": 10827,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10817,
											"end": 10827,
											"name": "tag",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 10817,
											"end": 10827,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10817,
											"end": 10827,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10817,
											"end": 10827,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10817,
											"end": 10827,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10817,
											"end": 10827,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10817,
											"end": 10827,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10817,
											"end": 10827,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 10817,
											"end": 10827,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10817,
											"end": 10827,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10817,
											"end": 10846,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "556"
										},
										{
											"begin": 10817,
											"end": 10846,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10817,
											"end": 10846,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10817,
											"end": 10846,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 10817,
											"end": 10846,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10817,
											"end": 10846,
											"name": "tag",
											"source": 11,
											"value": "556"
										},
										{
											"begin": 10817,
											"end": 10846,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10816,
											"end": 10859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "557"
										},
										{
											"begin": 10816,
											"end": 10859,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10816,
											"end": 10859,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10816,
											"end": 10859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 10816,
											"end": 10859,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10816,
											"end": 10859,
											"name": "tag",
											"source": 11,
											"value": "557"
										},
										{
											"begin": 10816,
											"end": 10859,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10815,
											"end": 10869,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "558"
										},
										{
											"begin": 10815,
											"end": 10869,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10815,
											"end": 10869,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10815,
											"end": 10869,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 10815,
											"end": 10869,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10815,
											"end": 10869,
											"name": "tag",
											"source": 11,
											"value": "558"
										},
										{
											"begin": 10815,
											"end": 10869,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10814,
											"end": 10889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "559"
										},
										{
											"begin": 10814,
											"end": 10889,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10814,
											"end": 10889,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10814,
											"end": 10889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 10814,
											"end": 10889,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10814,
											"end": 10889,
											"name": "tag",
											"source": 11,
											"value": "559"
										},
										{
											"begin": 10814,
											"end": 10889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10695,
											"end": 10889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "564"
										},
										{
											"begin": 10695,
											"end": 10889,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10695,
											"end": 10889,
											"name": "tag",
											"source": 11,
											"value": "552"
										},
										{
											"begin": 10695,
											"end": 10889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "PUSH",
											"source": 11,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 10769,
											"end": 10775,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10756,
											"end": 10765,
											"name": "PUSH",
											"source": 11,
											"value": "A6"
										},
										{
											"begin": 10756,
											"end": 10765,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "PUSH",
											"source": 11,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 10732,
											"end": 10733,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10732,
											"end": 10752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "561"
										},
										{
											"begin": 10732,
											"end": 10752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10732,
											"end": 10752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10732,
											"end": 10752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 10732,
											"end": 10752,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10732,
											"end": 10752,
											"name": "tag",
											"source": 11,
											"value": "561"
										},
										{
											"begin": 10732,
											"end": 10752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10731,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 10731,
											"end": 10765,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10731,
											"end": 10765,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10731,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 10731,
											"end": 10765,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10731,
											"end": 10765,
											"name": "tag",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 10731,
											"end": 10765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10730,
											"end": 10775,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "563"
										},
										{
											"begin": 10730,
											"end": 10775,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10730,
											"end": 10775,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10730,
											"end": 10775,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 10730,
											"end": 10775,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10730,
											"end": 10775,
											"name": "tag",
											"source": 11,
											"value": "563"
										},
										{
											"begin": 10730,
											"end": 10775,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10729,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "564"
										},
										{
											"begin": 10729,
											"end": 10795,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10729,
											"end": 10795,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10729,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 10729,
											"end": 10795,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10729,
											"end": 10795,
											"name": "tag",
											"source": 11,
											"value": "564"
										},
										{
											"begin": 10729,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10657,
											"name": "PUSH",
											"source": 11,
											"value": "A2"
										},
										{
											"begin": 10644,
											"end": 10669,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10658,
											"end": 10665,
											"name": "PUSH",
											"source": 11,
											"value": "A3"
										},
										{
											"begin": 10666,
											"end": 10667,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10658,
											"end": 10668,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10658,
											"end": 10668,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10658,
											"end": 10668,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10658,
											"end": 10668,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10658,
											"end": 10668,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 10658,
											"end": 10668,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10658,
											"end": 10668,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 10658,
											"end": 10668,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 10658,
											"end": 10668,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10658,
											"end": 10668,
											"name": "tag",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 10658,
											"end": 10668,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10658,
											"end": 10668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10658,
											"end": 10668,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10658,
											"end": 10668,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10658,
											"end": 10668,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10658,
											"end": 10668,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10658,
											"end": 10668,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 10658,
											"end": 10668,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10658,
											"end": 10668,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10669,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10669,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10669,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10644,
											"end": 10669,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10669,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10669,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10669,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10669,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10644,
											"end": 10669,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10669,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10644,
											"end": 10669,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10691,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10644,
											"end": 10691,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10691,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10644,
											"end": 10889,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10889,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10889,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "568"
										},
										{
											"begin": 10644,
											"end": 10889,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10889,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 10644,
											"end": 10889,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10644,
											"end": 10889,
											"name": "tag",
											"source": 11,
											"value": "568"
										},
										{
											"begin": 10644,
											"end": 10889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10889,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10889,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10889,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10628,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10625,
											"end": 10628,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "569"
										},
										{
											"begin": 10625,
											"end": 10628,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10625,
											"end": 10628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 10625,
											"end": 10628,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10625,
											"end": 10628,
											"name": "tag",
											"source": 11,
											"value": "569"
										},
										{
											"begin": 10625,
											"end": 10628,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10625,
											"end": 10628,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10625,
											"end": 10628,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10625,
											"end": 10628,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10585,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "546"
										},
										{
											"begin": 10585,
											"end": 10900,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10585,
											"end": 10900,
											"name": "tag",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 10585,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10914,
											"end": 10947,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10914,
											"end": 10947,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 929,
											"end": 939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10914,
											"end": 10947,
											"name": "PUSH",
											"source": 11,
											"value": "386D896E9BD972181CFB744681A2DE8D2DAAB22884986FDC60C3947BE36CA01B"
										},
										{
											"begin": 10914,
											"end": 10947,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10914,
											"end": 10947,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "575"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "575"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "578"
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21629,
											"end": 21631,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21611,
											"end": 21632,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21668,
											"end": 21670,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 21648,
											"end": 21666,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 21648,
											"end": 21666,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21648,
											"end": 21666,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21641,
											"end": 21671,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21707,
											"end": 21741,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 21687,
											"end": 21705,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 21687,
											"end": 21705,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21687,
											"end": 21705,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21680,
											"end": 21742,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21758,
											"end": 21776,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 21758,
											"end": 21776,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21758,
											"end": 21776,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21751,
											"end": 21787,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21804,
											"end": 21823,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 21804,
											"end": 21823,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 21427,
											"end": 21829,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "tag",
											"source": 0,
											"value": "578"
										},
										{
											"begin": 2238,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 2340,
											"end": 2348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 2321,
											"end": 2349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2349,
											"name": "tag",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 2321,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2356,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9672,
											"end": 10259,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 9672,
											"end": 10259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 1480,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4739,
											"end": 4744,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 4739,
											"end": 4751,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9758,
											"end": 9765,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9758,
											"end": 9765,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4729,
											"end": 4751,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4729,
											"end": 4751,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "588"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "tag",
											"source": 11,
											"value": "588"
										},
										{
											"begin": 4721,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9812,
											"end": 9841,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9862,
											"end": 9867,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 9868,
											"end": 9875,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "592"
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "592"
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "tag",
											"source": 11,
											"value": "592"
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9883,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 9862,
											"end": 9883,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9883,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9982,
											"end": 9992,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19180,
											"end": 19214,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10002,
											"end": 10006,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 19230,
											"end": 19248,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 19230,
											"end": 19248,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19230,
											"end": 19248,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19223,
											"end": 19266,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9862,
											"end": 9883,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9883,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9883,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9883,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10012,
											"end": 10018,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10012,
											"end": 10018,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9883,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9883,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 9981,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 9960,
											"end": 9981,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19115,
											"end": 19133,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 19115,
											"end": 19133,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "596"
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "tag",
											"source": 11,
											"value": "596"
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "597"
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "tag",
											"source": 11,
											"value": "597"
										},
										{
											"begin": 9960,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10018,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 9960,
											"end": 10018,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9952,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "598"
										},
										{
											"begin": 9952,
											"end": 10051,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9952,
											"end": 10051,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9952,
											"end": 10051,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9952,
											"end": 10051,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9952,
											"end": 10051,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22036,
											"end": 22038,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9952,
											"end": 10051,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9952,
											"end": 10051,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9952,
											"end": 10051,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22018,
											"end": 22039,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22075,
											"end": 22077,
											"name": "PUSH",
											"source": 12,
											"value": "1C"
										},
										{
											"begin": 22055,
											"end": 22073,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 22055,
											"end": 22073,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22055,
											"end": 22073,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22048,
											"end": 22078,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22114,
											"end": 22144,
											"name": "PUSH",
											"source": 12,
											"value": "5374616B696E673A204D75737420616C6C6F77205370656E64696E6700000000"
										},
										{
											"begin": 22094,
											"end": 22112,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 22094,
											"end": 22112,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22094,
											"end": 22112,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22087,
											"end": 22145,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22162,
											"end": 22180,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 22162,
											"end": 22180,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9952,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 21834,
											"end": 22186,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9952,
											"end": 10051,
											"name": "tag",
											"source": 11,
											"value": "598"
										},
										{
											"begin": 9952,
											"end": 10051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10104,
											"end": 10128,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10128,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10128,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10128,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 10104,
											"end": 10128,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "601"
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10129,
											"end": 10139,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 10129,
											"end": 10139,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10149,
											"end": 10153,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 10149,
											"end": 10153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10156,
											"end": 10162,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 10156,
											"end": 10162,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "tag",
											"source": 11,
											"value": "601"
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "603"
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "tag",
											"source": 11,
											"value": "603"
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "604"
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "tag",
											"source": 11,
											"value": "604"
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10246,
											"end": 10252,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10214,
											"name": "PUSH",
											"source": 11,
											"value": "A1"
										},
										{
											"begin": 10215,
											"end": 10222,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "606"
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "606"
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "tag",
											"source": 11,
											"value": "606"
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10242,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 10209,
											"end": 10242,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10242,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10209,
											"end": 10252,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10252,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10252,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 10209,
											"end": 10252,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10252,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10209,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 10209,
											"end": 10252,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 11558,
											"end": 12951,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 11558,
											"end": 12951,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11689,
											"end": 11703,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11689,
											"end": 11703,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11749,
											"end": 11775,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11749,
											"end": 11775,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11749,
											"end": 11853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "611"
										},
										{
											"begin": 11749,
											"end": 11853,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11833,
											"end": 11853,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11833,
											"end": 11853,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11833,
											"end": 11853,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11833,
											"end": 11853,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11833,
											"end": 11847,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 11833,
											"end": 11853,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11833,
											"end": 11853,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11833,
											"end": 11853,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11833,
											"end": 11853,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11833,
											"end": 11853,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11749,
											"end": 11853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "612"
										},
										{
											"begin": 11749,
											"end": 11853,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11749,
											"end": 11853,
											"name": "tag",
											"source": 11,
											"value": "611"
										},
										{
											"begin": 11749,
											"end": 11853,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11790,
											"end": 11812,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11790,
											"end": 11812,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11790,
											"end": 11812,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11790,
											"end": 11812,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11790,
											"end": 11812,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11790,
											"end": 11812,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11790,
											"end": 11798,
											"name": "PUSH",
											"source": 11,
											"value": "9E"
										},
										{
											"begin": 11790,
											"end": 11812,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11790,
											"end": 11812,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11790,
											"end": 11812,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11790,
											"end": 11812,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11790,
											"end": 11812,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11790,
											"end": 11812,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11790,
											"end": 11812,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11790,
											"end": 11812,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11790,
											"end": 11818,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 11790,
											"end": 11818,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11790,
											"end": 11818,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11790,
											"end": 11818,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11790,
											"end": 11818,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11790,
											"end": 11818,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11790,
											"end": 11818,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11790,
											"end": 11818,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11749,
											"end": 11853,
											"name": "tag",
											"source": 11,
											"value": "612"
										},
										{
											"begin": 11749,
											"end": 11853,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "PUSH",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11853,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11868,
											"end": 11889,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11864,
											"end": 12945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "613"
										},
										{
											"begin": 11864,
											"end": 12945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12166,
											"end": 12174,
											"name": "PUSH",
											"source": 11,
											"value": "A4"
										},
										{
											"begin": 12166,
											"end": 12174,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12166,
											"end": 12174,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 12166,
											"end": 12174,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12162,
											"end": 12894,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12162,
											"end": 12894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "614"
										},
										{
											"begin": 12162,
											"end": 12894,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12233,
											"end": 12248,
											"name": "PUSH",
											"source": 11,
											"value": "A5"
										},
										{
											"begin": 12233,
											"end": 12248,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12198,
											"end": 12209,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12198,
											"end": 12230,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 12198,
											"end": 12230,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12198,
											"end": 12230,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12198,
											"end": 12248,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12194,
											"end": 12586,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12194,
											"end": 12586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "615"
										},
										{
											"begin": 12194,
											"end": 12586,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12281,
											"end": 12282,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12272,
											"end": 12282,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12272,
											"end": 12282,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11864,
											"end": 12945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "636"
										},
										{
											"begin": 11864,
											"end": 12945,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12194,
											"end": 12586,
											"name": "tag",
											"source": 11,
											"value": "615"
										},
										{
											"begin": 12194,
											"end": 12586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12338,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "617"
										},
										{
											"begin": 12540,
											"end": 12566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "618"
										},
										{
											"begin": 12561,
											"end": 12565,
											"name": "PUSH",
											"source": 11,
											"value": "3E8"
										},
										{
											"begin": 12540,
											"end": 12556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "619"
										},
										{
											"begin": 12552,
											"end": 12555,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 12540,
											"end": 12547,
											"name": "PUSH",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 12540,
											"end": 12547,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12540,
											"end": 12551,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "620"
										},
										{
											"begin": 12540,
											"end": 12551,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12540,
											"end": 12556,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12540,
											"end": 12556,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12540,
											"end": 12556,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12540,
											"end": 12556,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12540,
											"end": 12556,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12540,
											"end": 12556,
											"name": "tag",
											"source": 11,
											"value": "619"
										},
										{
											"begin": 12540,
											"end": 12556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12540,
											"end": 12560,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12540,
											"end": 12560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "620"
										},
										{
											"begin": 12540,
											"end": 12566,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12540,
											"end": 12566,
											"name": "tag",
											"source": 11,
											"value": "618"
										},
										{
											"begin": 12540,
											"end": 12566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12338,
											"end": 12510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "621"
										},
										{
											"begin": 12456,
											"end": 12509,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "622"
										},
										{
											"begin": 12476,
											"end": 12487,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12476,
											"end": 12508,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 12476,
											"end": 12508,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12476,
											"end": 12508,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12456,
											"end": 12471,
											"name": "PUSH",
											"source": 11,
											"value": "A5"
										},
										{
											"begin": 12456,
											"end": 12471,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12456,
											"end": 12475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "623"
										},
										{
											"begin": 12456,
											"end": 12475,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12456,
											"end": 12509,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12456,
											"end": 12509,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12456,
											"end": 12509,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12456,
											"end": 12509,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12456,
											"end": 12509,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12456,
											"end": 12509,
											"name": "tag",
											"source": 11,
											"value": "622"
										},
										{
											"begin": 12456,
											"end": 12509,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12410,
											"end": 12425,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 12410,
											"end": 12425,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12410,
											"end": 12425,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12410,
											"end": 12425,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12338,
											"end": 12380,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12338,
											"end": 12380,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 12338,
											"end": 12380,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12338,
											"end": 12380,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12338,
											"end": 12426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "619"
										},
										{
											"begin": 12338,
											"end": 12426,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12338,
											"end": 12409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "620"
										},
										{
											"begin": 12338,
											"end": 12426,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12338,
											"end": 12510,
											"name": "tag",
											"source": 11,
											"value": "621"
										},
										{
											"begin": 12338,
											"end": 12510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12338,
											"end": 12539,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12338,
											"end": 12539,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "625"
										},
										{
											"begin": 12338,
											"end": 12567,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12338,
											"end": 12567,
											"name": "tag",
											"source": 11,
											"value": "617"
										},
										{
											"begin": 12338,
											"end": 12567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12329,
											"end": 12567,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12329,
											"end": 12567,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11864,
											"end": 12945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "636"
										},
										{
											"begin": 11864,
											"end": 12945,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12162,
											"end": 12894,
											"name": "tag",
											"source": 11,
											"value": "614"
										},
										{
											"begin": 12162,
											"end": 12894,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12624,
											"end": 12635,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12638,
											"end": 12647,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12638,
											"end": 12697,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "627"
										},
										{
											"begin": 12638,
											"end": 12697,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12693,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12697,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 12682,
											"end": 12697,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12682,
											"end": 12697,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12638,
											"end": 12697,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "629"
										},
										{
											"begin": 12638,
											"end": 12697,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12638,
											"end": 12697,
											"name": "tag",
											"source": 11,
											"value": "627"
										},
										{
											"begin": 12638,
											"end": 12697,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12657,
											"end": 12675,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 12657,
											"end": 12675,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12657,
											"end": 12675,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12657,
											"end": 12675,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12677,
											"end": 12678,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8362,
											"name": "PUSH",
											"source": 11,
											"value": "9C"
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8371,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8345,
											"end": 8380,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12650,
											"end": 12679,
											"name": "tag",
											"source": 11,
											"value": "629"
										},
										{
											"begin": 12650,
											"end": 12679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12624,
											"end": 12697,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12624,
											"end": 12697,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12724,
											"end": 12879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "630"
										},
										{
											"begin": 12835,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "631"
										},
										{
											"begin": 12856,
											"end": 12860,
											"name": "PUSH",
											"source": 11,
											"value": "3E8"
										},
										{
											"begin": 12835,
											"end": 12851,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "619"
										},
										{
											"begin": 12847,
											"end": 12850,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 12835,
											"end": 12842,
											"name": "PUSH",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 12835,
											"end": 12842,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12835,
											"end": 12846,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "620"
										},
										{
											"begin": 12835,
											"end": 12846,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12835,
											"end": 12851,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12835,
											"end": 12851,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12835,
											"end": 12851,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12835,
											"end": 12851,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12835,
											"end": 12851,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12835,
											"end": 12861,
											"name": "tag",
											"source": 11,
											"value": "631"
										},
										{
											"begin": 12835,
											"end": 12861,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12724,
											"end": 12809,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "621"
										},
										{
											"begin": 12755,
											"end": 12808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "634"
										},
										{
											"begin": 12775,
											"end": 12786,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12775,
											"end": 12807,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 12775,
											"end": 12807,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12775,
											"end": 12807,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12755,
											"end": 12770,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 12755,
											"end": 12774,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "623"
										},
										{
											"begin": 12755,
											"end": 12774,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12755,
											"end": 12808,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12755,
											"end": 12808,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12755,
											"end": 12808,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12755,
											"end": 12808,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12755,
											"end": 12808,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12755,
											"end": 12808,
											"name": "tag",
											"source": 11,
											"value": "634"
										},
										{
											"begin": 12755,
											"end": 12808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12724,
											"end": 12741,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12724,
											"end": 12741,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 12724,
											"end": 12741,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12724,
											"end": 12741,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12724,
											"end": 12750,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "619"
										},
										{
											"begin": 12724,
											"end": 12750,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12746,
											"end": 12749,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 12724,
											"end": 12745,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "620"
										},
										{
											"begin": 12724,
											"end": 12750,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 12724,
											"end": 12879,
											"name": "tag",
											"source": 11,
											"value": "630"
										},
										{
											"begin": 12724,
											"end": 12879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12715,
											"end": 12879,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12715,
											"end": 12879,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12606,
											"end": 12894,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11864,
											"end": 12945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "636"
										},
										{
											"begin": 11864,
											"end": 12945,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11864,
											"end": 12945,
											"name": "tag",
											"source": 11,
											"value": "613"
										},
										{
											"begin": 11864,
											"end": 12945,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12933,
											"end": 12934,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12924,
											"end": 12934,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12924,
											"end": 12934,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11864,
											"end": 12945,
											"name": "tag",
											"source": 11,
											"value": "636"
										},
										{
											"begin": 11864,
											"end": 12945,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11705,
											"end": 12951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11558,
											"end": 12951,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 11558,
											"end": 12951,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11558,
											"end": 12951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11558,
											"end": 12951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11558,
											"end": 12951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11558,
											"end": 12951,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 18977,
											"end": 19639,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 18977,
											"end": 19639,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19075,
											"end": 19090,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19075,
											"end": 19090,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19072,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19075,
											"end": 19090,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19075,
											"end": 19090,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19075,
											"end": 19090,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19075,
											"end": 19083,
											"name": "PUSH",
											"source": 11,
											"value": "9E"
										},
										{
											"begin": 19075,
											"end": 19090,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19075,
											"end": 19090,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19075,
											"end": 19090,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19075,
											"end": 19090,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19075,
											"end": 19090,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19075,
											"end": 19090,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19075,
											"end": 19090,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19075,
											"end": 19090,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 19075,
											"end": 19096,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19075,
											"end": 19096,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19075,
											"end": 19096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19075,
											"end": 19096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19075,
											"end": 19096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19075,
											"end": 19096,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19075,
											"end": 19096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19075,
											"end": 19096,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19075,
											"end": 19096,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "PUSH",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19045,
											"end": 19096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19106,
											"end": 19157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "638"
										},
										{
											"begin": 19106,
											"end": 19157,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 19106,
											"end": 19157,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19106,
											"end": 19157,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19106,
											"end": 19157,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19106,
											"end": 19157,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22393,
											"end": 22395,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19106,
											"end": 19157,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 19106,
											"end": 19157,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19106,
											"end": 19157,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22375,
											"end": 22396,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22432,
											"end": 22434,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 22412,
											"end": 22430,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 22412,
											"end": 22430,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22412,
											"end": 22430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22405,
											"end": 22435,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2430B93B32B9BA1D102737BA10309039BA30B5B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22451,
											"end": 22469,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 22451,
											"end": 22469,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22451,
											"end": 22469,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22444,
											"end": 22495,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22512,
											"end": 22530,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 22512,
											"end": 22530,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19106,
											"end": 19157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 22191,
											"end": 22536,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19106,
											"end": 19157,
											"name": "tag",
											"source": 11,
											"value": "638"
										},
										{
											"begin": 19106,
											"end": 19157,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19168,
											"end": 19185,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19188,
											"end": 19216,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "641"
										},
										{
											"begin": 19204,
											"end": 19209,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19211,
											"end": 19215,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19188,
											"end": 19203,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 19188,
											"end": 19216,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 19188,
											"end": 19216,
											"name": "tag",
											"source": 11,
											"value": "641"
										},
										{
											"begin": 19188,
											"end": 19216,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19168,
											"end": 19216,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19230,
											"end": 19244,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19230,
											"end": 19244,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 19230,
											"end": 19244,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19230,
											"end": 19307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "642"
										},
										{
											"begin": 19230,
											"end": 19307,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19262,
											"end": 19279,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 19262,
											"end": 19279,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19262,
											"end": 19279,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19262,
											"end": 19279,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 19306,
											"end": 19307,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19248,
											"end": 19280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19248,
											"end": 19280,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19248,
											"end": 19280,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19248,
											"end": 19261,
											"name": "PUSH",
											"source": 11,
											"value": "A2"
										},
										{
											"begin": 19248,
											"end": 19280,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19248,
											"end": 19280,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19248,
											"end": 19280,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19248,
											"end": 19280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19248,
											"end": 19280,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 19248,
											"end": 19302,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 19248,
											"end": 19302,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19248,
											"end": 19302,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19248,
											"end": 19307,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 19230,
											"end": 19307,
											"name": "tag",
											"source": 11,
											"value": "642"
										},
										{
											"begin": 19230,
											"end": 19307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19226,
											"end": 19340,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 19226,
											"end": 19340,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "643"
										},
										{
											"begin": 19226,
											"end": 19340,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 19323,
											"end": 19330,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19323,
											"end": 19330,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18977,
											"end": 19639,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18977,
											"end": 19639,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18977,
											"end": 19639,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 19226,
											"end": 19340,
											"name": "tag",
											"source": 11,
											"value": "643"
										},
										{
											"begin": 19226,
											"end": 19340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19372,
											"name": "PUSH",
											"source": 11,
											"value": "9A"
										},
										{
											"begin": 19368,
											"end": 19372,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19391,
											"end": 19395,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19350,
											"end": 19365,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19350,
											"end": 19365,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19368,
											"end": 19372,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19372,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19382,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 19368,
											"end": 19382,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2616,
											"end": 2634,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2616,
											"end": 2634,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "646"
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "tag",
											"source": 11,
											"value": "646"
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "647"
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "tag",
											"source": 11,
											"value": "647"
										},
										{
											"begin": 19368,
											"end": 19397,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19350,
											"end": 19397,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19350,
											"end": 19397,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19412,
											"end": 19419,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19423,
											"end": 19424,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19412,
											"end": 19424,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19408,
											"end": 19457,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "648"
										},
										{
											"begin": 19408,
											"end": 19457,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 19440,
											"end": 19447,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19440,
											"end": 19447,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19440,
											"end": 19447,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18977,
											"end": 19639,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18977,
											"end": 19639,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18977,
											"end": 19639,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 19408,
											"end": 19457,
											"name": "tag",
											"source": 11,
											"value": "648"
										},
										{
											"begin": 19408,
											"end": 19457,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19480,
											"end": 19497,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 19480,
											"end": 19497,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19480,
											"end": 19497,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19480,
											"end": 19497,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 19466,
											"end": 19498,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19466,
											"end": 19498,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19466,
											"end": 19498,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19466,
											"end": 19498,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19466,
											"end": 19479,
											"name": "PUSH",
											"source": 11,
											"value": "A2"
										},
										{
											"begin": 19466,
											"end": 19498,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19466,
											"end": 19498,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19466,
											"end": 19498,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19466,
											"end": 19498,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19466,
											"end": 19498,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 19466,
											"end": 19520,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 19466,
											"end": 19520,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19466,
											"end": 19533,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19466,
											"end": 19533,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19524,
											"end": 19533,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19524,
											"end": 19533,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19466,
											"end": 19498,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19466,
											"end": 19533,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "649"
										},
										{
											"begin": 19466,
											"end": 19533,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19524,
											"end": 19533,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19524,
											"end": 19533,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19466,
											"end": 19533,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 19466,
											"end": 19533,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 19466,
											"end": 19533,
											"name": "tag",
											"source": 11,
											"value": "649"
										},
										{
											"begin": 19466,
											"end": 19533,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19466,
											"end": 19533,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19466,
											"end": 19533,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19466,
											"end": 19533,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19543,
											"end": 19547,
											"name": "PUSH",
											"source": 11,
											"value": "9A"
										},
										{
											"begin": 19543,
											"end": 19547,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19543,
											"end": 19547,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19547,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19547,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19547,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19560,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 19543,
											"end": 19560,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "650"
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19569,
											"end": 19573,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 19569,
											"end": 19573,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19575,
											"end": 19580,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 19575,
											"end": 19580,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19582,
											"end": 19591,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 19582,
											"end": 19591,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "tag",
											"source": 11,
											"value": "650"
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "652"
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "tag",
											"source": 11,
											"value": "652"
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "653"
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "tag",
											"source": 11,
											"value": "653"
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19543,
											"end": 19592,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19615,
											"end": 19620,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19607,
											"end": 19632,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 19607,
											"end": 19632,
											"name": "PUSH",
											"source": 11,
											"value": "C9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA"
										},
										{
											"begin": 19622,
											"end": 19631,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19607,
											"end": 19632,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19607,
											"end": 19632,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 19607,
											"end": 19632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "654"
										},
										{
											"begin": 19607,
											"end": 19632,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19607,
											"end": 19632,
											"name": "tag",
											"source": 11,
											"value": "654"
										},
										{
											"begin": 19607,
											"end": 19632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19607,
											"end": 19632,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19607,
											"end": 19632,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 19607,
											"end": 19632,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19607,
											"end": 19632,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19607,
											"end": 19632,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19607,
											"end": 19632,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19607,
											"end": 19632,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 19035,
											"end": 19639,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19035,
											"end": 19639,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19035,
											"end": 19639,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18977,
											"end": 19639,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18977,
											"end": 19639,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18977,
											"end": 19639,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2510,
											"end": 2697,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 2510,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2690,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2650,
											"end": 2690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2690,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2697,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5287,
											"end": 6095,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 5287,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5351,
											"end": 5355,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5684,
											"end": 5697,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5684,
											"end": 5697,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5684,
											"end": 5697,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5684,
											"end": 5697,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5684,
											"end": 5697,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5684,
											"end": 5697,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5684,
											"end": 5697,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5680,
											"end": 6089,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5680,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 5680,
											"end": 6089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5799,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 5738,
											"end": 5799,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5793,
											"end": 5797,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5799,
											"name": "tag",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 5738,
											"end": 5799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "tag",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 5713,
											"end": 5879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5900,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5900,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 6095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5287,
											"end": 6095,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5680,
											"end": 6089,
											"name": "tag",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 5680,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5956,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5944,
											"end": 5956,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5966,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5944,
											"end": 5966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5966,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5966,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5956,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5956,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5966,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "tag",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 5936,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6031,
											"end": 6043,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6053,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5287,
											"end": 6095,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5680,
											"end": 6089,
											"name": "tag",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 5680,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 6095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 6095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 6095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 6095,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 711,
											"end": 770,
											"name": "tag",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 711,
											"end": 770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 988,
											"end": 1083,
											"name": "tag",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 988,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "tag",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1050,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "679"
										},
										{
											"begin": 1050,
											"end": 1076,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1853,
											"end": 1964,
											"name": "tag",
											"source": 2,
											"value": "519"
										},
										{
											"begin": 1853,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "tag",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 1923,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "685"
										},
										{
											"begin": 1923,
											"end": 1957,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5688,
											"end": 5903,
											"name": "tag",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 5688,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5768,
											"end": 5769,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5756,
											"end": 5765,
											"name": "PUSH",
											"source": 11,
											"value": "A6"
										},
										{
											"begin": 5756,
											"end": 5769,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5756,
											"end": 5769,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5756,
											"end": 5769,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5897,
											"name": "tag",
											"source": 11,
											"value": "687"
										},
										{
											"begin": 5779,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5811,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5818,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5799,
											"end": 5800,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5799,
											"end": 5818,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5897,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "688"
										},
										{
											"begin": 5779,
											"end": 5897,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5852,
											"end": 5860,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5861,
											"end": 5862,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5852,
											"end": 5863,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5852,
											"end": 5863,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5852,
											"end": 5863,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5852,
											"end": 5863,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5852,
											"end": 5863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "691"
										},
										{
											"begin": 5852,
											"end": 5863,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5852,
											"end": 5863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "691"
										},
										{
											"begin": 5852,
											"end": 5863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 5852,
											"end": 5863,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5852,
											"end": 5863,
											"name": "tag",
											"source": 11,
											"value": "691"
										},
										{
											"begin": 5852,
											"end": 5863,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5852,
											"end": 5863,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5852,
											"end": 5863,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5852,
											"end": 5863,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5852,
											"end": 5863,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5852,
											"end": 5863,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5852,
											"end": 5863,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5867,
											"end": 5868,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5852,
											"end": 5868,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5852,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "692"
										},
										{
											"begin": 5852,
											"end": 5886,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5875,
											"end": 5883,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5884,
											"end": 5885,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5875,
											"end": 5886,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5875,
											"end": 5886,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5875,
											"end": 5886,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5875,
											"end": 5886,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5875,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "694"
										},
										{
											"begin": 5875,
											"end": 5886,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5875,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "694"
										},
										{
											"begin": 5875,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 5875,
											"end": 5886,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5875,
											"end": 5886,
											"name": "tag",
											"source": 11,
											"value": "694"
										},
										{
											"begin": 5875,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5875,
											"end": 5886,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5875,
											"end": 5886,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5875,
											"end": 5886,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5875,
											"end": 5886,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5875,
											"end": 5886,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5875,
											"end": 5886,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5852,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "695"
										},
										{
											"begin": 5852,
											"end": 5886,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5852,
											"end": 5886,
											"name": "tag",
											"source": 11,
											"value": "692"
										},
										{
											"begin": 5852,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5871,
											"end": 5872,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5852,
											"end": 5886,
											"name": "tag",
											"source": 11,
											"value": "695"
										},
										{
											"begin": 5852,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5839,
											"end": 5848,
											"name": "PUSH",
											"source": 11,
											"value": "A6"
										},
										{
											"begin": 5839,
											"end": 5848,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5839,
											"end": 5886,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5839,
											"end": 5886,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5839,
											"end": 5886,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5839,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "696"
										},
										{
											"begin": 5839,
											"end": 5886,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5839,
											"end": 5886,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5839,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 5839,
											"end": 5886,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5839,
											"end": 5886,
											"name": "tag",
											"source": 11,
											"value": "696"
										},
										{
											"begin": 5839,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5839,
											"end": 5886,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5839,
											"end": 5886,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5839,
											"end": 5886,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5820,
											"end": 5823,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5820,
											"end": 5823,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5820,
											"end": 5823,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "697"
										},
										{
											"begin": 5820,
											"end": 5823,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5820,
											"end": 5823,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 5820,
											"end": 5823,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5820,
											"end": 5823,
											"name": "tag",
											"source": 11,
											"value": "697"
										},
										{
											"begin": 5820,
											"end": 5823,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5820,
											"end": 5823,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5820,
											"end": 5823,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5820,
											"end": 5823,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "687"
										},
										{
											"begin": 5779,
											"end": 5897,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5897,
											"name": "tag",
											"source": 11,
											"value": "688"
										},
										{
											"begin": 5779,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5897,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5688,
											"end": 5903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5688,
											"end": 5903,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3476,
											"end": 3572,
											"name": "tag",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 3476,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3560,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "699"
										},
										{
											"begin": 3564,
											"end": 3565,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3561,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 3560,
											"end": 3565,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3560,
											"end": 3565,
											"name": "tag",
											"source": 10,
											"value": "699"
										},
										{
											"begin": 3560,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3553,
											"end": 3565,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 3572,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3476,
											"end": 3572,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3133,
											"end": 3229,
											"name": "tag",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 3133,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "699"
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3218,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 3217,
											"end": 3222,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3861,
											"end": 3957,
											"name": "tag",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 3861,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "699"
										},
										{
											"begin": 3949,
											"end": 3950,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3945,
											"end": 3946,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3945,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 3945,
											"end": 3950,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1089,
											"end": 1200,
											"name": "tag",
											"source": 0,
											"value": "679"
										},
										{
											"begin": 1089,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "tag",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 1161,
											"end": 1193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1970,
											"end": 2079,
											"name": "tag",
											"source": 2,
											"value": "685"
										},
										{
											"begin": 1970,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4698,
											"end": 4711,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "tag",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 4690,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1773,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2050,
											"end": 2072,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2072,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1970,
											"end": 2079,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "717"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "716"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "717"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "716"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "717"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "718"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "719"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "718"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "719"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "720"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "718"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "720"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 323,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 196,
											"end": 323,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 257,
											"end": 267,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 252,
											"end": 255,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 248,
											"end": 268,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 245,
											"end": 246,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 269,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 288,
											"end": 292,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 285,
											"end": 286,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 293,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 312,
											"end": 316,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 309,
											"end": 310,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 317,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 328,
											"end": 585,
											"name": "tag",
											"source": 12,
											"value": "722"
										},
										{
											"begin": 328,
											"end": 585,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 400,
											"end": 404,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 394,
											"end": 405,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 394,
											"end": 405,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 394,
											"end": 405,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 432,
											"end": 449,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 432,
											"end": 449,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 479,
											"end": 497,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 464,
											"end": 498,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 464,
											"end": 498,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 500,
											"end": 522,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 500,
											"end": 522,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 500,
											"end": 522,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 461,
											"end": 523,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 458,
											"end": 546,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 458,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "738"
										},
										{
											"begin": 458,
											"end": 546,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 526,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "738"
										},
										{
											"begin": 526,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 526,
											"end": 544,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 526,
											"end": 544,
											"name": "tag",
											"source": 12,
											"value": "738"
										},
										{
											"begin": 526,
											"end": 544,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 562,
											"end": 566,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 579,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 328,
											"end": 585,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 328,
											"end": 585,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 590,
											"end": 865,
											"name": "tag",
											"source": 12,
											"value": "723"
										},
										{
											"begin": 590,
											"end": 865,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 661,
											"end": 663,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 655,
											"end": 664,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 726,
											"end": 728,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 707,
											"end": 720,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 707,
											"end": 720,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 703,
											"end": 730,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 691,
											"end": 731,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 691,
											"end": 731,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 761,
											"end": 779,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 746,
											"end": 780,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 746,
											"end": 780,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 782,
											"end": 804,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 782,
											"end": 804,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 782,
											"end": 804,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 743,
											"end": 805,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 740,
											"end": 828,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 740,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "741"
										},
										{
											"begin": 740,
											"end": 828,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 808,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "741"
										},
										{
											"begin": 808,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 808,
											"end": 826,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 808,
											"end": 826,
											"name": "tag",
											"source": 12,
											"value": "741"
										},
										{
											"begin": 808,
											"end": 826,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 844,
											"end": 846,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 837,
											"end": 859,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 590,
											"end": 865,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 590,
											"end": 865,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 590,
											"end": 865,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 870,
											"end": 1065,
											"name": "tag",
											"source": 12,
											"value": "724"
										},
										{
											"begin": 870,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 942,
											"end": 946,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 967,
											"end": 973,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 964,
											"end": 994,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 961,
											"end": 1017,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 961,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "744"
										},
										{
											"begin": 961,
											"end": 1017,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "744"
										},
										{
											"begin": 997,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 997,
											"end": 1015,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1015,
											"name": "tag",
											"source": 12,
											"value": "744"
										},
										{
											"begin": 997,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1042,
											"end": 1043,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1038,
											"end": 1052,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1054,
											"end": 1058,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 870,
											"end": 1065,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1070,
											"end": 2029,
											"name": "tag",
											"source": 12,
											"value": "725"
										},
										{
											"begin": 1070,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1136,
											"end": 1141,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1192,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1182,
											"end": 1186,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1174,
											"end": 1180,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1170,
											"end": 1187,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1166,
											"end": 1193,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1156,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "746"
										},
										{
											"begin": 1156,
											"end": 1211,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 1208,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1209,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1156,
											"end": 1211,
											"name": "tag",
											"source": 12,
											"value": "746"
										},
										{
											"begin": 1156,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1243,
											"end": 1249,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1230,
											"end": 1250,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1273,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1293,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "747"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "748"
										},
										{
											"begin": 1361,
											"end": 1363,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "724"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "tag",
											"source": 12,
											"value": "748"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1293,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "723"
										},
										{
											"begin": 1293,
											"end": 1365,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1365,
											"name": "tag",
											"source": 12,
											"value": "747"
										},
										{
											"begin": 1293,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1399,
											"end": 1414,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1399,
											"end": 1414,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1399,
											"end": 1414,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1485,
											"end": 1486,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1481,
											"end": 1491,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1481,
											"end": 1491,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1481,
											"end": 1491,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1481,
											"end": 1491,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1497,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1497,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1465,
											"end": 1497,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1442,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1442,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1442,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1442,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1509,
											"end": 1524,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1509,
											"end": 1524,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1509,
											"end": 1524,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1506,
											"end": 1541,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1506,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "749"
										},
										{
											"begin": 1506,
											"end": 1541,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1535,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1527,
											"end": 1539,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1506,
											"end": 1541,
											"name": "tag",
											"source": 12,
											"value": "749"
										},
										{
											"begin": 1506,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1571,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1561,
											"end": 1576,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1585,
											"end": 2000,
											"name": "tag",
											"source": 12,
											"value": "750"
										},
										{
											"begin": 1585,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1607,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1599,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1593,
											"end": 1608,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1585,
											"end": 2000,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1585,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "752"
										},
										{
											"begin": 1585,
											"end": 2000,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1683,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1673,
											"end": 1676,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1671,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1660,
											"end": 1684,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1657,
											"end": 1771,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1657,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "753"
										},
										{
											"begin": 1657,
											"end": 1771,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1725,
											"end": 1726,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1756,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1750,
											"end": 1752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1743,
											"end": 1757,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1657,
											"end": 1771,
											"name": "tag",
											"source": 12,
											"value": "753"
										},
										{
											"begin": 1657,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1797,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "754"
										},
										{
											"begin": 1797,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "722"
										},
										{
											"begin": 1797,
											"end": 1819,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1797,
											"end": 1819,
											"name": "tag",
											"source": 12,
											"value": "754"
										},
										{
											"begin": 1797,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1846,
											"end": 1863,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1832,
											"end": 1864,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 1926,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1884,
											"end": 1898,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1884,
											"end": 1898,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1884,
											"end": 1898,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1877,
											"end": 1927,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 1958,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 1958,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1978,
											"end": 1990,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1978,
											"end": 1990,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1978,
											"end": 1990,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1978,
											"end": 1990,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1627,
											"end": 1631,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1618,
											"end": 1632,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1585,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "750"
										},
										{
											"begin": 1585,
											"end": 2000,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1585,
											"end": 2000,
											"name": "tag",
											"source": 12,
											"value": "752"
										},
										{
											"begin": 1585,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2018,
											"end": 2023,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 1070,
											"end": 2029,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1070,
											"end": 2029,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2034,
											"end": 2492,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 2034,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2163,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2218,
											"end": 2220,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2206,
											"end": 2215,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2197,
											"end": 2204,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2193,
											"end": 2216,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2189,
											"end": 2221,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2238,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "756"
										},
										{
											"begin": 2186,
											"end": 2238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2235,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2231,
											"end": 2232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2224,
											"end": 2236,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2238,
											"name": "tag",
											"source": 12,
											"value": "756"
										},
										{
											"begin": 2186,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2270,
											"end": 2279,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2257,
											"end": 2280,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2247,
											"end": 2280,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2247,
											"end": 2280,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2331,
											"end": 2333,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2320,
											"end": 2329,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2316,
											"end": 2334,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2335,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2358,
											"end": 2376,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2356,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2347,
											"end": 2377,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2344,
											"end": 2394,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2344,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "757"
										},
										{
											"begin": 2344,
											"end": 2394,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2390,
											"end": 2391,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2388,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2392,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2344,
											"end": 2394,
											"name": "tag",
											"source": 12,
											"value": "757"
										},
										{
											"begin": 2344,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2413,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "758"
										},
										{
											"begin": 2478,
											"end": 2485,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2469,
											"end": 2475,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2458,
											"end": 2467,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2454,
											"end": 2476,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2413,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "725"
										},
										{
											"begin": 2413,
											"end": 2486,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2413,
											"end": 2486,
											"name": "tag",
											"source": 12,
											"value": "758"
										},
										{
											"begin": 2413,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2403,
											"end": 2486,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2403,
											"end": 2486,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2403,
											"end": 2486,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2034,
											"end": 2492,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2034,
											"end": 2492,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2034,
											"end": 2492,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2034,
											"end": 2492,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2034,
											"end": 2492,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2034,
											"end": 2492,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2705,
											"end": 2953,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2705,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2773,
											"end": 2779,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2787,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2834,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2822,
											"end": 2831,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2809,
											"end": 2832,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2805,
											"end": 2837,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2802,
											"end": 2854,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2802,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "761"
										},
										{
											"begin": 2802,
											"end": 2854,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2851,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2840,
											"end": 2852,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2802,
											"end": 2854,
											"name": "tag",
											"source": 12,
											"value": "761"
										},
										{
											"begin": 2802,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2873,
											"end": 2896,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2873,
											"end": 2896,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2873,
											"end": 2896,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 2945,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2947,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2947,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2705,
											"end": 2953,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2958,
											"end": 3089,
											"name": "tag",
											"source": 12,
											"value": "726"
										},
										{
											"begin": 2958,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3033,
											"end": 3064,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3033,
											"end": 3064,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3023,
											"end": 3065,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3023,
											"end": 3065,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3013,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 3013,
											"end": 3083,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3079,
											"end": 3080,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3077,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3069,
											"end": 3081,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3094,
											"end": 3409,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 3094,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3168,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3176,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3223,
											"end": 3225,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3211,
											"end": 3220,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3202,
											"end": 3209,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3198,
											"end": 3221,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3191,
											"end": 3243,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3191,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "765"
										},
										{
											"begin": 3191,
											"end": 3243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3239,
											"end": 3240,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3236,
											"end": 3237,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3229,
											"end": 3241,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3191,
											"end": 3243,
											"name": "tag",
											"source": 12,
											"value": "765"
										},
										{
											"begin": 3191,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3278,
											"end": 3287,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3265,
											"end": 3288,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3297,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "766"
										},
										{
											"begin": 3322,
											"end": 3327,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3297,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "726"
										},
										{
											"begin": 3297,
											"end": 3328,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3297,
											"end": 3328,
											"name": "tag",
											"source": 12,
											"value": "766"
										},
										{
											"begin": 3297,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3347,
											"end": 3352,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3399,
											"end": 3401,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3371,
											"end": 3403,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3371,
											"end": 3403,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3094,
											"end": 3409,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3414,
											"end": 3532,
											"name": "tag",
											"source": 12,
											"value": "727"
										},
										{
											"begin": 3414,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3500,
											"end": 3505,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3493,
											"end": 3506,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3507,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3479,
											"end": 3484,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3476,
											"end": 3508,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3466,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 3466,
											"end": 3526,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3522,
											"end": 3523,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3520,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3512,
											"end": 3524,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3537,
											"end": 3914,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 3537,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3611,
											"end": 3617,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3625,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3627,
											"end": 3633,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 3682,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3668,
											"end": 3677,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3659,
											"end": 3666,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3655,
											"end": 3678,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3651,
											"end": 3683,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3648,
											"end": 3700,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3648,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "770"
										},
										{
											"begin": 3648,
											"end": 3700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3696,
											"end": 3697,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 3694,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3686,
											"end": 3698,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3648,
											"end": 3700,
											"name": "tag",
											"source": 12,
											"value": "770"
										},
										{
											"begin": 3648,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3741,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3742,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3709,
											"end": 3742,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3709,
											"end": 3742,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3789,
											"end": 3791,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3778,
											"end": 3787,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3774,
											"end": 3792,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3761,
											"end": 3793,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3751,
											"end": 3793,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3751,
											"end": 3793,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3843,
											"end": 3845,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3832,
											"end": 3841,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3815,
											"end": 3847,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3856,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "771"
										},
										{
											"begin": 3878,
											"end": 3883,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3856,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "727"
										},
										{
											"begin": 3856,
											"end": 3884,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3856,
											"end": 3884,
											"name": "tag",
											"source": 12,
											"value": "771"
										},
										{
											"begin": 3856,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3903,
											"end": 3908,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3893,
											"end": 3908,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3893,
											"end": 3908,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3893,
											"end": 3908,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3537,
											"end": 3914,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3537,
											"end": 3914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3537,
											"end": 3914,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3537,
											"end": 3914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3537,
											"end": 3914,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3537,
											"end": 3914,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3919,
											"end": 4585,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 3919,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4051,
											"end": 4057,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4065,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4073,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4120,
											"end": 4122,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4108,
											"end": 4117,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4099,
											"end": 4106,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4095,
											"end": 4118,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4123,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4088,
											"end": 4140,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4088,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "773"
										},
										{
											"begin": 4088,
											"end": 4140,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4136,
											"end": 4137,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4133,
											"end": 4134,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4126,
											"end": 4138,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4088,
											"end": 4140,
											"name": "tag",
											"source": 12,
											"value": "773"
										},
										{
											"begin": 4088,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4175,
											"end": 4184,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4162,
											"end": 4185,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "774"
										},
										{
											"begin": 4219,
											"end": 4224,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4194,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "726"
										},
										{
											"begin": 4194,
											"end": 4225,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4194,
											"end": 4225,
											"name": "tag",
											"source": 12,
											"value": "774"
										},
										{
											"begin": 4194,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4244,
											"end": 4249,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4301,
											"end": 4303,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4286,
											"end": 4304,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4286,
											"end": 4304,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4273,
											"end": 4305,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "775"
										},
										{
											"begin": 4273,
											"end": 4305,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "726"
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "tag",
											"source": 12,
											"value": "775"
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4366,
											"end": 4373,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4424,
											"end": 4426,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4409,
											"end": 4427,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4409,
											"end": 4427,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4396,
											"end": 4428,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4451,
											"end": 4469,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4440,
											"end": 4470,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4440,
											"end": 4470,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4437,
											"end": 4487,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4437,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "776"
										},
										{
											"begin": 4437,
											"end": 4487,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4483,
											"end": 4484,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4480,
											"end": 4481,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4473,
											"end": 4485,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4437,
											"end": 4487,
											"name": "tag",
											"source": 12,
											"value": "776"
										},
										{
											"begin": 4437,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4506,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "777"
										},
										{
											"begin": 4571,
											"end": 4578,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4562,
											"end": 4568,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4551,
											"end": 4560,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4547,
											"end": 4569,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4506,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "725"
										},
										{
											"begin": 4506,
											"end": 4579,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4506,
											"end": 4579,
											"name": "tag",
											"source": 12,
											"value": "777"
										},
										{
											"begin": 4506,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4496,
											"end": 4579,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4496,
											"end": 4579,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4496,
											"end": 4579,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 4585,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 4585,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 4585,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 4585,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 4585,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 4585,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4590,
											"end": 4837,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 4590,
											"end": 4837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4649,
											"end": 4655,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4702,
											"end": 4704,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4690,
											"end": 4699,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4677,
											"end": 4700,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4705,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4670,
											"end": 4722,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4670,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "779"
										},
										{
											"begin": 4670,
											"end": 4722,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4718,
											"end": 4719,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4715,
											"end": 4716,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4708,
											"end": 4720,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4670,
											"end": 4722,
											"name": "tag",
											"source": 12,
											"value": "779"
										},
										{
											"begin": 4670,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4757,
											"end": 4766,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4744,
											"end": 4767,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4776,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "699"
										},
										{
											"begin": 4801,
											"end": 4806,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4776,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "726"
										},
										{
											"begin": 4776,
											"end": 4807,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4842,
											"end": 6179,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 4842,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5075,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5125,
											"end": 5146,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5125,
											"end": 5146,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5125,
											"end": 5146,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5195,
											"end": 5208,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5195,
											"end": 5208,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5116,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5217,
											"end": 5239,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5217,
											"end": 5239,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5217,
											"end": 5239,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5044,
											"end": 5048,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5044,
											"end": 5048,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5075,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5258,
											"end": 5260,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5258,
											"end": 5260,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5276,
											"end": 5294,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5276,
											"end": 5294,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5276,
											"end": 5294,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5276,
											"end": 5294,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5317,
											"end": 5332,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5317,
											"end": 5332,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5317,
											"end": 5332,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5044,
											"end": 5048,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5360,
											"end": 6153,
											"name": "tag",
											"source": 12,
											"value": "782"
										},
										{
											"begin": 5360,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5374,
											"end": 5380,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5371,
											"end": 5372,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5368,
											"end": 5381,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5360,
											"end": 6153,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5360,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "784"
										},
										{
											"begin": 5360,
											"end": 6153,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5433,
											"end": 5446,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5433,
											"end": 5446,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5471,
											"end": 5480,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5471,
											"end": 5480,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5459,
											"end": 5481,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5459,
											"end": 5481,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5521,
											"end": 5532,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5521,
											"end": 5532,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5521,
											"end": 5532,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5515,
											"end": 5533,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5501,
											"end": 5513,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5501,
											"end": 5513,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5501,
											"end": 5513,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5494,
											"end": 5534,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5574,
											"end": 5585,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5574,
											"end": 5585,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5574,
											"end": 5585,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5554,
											"end": 5566,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5554,
											"end": 5566,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5554,
											"end": 5566,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5547,
											"end": 5587,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5610,
											"end": 5614,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5654,
											"end": 5665,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5654,
											"end": 5665,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5654,
											"end": 5665,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5634,
											"end": 5646,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5634,
											"end": 5646,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5634,
											"end": 5646,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5627,
											"end": 5667,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5690,
											"end": 5694,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5728,
											"end": 5746,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5714,
											"end": 5726,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5714,
											"end": 5726,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5714,
											"end": 5726,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5707,
											"end": 5747,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5770,
											"end": 5774,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 5814,
											"end": 5825,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5814,
											"end": 5825,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5814,
											"end": 5825,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5808,
											"end": 5826,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5794,
											"end": 5806,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5794,
											"end": 5806,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5794,
											"end": 5806,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5787,
											"end": 5827,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5850,
											"end": 5854,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 5894,
											"end": 5905,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5894,
											"end": 5905,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5894,
											"end": 5905,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 5906,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5874,
											"end": 5886,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5874,
											"end": 5886,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5874,
											"end": 5886,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 5907,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5930,
											"end": 5934,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 5974,
											"end": 5985,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5974,
											"end": 5985,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5974,
											"end": 5985,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5968,
											"end": 5986,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5954,
											"end": 5966,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5954,
											"end": 5966,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5954,
											"end": 5966,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5947,
											"end": 5987,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6016,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 6056,
											"end": 6067,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6056,
											"end": 6067,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6056,
											"end": 6067,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6048,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6048,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6048,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6029,
											"end": 6069,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6098,
											"end": 6104,
											"name": "PUSH",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 6089,
											"end": 6105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6089,
											"end": 6105,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6089,
											"end": 6105,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6089,
											"end": 6105,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6128,
											"end": 6143,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6128,
											"end": 6143,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6128,
											"end": 6143,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6128,
											"end": 6143,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5360,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "782"
										},
										{
											"begin": 5360,
											"end": 6153,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5360,
											"end": 6153,
											"name": "tag",
											"source": 12,
											"value": "784"
										},
										{
											"begin": 5360,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6170,
											"end": 6173,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6170,
											"end": 6173,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 4842,
											"end": 6179,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4842,
											"end": 6179,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6184,
											"end": 6364,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 6184,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6243,
											"end": 6249,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6296,
											"end": 6298,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6284,
											"end": 6293,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6275,
											"end": 6282,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6271,
											"end": 6294,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6267,
											"end": 6299,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6264,
											"end": 6316,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6264,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "786"
										},
										{
											"begin": 6264,
											"end": 6316,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6312,
											"end": 6313,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6309,
											"end": 6310,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6314,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6264,
											"end": 6316,
											"name": "tag",
											"source": 12,
											"value": "786"
										},
										{
											"begin": 6264,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6335,
											"end": 6358,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6335,
											"end": 6358,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6184,
											"end": 6364,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6184,
											"end": 6364,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7125,
											"end": 7441,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 7125,
											"end": 7441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7202,
											"end": 7208,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7210,
											"end": 7216,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7218,
											"end": 7224,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7271,
											"end": 7273,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7259,
											"end": 7268,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7250,
											"end": 7257,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7246,
											"end": 7269,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7242,
											"end": 7274,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7239,
											"end": 7291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7239,
											"end": 7291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "789"
										},
										{
											"begin": 7239,
											"end": 7291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7287,
											"end": 7288,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7285,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7277,
											"end": 7289,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7239,
											"end": 7291,
											"name": "tag",
											"source": 12,
											"value": "789"
										},
										{
											"begin": 7239,
											"end": 7291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7310,
											"end": 7333,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7310,
											"end": 7333,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7310,
											"end": 7333,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7380,
											"end": 7382,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7365,
											"end": 7383,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7365,
											"end": 7383,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7352,
											"end": 7384,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7352,
											"end": 7384,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7431,
											"end": 7433,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7416,
											"end": 7434,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7416,
											"end": 7434,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7416,
											"end": 7434,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7403,
											"end": 7435,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7403,
											"end": 7435,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7125,
											"end": 7441,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7125,
											"end": 7441,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8395,
											"end": 8845,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 8395,
											"end": 8845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8469,
											"end": 8475,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8477,
											"end": 8483,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8485,
											"end": 8491,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8538,
											"end": 8540,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8526,
											"end": 8535,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8517,
											"end": 8524,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8513,
											"end": 8536,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8541,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8506,
											"end": 8558,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8506,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "794"
										},
										{
											"begin": 8506,
											"end": 8558,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8554,
											"end": 8555,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8551,
											"end": 8552,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8544,
											"end": 8556,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8506,
											"end": 8558,
											"name": "tag",
											"source": 12,
											"value": "794"
										},
										{
											"begin": 8506,
											"end": 8558,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8593,
											"end": 8602,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8580,
											"end": 8603,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8612,
											"end": 8643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "795"
										},
										{
											"begin": 8637,
											"end": 8642,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8612,
											"end": 8643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "726"
										},
										{
											"begin": 8612,
											"end": 8643,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8612,
											"end": 8643,
											"name": "tag",
											"source": 12,
											"value": "795"
										},
										{
											"begin": 8612,
											"end": 8643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8662,
											"end": 8667,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8714,
											"end": 8716,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8699,
											"end": 8717,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8699,
											"end": 8717,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8686,
											"end": 8718,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8686,
											"end": 8718,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8770,
											"end": 8772,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8755,
											"end": 8773,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8755,
											"end": 8773,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8742,
											"end": 8774,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8783,
											"end": 8813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "771"
										},
										{
											"begin": 8742,
											"end": 8774,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8783,
											"end": 8813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "727"
										},
										{
											"begin": 8783,
											"end": 8813,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9103,
											"end": 10141,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 9103,
											"end": 10141,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9196,
											"end": 9202,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 9210,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9257,
											"end": 9259,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9245,
											"end": 9254,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9236,
											"end": 9243,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9232,
											"end": 9255,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9228,
											"end": 9260,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9225,
											"end": 9277,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9225,
											"end": 9277,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "799"
										},
										{
											"begin": 9225,
											"end": 9277,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9273,
											"end": 9274,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9270,
											"end": 9271,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9263,
											"end": 9275,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9225,
											"end": 9277,
											"name": "tag",
											"source": 12,
											"value": "799"
										},
										{
											"begin": 9225,
											"end": 9277,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9312,
											"end": 9321,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9299,
											"end": 9322,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9331,
											"end": 9362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "800"
										},
										{
											"begin": 9356,
											"end": 9361,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9331,
											"end": 9362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "726"
										},
										{
											"begin": 9331,
											"end": 9362,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9331,
											"end": 9362,
											"name": "tag",
											"source": 12,
											"value": "800"
										},
										{
											"begin": 9331,
											"end": 9362,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9381,
											"end": 9386,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9405,
											"end": 9407,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9443,
											"end": 9461,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9443,
											"end": 9461,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9443,
											"end": 9461,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9430,
											"end": 9462,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9474,
											"end": 9504,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9474,
											"end": 9504,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9471,
											"end": 9521,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9471,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "801"
										},
										{
											"begin": 9471,
											"end": 9521,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9517,
											"end": 9518,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9514,
											"end": 9515,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9507,
											"end": 9519,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9471,
											"end": 9521,
											"name": "tag",
											"source": 12,
											"value": "801"
										},
										{
											"begin": 9471,
											"end": 9521,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9540,
											"end": 9562,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9540,
											"end": 9562,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9593,
											"end": 9597,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9585,
											"end": 9598,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9585,
											"end": 9598,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9581,
											"end": 9608,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 9571,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "802"
										},
										{
											"begin": 9571,
											"end": 9626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9622,
											"end": 9623,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9619,
											"end": 9620,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9612,
											"end": 9624,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9571,
											"end": 9626,
											"name": "tag",
											"source": 12,
											"value": "802"
										},
										{
											"begin": 9571,
											"end": 9626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9658,
											"end": 9660,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9645,
											"end": 9661,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9681,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "803"
										},
										{
											"begin": 9697,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "748"
										},
										{
											"begin": 9749,
											"end": 9751,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9697,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "724"
										},
										{
											"begin": 9697,
											"end": 9752,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9681,
											"end": 9753,
											"name": "tag",
											"source": 12,
											"value": "803"
										},
										{
											"begin": 9681,
											"end": 9753,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9787,
											"end": 9802,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9787,
											"end": 9802,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9787,
											"end": 9802,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9869,
											"end": 9870,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 9865,
											"end": 9875,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9865,
											"end": 9875,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9865,
											"end": 9875,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9865,
											"end": 9875,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9857,
											"end": 9876,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9857,
											"end": 9876,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9853,
											"end": 9881,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9853,
											"end": 9881,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9853,
											"end": 9881,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9818,
											"end": 9830,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9818,
											"end": 9830,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9818,
											"end": 9830,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9818,
											"end": 9830,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9893,
											"end": 9912,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9893,
											"end": 9912,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9893,
											"end": 9912,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9890,
											"end": 9929,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9890,
											"end": 9929,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "805"
										},
										{
											"begin": 9890,
											"end": 9929,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9925,
											"end": 9926,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9923,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9915,
											"end": 9927,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9890,
											"end": 9929,
											"name": "tag",
											"source": 12,
											"value": "805"
										},
										{
											"begin": 9890,
											"end": 9929,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9949,
											"end": 9960,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9949,
											"end": 9960,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9949,
											"end": 9960,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9949,
											"end": 9960,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9969,
											"end": 10111,
											"name": "tag",
											"source": 12,
											"value": "806"
										},
										{
											"begin": 9969,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9985,
											"end": 9991,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9980,
											"end": 9983,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9977,
											"end": 9992,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9969,
											"end": 10111,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9969,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "808"
										},
										{
											"begin": 9969,
											"end": 10111,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10051,
											"end": 10068,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10051,
											"end": 10068,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 10039,
											"end": 10069,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10039,
											"end": 10069,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10002,
											"end": 10014,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10002,
											"end": 10014,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10002,
											"end": 10014,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10002,
											"end": 10014,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10089,
											"end": 10101,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10089,
											"end": 10101,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10089,
											"end": 10101,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10089,
											"end": 10101,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9969,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "806"
										},
										{
											"begin": 9969,
											"end": 10111,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9969,
											"end": 10111,
											"name": "tag",
											"source": 12,
											"value": "808"
										},
										{
											"begin": 9969,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10130,
											"end": 10135,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10120,
											"end": 10135,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 10120,
											"end": 10135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10120,
											"end": 10135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10120,
											"end": 10135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10120,
											"end": 10135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10120,
											"end": 10135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10120,
											"end": 10135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9103,
											"end": 10141,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9103,
											"end": 10141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9103,
											"end": 10141,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9103,
											"end": 10141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9103,
											"end": 10141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9103,
											"end": 10141,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10146,
											"end": 10502,
											"name": "tag",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 10146,
											"end": 10502,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10348,
											"end": 10350,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10330,
											"end": 10351,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10330,
											"end": 10351,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10330,
											"end": 10351,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10367,
											"end": 10385,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10367,
											"end": 10385,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10367,
											"end": 10385,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10360,
											"end": 10390,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10426,
											"end": 10460,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10421,
											"end": 10423,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10406,
											"end": 10424,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10406,
											"end": 10424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10399,
											"end": 10461,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10493,
											"end": 10495,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10478,
											"end": 10496,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10478,
											"end": 10496,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10146,
											"end": 10502,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10507,
											"end": 10859,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 10507,
											"end": 10859,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10709,
											"end": 10711,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10691,
											"end": 10712,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10691,
											"end": 10712,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10691,
											"end": 10712,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10748,
											"end": 10750,
											"name": "PUSH",
											"source": 12,
											"value": "1C"
										},
										{
											"begin": 10728,
											"end": 10746,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10728,
											"end": 10746,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10728,
											"end": 10746,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10751,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10787,
											"end": 10817,
											"name": "PUSH",
											"source": 12,
											"value": "5374616B696E673A20506F6F6C20646F65736E27742065786973747300000000"
										},
										{
											"begin": 10782,
											"end": 10784,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10767,
											"end": 10785,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10767,
											"end": 10785,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10760,
											"end": 10818,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10850,
											"end": 10852,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10835,
											"end": 10853,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10835,
											"end": 10853,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10507,
											"end": 10859,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10864,
											"end": 10991,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 10864,
											"end": 10991,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10925,
											"end": 10935,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 10920,
											"end": 10923,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 10916,
											"end": 10936,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 10913,
											"end": 10914,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10906,
											"end": 10937,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10956,
											"end": 10960,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 10953,
											"end": 10954,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10946,
											"end": 10961,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10980,
											"end": 10984,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10977,
											"end": 10978,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10970,
											"end": 10985,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10996,
											"end": 11123,
											"name": "tag",
											"source": 12,
											"value": "728"
										},
										{
											"begin": 10996,
											"end": 11123,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11057,
											"end": 11067,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 11052,
											"end": 11055,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 11048,
											"end": 11068,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 11045,
											"end": 11046,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11038,
											"end": 11069,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11088,
											"end": 11092,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 11085,
											"end": 11086,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11078,
											"end": 11093,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11112,
											"end": 11116,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11109,
											"end": 11110,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11102,
											"end": 11117,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11128,
											"end": 11263,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 11128,
											"end": 11263,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11167,
											"end": 11170,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11188,
											"end": 11205,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 11188,
											"end": 11205,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11188,
											"end": 11205,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11185,
											"end": 11228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "815"
										},
										{
											"begin": 11185,
											"end": 11228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11208,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "815"
										},
										{
											"begin": 11208,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "728"
										},
										{
											"begin": 11208,
											"end": 11226,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11208,
											"end": 11226,
											"name": "tag",
											"source": 12,
											"value": "815"
										},
										{
											"begin": 11208,
											"end": 11226,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11255,
											"end": 11256,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 11244,
											"end": 11257,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11244,
											"end": 11257,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11128,
											"end": 11263,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11268,
											"end": 11485,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 11268,
											"end": 11485,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11308,
											"end": 11309,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11334,
											"end": 11335,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11324,
											"end": 11456,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "817"
										},
										{
											"begin": 11324,
											"end": 11456,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11378,
											"end": 11388,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 11373,
											"end": 11376,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 11369,
											"end": 11389,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 11366,
											"end": 11367,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11359,
											"end": 11390,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11413,
											"end": 11417,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 11410,
											"end": 11411,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11403,
											"end": 11418,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11441,
											"end": 11445,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11438,
											"end": 11439,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11431,
											"end": 11446,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11324,
											"end": 11456,
											"name": "tag",
											"source": 12,
											"value": "817"
										},
										{
											"begin": 11324,
											"end": 11456,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11470,
											"end": 11479,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 11470,
											"end": 11479,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11268,
											"end": 11485,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11490,
											"end": 11615,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 11490,
											"end": 11615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11530,
											"end": 11534,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11558,
											"end": 11559,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11555,
											"end": 11556,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11552,
											"end": 11560,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 11549,
											"end": 11583,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11549,
											"end": 11583,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "820"
										},
										{
											"begin": 11549,
											"end": 11583,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11563,
											"end": 11581,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "820"
										},
										{
											"begin": 11563,
											"end": 11581,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "728"
										},
										{
											"begin": 11563,
											"end": 11581,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11563,
											"end": 11581,
											"name": "tag",
											"source": 12,
											"value": "820"
										},
										{
											"begin": 11563,
											"end": 11581,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11600,
											"end": 11609,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11600,
											"end": 11609,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11490,
											"end": 11615,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11620,
											"end": 11788,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 11620,
											"end": 11788,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11660,
											"end": 11667,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11726,
											"end": 11727,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11722,
											"end": 11723,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11718,
											"end": 11724,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 11714,
											"end": 11728,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 11711,
											"end": 11712,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11708,
											"end": 11729,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11703,
											"end": 11704,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11696,
											"end": 11705,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11689,
											"end": 11706,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11685,
											"end": 11730,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11682,
											"end": 11753,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11682,
											"end": 11753,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "823"
										},
										{
											"begin": 11682,
											"end": 11753,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11733,
											"end": 11751,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "823"
										},
										{
											"begin": 11733,
											"end": 11751,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "728"
										},
										{
											"begin": 11733,
											"end": 11751,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11733,
											"end": 11751,
											"name": "tag",
											"source": 12,
											"value": "823"
										},
										{
											"begin": 11733,
											"end": 11751,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11773,
											"end": 11782,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 11773,
											"end": 11782,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11620,
											"end": 11788,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11793,
											"end": 12148,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 11793,
											"end": 12148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11995,
											"end": 11997,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11977,
											"end": 11998,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11977,
											"end": 11998,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11977,
											"end": 11998,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12034,
											"end": 12036,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 12014,
											"end": 12032,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12014,
											"end": 12032,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12014,
											"end": 12032,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12007,
											"end": 12037,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12073,
											"end": 12106,
											"name": "PUSH",
											"source": 12,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 12068,
											"end": 12070,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12053,
											"end": 12071,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12053,
											"end": 12071,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12046,
											"end": 12107,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12139,
											"end": 12141,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 12124,
											"end": 12142,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12124,
											"end": 12142,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11793,
											"end": 12148,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 12153,
											"end": 12337,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 12153,
											"end": 12337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12223,
											"end": 12229,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12276,
											"end": 12278,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12255,
											"end": 12262,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12251,
											"end": 12274,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12247,
											"end": 12279,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 12244,
											"end": 12296,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12244,
											"end": 12296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "826"
										},
										{
											"begin": 12244,
											"end": 12296,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12292,
											"end": 12293,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12289,
											"end": 12290,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12282,
											"end": 12294,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12244,
											"end": 12296,
											"name": "tag",
											"source": 12,
											"value": "826"
										},
										{
											"begin": 12244,
											"end": 12296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12315,
											"end": 12331,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12315,
											"end": 12331,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12153,
											"end": 12337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12153,
											"end": 12337,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 12342,
											"end": 12717,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 12342,
											"end": 12717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12600,
											"end": 12615,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 12600,
											"end": 12615,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12600,
											"end": 12615,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12582,
											"end": 12616,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12582,
											"end": 12616,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12652,
											"end": 12667,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12652,
											"end": 12667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12652,
											"end": 12667,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12652,
											"end": 12667,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12647,
											"end": 12649,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12632,
											"end": 12650,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12632,
											"end": 12650,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12625,
											"end": 12668,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12699,
											"end": 12701,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12684,
											"end": 12702,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12684,
											"end": 12702,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12677,
											"end": 12711,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12677,
											"end": 12711,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12677,
											"end": 12711,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12677,
											"end": 12711,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12532,
											"end": 12534,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12342,
											"end": 12717,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 12722,
											"end": 12967,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 12722,
											"end": 12967,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12789,
											"end": 12795,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12842,
											"end": 12844,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12830,
											"end": 12839,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12821,
											"end": 12828,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12817,
											"end": 12840,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12813,
											"end": 12845,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 12810,
											"end": 12862,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12810,
											"end": 12862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "829"
										},
										{
											"begin": 12810,
											"end": 12862,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12858,
											"end": 12859,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12855,
											"end": 12856,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12848,
											"end": 12860,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12810,
											"end": 12862,
											"name": "tag",
											"source": 12,
											"value": "829"
										},
										{
											"begin": 12810,
											"end": 12862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12890,
											"end": 12899,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12884,
											"end": 12900,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12909,
											"end": 12937,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "699"
										},
										{
											"begin": 12931,
											"end": 12936,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12909,
											"end": 12937,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "727"
										},
										{
											"begin": 12909,
											"end": 12937,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 14089,
											"end": 14217,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 14089,
											"end": 14217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14129,
											"end": 14132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14160,
											"end": 14161,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14156,
											"end": 14162,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 14153,
											"end": 14154,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14150,
											"end": 14163,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 14147,
											"end": 14186,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14147,
											"end": 14186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "836"
										},
										{
											"begin": 14147,
											"end": 14186,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14166,
											"end": 14184,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "836"
										},
										{
											"begin": 14166,
											"end": 14184,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "728"
										},
										{
											"begin": 14166,
											"end": 14184,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 14166,
											"end": 14184,
											"name": "tag",
											"source": 12,
											"value": "836"
										},
										{
											"begin": 14166,
											"end": 14184,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14202,
											"end": 14211,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14202,
											"end": 14211,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14089,
											"end": 14217,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 16754,
											"end": 16892,
											"name": "tag",
											"source": 12,
											"value": "729"
										},
										{
											"begin": 16754,
											"end": 16892,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16833,
											"end": 16846,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16833,
											"end": 16846,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16855,
											"end": 16886,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 16833,
											"end": 16846,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16855,
											"end": 16886,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "726"
										},
										{
											"begin": 16855,
											"end": 16886,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 16897,
											"end": 17062,
											"name": "tag",
											"source": 12,
											"value": "730"
										},
										{
											"begin": 16897,
											"end": 17062,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16975,
											"end": 16988,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16975,
											"end": 16988,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 17028,
											"end": 17036,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFF"
										},
										{
											"begin": 17017,
											"end": 17037,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17017,
											"end": 17037,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17007,
											"end": 17038,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17007,
											"end": 17038,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 16997,
											"end": 17056,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 16997,
											"end": 17056,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17052,
											"end": 17053,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17049,
											"end": 17050,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17042,
											"end": 17054,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17067,
											"end": 17231,
											"name": "tag",
											"source": 12,
											"value": "731"
										},
										{
											"begin": 17067,
											"end": 17231,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17144,
											"end": 17157,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17144,
											"end": 17157,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 17197,
											"end": 17198,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 17186,
											"end": 17206,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17186,
											"end": 17206,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17186,
											"end": 17206,
											"name": "SIGNEXTEND",
											"source": 12
										},
										{
											"begin": 17176,
											"end": 17207,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17176,
											"end": 17207,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 17166,
											"end": 17225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 17166,
											"end": 17225,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17221,
											"end": 17222,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17218,
											"end": 17219,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17211,
											"end": 17223,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17236,
											"end": 17428,
											"name": "tag",
											"source": 12,
											"value": "732"
										},
										{
											"begin": 17236,
											"end": 17428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17315,
											"end": 17328,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17315,
											"end": 17328,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17357,
											"end": 17403,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17357,
											"end": 17403,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17347,
											"end": 17404,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17347,
											"end": 17404,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 17337,
											"end": 17422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 17337,
											"end": 17422,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17418,
											"end": 17419,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17415,
											"end": 17416,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17408,
											"end": 17420,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17433,
											"end": 18619,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 17433,
											"end": 18619,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17596,
											"end": 17602,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17604,
											"end": 17610,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17612,
											"end": 17618,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17620,
											"end": 17626,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17628,
											"end": 17634,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17636,
											"end": 17642,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17644,
											"end": 17650,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17652,
											"end": 17658,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17660,
											"end": 17666,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17668,
											"end": 17674,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17676,
											"end": 17683,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17685,
											"end": 17692,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17739,
											"end": 17742,
											"name": "PUSH",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 17727,
											"end": 17736,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 17718,
											"end": 17725,
											"name": "DUP16",
											"source": 12
										},
										{
											"begin": 17714,
											"end": 17737,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17710,
											"end": 17743,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 17707,
											"end": 17760,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17707,
											"end": 17760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "853"
										},
										{
											"begin": 17707,
											"end": 17760,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17756,
											"end": 17757,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17753,
											"end": 17754,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17746,
											"end": 17758,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17707,
											"end": 17760,
											"name": "tag",
											"source": 12,
											"value": "853"
										},
										{
											"begin": 17707,
											"end": 17760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17788,
											"end": 17797,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 17782,
											"end": 17798,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 17838,
											"end": 17864,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17831,
											"end": 17836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17827,
											"end": 17865,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17820,
											"end": 17825,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17817,
											"end": 17866,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 17807,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "854"
										},
										{
											"begin": 17807,
											"end": 17884,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17880,
											"end": 17881,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17877,
											"end": 17878,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17870,
											"end": 17882,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17807,
											"end": 17884,
											"name": "tag",
											"source": 12,
											"value": "854"
										},
										{
											"begin": 17807,
											"end": 17884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17903,
											"end": 17908,
											"name": "SWAP12",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17927,
											"end": 17976,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "855"
										},
										{
											"begin": 17972,
											"end": 17974,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17957,
											"end": 17975,
											"name": "DUP15",
											"source": 12
										},
										{
											"begin": 17957,
											"end": 17975,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17927,
											"end": 17976,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "729"
										},
										{
											"begin": 17927,
											"end": 17976,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 17927,
											"end": 17976,
											"name": "tag",
											"source": 12,
											"value": "855"
										},
										{
											"begin": 17927,
											"end": 17976,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17917,
											"end": 17976,
											"name": "SWAP11",
											"source": 12
										},
										{
											"begin": 17917,
											"end": 17976,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17995,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "856"
										},
										{
											"begin": 18040,
											"end": 18042,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18029,
											"end": 18038,
											"name": "DUP15",
											"source": 12
										},
										{
											"begin": 18025,
											"end": 18043,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17995,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "729"
										},
										{
											"begin": 17995,
											"end": 18044,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 17995,
											"end": 18044,
											"name": "tag",
											"source": 12,
											"value": "856"
										},
										{
											"begin": 17995,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17985,
											"end": 18044,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 17985,
											"end": 18044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18063,
											"end": 18112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "857"
										},
										{
											"begin": 18108,
											"end": 18110,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 18097,
											"end": 18106,
											"name": "DUP15",
											"source": 12
										},
										{
											"begin": 18093,
											"end": 18111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18063,
											"end": 18112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "729"
										},
										{
											"begin": 18063,
											"end": 18112,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18063,
											"end": 18112,
											"name": "tag",
											"source": 12,
											"value": "857"
										},
										{
											"begin": 18063,
											"end": 18112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18053,
											"end": 18112,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 18053,
											"end": 18112,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18131,
											"end": 18180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "858"
										},
										{
											"begin": 18175,
											"end": 18178,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 18164,
											"end": 18173,
											"name": "DUP15",
											"source": 12
										},
										{
											"begin": 18160,
											"end": 18179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18131,
											"end": 18180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "730"
										},
										{
											"begin": 18131,
											"end": 18180,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18131,
											"end": 18180,
											"name": "tag",
											"source": 12,
											"value": "858"
										},
										{
											"begin": 18131,
											"end": 18180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18121,
											"end": 18180,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 18121,
											"end": 18180,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18199,
											"end": 18247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "859"
										},
										{
											"begin": 18242,
											"end": 18245,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 18231,
											"end": 18240,
											"name": "DUP15",
											"source": 12
										},
										{
											"begin": 18227,
											"end": 18246,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18199,
											"end": 18247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "731"
										},
										{
											"begin": 18199,
											"end": 18247,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18199,
											"end": 18247,
											"name": "tag",
											"source": 12,
											"value": "859"
										},
										{
											"begin": 18199,
											"end": 18247,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18189,
											"end": 18247,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 18189,
											"end": 18247,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18266,
											"end": 18314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "860"
										},
										{
											"begin": 18309,
											"end": 18312,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 18298,
											"end": 18307,
											"name": "DUP15",
											"source": 12
										},
										{
											"begin": 18294,
											"end": 18313,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18266,
											"end": 18314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "731"
										},
										{
											"begin": 18266,
											"end": 18314,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18266,
											"end": 18314,
											"name": "tag",
											"source": 12,
											"value": "860"
										},
										{
											"begin": 18266,
											"end": 18314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18256,
											"end": 18314,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 18256,
											"end": 18314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18333,
											"end": 18383,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "861"
										},
										{
											"begin": 18378,
											"end": 18381,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 18367,
											"end": 18376,
											"name": "DUP15",
											"source": 12
										},
										{
											"begin": 18363,
											"end": 18382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18333,
											"end": 18383,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "732"
										},
										{
											"begin": 18333,
											"end": 18383,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18333,
											"end": 18383,
											"name": "tag",
											"source": 12,
											"value": "861"
										},
										{
											"begin": 18333,
											"end": 18383,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18323,
											"end": 18383,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 18323,
											"end": 18383,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18423,
											"end": 18426,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 18412,
											"end": 18421,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 18408,
											"end": 18427,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18402,
											"end": 18428,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 18392,
											"end": 18428,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 18392,
											"end": 18428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18468,
											"end": 18471,
											"name": "PUSH",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 18457,
											"end": 18466,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 18453,
											"end": 18472,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18447,
											"end": 18473,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 18437,
											"end": 18473,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18437,
											"end": 18473,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18493,
											"end": 18543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "862"
										},
										{
											"begin": 18538,
											"end": 18541,
											"name": "PUSH",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 18527,
											"end": 18536,
											"name": "DUP15",
											"source": 12
										},
										{
											"begin": 18523,
											"end": 18542,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18493,
											"end": 18543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "732"
										},
										{
											"begin": 18493,
											"end": 18543,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18493,
											"end": 18543,
											"name": "tag",
											"source": 12,
											"value": "862"
										},
										{
											"begin": 18493,
											"end": 18543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18482,
											"end": 18543,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18482,
											"end": 18543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18563,
											"end": 18613,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "863"
										},
										{
											"begin": 18608,
											"end": 18611,
											"name": "PUSH",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 18597,
											"end": 18606,
											"name": "DUP15",
											"source": 12
										},
										{
											"begin": 18593,
											"end": 18612,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18563,
											"end": 18613,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "732"
										},
										{
											"begin": 18563,
											"end": 18613,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18563,
											"end": 18613,
											"name": "tag",
											"source": 12,
											"value": "863"
										},
										{
											"begin": 18563,
											"end": 18613,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18552,
											"end": 18613,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18552,
											"end": 18613,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17433,
											"end": 18619,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17433,
											"end": 18619,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 17433,
											"end": 18619,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 17433,
											"end": 18619,
											"name": "SWAP12",
											"source": 12
										},
										{
											"begin": 17433,
											"end": 18619,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17433,
											"end": 18619,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17433,
											"end": 18619,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 17433,
											"end": 18619,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 17433,
											"end": 18619,
											"name": "SWAP12",
											"source": 12
										},
										{
											"begin": 17433,
											"end": 18619,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17433,
											"end": 18619,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17433,
											"end": 18619,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 17433,
											"end": 18619,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 17433,
											"end": 18619,
											"name": "SWAP12",
											"source": 12
										},
										{
											"begin": 17433,
											"end": 18619,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 19277,
											"end": 19528,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 19277,
											"end": 19528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19347,
											"end": 19353,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19400,
											"end": 19402,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19388,
											"end": 19397,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19379,
											"end": 19386,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19375,
											"end": 19398,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19371,
											"end": 19403,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 19368,
											"end": 19420,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19368,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "867"
										},
										{
											"begin": 19368,
											"end": 19420,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19416,
											"end": 19417,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19413,
											"end": 19414,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19406,
											"end": 19418,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 19368,
											"end": 19420,
											"name": "tag",
											"source": 12,
											"value": "867"
										},
										{
											"begin": 19368,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19448,
											"end": 19457,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19442,
											"end": 19458,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 19467,
											"end": 19498,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "699"
										},
										{
											"begin": 19492,
											"end": 19497,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19467,
											"end": 19498,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "726"
										},
										{
											"begin": 19467,
											"end": 19498,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 22541,
											"end": 22951,
											"name": "tag",
											"source": 12,
											"value": "665"
										},
										{
											"begin": 22541,
											"end": 22951,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22743,
											"end": 22745,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22725,
											"end": 22746,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 22725,
											"end": 22746,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22725,
											"end": 22746,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22782,
											"end": 22784,
											"name": "PUSH",
											"source": 12,
											"value": "2E"
										},
										{
											"begin": 22762,
											"end": 22780,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22762,
											"end": 22780,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22762,
											"end": 22780,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22755,
											"end": 22785,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22821,
											"end": 22855,
											"name": "PUSH",
											"source": 12,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 22816,
											"end": 22818,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 22801,
											"end": 22819,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22801,
											"end": 22819,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22794,
											"end": 22856,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22887,
											"end": 22889,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 22872,
											"end": 22890,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22872,
											"end": 22890,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22865,
											"end": 22909,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22941,
											"end": 22944,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 22926,
											"end": 22945,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22926,
											"end": 22945,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22541,
											"end": 22951,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 22956,
											"end": 23363,
											"name": "tag",
											"source": 12,
											"value": "672"
										},
										{
											"begin": 22956,
											"end": 23363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23158,
											"end": 23160,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23140,
											"end": 23161,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 23140,
											"end": 23161,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23140,
											"end": 23161,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23197,
											"end": 23199,
											"name": "PUSH",
											"source": 12,
											"value": "2B"
										},
										{
											"begin": 23177,
											"end": 23195,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23177,
											"end": 23195,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23177,
											"end": 23195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23170,
											"end": 23200,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23236,
											"end": 23270,
											"name": "PUSH",
											"source": 12,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 23231,
											"end": 23233,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 23216,
											"end": 23234,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23216,
											"end": 23234,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23209,
											"end": 23271,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23302,
											"end": 23304,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 23287,
											"end": 23305,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23287,
											"end": 23305,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23280,
											"end": 23321,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23353,
											"end": 23356,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 23338,
											"end": 23357,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23338,
											"end": 23357,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22956,
											"end": 23363,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"AdminWETHWithdraw()": "2c86714c",
							"PRECISION_FACTOR()": "ccd34cd5",
							"PauseStaking()": "73f64499",
							"ResumeStaking()": "e179b5c3",
							"WETH()": "ad5c4648",
							"addPool(address,address,(uint256,uint256)[])": "88f67d77",
							"addRewardToPool(uint256,uint256)": "f8ce1f31",
							"calculateReward(address,uint256,bool)": "ba41795f",
							"depositDetails(uint256)": "9aaab954",
							"deposits(address,uint256)": "d6d68177",
							"getAPR(uint256,uint256)": "1ee7f3c4",
							"getAccMarketFee()": "b0203a80",
							"getDeposits(address)": "94f649dd",
							"getHavestAmount(address,uint256)": "24a723d4",
							"haveSuffecientFundsForReward(uint256)": "cf5badc6",
							"initialize(address,uint256[])": "e7272866",
							"isPaused()": "b187bd26",
							"onlyaddress()": "110d458e",
							"owner()": "8da5cb5b",
							"pausedTimestamp()": "911ef508",
							"periodPoolMap(uint256)": "c4b91c4d",
							"periodSum()": "82a14459",
							"poolLength()": "081e3eda",
							"pools(uint256)": "ac4afa38",
							"receiveWETHFee(uint256)": "e7c928b1",
							"renounceOwnership()": "715018a6",
							"setOnlyAddress(address)": "a2234080",
							"stake(uint256,uint256,uint256)": "a638f2e2",
							"tokenPools(address)": "c3d2c3c1",
							"totalReward()": "750142e6",
							"transferOwnership(address)": "f2fde38b",
							"updateAPR(uint256,(uint256,uint256)[])": "0c756997",
							"userDepositMap(address,uint256)": "e76ba191",
							"vestingAPRPerPool(uint256,uint256)": "a32a66a7",
							"withdraw(uint256,uint256,bool)": "33cfcd3b",
							"withdrawRewardfromPool(uint256,uint256)": "a54c83f6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeReward\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WETHDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WETHWithdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AdminWETHWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PauseStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ResumeStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reward\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"APR\",\"type\":\"uint256\"}],\"internalType\":\"struct LPStakingV3.interestRate[]\",\"name\":\"_periodRates\",\"type\":\"tuple[]\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addRewardToPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakeHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_dId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isProrata\",\"type\":\"bool\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"depositDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"depositId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"APR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardCalculated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestedFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"NFTId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"depositId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"APR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardCalculated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestedFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"NFTId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"getAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAccMarketFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getDeposits\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"depositId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"APR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardCalculated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestedFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"NFTId\",\"type\":\"uint256\"}],\"internalType\":\"struct LPStakingV3.stakeDetails[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_dId\",\"type\":\"uint256\"}],\"name\":\"getHavestAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"haveSuffecientFundsForReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_periods\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onlyaddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pausedTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"periodPoolMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAllotedFeeReward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodSum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAllotedReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimedReward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"receiveWETHFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_only\",\"type\":\"address\"}],\"name\":\"setOnlyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenPools\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalReward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"APR\",\"type\":\"uint256\"}],\"internalType\":\"struct LPStakingV3.interestRate[]\",\"name\":\"_periodRates\",\"type\":\"tuple[]\"}],\"name\":\"updateAPR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userDepositMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vestingAPRPerPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isForceWithdraw\",\"type\":\"bool\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewardfromPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"AdminWETHWithdraw()\":{\"details\":\"This function is used to withdraw WETH from contract from Admin only\"},\"PauseStaking()\":{\"details\":\"This function allows owner to pause contract.\"},\"ResumeStaking()\":{\"details\":\"This function allows owner to resume contract.\"},\"addPool(address,address,(uint256,uint256)[])\":{\"details\":\"This function will create new pool, access type is onlyOwner\",\"params\":{\"_periodRates\":\"APR percentage * 1000 for this pool.\",\"_reward\":\"Staking reward token address for this pool\",\"_token\":\"Staking token address for this pool. \"}},\"addRewardToPool(uint256,uint256)\":{\"details\":\"This funciton allows owner to add more reward amount to  this contract.\",\"params\":{\"_poolId\":\"pool's Id in which you want to add this reward.\",\"amount\":\"amount to be transfered from owner's wallet to this contract.\"}},\"calculateReward(address,uint256,bool)\":{\"details\":\"This function is used to calculate Total reward for stakeHolder for pool\",\"params\":{\"_dId\":\"deposit id for reward calculation\",\"_stakeHolder\":\"The address of stakeHolder to calculate Total reward\",\"isProrata\":\"to calculate on prorata basis\"},\"returns\":{\"reward\":\"total reward\"}},\"getAccMarketFee()\":{\"details\":\"Function to get balance of this contract WETH market fee\",\"returns\":{\"_0\":\"uint balance of weth in wei\"}},\"getHavestAmount(address,uint256)\":{\"details\":\"Calculates users deposits WETH market fee reward\",\"returns\":{\"_0\":\"reward Total unclaimed WETH reward till now for specific deposit Id\"}},\"haveSuffecientFundsForReward(uint256)\":{\"details\":\"Function to check if contract have suffecient reward allowance or not\",\"params\":{\"_poolId\":\"The pool for which you want to check reward availibility\"},\"returns\":{\"_0\":\"True if have sufficient allowance for paying all the rewards\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"poolLength()\":{\"details\":\"This funtion will return the length of pools\\\\ which will be used to loop and get pool details.\",\"returns\":{\"_0\":\"Length of pool.\"}},\"receiveWETHFee(uint256)\":{\"params\":{\"amount\":\"to deposit\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"stake(uint256,uint256,uint256)\":{\"details\":\"Allows user to stake the amount the pool. Calculate the old reward\\\\ and updates the reward, staked amount and current APR.\",\"params\":{\"_poolId\":\"The pool in which user wants to stake.\",\"tokenId\":\"The amount user wants to add into his stake.\"}},\"totalReward()\":{\"details\":\"Calculate and return total undelivered rewards till now.\",\"returns\":{\"_totalReward\":\"Total unclaimed reward till now.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateAPR(uint256,(uint256,uint256)[])\":{\"details\":\"This function allows owner to update APR for specific pool.\",\"params\":{\"_periodRates\":\"New APR percentage * 1000.\",\"_poolId\":\"pool's Id in which you want to update the APR.\"}},\"withdraw(uint256,uint256,bool)\":{\"details\":\"Calculate the current reward and unstake the stake token, Transefer it to sender and update reward to 0\",\"params\":{\"_dId\":\"deposit id for getting reward fot deposit.\",\"_poolId\":\"Pool from which user want to claim the reward.\",\"isForceWithdraw\":\"bool flag for emergency withdraw.\"}},\"withdrawRewardfromPool(uint256,uint256)\":{\"details\":\"This funciton allows owner to withdraw allotted reward amount from this contract.\",\"params\":{\"_poolId\":\"pool's Id in which you want to withdraw this reward.\",\"amount\":\"amount to be withdraw from contract to owner's wallet.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addPool(address,address,(uint256,uint256)[])\":{\"notice\":\"This Function will create new pool with the token address,\\\\ reward address and the APR percentage.\"},\"addRewardToPool(uint256,uint256)\":{\"notice\":\"Let's you allot more reward fund in this contract.\"},\"getHavestAmount(address,uint256)\":{\"notice\":\"This function will give you total of unclaimed rewards till now.\"},\"haveSuffecientFundsForReward(uint256)\":{\"notice\":\"This function will return if it has sufficient fund for paying the reward\"},\"initialize(address,uint256[])\":{\"notice\":\"This method will be called once only by proxy contract to init.\"},\"poolLength()\":{\"notice\":\"Get the length of pools and use it to loop for index.\"},\"receiveWETHFee(uint256)\":{\"notice\":\"Receive WETH Fee Deposit only admin\"},\"stake(uint256,uint256,uint256)\":{\"notice\":\"This function will update your staked amount.\"},\"tokenPools(address)\":{\"notice\":\"mapping to store current status for stakeHolder Explaination:  {      Staker: {           Pool: staking details      }  }\"},\"totalReward()\":{\"notice\":\"This function will give you total of unclaimed rewards till now.\"},\"updateAPR(uint256,(uint256,uint256)[])\":{\"notice\":\"Let's you update the APR for this pool if you're current owner.\"},\"withdraw(uint256,uint256,bool)\":{\"notice\":\"This function will transfer the reward earned till now and staked token amount.\"},\"withdrawRewardfromPool(uint256,uint256)\":{\"notice\":\"Let's you withdraw reward fund in this contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"LPStaking.sol\":\"LPStakingV3\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x5d3b80a09c746aed89446a14d0e8f5ba5212520360d00a495a2156a7a51497e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfaceeb9548fa36e2af1e69cbc2bd5a8ba2b06ec62accba64fc123e1e0f120a1\",\"dweb:/ipfs/QmcF1kFRotifj9QBqhqNATaRQhQ6aoDAhSEEoKMc9VdKu3\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0xcaa8b7861115ea691c77ddbeac140a444e0edcd1d9812a43942c0f6b42b36a49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ba2a8d7cd7bdbd42a5c525103da0cd2d190a3f702b7e796bada67f6c613622e\",\"dweb:/ipfs/QmfZSHW9FxVdWwRAQ171dkhumCPEGfAFMXHPeipPc4M2ag\"]},\"LPStaking.sol\":{\"keccak256\":\"0xe3b7d0230a9d7504bfd7f3b725eb7226def05f79fbbbfff41b523382ec0d7bbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ee8d652b60de13edb9c60a4696378cbd210b698954f7c46c440072c98e90f29\",\"dweb:/ipfs/QmWMHeJFWHAPn4WiWjXrT4rGGrhnX1soQZA6Tn7H5WAV2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 133,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 279,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 323,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "__gap",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1026,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "_owner",
								"offset": 0,
								"slot": "101",
								"type": "t_address"
							},
							{
								"astId": 122,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1482,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "_depositIds",
								"offset": 0,
								"slot": "151",
								"type": "t_struct(Counter)1033_storage"
							},
							{
								"astId": 1484,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "APRTime",
								"offset": 0,
								"slot": "152",
								"type": "t_uint256"
							},
							{
								"astId": 1486,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "onlyaddress",
								"offset": 0,
								"slot": "153",
								"type": "t_address"
							},
							{
								"astId": 1489,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "WETH",
								"offset": 0,
								"slot": "154",
								"type": "t_contract(IERC20Upgradeable)402"
							},
							{
								"astId": 1511,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "uniV3",
								"offset": 0,
								"slot": "155",
								"type": "t_contract(IUNIV3POS)1466"
							},
							{
								"astId": 1522,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "vestingAPRPerPool",
								"offset": 0,
								"slot": "156",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1527,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "tokenPools",
								"offset": 0,
								"slot": "157",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1534,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "deposits",
								"offset": 0,
								"slot": "158",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(stakeDetails)1508_storage))"
							},
							{
								"astId": 1539,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "userDepositMap",
								"offset": 0,
								"slot": "159",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1544,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "depositDetails",
								"offset": 0,
								"slot": "160",
								"type": "t_mapping(t_uint256,t_struct(stakeDetails)1508_storage)"
							},
							{
								"astId": 1612,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "pools",
								"offset": 0,
								"slot": "161",
								"type": "t_array(t_struct(stakingPool)1603_storage)dyn_storage"
							},
							{
								"astId": 1617,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "periodPoolMap",
								"offset": 0,
								"slot": "162",
								"type": "t_mapping(t_uint256,t_struct(periodPool)1608_storage)"
							},
							{
								"astId": 1620,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "periods",
								"offset": 0,
								"slot": "163",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1622,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "isPaused",
								"offset": 0,
								"slot": "164",
								"type": "t_bool"
							},
							{
								"astId": 1624,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "pausedTimestamp",
								"offset": 0,
								"slot": "165",
								"type": "t_uint256"
							},
							{
								"astId": 1626,
								"contract": "LPStaking.sol:LPStakingV3",
								"label": "periodSum",
								"offset": 0,
								"slot": "166",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(stakingPool)1603_storage)dyn_storage": {
								"base": "t_struct(stakingPool)1603_storage",
								"encoding": "dynamic_array",
								"label": "struct LPStakingV3.stakingPool[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20Upgradeable)402": {
								"encoding": "inplace",
								"label": "contract IERC20Upgradeable",
								"numberOfBytes": "20"
							},
							"t_contract(IUNIV3POS)1466": {
								"encoding": "inplace",
								"label": "contract IUNIV3POS",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(stakeDetails)1508_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(stakeDetails)1508_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_uint256,t_struct(periodPool)1608_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct LPStakingV3.periodPool)",
								"numberOfBytes": "32",
								"value": "t_struct(periodPool)1608_storage"
							},
							"t_mapping(t_uint256,t_struct(stakeDetails)1508_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct LPStakingV3.stakeDetails)",
								"numberOfBytes": "32",
								"value": "t_struct(stakeDetails)1508_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Counter)1033_storage": {
								"encoding": "inplace",
								"label": "struct CountersUpgradeable.Counter",
								"members": [
									{
										"astId": 1032,
										"contract": "LPStaking.sol:LPStakingV3",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(periodPool)1608_storage": {
								"encoding": "inplace",
								"label": "struct LPStakingV3.periodPool",
								"members": [
									{
										"astId": 1605,
										"contract": "LPStaking.sol:LPStakingV3",
										"label": "tvl",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1607,
										"contract": "LPStaking.sol:LPStakingV3",
										"label": "totalAllotedFeeReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(stakeDetails)1508_storage": {
								"encoding": "inplace",
								"label": "struct LPStakingV3.stakeDetails",
								"members": [
									{
										"astId": 1491,
										"contract": "LPStaking.sol:LPStakingV3",
										"label": "depositId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1493,
										"contract": "LPStaking.sol:LPStakingV3",
										"label": "stake",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1495,
										"contract": "LPStaking.sol:LPStakingV3",
										"label": "reward",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1497,
										"contract": "LPStaking.sol:LPStakingV3",
										"label": "APR",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1499,
										"contract": "LPStaking.sol:LPStakingV3",
										"label": "period",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1501,
										"contract": "LPStaking.sol:LPStakingV3",
										"label": "lastRewardCalculated",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1503,
										"contract": "LPStaking.sol:LPStakingV3",
										"label": "poolId",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1505,
										"contract": "LPStaking.sol:LPStakingV3",
										"label": "vestedFor",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1507,
										"contract": "LPStaking.sol:LPStakingV3",
										"label": "NFTId",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(stakingPool)1603_storage": {
								"encoding": "inplace",
								"label": "struct LPStakingV3.stakingPool",
								"members": [
									{
										"astId": 1594,
										"contract": "LPStaking.sol:LPStakingV3",
										"label": "token",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1596,
										"contract": "LPStaking.sol:LPStakingV3",
										"label": "reward",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 1598,
										"contract": "LPStaking.sol:LPStakingV3",
										"label": "tvl",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1600,
										"contract": "LPStaking.sol:LPStakingV3",
										"label": "totalAllotedReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1602,
										"contract": "LPStaking.sol:LPStakingV3",
										"label": "totalClaimedReward",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addPool(address,address,(uint256,uint256)[])": {
								"notice": "This Function will create new pool with the token address,\\ reward address and the APR percentage."
							},
							"addRewardToPool(uint256,uint256)": {
								"notice": "Let's you allot more reward fund in this contract."
							},
							"getHavestAmount(address,uint256)": {
								"notice": "This function will give you total of unclaimed rewards till now."
							},
							"haveSuffecientFundsForReward(uint256)": {
								"notice": "This function will return if it has sufficient fund for paying the reward"
							},
							"initialize(address,uint256[])": {
								"notice": "This method will be called once only by proxy contract to init."
							},
							"poolLength()": {
								"notice": "Get the length of pools and use it to loop for index."
							},
							"receiveWETHFee(uint256)": {
								"notice": "Receive WETH Fee Deposit only admin"
							},
							"stake(uint256,uint256,uint256)": {
								"notice": "This function will update your staked amount."
							},
							"tokenPools(address)": {
								"notice": "mapping to store current status for stakeHolder Explaination:  {      Staker: {           Pool: staking details      }  }"
							},
							"totalReward()": {
								"notice": "This function will give you total of unclaimed rewards till now."
							},
							"updateAPR(uint256,(uint256,uint256)[])": {
								"notice": "Let's you update the APR for this pool if you're current owner."
							},
							"withdraw(uint256,uint256,bool)": {
								"notice": "This function will transfer the reward earned till now and staked token amount."
							},
							"withdrawRewardfromPool(uint256,uint256)": {
								"notice": "Let's you withdraw reward fund in this contract."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							985
						],
						"ContextUpgradeable": [
							1027
						],
						"Initializable": [
							265
						],
						"OwnableUpgradeable": [
							123
						]
					},
					"id": 124,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 124,
							"sourceUnit": 1028,
							"src": "112:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 124,
							"sourceUnit": 266,
							"src": "154:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 265,
										"src": "733:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "733:13:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1027,
										"src": "748:18:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "748:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "198:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 123,
							"linearizedBaseContracts": [
								123,
								1027,
								265
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "711:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "789:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 123,
									"src": "773:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "773:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 16,
									"name": "OwnershipTransferred",
									"nameLocation": "808:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "845:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "829:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "876:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "860:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:57:0"
									},
									"src": "802:84:0"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "1040:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 22,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1050:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1050:26:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "892:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 20,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 19,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 208,
												"src": "1023:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1023:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "997:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1011:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:0"
									},
									"scope": 123,
									"src": "988:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "1151:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 32,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "1180:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1180:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 31,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "1161:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1161:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "1161:32:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 29,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 28,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 208,
												"src": "1134:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1134:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1098:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1122:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1151:0:0"
									},
									"scope": 123,
									"src": "1089:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1331:30:0",
										"statements": [
											{
												"expression": {
													"id": 43,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1348:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 42,
												"id": 44,
												"nodeType": "Return",
												"src": "1341:13:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1206:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1285:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1290:2:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1322:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1322:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1321:9:0"
									},
									"scope": 123,
									"src": "1276:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1470:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 50,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "1488:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1488:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 52,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1012,
																	"src": "1499:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1499:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1488:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1513:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 49,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1480:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "1480:68:0"
											},
											{
												"id": 58,
												"nodeType": "PlaceholderStatement",
												"src": "1558:1:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1367:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 60,
									"name": "onlyOwner",
									"nameLocation": "1458:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:0"
									},
									"src": "1449:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "1962:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1999:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1991:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 67,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1991:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1991:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 66,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "1972:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1972:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "1972:30:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1572:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 64,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 63,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "1952:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1952:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1917:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1934:2:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1962:0:0"
									},
									"scope": 123,
									"src": "1908:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "2228:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 83,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2246:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2266:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 85,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2258:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 84,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2258:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2258:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2246:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2270:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 82,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2238:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2238:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "2238:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 93,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "2340:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 92,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "2321:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2321:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "2321:28:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2015:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 80,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 79,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "2218:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2218:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2167:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2193:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "2185:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2185:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2184:18:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2228:0:0"
									},
									"scope": 123,
									"src": "2158:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "2573:124:0",
										"statements": [
											{
												"assignments": [
													104
												],
												"declarations": [
													{
														"constant": false,
														"id": 104,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2591:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 116,
														"src": "2583:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 103,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2583:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"id": 105,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2602:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2583:25:0"
											},
											{
												"expression": {
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 107,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2618:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 108,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2618:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "2618:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 112,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "2671:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 113,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "2681:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 111,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2650:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "EmitStatement",
												"src": "2645:45:0"
											}
										]
									},
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "2362:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2519:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2546:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "2538:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2537:18:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2573:0:0"
									},
									"scope": 123,
									"src": "2510:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "2703:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 122,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "2982:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 123,
									"src": "2962:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 119,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2962:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 121,
										"length": {
											"hexValue": "3439",
											"id": 120,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2970:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "2962:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 124,
							"src": "693:2297:0",
							"usedErrors": []
						}
					],
					"src": "87:2904:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							985
						],
						"Initializable": [
							265
						]
					},
					"id": 266,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 125,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 126,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 266,
							"sourceUnit": 986,
							"src": "138:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 127,
								"nodeType": "StructuredDocumentation",
								"src": "184:2198:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "Initializable",
							"nameLocation": "2401:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "2421:109:1",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 130,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2549:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 265,
									"src": "2535:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 129,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2535:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "2568:91:1",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 133,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2677:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 265,
									"src": "2664:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 132,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2664:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "2697:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 138,
									"name": "Initialized",
									"nameLocation": "2798:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2816:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2810:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 135,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2810:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:15:1"
									},
									"src": "2792:33:1"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "3101:257:1",
										"statements": [
											{
												"assignments": [
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3116:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 166,
														"src": "3111:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 141,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3111:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 146,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3156:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 143,
														"name": "_setInitializedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "3133:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$_t_bool_$",
															"typeString": "function (uint8) returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3133:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3111:47:1"
											},
											{
												"condition": {
													"id": 147,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 142,
													"src": "3172:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 153,
												"nodeType": "IfStatement",
												"src": "3168:65:1",
												"trueBody": {
													"id": 152,
													"nodeType": "Block",
													"src": "3188:45:1",
													"statements": [
														{
															"expression": {
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 148,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "3202:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3218:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3202:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 151,
															"nodeType": "ExpressionStatement",
															"src": "3202:20:1"
														}
													]
												}
											},
											{
												"id": 154,
												"nodeType": "PlaceholderStatement",
												"src": "3242:1:1"
											},
											{
												"condition": {
													"id": 155,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 142,
													"src": "3257:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "IfStatement",
												"src": "3253:99:1",
												"trueBody": {
													"id": 164,
													"nodeType": "Block",
													"src": "3273:79:1",
													"statements": [
														{
															"expression": {
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 156,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "3287:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3303:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3287:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 159,
															"nodeType": "ExpressionStatement",
															"src": "3287:21:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3339:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 160,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "3327:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3327:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 163,
															"nodeType": "EmitStatement",
															"src": "3322:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "2831:242:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."
									},
									"id": 167,
									"name": "initializer",
									"nameLocation": "3087:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3098:2:1"
									},
									"src": "3078:280:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "4173:269:1",
										"statements": [
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4188:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 197,
														"src": "4183:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 172,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4183:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"arguments": [
														{
															"id": 175,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "4228:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 174,
														"name": "_setInitializedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "4205:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$_t_bool_$",
															"typeString": "function (uint8) returns (bool)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4205:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4183:53:1"
											},
											{
												"condition": {
													"id": 178,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "4250:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 184,
												"nodeType": "IfStatement",
												"src": "4246:65:1",
												"trueBody": {
													"id": 183,
													"nodeType": "Block",
													"src": "4266:45:1",
													"statements": [
														{
															"expression": {
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 179,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "4280:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4296:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "4280:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 182,
															"nodeType": "ExpressionStatement",
															"src": "4280:20:1"
														}
													]
												}
											},
											{
												"id": 185,
												"nodeType": "PlaceholderStatement",
												"src": "4320:1:1"
											},
											{
												"condition": {
													"id": 186,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "4335:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 196,
												"nodeType": "IfStatement",
												"src": "4331:105:1",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "4351:85:1",
													"statements": [
														{
															"expression": {
																"id": 189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 187,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "4365:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4381:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "4365:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 190,
															"nodeType": "ExpressionStatement",
															"src": "4365:21:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 192,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "4417:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 191,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "4405:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4405:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 194,
															"nodeType": "EmitStatement",
															"src": "4400:25:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "3364:766:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."
									},
									"id": 198,
									"name": "reinitializer",
									"nameLocation": "4144:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4164:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "4158:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 169,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4158:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4157:15:1"
									},
									"src": "4135:307:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "4680:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 202,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4698:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4713:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4690:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "4690:69:1"
											},
											{
												"id": 206,
												"nodeType": "PlaceholderStatement",
												"src": "4769:1:1"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "4448:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 208,
									"name": "onlyInitializing",
									"nameLocation": "4661:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4677:2:1"
									},
									"src": "4652:125:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "5225:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5263:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 214,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "5263:5:1",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		}
																	],
																	"id": 213,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "5258:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5258:11:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint8",
																	"typeString": "type(uint8)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "5258:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 212,
														"name": "_setInitializedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "5235:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$_t_bool_$",
															"typeString": "function (uint8) returns (bool)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5235:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "5235:39:1"
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "4783:388:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5185:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5205:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5225:0:1"
									},
									"scope": 265,
									"src": "5176:105:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "5357:738:1",
										"statements": [
											{
												"condition": {
													"id": 228,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 133,
													"src": "5684:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 261,
													"nodeType": "Block",
													"src": "5922:167:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 249,
																			"name": "_initialized",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 130,
																			"src": "5944:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 250,
																			"name": "version",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 223,
																			"src": "5959:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "5944:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5968:48:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																			"typeString": "literal_string \"Initializable: contract is already initialized\""
																		},
																		"value": "Initializable: contract is already initialized"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																			"typeString": "literal_string \"Initializable: contract is already initialized\""
																		}
																	],
																	"id": 248,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5936:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5936:81:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 254,
															"nodeType": "ExpressionStatement",
															"src": "5936:81:1"
														},
														{
															"expression": {
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 255,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "6031:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 256,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 223,
																	"src": "6046:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6031:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 258,
															"nodeType": "ExpressionStatement",
															"src": "6031:22:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6074:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 227,
															"id": 260,
															"nodeType": "Return",
															"src": "6067:11:1"
														}
													]
												},
												"id": 262,
												"nodeType": "IfStatement",
												"src": "5680:409:1",
												"trueBody": {
													"id": 247,
													"nodeType": "Block",
													"src": "5699:217:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 230,
																				"name": "version",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 223,
																				"src": "5738:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 231,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5749:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "5738:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"id": 240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "5754:45:1",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 237,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "5793:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$265",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$265",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 236,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "5785:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 235,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "5785:7:1",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 238,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5785:13:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 233,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 985,
																						"src": "5755:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$985_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 234,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 760,
																					"src": "5755:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 239,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5755:44:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "5738:61:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
																		"id": 242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5817:48:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																			"typeString": "literal_string \"Initializable: contract is already initialized\""
																		},
																		"value": "Initializable: contract is already initialized"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																			"typeString": "literal_string \"Initializable: contract is already initialized\""
																		}
																	],
																	"id": 229,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5713:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5713:166:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 244,
															"nodeType": "ExpressionStatement",
															"src": "5713:166:1"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5900:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 227,
															"id": 246,
															"nodeType": "Return",
															"src": "5893:12:1"
														}
													]
												}
											}
										]
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setInitializedVersion",
									"nameLocation": "5296:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "5325:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "5319:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 222,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5319:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:15:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "5351:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5351:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5350:6:1"
									},
									"scope": 265,
									"src": "5287:808:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 266,
							"src": "2383:3714:1",
							"usedErrors": []
						}
					],
					"src": "113:5985:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							985
						],
						"Initializable": [
							265
						],
						"ReentrancyGuardUpgradeable": [
							324
						]
					},
					"id": 325,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 267,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 268,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 325,
							"sourceUnit": 266,
							"src": "121:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 270,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 265,
										"src": "964:13:2"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "964:13:2"
								}
							],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 269,
								"nodeType": "StructuredDocumentation",
								"src": "165:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 324,
							"linearizedBaseContracts": [
								324,
								265
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "934:26:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 274,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1757:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 324,
									"src": "1732:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 272,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1732:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 273,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1772:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 277,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1804:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 324,
									"src": "1779:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 275,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1779:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 276,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1815:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1839:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 324,
									"src": "1823:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 278,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1823:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 287,
										"nodeType": "Block",
										"src": "1913:51:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 284,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "1923:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1923:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "1923:34:2"
											}
										]
									},
									"id": 288,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 282,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 281,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 208,
												"src": "1896:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1896:16:2"
										}
									],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "1862:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:2"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1913:0:2"
									},
									"scope": 324,
									"src": "1853:111:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "2040:39:2",
										"statements": [
											{
												"expression": {
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 293,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "2050:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 294,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "2060:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2050:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "2050:22:2"
											}
										]
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 291,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 290,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 208,
												"src": "2023:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2023:16:2"
										}
									],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "1979:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2011:2:2"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2040:0:2"
									},
									"scope": 324,
									"src": "1970:109:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "2480:421:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 302,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 279,
																"src": "2569:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 303,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "2580:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2569:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2590:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2561:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2561:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "2561:63:2"
											},
											{
												"expression": {
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 308,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "2699:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 309,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "2709:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2699:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "2699:18:2"
											},
											{
												"id": 312,
												"nodeType": "PlaceholderStatement",
												"src": "2728:1:2"
											},
											{
												"expression": {
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 313,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "2872:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 314,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "2882:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2872:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "2872:22:2"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "2085:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 318,
									"name": "nonReentrant",
									"nameLocation": "2465:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2477:2:2"
									},
									"src": "2456:445:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "2907:254:2",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 323,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3186:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 324,
									"src": "3166:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 320,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3166:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 322,
										"length": {
											"hexValue": "3439",
											"id": 321,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3174:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3166:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 325,
							"src": "916:2278:2",
							"usedErrors": []
						}
					],
					"src": "97:3098:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							402
						]
					},
					"id": 403,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 326,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 327,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 402,
							"linearizedBaseContracts": [
								402
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 336,
									"name": "Transfer",
									"nameLocation": "405:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "414:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "436:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "456:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:3"
									},
									"src": "399:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 345,
									"name": "Approval",
									"nameLocation": "636:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "645:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "668:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "693:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:3"
									},
									"src": "630:78:3"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:3"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "831:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:3"
									},
									"scope": 402,
									"src": "785:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "942:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:3"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "982:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:3"
									},
									"scope": 402,
									"src": "923:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1234:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:3"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 366,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 402,
									"src": "1204:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 402,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "2302:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "2319:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:3"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "2353:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 386,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:3"
									},
									"scope": 402,
									"src": "2285:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2696:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2688:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2718:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2710:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2738:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2730:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:72:3"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2769:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 398,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2769:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2768:6:3"
									},
									"scope": 402,
									"src": "2657:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 403,
							"src": "202:2575:3",
							"usedErrors": []
						}
					],
					"src": "106:2672:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							985
						],
						"IERC20Upgradeable": [
							402
						],
						"SafeERC20Upgradeable": [
							626
						]
					},
					"id": 627,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 404,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "../IERC20Upgradeable.sol",
							"id": 405,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 627,
							"sourceUnit": 403,
							"src": "125:34:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../../utils/AddressUpgradeable.sol",
							"id": 406,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 627,
							"sourceUnit": 986,
							"src": "160:47:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 407,
								"nodeType": "StructuredDocumentation",
								"src": "209:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 626,
							"linearizedBaseContracts": [
								626
							],
							"name": "SafeERC20Upgradeable",
							"nameLocation": "675:20:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 410,
									"libraryName": {
										"id": 408,
										"name": "AddressUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 985,
										"src": "708:18:4"
									},
									"nodeType": "UsingForDirective",
									"src": "702:37:4",
									"typeName": {
										"id": 409,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "731:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "858:103:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "888:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 424,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 413,
																			"src": "918:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 369,
																		"src": "918:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "918:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 427,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "943:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 428,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "947:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 422,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "895:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "895:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "895:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 420,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "868:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$402_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "868:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "868:86:4"
											}
										]
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "754:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "794:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "776:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 412,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 411,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 402,
														"src": "776:17:4"
													},
													"referencedDeclaration": 402,
													"src": "776:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "817:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "809:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "837:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "829:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "766:82:4"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:0:4"
									},
									"scope": 626,
									"src": "745:216:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "1106:113:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "1136:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 449,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 436,
																			"src": "1166:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 401,
																		"src": "1166:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1166:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 452,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "1195:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 453,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "1201:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 454,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "1205:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 447,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1143:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1143:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1143:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 445,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "1116:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$402_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "1116:96:4"
											}
										]
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "976:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1020:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1002:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 435,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 434,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 402,
														"src": "1002:17:4"
													},
													"referencedDeclaration": 402,
													"src": "1002:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1043:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1035:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1065:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1057:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1085:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1077:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:104:4"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1106:0:4"
									},
									"scope": 626,
									"src": "967:252:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "1596:497:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 471,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "1845:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1854:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1845:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 474,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1844:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 479,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1885:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$626",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$626",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						],
																						"id": 478,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1877:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 477,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1877:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 480,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1877:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 481,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 465,
																					"src": "1892:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 475,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 463,
																					"src": "1861:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 476,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 379,
																				"src": "1861:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1861:39:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1904:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1861:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 485,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1860:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1844:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1920:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 470,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1823:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1823:163:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "1823:163:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 491,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2016:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 494,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 463,
																			"src": "2046:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 389,
																		"src": "2046:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2046:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 497,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "2070:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 498,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "2079:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 492,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2023:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2023:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2023:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 490,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "1996:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$402_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1996:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "1996:90:4"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "1225:249:4",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1488:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1527:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "1509:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 462,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 461,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 402,
														"src": "1509:17:4"
													},
													"referencedDeclaration": 402,
													"src": "1509:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1550:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "1542:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1499:87:4"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1596:0:4"
									},
									"scope": 626,
									"src": "1479:614:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "2226:194:4",
										"statements": [
											{
												"assignments": [
													514
												],
												"declarations": [
													{
														"constant": false,
														"id": 514,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2244:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 538,
														"src": "2236:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 513,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2236:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 525,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 519,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2283:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$626",
																			"typeString": "library SafeERC20Upgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$626",
																			"typeString": "library SafeERC20Upgradeable"
																		}
																	],
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2275:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 517,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2275:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2275:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 521,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "2290:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 515,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "2259:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																	"typeString": "contract IERC20Upgradeable"
																}
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 379,
															"src": "2259:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2259:39:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 523,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "2301:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2259:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2236:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 527,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "2336:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 530,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 506,
																			"src": "2366:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 389,
																		"src": "2366:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2366:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 533,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "2390:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 534,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "2399:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 528,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2343:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2343:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2343:69:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 526,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "2316:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$402_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:97:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "2316:97:4"
											}
										]
									},
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2108:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2157:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2139:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 505,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 504,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 402,
														"src": "2139:17:4"
													},
													"referencedDeclaration": 402,
													"src": "2139:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2180:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2172:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2172:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2205:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2197:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2197:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2129:87:4"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2226:0:4"
									},
									"scope": 626,
									"src": "2099:321:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "2553:370:4",
										"statements": [
											{
												"id": 585,
												"nodeType": "UncheckedBlock",
												"src": "2563:354:4",
												"statements": [
													{
														"assignments": [
															550
														],
														"declarations": [
															{
																"constant": false,
																"id": 550,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2595:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 585,
																"src": "2587:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 549,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2587:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 559,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 555,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2634:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$626",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$626",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		],
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2626:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 553,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2626:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2626:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 557,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "2641:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "2610:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 379,
																"src": "2610:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2610:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2587:62:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 561,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "2671:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 562,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "2687:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2671:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2694:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 560,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2663:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2663:75:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 566,
														"nodeType": "ExpressionStatement",
														"src": "2663:75:4"
													},
													{
														"assignments": [
															568
														],
														"declarations": [
															{
																"constant": false,
																"id": 568,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2760:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 585,
																"src": "2752:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 567,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2752:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 572,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 569,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "2775:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 570,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "2790:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2775:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2752:43:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 574,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "2829:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 577,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 542,
																					"src": "2859:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 389,
																				"src": "2859:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2859:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 580,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 544,
																			"src": "2883:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 581,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 568,
																			"src": "2892:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 575,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2836:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2836:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2836:69:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																		"typeString": "contract IERC20Upgradeable"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 573,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 625,
																"src": "2809:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$402_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20Upgradeable,bytes memory)"
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2809:97:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 584,
														"nodeType": "ExpressionStatement",
														"src": "2809:97:4"
													}
												]
											}
										]
									},
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2435:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2484:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "2466:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 541,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 540,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 402,
														"src": "2466:17:4"
													},
													"referencedDeclaration": 402,
													"src": "2466:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2507:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "2499:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "2524:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2456:87:4"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2553:0:4"
									},
									"scope": 626,
									"src": "2426:497:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "3387:636:4",
										"statements": [
											{
												"assignments": [
													597
												],
												"declarations": [
													{
														"constant": false,
														"id": 597,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3749:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 624,
														"src": "3736:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 596,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3736:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 606,
												"initialValue": {
													"arguments": [
														{
															"id": 603,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "3790:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3796:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 600,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "3770:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3762:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 598,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3762:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3762:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 831,
														"src": "3762:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3762:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3736:95:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 607,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "3845:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3845:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3865:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3845:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 623,
												"nodeType": "IfStatement",
												"src": "3841:176:4",
												"trueBody": {
													"id": 622,
													"nodeType": "Block",
													"src": "3868:149:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 614,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "3940:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 616,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3953:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 615,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3953:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 617,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3952:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 612,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3929:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3929:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3929:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3961:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 611,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3921:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3921:85:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 621,
															"nodeType": "ExpressionStatement",
															"src": "3921:85:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "2929:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3315:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3353:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "3335:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 590,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 589,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 402,
														"src": "3335:17:4"
													},
													"referencedDeclaration": 402,
													"src": "3335:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3373:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "3360:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 592,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3360:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3334:44:4"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3387:0:4"
									},
									"scope": 626,
									"src": "3306:717:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 627,
							"src": "667:3358:4",
							"usedErrors": []
						}
					],
					"src": "100:3926:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1113
						],
						"IERC721Upgradeable": [
							742
						]
					},
					"id": 743,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 628,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
							"file": "../../utils/introspection/IERC165Upgradeable.sol",
							"id": 629,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 743,
							"sourceUnit": 1114,
							"src": "133:58:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 631,
										"name": "IERC165Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1113,
										"src": "293:18:5"
									},
									"id": 632,
									"nodeType": "InheritanceSpecifier",
									"src": "293:18:5"
								}
							],
							"canonicalName": "IERC721Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 630,
								"nodeType": "StructuredDocumentation",
								"src": "193:67:5",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 742,
							"linearizedBaseContracts": [
								742,
								1113
							],
							"name": "IERC721Upgradeable",
							"nameLocation": "271:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "318:88:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 641,
									"name": "Transfer",
									"nameLocation": "417:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "442:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "426:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "464:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "448:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "484:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "468:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:67:5"
									},
									"src": "411:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "499:94:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 650,
									"name": "Approval",
									"nameLocation": "604:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "629:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "613:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "652:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "636:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "678:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "662:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:74:5"
									},
									"src": "598:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "693:117:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 659,
									"name": "ApprovalForAll",
									"nameLocation": "821:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "852:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "836:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "859:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "890:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "885:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 656,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "885:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "835:64:5"
									},
									"src": "815:85:5"
								},
								{
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "906:76:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 667,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "996:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1014:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "1006:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1006:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1005:15:5"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1052:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "1044:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:17:5"
									},
									"scope": 742,
									"src": "987:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "1067:131:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 675,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1212:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1228:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1220:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:17:5"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1268:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1260:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1259:15:5"
									},
									"scope": 742,
									"src": "1203:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "1281:556:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1851:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1885:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1877:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1877:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1907:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1899:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1899:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1927:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1919:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1919:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1959:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1944:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1944:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:102:5"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1978:0:5"
									},
									"scope": 742,
									"src": "1842:137:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "1985:690:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 697,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2689:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2723:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2715:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2745:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2737:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2765:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2757:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2757:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2705:73:5"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2787:0:5"
									},
									"scope": 742,
									"src": "2680:108:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "2794:504:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 707,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3312:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3342:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "3334:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3334:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3364:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "3356:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3356:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3384:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "3376:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3376:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3324:73:5"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3406:0:5"
									},
									"scope": 742,
									"src": "3303:104:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "3413:452:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 715,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3879:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3895:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "3887:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3887:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3907:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "3899:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3899:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3886:29:5"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3924:0:5"
									},
									"scope": 742,
									"src": "3870:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "3931:309:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 723,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4254:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4280:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4272:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4272:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4295:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4290:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 719,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4290:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4271:34:5"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4314:0:5"
									},
									"scope": 742,
									"src": "4245:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "4321:139:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 731,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4474:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4494:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "4486:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4485:17:5"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4534:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "4526:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4526:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4525:18:5"
									},
									"scope": 742,
									"src": "4465:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "4550:138:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4702:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4727:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "4719:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4719:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4742:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "4734:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4734:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4718:33:5"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "4775:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 738,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4775:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4774:6:5"
									},
									"scope": 742,
									"src": "4693:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 743,
							"src": "261:4522:5",
							"usedErrors": []
						}
					],
					"src": "108:4676:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							985
						]
					},
					"id": 986,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 744,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 745,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 985,
							"linearizedBaseContracts": [
								985
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "1252:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 753,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "1476:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1476:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1476:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1498:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1476:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 752,
												"id": 758,
												"nodeType": "Return",
												"src": "1469:30:6"
											}
										]
									},
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "227:954:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1195:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1214:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "1206:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:17:6"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "1246:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 750,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1246:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:6:6"
									},
									"scope": 985,
									"src": "1186:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "2494:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 771,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2520:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$985",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$985",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2512:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 769,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2512:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2512:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2512:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 774,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "2537:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2512:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2545:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 768,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2504:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "2504:73:6"
											},
											{
												"assignments": [
													780,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 780,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2594:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 793,
														"src": "2589:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 779,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2589:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 787,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2637:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 781,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "2607:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2607:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 783,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "2629:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2607:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2607:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2588:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 789,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "2658:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2667:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 788,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2650:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "2650:78:6"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "1512:906:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2432:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2458:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "2442:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2477:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "2469:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:43:6"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2494:0:6"
									},
									"scope": 985,
									"src": "2423:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "3566:84:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 805,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "3596:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "3604:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3610:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 804,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															811,
															831
														],
														"referencedDeclaration": 831,
														"src": "3583:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 803,
												"id": 809,
												"nodeType": "Return",
												"src": "3576:67:6"
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "2741:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3486:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3507:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "3499:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3528:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "3515:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 798,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3515:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:35:6"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "3552:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 801,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3552:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3551:14:6"
									},
									"scope": 985,
									"src": "3477:173:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "4019:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 824,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "4058:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 825,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "4066:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4072:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 827,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "4075:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 823,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															851,
															901
														],
														"referencedDeclaration": 901,
														"src": "4036:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4036:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 822,
												"id": 829,
												"nodeType": "Return",
												"src": "4029:59:6"
											}
										]
									},
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "3656:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3881:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3911:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "3903:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3940:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "3927:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 815,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3927:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3968:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "3954:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 817,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3954:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:93:6"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "4005:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 820,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4005:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4004:14:6"
									},
									"scope": 985,
									"src": "3872:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "4600:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 844,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "4639:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 845,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "4647:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 846,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "4653:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4660:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 843,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															851,
															901
														],
														"referencedDeclaration": 901,
														"src": "4617:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 842,
												"id": 849,
												"nodeType": "Return",
												"src": "4610:94:6"
											}
										]
									},
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "4101:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4466:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4505:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "4497:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4497:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4534:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "4521:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 835,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4521:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4556:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "4548:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4548:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4487:80:6"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "4586:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 840,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4586:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4585:14:6"
									},
									"scope": 985,
									"src": "4457:254:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "5138:320:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 868,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5164:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$985",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$985",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5156:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 866,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5156:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5156:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5156:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 871,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "5181:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5156:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5188:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 865,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5148:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5148:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "5148:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 878,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 854,
																	"src": "5258:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 877,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "5247:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5247:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5267:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 876,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5239:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5239:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "5239:60:6"
											},
											{
												"assignments": [
													884,
													886
												],
												"declarations": [
													{
														"constant": false,
														"id": 884,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5316:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 900,
														"src": "5311:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 883,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5311:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 886,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5338:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 900,
														"src": "5325:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 885,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5325:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 893,
												"initialValue": {
													"arguments": [
														{
															"id": 891,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "5378:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 887,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "5352:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5352:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 889,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "5371:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5352:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5352:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5310:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 895,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "5417:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 896,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "5426:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 897,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "5438:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 894,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "5400:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5400:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 864,
												"id": 899,
												"nodeType": "Return",
												"src": "5393:58:6"
											}
										]
									},
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "4717:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4968:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5007:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "4999:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4999:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5036:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "5023:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 855,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5023:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5058:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "5050:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5050:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5087:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "5073:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 859,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5073:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:116:6"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "5124:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 862,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5124:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5123:14:6"
									},
									"scope": 985,
									"src": "4959:499:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "5735:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 912,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "5771:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "5779:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5785:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 911,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															918,
															953
														],
														"referencedDeclaration": 953,
														"src": "5752:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5752:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 910,
												"id": 916,
												"nodeType": "Return",
												"src": "5745:80:6"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "5464:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5644:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5671:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "5663:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5692:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "5679:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 905,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5679:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5662:35:6"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "5721:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 908,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5721:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:14:6"
									},
									"scope": 985,
									"src": "5635:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "6174:228:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 932,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "6203:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 931,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "6192:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6192:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6212:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 930,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6184:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6184:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "6184:67:6"
											},
											{
												"assignments": [
													938,
													940
												],
												"declarations": [
													{
														"constant": false,
														"id": 938,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6268:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "6263:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 937,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6263:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 940,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6290:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "6277:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 939,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6277:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 945,
												"initialValue": {
													"arguments": [
														{
															"id": 943,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "6322:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 941,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "6304:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6304:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6304:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6262:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 947,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "6361:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 948,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "6370:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 949,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "6382:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 946,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "6344:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6344:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 929,
												"id": 951,
												"nodeType": "Return",
												"src": "6337:58:6"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "5838:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6025:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6061:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "6053:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6053:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6090:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "6077:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 922,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6077:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6118:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "6104:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 924,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6104:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6043:93:6"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "6160:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 927,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6160:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6159:14:6"
									},
									"scope": 985,
									"src": "6016:386:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "6782:532:6",
										"statements": [
											{
												"condition": {
													"id": 965,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 956,
													"src": "6796:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 981,
													"nodeType": "Block",
													"src": "6853:455:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 969,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "6937:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6937:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6957:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6937:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 979,
																"nodeType": "Block",
																"src": "7245:53:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 976,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 960,
																					"src": "7270:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 975,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7263:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7263:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 978,
																		"nodeType": "ExpressionStatement",
																		"src": "7263:20:6"
																	}
																]
															},
															"id": 980,
															"nodeType": "IfStatement",
															"src": "6933:365:6",
															"trueBody": {
																"id": 974,
																"nodeType": "Block",
																"src": "6960:279:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7080:145:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7102:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7131:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7125:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7125:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7106:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7174:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7178:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7170:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7170:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7191:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7163:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7163:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7163:44:6"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 958,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7131:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 958,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7178:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 973,
																		"nodeType": "InlineAssembly",
																		"src": "7071:154:6"
																	}
																]
															}
														}
													]
												},
												"id": 982,
												"nodeType": "IfStatement",
												"src": "6792:516:6",
												"trueBody": {
													"id": 968,
													"nodeType": "Block",
													"src": "6805:42:6",
													"statements": [
														{
															"expression": {
																"id": 966,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "6826:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 964,
															"id": 967,
															"nodeType": "Return",
															"src": "6819:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "6408:209:6",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "6631:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6662:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "6657:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 955,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6657:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6692:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "6679:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 957,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6679:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6726:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "6712:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 959,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6712:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6647:97:6"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "6768:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 962,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:6"
									},
									"scope": 985,
									"src": "6622:692:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 986,
							"src": "194:7122:6",
							"usedErrors": []
						}
					],
					"src": "101:7216:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							985
						],
						"ContextUpgradeable": [
							1027
						],
						"Initializable": [
							265
						]
					},
					"id": 1028,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 987,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 988,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1028,
							"sourceUnit": 266,
							"src": "110:42:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 990,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 265,
										"src": "691:13:7"
									},
									"id": 991,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:7"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 989,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1027,
							"linearizedBaseContracts": [
								1027,
								265
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "763:7:7",
										"statements": []
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 994,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 993,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 208,
												"src": "746:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:7"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:7"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:7"
									},
									"scope": 1027,
									"src": "711:59:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "838:7:7",
										"statements": []
									},
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1000,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 999,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 208,
												"src": "821:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:7"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:7"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:7"
									},
									"scope": 1027,
									"src": "776:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "912:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1008,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1007,
												"id": 1010,
												"nodeType": "Return",
												"src": "922:17:7"
											}
										]
									},
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:7"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "903:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:7"
									},
									"scope": 1027,
									"src": "850:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "1019:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1017,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1016,
												"id": 1019,
												"nodeType": "Return",
												"src": "1029:15:7"
											}
										]
									},
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:7"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1003:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1014,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:7"
									},
									"scope": 1027,
									"src": "952:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:7",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1026,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1027,
									"src": "1316:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1023,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1025,
										"length": {
											"hexValue": "3530",
											"id": 1024,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1028,
							"src": "651:693:7",
							"usedErrors": []
						}
					],
					"src": "86:1259:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
					"exportedSymbols": {
						"CountersUpgradeable": [
							1101
						]
					},
					"id": 1102,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1029,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CountersUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1030,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:8",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1101,
							"linearizedBaseContracts": [
								1101
							],
							"name": "CountersUpgradeable",
							"nameLocation": "432:19:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "CountersUpgradeable.Counter",
									"id": 1033,
									"members": [
										{
											"constant": false,
											"id": 1032,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "805:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1033,
											"src": "797:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1031,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "797:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "465:7:8",
									"nodeType": "StructDefinition",
									"scope": 1101,
									"src": "458:374:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "912:38:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1041,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "929:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1033_storage_ptr",
															"typeString": "struct CountersUpgradeable.Counter storage pointer"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1032,
													"src": "929:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1040,
												"id": 1043,
												"nodeType": "Return",
												"src": "922:21:8"
											}
										]
									},
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "847:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "871:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "855:23:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1033_storage_ptr",
													"typeString": "struct CountersUpgradeable.Counter"
												},
												"typeName": {
													"id": 1035,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1034,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1033,
														"src": "855:7:8"
													},
													"referencedDeclaration": 1033,
													"src": "855:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1033_storage_ptr",
														"typeString": "struct CountersUpgradeable.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:25:8"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "903:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:8"
									},
									"scope": 1101,
									"src": "838:112:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "1009:70:8",
										"statements": [
											{
												"id": 1057,
												"nodeType": "UncheckedBlock",
												"src": "1019:54:8",
												"statements": [
													{
														"expression": {
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1051,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1048,
																	"src": "1043:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1033_storage_ptr",
																		"typeString": "struct CountersUpgradeable.Counter storage pointer"
																	}
																},
																"id": 1053,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1032,
																"src": "1043:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1061:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1043:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1056,
														"nodeType": "ExpressionStatement",
														"src": "1043:19:8"
													}
												]
											}
										]
									},
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "965:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "991:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "975:23:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1033_storage_ptr",
													"typeString": "struct CountersUpgradeable.Counter"
												},
												"typeName": {
													"id": 1047,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1046,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1033,
														"src": "975:7:8"
													},
													"referencedDeclaration": 1033,
													"src": "975:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1033_storage_ptr",
														"typeString": "struct CountersUpgradeable.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "974:25:8"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1009:0:8"
									},
									"scope": 1101,
									"src": "956:123:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "1138:176:8",
										"statements": [
											{
												"assignments": [
													1066
												],
												"declarations": [
													{
														"constant": false,
														"id": 1066,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1156:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1086,
														"src": "1148:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1065,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1148:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1069,
												"initialValue": {
													"expression": {
														"id": 1067,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "1164:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1033_storage_ptr",
															"typeString": "struct CountersUpgradeable.Counter storage pointer"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1032,
													"src": "1164:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1148:30:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1071,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "1196:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1204:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1196:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1207:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1070,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1188:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1188:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "1188:49:8"
											},
											{
												"id": 1085,
												"nodeType": "UncheckedBlock",
												"src": "1247:61:8",
												"statements": [
													{
														"expression": {
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1077,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1062,
																	"src": "1271:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1033_storage_ptr",
																		"typeString": "struct CountersUpgradeable.Counter storage pointer"
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1032,
																"src": "1271:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1080,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "1288:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1296:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1288:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1271:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1084,
														"nodeType": "ExpressionStatement",
														"src": "1271:26:8"
													}
												]
											}
										]
									},
									"id": 1087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1094:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1120:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "1104:23:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1033_storage_ptr",
													"typeString": "struct CountersUpgradeable.Counter"
												},
												"typeName": {
													"id": 1061,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1060,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1033,
														"src": "1104:7:8"
													},
													"referencedDeclaration": 1033,
													"src": "1104:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1033_storage_ptr",
														"typeString": "struct CountersUpgradeable.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:25:8"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1138:0:8"
									},
									"scope": 1101,
									"src": "1085:229:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "1369:35:8",
										"statements": [
											{
												"expression": {
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1093,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "1379:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1033_storage_ptr",
																"typeString": "struct CountersUpgradeable.Counter storage pointer"
															}
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1032,
														"src": "1379:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1396:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1379:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "1379:18:8"
											}
										]
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1329:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1351:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1335:23:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1033_storage_ptr",
													"typeString": "struct CountersUpgradeable.Counter"
												},
												"typeName": {
													"id": 1089,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1088,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1033,
														"src": "1335:7:8"
													},
													"referencedDeclaration": 1033,
													"src": "1335:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1033_storage_ptr",
														"typeString": "struct CountersUpgradeable.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1334:25:8"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1369:0:8"
									},
									"scope": 1101,
									"src": "1320:84:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1102,
							"src": "424:982:8",
							"usedErrors": []
						}
					],
					"src": "87:1320:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1113
						]
					},
					"id": 1114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1103,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1104,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1113,
							"linearizedBaseContracts": [
								1113
							],
							"name": "IERC165Upgradeable",
							"nameLocation": "415:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "440:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "812:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1106,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:9"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "855:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:6:9"
									},
									"scope": 1113,
									"src": "785:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1114,
							"src": "405:458:9",
							"usedErrors": []
						}
					],
					"src": "100:764:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
					"exportedSymbols": {
						"SafeMathUpgradeable": [
							1425
						]
					},
					"id": 1426,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMathUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1116,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:10",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1425,
							"linearizedBaseContracts": [
								1425
							],
							"name": "SafeMathUpgradeable",
							"nameLocation": "490:19:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "728:140:10",
										"statements": [
											{
												"id": 1146,
												"nodeType": "UncheckedBlock",
												"src": "738:124:10",
												"statements": [
													{
														"assignments": [
															1129
														],
														"declarations": [
															{
																"constant": false,
																"id": 1129,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "770:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1146,
																"src": "762:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1128,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "762:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1133,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1130,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "774:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1131,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "778:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "774:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "762:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1134,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "797:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1135,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "801:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "797:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1141,
														"nodeType": "IfStatement",
														"src": "793:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "812:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "819:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1139,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "811:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1127,
															"id": 1140,
															"nodeType": "Return",
															"src": "804:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "843:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1143,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1129,
																	"src": "849:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1144,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "842:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1127,
														"id": 1145,
														"nodeType": "Return",
														"src": "835:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "516:131:10",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "661:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "676:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "668:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "687:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "679:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "667:22:10"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "713:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1123,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "713:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "719:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "712:15:10"
									},
									"scope": 1425,
									"src": "652:216:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "1089:113:10",
										"statements": [
											{
												"id": 1174,
												"nodeType": "UncheckedBlock",
												"src": "1099:97:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1160,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "1127:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1161,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1151,
																"src": "1131:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1127:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1167,
														"nodeType": "IfStatement",
														"src": "1123:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1142:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1149:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1165,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1141:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1159,
															"id": 1166,
															"nodeType": "Return",
															"src": "1134:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1173:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1169,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1151,
																		"src": "1179:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1170,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1153,
																		"src": "1183:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1179:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1172,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1172:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1159,
														"id": 1173,
														"nodeType": "Return",
														"src": "1165:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "874:134:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1022:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1037:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "1029:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1048:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "1040:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:22:10"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "1074:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1155,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1074:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "1080:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1080:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:15:10"
									},
									"scope": 1425,
									"src": "1013:189:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1217,
										"nodeType": "Block",
										"src": "1426:417:10",
										"statements": [
											{
												"id": 1216,
												"nodeType": "UncheckedBlock",
												"src": "1436:401:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1188,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "1694:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1699:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1694:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1195,
														"nodeType": "IfStatement",
														"src": "1690:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1710:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1716:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1193,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1709:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1187,
															"id": 1194,
															"nodeType": "Return",
															"src": "1702:16:10"
														}
													},
													{
														"assignments": [
															1197
														],
														"declarations": [
															{
																"constant": false,
																"id": 1197,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1740:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1216,
																"src": "1732:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1196,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1732:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1201,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1198,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "1744:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1199,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "1748:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1744:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1732:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1202,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1197,
																	"src": "1767:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1203,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "1771:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1767:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1205,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "1776:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1767:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1211,
														"nodeType": "IfStatement",
														"src": "1763:33:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1787:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1794:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1209,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1786:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1187,
															"id": 1210,
															"nodeType": "Return",
															"src": "1779:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1818:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1213,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1197,
																	"src": "1824:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1214,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1817:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1187,
														"id": 1215,
														"nodeType": "Return",
														"src": "1810:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "1208:137:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1359:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1374:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "1366:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1385:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "1377:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1377:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1365:22:10"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "1411:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1411:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "1417:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1417:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1410:15:10"
									},
									"scope": 1425,
									"src": "1350:493:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "2068:114:10",
										"statements": [
											{
												"id": 1244,
												"nodeType": "UncheckedBlock",
												"src": "2078:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1230,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1223,
																"src": "2106:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2111:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2106:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1237,
														"nodeType": "IfStatement",
														"src": "2102:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2122:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2129:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1235,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2121:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1229,
															"id": 1236,
															"nodeType": "Return",
															"src": "2114:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2153:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1239,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1221,
																		"src": "2159:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1240,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1223,
																		"src": "2163:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2159:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1242,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2152:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1229,
														"id": 1243,
														"nodeType": "Return",
														"src": "2145:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1219,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:10",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2001:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2016:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "2008:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2027:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "2019:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:22:10"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "2053:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "2059:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:15:10"
									},
									"scope": 1425,
									"src": "1992:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1273,
										"nodeType": "Block",
										"src": "2417:114:10",
										"statements": [
											{
												"id": 1272,
												"nodeType": "UncheckedBlock",
												"src": "2427:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1258,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1251,
																"src": "2455:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2460:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2455:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1265,
														"nodeType": "IfStatement",
														"src": "2451:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2471:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2478:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1263,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2470:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1257,
															"id": 1264,
															"nodeType": "Return",
															"src": "2463:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2502:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1267,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1249,
																		"src": "2508:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1268,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "2512:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2508:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1270,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2501:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1257,
														"id": 1271,
														"nodeType": "Return",
														"src": "2494:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "2188:148:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2350:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2365:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "2357:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2376:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "2368:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2356:22:10"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "2402:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2402:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "2408:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2401:15:10"
									},
									"scope": 1425,
									"src": "2341:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "2833:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1284,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "2850:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1285,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "2854:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2850:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1283,
												"id": 1287,
												"nodeType": "Return",
												"src": "2843:12:10"
											}
										]
									},
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "2537:224:10",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2775:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2787:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "2779:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2798:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "2790:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2790:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2778:22:10"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "2824:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2824:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2823:9:10"
									},
									"scope": 1425,
									"src": "2766:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "3200:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1299,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "3217:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1300,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "3221:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3217:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1298,
												"id": 1302,
												"nodeType": "Return",
												"src": "3210:12:10"
											}
										]
									},
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "2868:260:10",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3142:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3154:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "3146:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3165:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "3157:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3157:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3145:22:10"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "3191:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3190:9:10"
									},
									"scope": 1425,
									"src": "3133:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "3543:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1314,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "3560:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1315,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "3564:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3560:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1313,
												"id": 1317,
												"nodeType": "Return",
												"src": "3553:12:10"
											}
										]
									},
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "3235:236:10",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3485:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3497:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "3489:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3508:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "3500:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3500:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3488:22:10"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "3534:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3534:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3533:9:10"
									},
									"scope": 1425,
									"src": "3476:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "3928:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1329,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "3945:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1330,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "3949:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3945:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1328,
												"id": 1332,
												"nodeType": "Return",
												"src": "3938:12:10"
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "3578:278:10",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3870:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3882:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3874:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3893:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3885:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3873:22:10"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3919:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:9:10"
									},
									"scope": 1425,
									"src": "3861:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "4477:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1344,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "4494:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1345,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "4498:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4494:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1343,
												"id": 1347,
												"nodeType": "Return",
												"src": "4487:12:10"
											}
										]
									},
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "3963:442:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4419:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4431:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "4423:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4442:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "4434:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4434:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4422:22:10"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "4468:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4468:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4467:9:10"
									},
									"scope": 1425,
									"src": "4410:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "5095:106:10",
										"statements": [
											{
												"id": 1372,
												"nodeType": "UncheckedBlock",
												"src": "5105:90:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1362,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "5137:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1363,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1352,
																		"src": "5142:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5137:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1365,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1356,
																	"src": "5145:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1361,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5129:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5129:29:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1367,
														"nodeType": "ExpressionStatement",
														"src": "5129:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1368,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1352,
																"src": "5179:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1369,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "5183:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5179:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1360,
														"id": 1371,
														"nodeType": "Return",
														"src": "5172:12:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "4512:453:10",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4979:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5000:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4992:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4992:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5019:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "5011:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5044:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "5030:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1355,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5030:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4982:80:10"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "5086:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5086:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5085:9:10"
									},
									"scope": 1425,
									"src": "4970:231:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1398,
										"nodeType": "Block",
										"src": "5810:105:10",
										"statements": [
											{
												"id": 1397,
												"nodeType": "UncheckedBlock",
												"src": "5820:89:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1387,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1379,
																		"src": "5852:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5856:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5852:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1390,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "5859:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1386,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5844:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5844:28:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1392,
														"nodeType": "ExpressionStatement",
														"src": "5844:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1393,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1377,
																"src": "5893:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1394,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "5897:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5893:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1385,
														"id": 1396,
														"nodeType": "Return",
														"src": "5886:12:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "5207:473:10",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5694:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5715:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "5707:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5707:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5734:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "5726:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5726:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5759:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "5745:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1380,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5745:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5697:80:10"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "5801:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5801:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5800:9:10"
									},
									"scope": 1425,
									"src": "5685:230:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "6686:105:10",
										"statements": [
											{
												"id": 1422,
												"nodeType": "UncheckedBlock",
												"src": "6696:89:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1412,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1404,
																		"src": "6728:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6732:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6728:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1415,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1406,
																	"src": "6735:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1411,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6720:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6720:28:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1417,
														"nodeType": "ExpressionStatement",
														"src": "6720:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1418,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1402,
																"src": "6769:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1419,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "6773:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6769:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1410,
														"id": 1421,
														"nodeType": "Return",
														"src": "6762:12:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "5921:635:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6570:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6591:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "6583:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6583:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6610:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "6602:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6635:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "6621:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1405,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6621:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6573:80:10"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "6677:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6677:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6676:9:10"
									},
									"scope": 1425,
									"src": "6561:230:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1426,
							"src": "482:6311:10",
							"usedErrors": []
						}
					],
					"src": "107:6687:10"
				},
				"id": 10
			},
			"LPStaking.sol": {
				"ast": {
					"absolutePath": "LPStaking.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							985
						],
						"ContextUpgradeable": [
							1027
						],
						"CountersUpgradeable": [
							1101
						],
						"IERC165Upgradeable": [
							1113
						],
						"IERC20Upgradeable": [
							402
						],
						"IERC721Upgradeable": [
							742
						],
						"IUNIV3POS": [
							1466
						],
						"Initializable": [
							265
						],
						"LPStakingV3": [
							3214
						],
						"OwnableUpgradeable": [
							123
						],
						"ReentrancyGuardUpgradeable": [
							324
						],
						"SafeERC20Upgradeable": [
							626
						],
						"SafeMathUpgradeable": [
							1425
						]
					},
					"id": 3215,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1427,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1428,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3215,
							"sourceUnit": 266,
							"src": "58:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1429,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3215,
							"sourceUnit": 124,
							"src": "134:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"id": 1430,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3215,
							"sourceUnit": 325,
							"src": "210:85:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"id": 1431,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3215,
							"sourceUnit": 403,
							"src": "296:79:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"id": 1432,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3215,
							"sourceUnit": 627,
							"src": "376:88:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
							"id": 1433,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3215,
							"sourceUnit": 1102,
							"src": "465:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
							"id": 1434,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3215,
							"sourceUnit": 1426,
							"src": "541:80:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
							"id": 1435,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3215,
							"sourceUnit": 743,
							"src": "622:81:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUNIV3POS",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1436,
								"nodeType": "StructuredDocumentation",
								"src": "705:220:11",
								"text": " @title LPStaking contract\n @author Ajitesh Mishra\n @notice This contract will store and manage staking at APR defined by owner\n @dev Store, calculate, collect and transefer stakes and rewards to end user"
							},
							"fullyImplemented": false,
							"id": 1466,
							"linearizedBaseContracts": [
								1466
							],
							"name": "IUNIV3POS",
							"nameLocation": "936:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "99fbab88",
									"id": 1465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "961:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "979:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "971:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:17:11"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1055:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1048:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1440,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "1048:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1082:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1074:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "1112:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1104:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1140:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1132:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1132:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1167:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1160:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1448,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1160:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1190:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1184:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1450,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1184:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1219:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1213:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1452,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1213:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1250:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1242:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1454,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "1281:24:11",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1273:32:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1273:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "1327:24:11",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1319:32:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "1373:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1365:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1460,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1365:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "1406:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1398:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1462,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1398:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1034:393:11"
									},
									"scope": 1466,
									"src": "952:476:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3215,
							"src": "926:504:11",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1467,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 265,
										"src": "1457:13:11"
									},
									"id": 1468,
									"nodeType": "InheritanceSpecifier",
									"src": "1457:13:11"
								},
								{
									"baseName": {
										"id": 1469,
										"name": "ReentrancyGuardUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 324,
										"src": "1472:26:11"
									},
									"id": 1470,
									"nodeType": "InheritanceSpecifier",
									"src": "1472:26:11"
								},
								{
									"baseName": {
										"id": 1471,
										"name": "OwnableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 123,
										"src": "1500:18:11"
									},
									"id": 1472,
									"nodeType": "InheritanceSpecifier",
									"src": "1500:18:11"
								}
							],
							"canonicalName": "LPStakingV3",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3214,
							"linearizedBaseContracts": [
								3214,
								123,
								1027,
								324,
								265
							],
							"name": "LPStakingV3",
							"nameLocation": "1442:11:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1475,
									"libraryName": {
										"id": 1473,
										"name": "SafeMathUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1425,
										"src": "1552:19:11"
									},
									"nodeType": "UsingForDirective",
									"src": "1546:38:11",
									"typeName": {
										"id": 1474,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1576:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1479,
									"libraryName": {
										"id": 1476,
										"name": "CountersUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1101,
										"src": "1595:19:11"
									},
									"nodeType": "UsingForDirective",
									"src": "1589:58:11",
									"typeName": {
										"id": 1478,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1477,
											"name": "CountersUpgradeable.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1033,
											"src": "1619:27:11"
										},
										"referencedDeclaration": 1033,
										"src": "1619:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1033_storage_ptr",
											"typeString": "struct CountersUpgradeable.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 1482,
									"mutability": "mutable",
									"name": "_depositIds",
									"nameLocation": "1689:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 3214,
									"src": "1653:47:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1033_storage",
										"typeString": "struct CountersUpgradeable.Counter"
									},
									"typeName": {
										"id": 1481,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1480,
											"name": "CountersUpgradeable.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1033,
											"src": "1653:27:11"
										},
										"referencedDeclaration": 1033,
										"src": "1653:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1033_storage_ptr",
											"typeString": "struct CountersUpgradeable.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1484,
									"mutability": "mutable",
									"name": "APRTime",
									"nameLocation": "1744:7:11",
									"nodeType": "VariableDeclaration",
									"scope": 3214,
									"src": "1728:23:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1483,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1728:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "110d458e",
									"id": 1486,
									"mutability": "mutable",
									"name": "onlyaddress",
									"nameLocation": "1835:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 3214,
									"src": "1820:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1485,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1820:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ad5c4648",
									"id": 1489,
									"mutability": "mutable",
									"name": "WETH",
									"nameLocation": "1877:4:11",
									"nodeType": "VariableDeclaration",
									"scope": 3214,
									"src": "1852:29:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 1488,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1487,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 402,
											"src": "1852:17:11"
										},
										"referencedDeclaration": 402,
										"src": "1852:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "LPStakingV3.stakeDetails",
									"id": 1508,
									"members": [
										{
											"constant": false,
											"id": 1491,
											"mutability": "mutable",
											"name": "depositId",
											"nameLocation": "1989:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 1508,
											"src": "1981:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1490,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1981:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1493,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "2029:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1508,
											"src": "2021:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1492,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2021:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1495,
											"mutability": "mutable",
											"name": "reward",
											"nameLocation": "2107:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1508,
											"src": "2099:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1494,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2099:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1497,
											"mutability": "mutable",
											"name": "APR",
											"nameLocation": "2192:3:11",
											"nodeType": "VariableDeclaration",
											"scope": 1508,
											"src": "2184:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1496,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2184:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1499,
											"mutability": "mutable",
											"name": "period",
											"nameLocation": "2251:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1508,
											"src": "2243:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1498,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2243:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1501,
											"mutability": "mutable",
											"name": "lastRewardCalculated",
											"nameLocation": "2296:20:11",
											"nodeType": "VariableDeclaration",
											"scope": 1508,
											"src": "2288:28:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1500,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2288:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1503,
											"mutability": "mutable",
											"name": "poolId",
											"nameLocation": "2359:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1508,
											"src": "2351:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1502,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2351:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1505,
											"mutability": "mutable",
											"name": "vestedFor",
											"nameLocation": "2392:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 1508,
											"src": "2384:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1504,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2384:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1507,
											"mutability": "mutable",
											"name": "NFTId",
											"nameLocation": "2429:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1508,
											"src": "2421:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1506,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2421:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "stakeDetails",
									"nameLocation": "1958:12:11",
									"nodeType": "StructDefinition",
									"scope": 3214,
									"src": "1951:492:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1511,
									"mutability": "mutable",
									"name": "uniV3",
									"nameLocation": "2459:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 3214,
									"src": "2449:15:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUNIV3POS_$1466",
										"typeString": "contract IUNIV3POS"
									},
									"typeName": {
										"id": 1510,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1509,
											"name": "IUNIV3POS",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1466,
											"src": "2449:9:11"
										},
										"referencedDeclaration": 1466,
										"src": "2449:9:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUNIV3POS_$1466",
											"typeString": "contract IUNIV3POS"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "LPStakingV3.interestRate",
									"id": 1516,
									"members": [
										{
											"constant": false,
											"id": 1513,
											"mutability": "mutable",
											"name": "period",
											"nameLocation": "2529:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1516,
											"src": "2521:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1512,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2521:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1515,
											"mutability": "mutable",
											"name": "APR",
											"nameLocation": "2553:3:11",
											"nodeType": "VariableDeclaration",
											"scope": 1516,
											"src": "2545:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1514,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2545:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "interestRate",
									"nameLocation": "2498:12:11",
									"nodeType": "StructDefinition",
									"scope": 3214,
									"src": "2491:72:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a32a66a7",
									"id": 1522,
									"mutability": "mutable",
									"name": "vestingAPRPerPool",
									"nameLocation": "2650:17:11",
									"nodeType": "VariableDeclaration",
									"scope": 3214,
									"src": "2595:72:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1521,
										"keyType": {
											"id": 1517,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2603:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2595:47:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 1520,
											"keyType": {
												"id": 1518,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2622:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "2614:27:11",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 1519,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2633:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1523,
										"nodeType": "StructuredDocumentation",
										"src": "2673:175:11",
										"text": "mapping to store current status for stakeHolder\n Explaination:\n  {\n      Staker: {\n           Pool: staking details\n      }\n  }"
									},
									"functionSelector": "c3d2c3c1",
									"id": 1527,
									"mutability": "mutable",
									"name": "tokenPools",
									"nameLocation": "2886:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 3214,
									"src": "2854:42:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1526,
										"keyType": {
											"id": 1524,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2862:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2854:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1525,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2873:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d6d68177",
									"id": 1534,
									"mutability": "mutable",
									"name": "deposits",
									"nameLocation": "2962:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 3214,
									"src": "2902:68:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails))"
									},
									"typeName": {
										"id": 1533,
										"keyType": {
											"id": 1528,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2910:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2902:52:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails))"
										},
										"valueType": {
											"id": 1532,
											"keyType": {
												"id": 1529,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2929:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "2921:32:11",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
												"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails)"
											},
											"valueType": {
												"id": 1531,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1530,
													"name": "stakeDetails",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1508,
													"src": "2940:12:11"
												},
												"referencedDeclaration": 1508,
												"src": "2940:12:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_stakeDetails_$1508_storage_ptr",
													"typeString": "struct LPStakingV3.stakeDetails"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e76ba191",
									"id": 1539,
									"mutability": "mutable",
									"name": "userDepositMap",
									"nameLocation": "3013:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 3214,
									"src": "2976:51:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 1538,
										"keyType": {
											"id": 1535,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2984:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2976:29:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueType": {
											"baseType": {
												"id": 1536,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2995:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1537,
											"nodeType": "ArrayTypeName",
											"src": "2995:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9aaab954",
									"id": 1544,
									"mutability": "mutable",
									"name": "depositDetails",
									"nameLocation": "3073:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 3214,
									"src": "3033:54:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
										"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails)"
									},
									"typeName": {
										"id": 1543,
										"keyType": {
											"id": 1540,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3041:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3033:32:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
											"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails)"
										},
										"valueType": {
											"id": 1542,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1541,
												"name": "stakeDetails",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1508,
												"src": "3052:12:11"
											},
											"referencedDeclaration": 1508,
											"src": "3052:12:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_stakeDetails_$1508_storage_ptr",
												"typeString": "struct LPStakingV3.stakeDetails"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "b4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed",
									"id": 1554,
									"name": "Staked",
									"nameLocation": "3114:6:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "3137:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "3121:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3153:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "3145:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3145:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"indexed": true,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "3177:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "3161:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3161:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "3194:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "3186:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3186:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:84:11"
									},
									"src": "3108:97:11"
								},
								{
									"anonymous": false,
									"eventSelector": "204fccf0d92ed8d48f204adb39b2e81e92bad0dedb93f5716ca9478cfb57de00",
									"id": 1564,
									"name": "Unstaked",
									"nameLocation": "3216:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "3241:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "3225:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3225:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3257:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "3249:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3249:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"indexed": true,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "3281:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "3265:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3265:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "3298:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "3290:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3290:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:84:11"
									},
									"src": "3210:99:11"
								},
								{
									"anonymous": false,
									"eventSelector": "812be816db82c66cd18ca8457005cd84689642d8ac4d38599cc6af444a2dc72a",
									"id": 1574,
									"name": "RewardClaimed",
									"nameLocation": "3320:13:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "3350:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "3334:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3334:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3366:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "3358:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3358:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"indexed": true,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "3390:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "3374:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "3407:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "3399:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3399:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3333:84:11"
									},
									"src": "3314:104:11"
								},
								{
									"anonymous": false,
									"eventSelector": "386d896e9bd972181cfb744681a2de8d2daab22884986fdc60c3947be36ca01b",
									"id": 1580,
									"name": "WETHDeposit",
									"nameLocation": "3429:11:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3457:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "3441:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3441:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3471:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "3463:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3463:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3440:38:11"
									},
									"src": "3423:56:11"
								},
								{
									"anonymous": false,
									"eventSelector": "34042597700906fd41b7ead5497c3bf88ef36150597ddd9193327a09f0604f66",
									"id": 1586,
									"name": "WETHWithdraw",
									"nameLocation": "3490:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3519:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "3503:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3503:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3533:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "3525:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3525:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3502:38:11"
									},
									"src": "3484:57:11"
								},
								{
									"anonymous": false,
									"eventSelector": "c9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba",
									"id": 1592,
									"name": "Harvest",
									"nameLocation": "3552:7:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3576:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "3560:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3560:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeReward",
												"nameLocation": "3590:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "3582:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3582:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3559:41:11"
									},
									"src": "3546:55:11"
								},
								{
									"canonicalName": "LPStakingV3.stakingPool",
									"id": 1603,
									"members": [
										{
											"constant": false,
											"id": 1594,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "3693:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1603,
											"src": "3685:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1593,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3685:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1596,
											"mutability": "mutable",
											"name": "reward",
											"nameLocation": "3744:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1603,
											"src": "3736:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1595,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3736:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1598,
											"mutability": "mutable",
											"name": "tvl",
											"nameLocation": "3795:3:11",
											"nodeType": "VariableDeclaration",
											"scope": 1603,
											"src": "3787:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1597,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3787:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1600,
											"mutability": "mutable",
											"name": "totalAllotedReward",
											"nameLocation": "3861:18:11",
											"nodeType": "VariableDeclaration",
											"scope": 1603,
											"src": "3853:26:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1599,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3853:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1602,
											"mutability": "mutable",
											"name": "totalClaimedReward",
											"nameLocation": "3961:18:11",
											"nodeType": "VariableDeclaration",
											"scope": 1603,
											"src": "3953:26:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1601,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3953:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "stakingPool",
									"nameLocation": "3663:11:11",
									"nodeType": "StructDefinition",
									"scope": 3214,
									"src": "3656:367:11",
									"visibility": "public"
								},
								{
									"canonicalName": "LPStakingV3.periodPool",
									"id": 1608,
									"members": [
										{
											"constant": false,
											"id": 1605,
											"mutability": "mutable",
											"name": "tvl",
											"nameLocation": "4067:3:11",
											"nodeType": "VariableDeclaration",
											"scope": 1608,
											"src": "4059:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1604,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4059:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1607,
											"mutability": "mutable",
											"name": "totalAllotedFeeReward",
											"nameLocation": "4088:21:11",
											"nodeType": "VariableDeclaration",
											"scope": 1608,
											"src": "4080:29:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1606,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4080:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "periodPool",
									"nameLocation": "4038:10:11",
									"nodeType": "StructDefinition",
									"scope": 3214,
									"src": "4031:85:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ac4afa38",
									"id": 1612,
									"mutability": "mutable",
									"name": "pools",
									"nameLocation": "4181:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 3214,
									"src": "4160:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
										"typeString": "struct LPStakingV3.stakingPool[]"
									},
									"typeName": {
										"baseType": {
											"id": 1610,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1609,
												"name": "stakingPool",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1603,
												"src": "4160:11:11"
											},
											"referencedDeclaration": 1603,
											"src": "4160:11:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_stakingPool_$1603_storage_ptr",
												"typeString": "struct LPStakingV3.stakingPool"
											}
										},
										"id": 1611,
										"nodeType": "ArrayTypeName",
										"src": "4160:13:11",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage_ptr",
											"typeString": "struct LPStakingV3.stakingPool[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c4b91c4d",
									"id": 1617,
									"mutability": "mutable",
									"name": "periodPoolMap",
									"nameLocation": "4265:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 3214,
									"src": "4227:51:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_periodPool_$1608_storage_$",
										"typeString": "mapping(uint256 => struct LPStakingV3.periodPool)"
									},
									"typeName": {
										"id": 1616,
										"keyType": {
											"id": 1613,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4235:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4227:30:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_periodPool_$1608_storage_$",
											"typeString": "mapping(uint256 => struct LPStakingV3.periodPool)"
										},
										"valueType": {
											"id": 1615,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1614,
												"name": "periodPool",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1608,
												"src": "4246:10:11"
											},
											"referencedDeclaration": 1608,
											"src": "4246:10:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_periodPool_$1608_storage_ptr",
												"typeString": "struct LPStakingV3.periodPool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1620,
									"mutability": "mutable",
									"name": "periods",
									"nameLocation": "4345:7:11",
									"nodeType": "VariableDeclaration",
									"scope": 3214,
									"src": "4335:17:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1618,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4335:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1619,
										"nodeType": "ArrayTypeName",
										"src": "4335:9:11",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "b187bd26",
									"id": 1622,
									"mutability": "mutable",
									"name": "isPaused",
									"nameLocation": "4424:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 3214,
									"src": "4412:20:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1621,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "4412:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "911ef508",
									"id": 1624,
									"mutability": "mutable",
									"name": "pausedTimestamp",
									"nameLocation": "4453:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 3214,
									"src": "4438:30:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1623,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4438:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "82a14459",
									"id": 1626,
									"mutability": "mutable",
									"name": "periodSum",
									"nameLocation": "4489:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 3214,
									"src": "4474:24:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1625,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4474:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ccd34cd5",
									"id": 1631,
									"mutability": "constant",
									"name": "PRECISION_FACTOR",
									"nameLocation": "4549:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 3214,
									"src": "4525:49:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1627,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4525:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 1630,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 1628,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4568:2:11",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "3138",
											"id": 1629,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4572:2:11",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"src": "4568:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "4711:91:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1637,
																"name": "_poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "4729:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1638,
																	"name": "pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1612,
																	"src": "4739:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
																		"typeString": "struct LPStakingV3.stakingPool storage ref[] storage ref"
																	}
																},
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4739:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4729:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e673a20506f6f6c20646f65736e277420657869737473",
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4753:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_34245cc1a8117d130cf3ae06ea398c818e4a18479d917b66513cbc71196f16bc",
																"typeString": "literal_string \"Staking: Pool doesn't exists\""
															},
															"value": "Staking: Pool doesn't exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_34245cc1a8117d130cf3ae06ea398c818e4a18479d917b66513cbc71196f16bc",
																"typeString": "literal_string \"Staking: Pool doesn't exists\""
															}
														],
														"id": 1636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4721:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4721:63:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1643,
												"nodeType": "ExpressionStatement",
												"src": "4721:63:11"
											},
											{
												"id": 1644,
												"nodeType": "PlaceholderStatement",
												"src": "4794:1:11"
											}
										]
									},
									"documentation": {
										"id": 1632,
										"nodeType": "StructuredDocumentation",
										"src": "4580:89:11",
										"text": " @dev Modifier to check if pool exists\n @param _poolId Pools's ID"
									},
									"id": 1646,
									"name": "poolExists",
									"nameLocation": "4683:10:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "4702:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "4694:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4694:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4693:17:11"
									},
									"src": "4674:128:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1657,
										"nodeType": "Block",
										"src": "4831:82:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1649,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1012,
																	"src": "4849:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4849:12:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1651,
																"name": "onlyaddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1486,
																"src": "4865:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4849:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420616363657373",
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4878:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_56c3d5165608fc2642a22e9651431c90fe76728e2826126a77738e167836cd16",
																"typeString": "literal_string \"invalid access\""
															},
															"value": "invalid access"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_56c3d5165608fc2642a22e9651431c90fe76728e2826126a77738e167836cd16",
																"typeString": "literal_string \"invalid access\""
															}
														],
														"id": 1648,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4841:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4841:54:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "4841:54:11"
											},
											{
												"id": 1656,
												"nodeType": "PlaceholderStatement",
												"src": "4905:1:11"
											}
										]
									},
									"id": 1658,
									"name": "onlyAddress",
									"nameLocation": "4817:11:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4828:2:11"
									},
									"src": "4808:105:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "5123:235:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1669,
														"name": "__Context_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "5133:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5133:16:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1671,
												"nodeType": "ExpressionStatement",
												"src": "5133:16:11"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1672,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "5159:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5159:16:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1674,
												"nodeType": "ExpressionStatement",
												"src": "5159:16:11"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1675,
														"name": "__ReentrancyGuard_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "5185:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5185:24:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1677,
												"nodeType": "ExpressionStatement",
												"src": "5185:24:11"
											},
											{
												"expression": {
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1678,
														"name": "periods",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1620,
														"src": "5228:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1679,
														"name": "_periods",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "5238:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "5228:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"id": 1681,
												"nodeType": "ExpressionStatement",
												"src": "5228:18:11"
											},
											{
												"expression": {
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1682,
														"name": "WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "5256:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1684,
																"name": "_feeToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1661,
																"src": "5281:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1683,
															"name": "IERC20Upgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "5263:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$402_$",
																"typeString": "type(contract IERC20Upgradeable)"
															}
														},
														"id": 1685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5263:28:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "5256:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 1687,
												"nodeType": "ExpressionStatement",
												"src": "5256:35:11"
											},
											{
												"expression": {
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1688,
														"name": "APRTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1484,
														"src": "5301:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "333635",
														"id": 1689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:8:11",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31536000_by_1",
															"typeString": "int_const 31536000"
														},
														"value": "365"
													},
													"src": "5301:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1691,
												"nodeType": "ExpressionStatement",
												"src": "5301:18:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1693,
															"name": "_periods",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "5342:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1692,
														"name": "setPeriodSum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "5329:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256[] memory)"
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5329:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1695,
												"nodeType": "ExpressionStatement",
												"src": "5329:22:11"
											}
										]
									},
									"documentation": {
										"id": 1659,
										"nodeType": "StructuredDocumentation",
										"src": "4919:90:11",
										"text": " @notice This method will be called once only by proxy contract to init."
									},
									"functionSelector": "e7272866",
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1667,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1666,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 167,
												"src": "5111:11:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5111:11:11"
										}
									],
									"name": "initialize",
									"nameLocation": "5023:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "_feeToken",
												"nameLocation": "5051:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "5043:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5043:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "_periods",
												"nameLocation": "5087:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "5070:25:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1662,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5070:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1663,
													"nodeType": "ArrayTypeName",
													"src": "5070:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5033:68:11"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5123:0:11"
									},
									"scope": 3214,
									"src": "5014:344:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1710,
										"nodeType": "Block",
										"src": "5413:90:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5431:19:11",
															"subExpression": {
																"baseExpression": {
																	"id": 1702,
																	"name": "tokenPools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1527,
																	"src": "5432:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1704,
																"indexExpression": {
																	"id": 1703,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1699,
																	"src": "5443:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5432:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464203a20746f6b656e20706f6f6c20616c7265616479206578697473",
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5452:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5bd56e6779313a5dd5c6d209b8de3e49e4c3e202e0cdfc1c45f06c2cc7fb7047",
																"typeString": "literal_string \"Add : token pool already exits\""
															},
															"value": "Add : token pool already exits"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5bd56e6779313a5dd5c6d209b8de3e49e4c3e202e0cdfc1c45f06c2cc7fb7047",
																"typeString": "literal_string \"Add : token pool already exits\""
															}
														],
														"id": 1701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5423:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5423:62:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1708,
												"nodeType": "ExpressionStatement",
												"src": "5423:62:11"
											},
											{
												"id": 1709,
												"nodeType": "PlaceholderStatement",
												"src": "5495:1:11"
											}
										]
									},
									"id": 1711,
									"name": "isUniqueTokenPool",
									"nameLocation": "5379:17:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "5405:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "5397:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5397:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5396:16:11"
									},
									"src": "5370:133:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1722,
										"nodeType": "Block",
										"src": "5567:36:11",
										"statements": [
											{
												"expression": {
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1718,
														"name": "onlyaddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1486,
														"src": "5577:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1719,
														"name": "_only",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "5591:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5577:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1721,
												"nodeType": "ExpressionStatement",
												"src": "5577:19:11"
											}
										]
									},
									"functionSelector": "a2234080",
									"id": 1723,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1716,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1715,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "5557:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5557:9:11"
										}
									],
									"name": "setOnlyAddress",
									"nameLocation": "5518:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "_only",
												"nameLocation": "5541:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "5533:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5533:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5532:15:11"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5567:0:11"
									},
									"scope": 3214,
									"src": "5509:94:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "5746:157:11",
										"statements": [
											{
												"expression": {
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1730,
														"name": "periodSum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "5756:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1731,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5768:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1733,
												"nodeType": "ExpressionStatement",
												"src": "5756:13:11"
											},
											{
												"body": {
													"id": 1758,
													"nodeType": "Block",
													"src": "5825:72:11",
													"statements": [
														{
															"expression": {
																"id": 1756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1745,
																	"name": "periodSum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1626,
																	"src": "5839:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1746,
																				"name": "_periods",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1727,
																				"src": "5852:8:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1748,
																			"indexExpression": {
																				"id": 1747,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1735,
																				"src": "5861:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5852:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5867:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5852:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"baseExpression": {
																			"id": 1752,
																			"name": "_periods",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1727,
																			"src": "5875:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1754,
																		"indexExpression": {
																			"id": 1753,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1735,
																			"src": "5884:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5875:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "5852:34:11",
																	"trueExpression": {
																		"hexValue": "31",
																		"id": 1751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5871:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5839:47:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1757,
															"nodeType": "ExpressionStatement",
															"src": "5839:47:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1738,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1735,
														"src": "5799:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1739,
															"name": "_periods",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "5803:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5803:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5799:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1759,
												"initializationExpression": {
													"assignments": [
														1735
													],
													"declarations": [
														{
															"constant": false,
															"id": 1735,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5792:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1759,
															"src": "5784:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1734,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5784:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1737,
													"initialValue": {
														"hexValue": "30",
														"id": 1736,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5796:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5784:13:11"
												},
												"loopExpression": {
													"expression": {
														"id": 1743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5820:3:11",
														"subExpression": {
															"id": 1742,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "5820:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1744,
													"nodeType": "ExpressionStatement",
													"src": "5820:3:11"
												},
												"nodeType": "ForStatement",
												"src": "5779:118:11"
											}
										]
									},
									"documentation": {
										"id": 1724,
										"nodeType": "StructuredDocumentation",
										"src": "5609:73:11",
										"text": " @dev This function is used to calculate sum of periods"
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setPeriodSum",
									"nameLocation": "5697:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "_periods",
												"nameLocation": "5727:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "5710:25:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1725,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5710:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1726,
													"nodeType": "ArrayTypeName",
													"src": "5710:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:27:11"
									},
									"returnParameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5746:0:11"
									},
									"scope": 3214,
									"src": "5688:215:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "6466:396:11",
										"statements": [
											{
												"expression": {
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1778,
															"name": "tokenPools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "6476:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1780,
														"indexExpression": {
															"id": 1779,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1764,
															"src": "6487:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6476:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6497:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6476:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1783,
												"nodeType": "ExpressionStatement",
												"src": "6476:25:11"
											},
											{
												"assignments": [
													1785
												],
												"declarations": [
													{
														"constant": false,
														"id": 1785,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "6519:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1842,
														"src": "6511:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1784,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6511:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1797,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1786,
																"name": "pools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "6527:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
																	"typeString": "struct LPStakingV3.stakingPool storage ref[] storage ref"
																}
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6527:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6542:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6527:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"expression": {
															"id": 1794,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "6565:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
																"typeString": "struct LPStakingV3.stakingPool storage ref[] storage ref"
															}
														},
														"id": 1795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6565:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6527:50:11",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1790,
																"name": "pools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "6546:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
																	"typeString": "struct LPStakingV3.stakingPool storage ref[] storage ref"
																}
															},
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6546:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6561:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "6546:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6511:66:11"
											},
											{
												"body": {
													"id": 1822,
													"nodeType": "Block",
													"src": "6666:95:11",
													"statements": [
														{
															"expression": {
																"id": 1820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1808,
																			"name": "vestingAPRPerPool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1522,
																			"src": "6680:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1814,
																		"indexExpression": {
																			"id": 1809,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1785,
																			"src": "6698:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6680:24:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1815,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1810,
																				"name": "_periodRates",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1770,
																				"src": "6705:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_interestRate_$1516_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct LPStakingV3.interestRate memory[] memory"
																				}
																			},
																			"id": 1812,
																			"indexExpression": {
																				"id": 1811,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1799,
																				"src": "6718:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6705:15:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_interestRate_$1516_memory_ptr",
																				"typeString": "struct LPStakingV3.interestRate memory"
																			}
																		},
																		"id": 1813,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "period",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1513,
																		"src": "6705:22:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6680:48:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1816,
																			"name": "_periodRates",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1770,
																			"src": "6731:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_interestRate_$1516_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct LPStakingV3.interestRate memory[] memory"
																			}
																		},
																		"id": 1818,
																		"indexExpression": {
																			"id": 1817,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1799,
																			"src": "6744:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6731:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_interestRate_$1516_memory_ptr",
																			"typeString": "struct LPStakingV3.interestRate memory"
																		}
																	},
																	"id": 1819,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "APR",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1515,
																	"src": "6731:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6680:70:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1821,
															"nodeType": "ExpressionStatement",
															"src": "6680:70:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1801,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "6636:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1802,
															"name": "_periodRates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "6640:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_interestRate_$1516_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct LPStakingV3.interestRate memory[] memory"
															}
														},
														"id": 1803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6640:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6636:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1823,
												"initializationExpression": {
													"assignments": [
														1799
													],
													"declarations": [
														{
															"constant": false,
															"id": 1799,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6633:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1823,
															"src": "6625:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1798,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6625:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1800,
													"nodeType": "VariableDeclarationStatement",
													"src": "6625:9:11"
												},
												"loopExpression": {
													"expression": {
														"id": 1806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6661:3:11",
														"subExpression": {
															"id": 1805,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1799,
															"src": "6661:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1807,
													"nodeType": "ExpressionStatement",
													"src": "6661:3:11"
												},
												"nodeType": "ForStatement",
												"src": "6620:141:11"
											},
											{
												"expression": {
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1824,
														"name": "uniV3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1511,
														"src": "6771:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUNIV3POS_$1466",
															"typeString": "contract IUNIV3POS"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1826,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1764,
																"src": "6789:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1825,
															"name": "IUNIV3POS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "6779:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUNIV3POS_$1466_$",
																"typeString": "type(contract IUNIV3POS)"
															}
														},
														"id": 1827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6779:17:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUNIV3POS_$1466",
															"typeString": "contract IUNIV3POS"
														}
													},
													"src": "6771:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUNIV3POS_$1466",
														"typeString": "contract IUNIV3POS"
													}
												},
												"id": 1829,
												"nodeType": "ExpressionStatement",
												"src": "6771:25:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1834,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1764,
																	"src": "6829:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1835,
																	"name": "_reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1766,
																	"src": "6837:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6846:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"hexValue": "30",
																	"id": 1837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6849:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"hexValue": "30",
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6852:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1833,
																"name": "stakingPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1603,
																"src": "6817:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_stakingPool_$1603_storage_ptr_$",
																	"typeString": "type(struct LPStakingV3.stakingPool storage pointer)"
																}
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6817:37:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakingPool_$1603_memory_ptr",
																"typeString": "struct LPStakingV3.stakingPool memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_stakingPool_$1603_memory_ptr",
																"typeString": "struct LPStakingV3.stakingPool memory"
															}
														],
														"expression": {
															"id": 1830,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "6806:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
																"typeString": "struct LPStakingV3.stakingPool storage ref[] storage ref"
															}
														},
														"id": 1832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6806:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage_ptr_$_t_struct$_stakingPool_$1603_storage_$returns$__$bound_to$_t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct LPStakingV3.stakingPool storage ref[] storage pointer,struct LPStakingV3.stakingPool storage ref)"
														}
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1841,
												"nodeType": "ExpressionStatement",
												"src": "6806:49:11"
											}
										]
									},
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "5909:393:11",
										"text": " @dev This function will create new pool, access type is onlyOwner\n @notice This Function will create new pool with the token address,\\\nreward address and the APR percentage.\n @param _token Staking token address for this pool. \n @param _reward Staking reward token address for this pool\n @param _periodRates APR percentage * 1000 for this pool."
									},
									"functionSelector": "88f67d77",
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1773,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1772,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "6430:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6430:9:11"
										},
										{
											"arguments": [
												{
													"id": 1775,
													"name": "_token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1764,
													"src": "6458:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1776,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1774,
												"name": "isUniqueTokenPool",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1711,
												"src": "6440:17:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6440:25:11"
										}
									],
									"name": "addPool",
									"nameLocation": "6316:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "6341:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "6333:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6333:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "_reward",
												"nameLocation": "6365:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "6357:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6357:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "_periodRates",
												"nameLocation": "6404:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "6382:34:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_interestRate_$1516_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct LPStakingV3.interestRate[]"
												},
												"typeName": {
													"baseType": {
														"id": 1768,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1767,
															"name": "interestRate",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1516,
															"src": "6382:12:11"
														},
														"referencedDeclaration": 1516,
														"src": "6382:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_interestRate_$1516_storage_ptr",
															"typeString": "struct LPStakingV3.interestRate"
														}
													},
													"id": 1769,
													"nodeType": "ArrayTypeName",
													"src": "6382:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_interestRate_$1516_storage_$dyn_storage_ptr",
														"typeString": "struct LPStakingV3.interestRate[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:99:11"
									},
									"returnParameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6466:0:11"
									},
									"scope": 3214,
									"src": "6307:555:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1864,
										"nodeType": "Block",
										"src": "6983:121:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7001:9:11",
															"subExpression": {
																"id": 1850,
																"name": "isPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1622,
																"src": "7002:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920506175736564",
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7012:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c27b890af59f93debcee566c8681d43e5506a0fccccb345a516229d92ea41ce6",
																"typeString": "literal_string \"Already Paused\""
															},
															"value": "Already Paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c27b890af59f93debcee566c8681d43e5506a0fccccb345a516229d92ea41ce6",
																"typeString": "literal_string \"Already Paused\""
															}
														],
														"id": 1849,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6993:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6993:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1854,
												"nodeType": "ExpressionStatement",
												"src": "6993:36:11"
											},
											{
												"expression": {
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1855,
														"name": "isPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1622,
														"src": "7039:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7050:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7039:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1858,
												"nodeType": "ExpressionStatement",
												"src": "7039:15:11"
											},
											{
												"expression": {
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1859,
														"name": "pausedTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1624,
														"src": "7064:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1860,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7082:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7082:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7064:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1863,
												"nodeType": "ExpressionStatement",
												"src": "7064:33:11"
											}
										]
									},
									"documentation": {
										"id": 1844,
										"nodeType": "StructuredDocumentation",
										"src": "6868:69:11",
										"text": " @dev This function allows owner to pause contract."
									},
									"functionSelector": "73f64499",
									"id": 1865,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1847,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1846,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "6973:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6973:9:11"
										}
									],
									"name": "PauseStaking",
									"nameLocation": "6951:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6963:2:11"
									},
									"returnParameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6983:0:11"
									},
									"scope": 3214,
									"src": "6942:162:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1885,
										"nodeType": "Block",
										"src": "7227:126:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1872,
															"name": "isPaused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "7245:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c7265616479204f7065726174696f6e616c",
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7255:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2f2fe437d167b994a3abb080f6cddd75667a646218c9befe653262b5c44e61c8",
																"typeString": "literal_string \"Already Operational\""
															},
															"value": "Already Operational"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2f2fe437d167b994a3abb080f6cddd75667a646218c9befe653262b5c44e61c8",
																"typeString": "literal_string \"Already Operational\""
															}
														],
														"id": 1871,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7237:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7237:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1875,
												"nodeType": "ExpressionStatement",
												"src": "7237:40:11"
											},
											{
												"expression": {
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1876,
														"name": "isPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1622,
														"src": "7287:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7298:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "7287:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1879,
												"nodeType": "ExpressionStatement",
												"src": "7287:16:11"
											},
											{
												"expression": {
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1880,
														"name": "pausedTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1624,
														"src": "7313:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1881,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7331:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7331:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7313:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1884,
												"nodeType": "ExpressionStatement",
												"src": "7313:33:11"
											}
										]
									},
									"documentation": {
										"id": 1866,
										"nodeType": "StructuredDocumentation",
										"src": "7110:70:11",
										"text": " @dev This function allows owner to resume contract."
									},
									"functionSelector": "e179b5c3",
									"id": 1886,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1869,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1868,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "7217:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "7217:9:11"
										}
									],
									"name": "ResumeStaking",
									"nameLocation": "7194:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7207:2:11"
									},
									"returnParameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7227:0:11"
									},
									"scope": 3214,
									"src": "7185:168:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1895,
										"nodeType": "Block",
										"src": "7642:36:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1892,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1612,
														"src": "7659:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
															"typeString": "struct LPStakingV3.stakingPool storage ref[] storage ref"
														}
													},
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "7659:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1891,
												"id": 1894,
												"nodeType": "Return",
												"src": "7652:19:11"
											}
										]
									},
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "7359:226:11",
										"text": " @dev This funtion will return the length of pools\\\nwhich will be used to loop and get pool details.\n @notice Get the length of pools and use it to loop for index.\n @return Length of pool."
									},
									"functionSelector": "081e3eda",
									"id": 1896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nameLocation": "7599:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7609:2:11"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "7633:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7633:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7632:9:11"
									},
									"scope": 3214,
									"src": "7590:88:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1937,
										"nodeType": "Block",
										"src": "8083:159:11",
										"statements": [
											{
												"body": {
													"id": 1935,
													"nodeType": "Block",
													"src": "8139:97:11",
													"statements": [
														{
															"expression": {
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1921,
																			"name": "vestingAPRPerPool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1522,
																			"src": "8153:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1927,
																		"indexExpression": {
																			"id": 1922,
																			"name": "_poolId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1899,
																			"src": "8171:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8153:26:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1928,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1923,
																				"name": "_periodRates",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1903,
																				"src": "8180:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_interestRate_$1516_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct LPStakingV3.interestRate memory[] memory"
																				}
																			},
																			"id": 1925,
																			"indexExpression": {
																				"id": 1924,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1912,
																				"src": "8193:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8180:15:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_interestRate_$1516_memory_ptr",
																				"typeString": "struct LPStakingV3.interestRate memory"
																			}
																		},
																		"id": 1926,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "period",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1513,
																		"src": "8180:22:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8153:50:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1929,
																			"name": "_periodRates",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1903,
																			"src": "8206:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_interestRate_$1516_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct LPStakingV3.interestRate memory[] memory"
																			}
																		},
																		"id": 1931,
																		"indexExpression": {
																			"id": 1930,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1912,
																			"src": "8219:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8206:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_interestRate_$1516_memory_ptr",
																			"typeString": "struct LPStakingV3.interestRate memory"
																		}
																	},
																	"id": 1932,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "APR",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1515,
																	"src": "8206:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8153:72:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1934,
															"nodeType": "ExpressionStatement",
															"src": "8153:72:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1914,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1912,
														"src": "8109:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1915,
															"name": "_periodRates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1903,
															"src": "8113:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_interestRate_$1516_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct LPStakingV3.interestRate memory[] memory"
															}
														},
														"id": 1916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8113:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8109:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1936,
												"initializationExpression": {
													"assignments": [
														1912
													],
													"declarations": [
														{
															"constant": false,
															"id": 1912,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8106:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1936,
															"src": "8098:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1911,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8098:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1913,
													"nodeType": "VariableDeclarationStatement",
													"src": "8098:9:11"
												},
												"loopExpression": {
													"expression": {
														"id": 1919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8134:3:11",
														"subExpression": {
															"id": 1918,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1912,
															"src": "8134:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1920,
													"nodeType": "ExpressionStatement",
													"src": "8134:3:11"
												},
												"nodeType": "ForStatement",
												"src": "8093:143:11"
											}
										]
									},
									"documentation": {
										"id": 1897,
										"nodeType": "StructuredDocumentation",
										"src": "7684:285:11",
										"text": " @dev This function allows owner to update APR for specific pool.\n @notice Let's you update the APR for this pool if you're current owner.\n @param _poolId pool's Id in which you want to update the APR.\n @param _periodRates New APR percentage * 1000."
									},
									"functionSelector": "0c756997",
									"id": 1938,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1906,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1905,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "8053:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "8053:9:11"
										},
										{
											"arguments": [
												{
													"id": 1908,
													"name": "_poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1899,
													"src": "8074:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1909,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1907,
												"name": "poolExists",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1646,
												"src": "8063:10:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "8063:19:11"
										}
									],
									"name": "updateAPR",
									"nameLocation": "7983:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "8001:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "7993:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7993:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "_periodRates",
												"nameLocation": "8032:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "8010:34:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_interestRate_$1516_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct LPStakingV3.interestRate[]"
												},
												"typeName": {
													"baseType": {
														"id": 1901,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1900,
															"name": "interestRate",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1516,
															"src": "8010:12:11"
														},
														"referencedDeclaration": 1516,
														"src": "8010:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_interestRate_$1516_storage_ptr",
															"typeString": "struct LPStakingV3.interestRate"
														}
													},
													"id": 1902,
													"nodeType": "ArrayTypeName",
													"src": "8010:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_interestRate_$1516_storage_$dyn_storage_ptr",
														"typeString": "struct LPStakingV3.interestRate[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7992:53:11"
									},
									"returnParameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8083:0:11"
									},
									"scope": 3214,
									"src": "7974:268:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1953,
										"nodeType": "Block",
										"src": "8328:59:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1947,
															"name": "vestingAPRPerPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "8345:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(uint256 => uint256))"
															}
														},
														"id": 1949,
														"indexExpression": {
															"id": 1948,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1940,
															"src": "8363:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8345:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1951,
													"indexExpression": {
														"id": 1950,
														"name": "_period",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1942,
														"src": "8372:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8345:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1946,
												"id": 1952,
												"nodeType": "Return",
												"src": "8338:42:11"
											}
										]
									},
									"functionSelector": "1ee7f3c4",
									"id": 1954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAPR",
									"nameLocation": "8257:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "8272:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "8264:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8264:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "_period",
												"nameLocation": "8289:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "8281:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8281:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8263:34:11"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "8319:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8319:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8318:9:11"
									},
									"scope": 3214,
									"src": "8248:139:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2002,
										"nodeType": "Block",
										"src": "8820:527:11",
										"statements": [
											{
												"assignments": [
													1969
												],
												"declarations": [
													{
														"constant": false,
														"id": 1969,
														"mutability": "mutable",
														"name": "rewardToken",
														"nameLocation": "8883:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 2002,
														"src": "8865:29:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
															"typeString": "contract IERC20Upgradeable"
														},
														"typeName": {
															"id": 1968,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1967,
																"name": "IERC20Upgradeable",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 402,
																"src": "8865:17:11"
															},
															"referencedDeclaration": 402,
															"src": "8865:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1976,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1971,
																	"name": "pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1612,
																	"src": "8915:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
																		"typeString": "struct LPStakingV3.stakingPool storage ref[] storage ref"
																	}
																},
																"id": 1973,
																"indexExpression": {
																	"id": 1972,
																	"name": "_poolId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1957,
																	"src": "8921:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8915:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stakingPool_$1603_storage",
																	"typeString": "struct LPStakingV3.stakingPool storage ref"
																}
															},
															"id": 1974,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "reward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1596,
															"src": "8915:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1970,
														"name": "IERC20Upgradeable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "8897:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$402_$",
															"typeString": "type(contract IERC20Upgradeable)"
														}
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8897:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8865:72:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1978,
																		"name": "pools",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1612,
																		"src": "9026:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
																			"typeString": "struct LPStakingV3.stakingPool storage ref[] storage ref"
																		}
																	},
																	"id": 1980,
																	"indexExpression": {
																		"id": 1979,
																		"name": "_poolId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1957,
																		"src": "9032:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9026:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stakingPool_$1603_storage",
																		"typeString": "struct LPStakingV3.stakingPool storage ref"
																	}
																},
																"id": 1981,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalAllotedReward",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1600,
																"src": "9026:33:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1982,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1959,
																"src": "9063:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9026:43:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e673a20616d6f756e74204d757374206265206c657373207468616e206f7220657175616c20746f20617661696c61626c652072657761726473",
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9083:65:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bb26fa751fcadf1ba3ad81429e3b128f919183d07cbf6db0563974ab6716c11b",
																"typeString": "literal_string \"Staking: amount Must be less than or equal to available rewards\""
															},
															"value": "Staking: amount Must be less than or equal to available rewards"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bb26fa751fcadf1ba3ad81429e3b128f919183d07cbf6db0563974ab6716c11b",
																"typeString": "literal_string \"Staking: amount Must be less than or equal to available rewards\""
															}
														],
														"id": 1977,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9005:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9005:153:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1986,
												"nodeType": "ExpressionStatement",
												"src": "9005:153:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1990,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9232:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9232:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1992,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1959,
															"src": "9244:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1987,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1969,
															"src": "9211:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 1989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "9211:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9211:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1994,
												"nodeType": "ExpressionStatement",
												"src": "9211:40:11"
											},
											{
												"expression": {
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1995,
																"name": "pools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "9297:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
																	"typeString": "struct LPStakingV3.stakingPool storage ref[] storage ref"
																}
															},
															"id": 1997,
															"indexExpression": {
																"id": 1996,
																"name": "_poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1957,
																"src": "9303:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9297:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakingPool_$1603_storage",
																"typeString": "struct LPStakingV3.stakingPool storage ref"
															}
														},
														"id": 1998,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalAllotedReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1600,
														"src": "9297:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1999,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1959,
														"src": "9334:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9297:43:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2001,
												"nodeType": "ExpressionStatement",
												"src": "9297:43:11"
											}
										]
									},
									"documentation": {
										"id": 1955,
										"nodeType": "StructuredDocumentation",
										"src": "8393:320:11",
										"text": " @dev This funciton allows owner to withdraw allotted reward amount from this contract.\n @notice Let's you withdraw reward fund in this contract.\n @param _poolId pool's Id in which you want to withdraw this reward.\n @param amount amount to be withdraw from contract to owner's wallet."
									},
									"functionSelector": "a54c83f6",
									"id": 2003,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1962,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1961,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "8790:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "8790:9:11"
										},
										{
											"arguments": [
												{
													"id": 1964,
													"name": "_poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1957,
													"src": "8811:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1965,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1963,
												"name": "poolExists",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1646,
												"src": "8800:10:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "8800:19:11"
										}
									],
									"name": "withdrawRewardfromPool",
									"nameLocation": "8727:22:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "8758:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "8750:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8750:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8775:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "8767:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8767:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8749:33:11"
									},
									"returnParameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8820:0:11"
									},
									"scope": 3214,
									"src": "8718:629:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2060,
										"nodeType": "Block",
										"src": "9767:492:11",
										"statements": [
											{
												"assignments": [
													2018
												],
												"declarations": [
													{
														"constant": false,
														"id": 2018,
														"mutability": "mutable",
														"name": "rewardToken",
														"nameLocation": "9830:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 2060,
														"src": "9812:29:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
															"typeString": "contract IERC20Upgradeable"
														},
														"typeName": {
															"id": 2017,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2016,
																"name": "IERC20Upgradeable",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 402,
																"src": "9812:17:11"
															},
															"referencedDeclaration": 402,
															"src": "9812:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2025,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 2020,
																	"name": "pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1612,
																	"src": "9862:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
																		"typeString": "struct LPStakingV3.stakingPool storage ref[] storage ref"
																	}
																},
																"id": 2022,
																"indexExpression": {
																	"id": 2021,
																	"name": "_poolId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2006,
																	"src": "9868:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9862:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stakingPool_$1603_storage",
																	"typeString": "struct LPStakingV3.stakingPool storage ref"
																}
															},
															"id": 2023,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "reward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1596,
															"src": "9862:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2019,
														"name": "IERC20Upgradeable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "9844:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$402_$",
															"typeString": "type(contract IERC20Upgradeable)"
														}
													},
													"id": 2024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9844:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9812:72:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2029,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9982:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9982:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2033,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "10002:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																					"typeString": "contract LPStakingV3"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																					"typeString": "contract LPStakingV3"
																				}
																			],
																			"id": 2032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9994:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2031,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9994:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9994:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2027,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2018,
																		"src": "9960:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	},
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "9960:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 2035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9960:48:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2036,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2008,
																"src": "10012:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9960:58:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e673a204d75737420616c6c6f77205370656e64696e67",
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10020:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c12b94a872bad1d0966bdf5772fd92a84446ef64b59b5e232f639364f8b6ba5",
																"typeString": "literal_string \"Staking: Must allow Spending\""
															},
															"value": "Staking: Must allow Spending"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c12b94a872bad1d0966bdf5772fd92a84446ef64b59b5e232f639364f8b6ba5",
																"typeString": "literal_string \"Staking: Must allow Spending\""
															}
														],
														"id": 2026,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9952:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9952:99:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2040,
												"nodeType": "ExpressionStatement",
												"src": "9952:99:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2044,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10129:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10129:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2048,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10149:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																		"typeString": "contract LPStakingV3"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																		"typeString": "contract LPStakingV3"
																	}
																],
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10141:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2046,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10141:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10141:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2050,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "10156:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2041,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "10104:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 401,
														"src": "10104:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10104:59:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2052,
												"nodeType": "ExpressionStatement",
												"src": "10104:59:11"
											},
											{
												"expression": {
													"id": 2058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2053,
																"name": "pools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "10209:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
																	"typeString": "struct LPStakingV3.stakingPool storage ref[] storage ref"
																}
															},
															"id": 2055,
															"indexExpression": {
																"id": 2054,
																"name": "_poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2006,
																"src": "10215:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10209:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakingPool_$1603_storage",
																"typeString": "struct LPStakingV3.stakingPool storage ref"
															}
														},
														"id": 2056,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalAllotedReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1600,
														"src": "10209:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2057,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2008,
														"src": "10246:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10209:43:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2059,
												"nodeType": "ExpressionStatement",
												"src": "10209:43:11"
											}
										]
									},
									"documentation": {
										"id": 2004,
										"nodeType": "StructuredDocumentation",
										"src": "9353:314:11",
										"text": " @dev This funciton allows owner to add more reward amount to  this contract.\n @notice Let's you allot more reward fund in this contract.\n @param _poolId pool's Id in which you want to add this reward.\n @param amount amount to be transfered from owner's wallet to this contract."
									},
									"functionSelector": "f8ce1f31",
									"id": 2061,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2011,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2010,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "9737:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "9737:9:11"
										},
										{
											"arguments": [
												{
													"id": 2013,
													"name": "_poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2006,
													"src": "9758:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2014,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2012,
												"name": "poolExists",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1646,
												"src": "9747:10:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "9747:19:11"
										}
									],
									"name": "addRewardToPool",
									"nameLocation": "9681:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "9705:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "9697:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9697:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9722:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "9714:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9714:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9696:33:11"
									},
									"returnParameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9767:0:11"
									},
									"scope": 3214,
									"src": "9672:587:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2149,
										"nodeType": "Block",
										"src": "10446:508:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2072,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2064,
																"src": "10464:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10473:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10464:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6c6c656374204665653a20416d6f756e74206d757374206265203e2030",
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10476:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e725af0f6d63e1fd582e534b48be44b218b395440fae54ec76376eeaaee842d6",
																"typeString": "literal_string \"Collect Fee: Amount must be > 0\""
															},
															"value": "Collect Fee: Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e725af0f6d63e1fd582e534b48be44b218b395440fae54ec76376eeaaee842d6",
																"typeString": "literal_string \"Collect Fee: Amount must be > 0\""
															}
														],
														"id": 2071,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10456:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10456:54:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2077,
												"nodeType": "ExpressionStatement",
												"src": "10456:54:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2081,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "10538:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10538:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2085,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10560:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																		"typeString": "contract LPStakingV3"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																		"typeString": "contract LPStakingV3"
																	}
																],
																"id": 2084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10552:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2083,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10552:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10552:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2087,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "10567:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2078,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "10520:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 401,
														"src": "10520:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10520:54:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2089,
												"nodeType": "ExpressionStatement",
												"src": "10520:54:11"
											},
											{
												"body": {
													"id": 2141,
													"nodeType": "Block",
													"src": "10630:270:11",
													"statements": [
														{
															"expression": {
																"id": 2139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 2101,
																			"name": "periodPoolMap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1617,
																			"src": "10644:13:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_periodPool_$1608_storage_$",
																				"typeString": "mapping(uint256 => struct LPStakingV3.periodPool storage ref)"
																			}
																		},
																		"id": 2105,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2102,
																				"name": "periods",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1620,
																				"src": "10658:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																					"typeString": "uint256[] storage ref"
																				}
																			},
																			"id": 2104,
																			"indexExpression": {
																				"id": 2103,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2091,
																				"src": "10666:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10658:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10644:25:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_periodPool_$1608_storage",
																			"typeString": "struct LPStakingV3.periodPool storage ref"
																		}
																	},
																	"id": 2106,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "totalAllotedFeeReward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1607,
																	"src": "10644:47:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 2107,
																				"name": "periods",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1620,
																				"src": "10695:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																					"typeString": "uint256[] storage ref"
																				}
																			},
																			"id": 2109,
																			"indexExpression": {
																				"id": 2108,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2091,
																				"src": "10703:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10695:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10709:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "10695:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2134,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2131,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"components": [
																										{
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 2128,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"baseExpression": {
																													"id": 2124,
																													"name": "periods",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1620,
																													"src": "10817:7:11",
																													"typeDescriptions": {
																														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																														"typeString": "uint256[] storage ref"
																													}
																												},
																												"id": 2126,
																												"indexExpression": {
																													"id": 2125,
																													"name": "i",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 2091,
																													"src": "10825:1:11",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "10817:10:11",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "*",
																											"rightExpression": {
																												"id": 2127,
																												"name": "PRECISION_FACTOR",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1631,
																												"src": "10830:16:11",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "10817:29:11",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"id": 2129,
																									"isConstant": false,
																									"isInlineArray": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "TupleExpression",
																									"src": "10816:31:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 2130,
																									"name": "periodSum",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1626,
																									"src": "10850:9:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "10816:43:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2132,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "10815:45:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2133,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2064,
																						"src": "10863:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10815:54:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2135,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "10814:56:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2136,
																			"name": "PRECISION_FACTOR",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1631,
																			"src": "10873:16:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10814:75:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "10695:194:11",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2120,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2117,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"components": [
																										{
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 2114,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"leftExpression": {
																												"hexValue": "31",
																												"id": 2112,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "10732:1:11",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_1_by_1",
																													"typeString": "int_const 1"
																												},
																												"value": "1"
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "*",
																											"rightExpression": {
																												"id": 2113,
																												"name": "PRECISION_FACTOR",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1631,
																												"src": "10736:16:11",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "10732:20:11",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"id": 2115,
																									"isConstant": false,
																									"isInlineArray": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "TupleExpression",
																									"src": "10731:22:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 2116,
																									"name": "periodSum",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1626,
																									"src": "10756:9:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "10731:34:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2118,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "10730:36:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2119,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2064,
																						"src": "10769:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10730:45:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2121,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "10729:47:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2122,
																			"name": "PRECISION_FACTOR",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1631,
																			"src": "10779:16:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10729:66:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10644:245:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2140,
															"nodeType": "ExpressionStatement",
															"src": "10644:245:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2094,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2091,
														"src": "10605:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2095,
															"name": "periods",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "10609:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10609:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10605:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2142,
												"initializationExpression": {
													"assignments": [
														2091
													],
													"declarations": [
														{
															"constant": false,
															"id": 2091,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10598:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 2142,
															"src": "10590:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2090,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10590:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2093,
													"initialValue": {
														"hexValue": "30",
														"id": 2092,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10602:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10590:13:11"
												},
												"loopExpression": {
													"expression": {
														"id": 2099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10625:3:11",
														"subExpression": {
															"id": 2098,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2091,
															"src": "10625:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2100,
													"nodeType": "ExpressionStatement",
													"src": "10625:3:11"
												},
												"nodeType": "ForStatement",
												"src": "10585:315:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2144,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "10926:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10926:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2146,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "10940:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2143,
														"name": "WETHDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "10914:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10914:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2148,
												"nodeType": "EmitStatement",
												"src": "10909:38:11"
											}
										]
									},
									"documentation": {
										"id": 2062,
										"nodeType": "StructuredDocumentation",
										"src": "10265:101:11",
										"text": " @notice Receive WETH Fee Deposit only admin\n @param amount to deposit"
									},
									"functionSelector": "e7c928b1",
									"id": 2150,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2067,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2066,
												"name": "onlyAddress",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1658,
												"src": "10421:11:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "10421:11:11"
										},
										{
											"id": 2069,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2068,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 318,
												"src": "10433:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "10433:12:11"
										}
									],
									"name": "receiveWETHFee",
									"nameLocation": "10381:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10404:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "10396:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:16:11"
									},
									"returnParameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10446:0:11"
									},
									"scope": 3214,
									"src": "10372:582:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2186,
										"nodeType": "Block",
										"src": "11119:194:11",
										"statements": [
											{
												"assignments": [
													2159
												],
												"declarations": [
													{
														"constant": false,
														"id": 2159,
														"mutability": "mutable",
														"name": "accMarketFee",
														"nameLocation": "11137:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 2186,
														"src": "11129:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2158,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11129:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2167,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2164,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11175:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																		"typeString": "contract LPStakingV3"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																		"typeString": "contract LPStakingV3"
																	}
																],
																"id": 2163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11167:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2162,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11167:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11167:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2160,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "11152:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 359,
														"src": "11152:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11152:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11129:52:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2173,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11217:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																		"typeString": "contract LPStakingV3"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																		"typeString": "contract LPStakingV3"
																	}
																],
																"id": 2172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11209:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2171,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11209:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11209:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2175,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "11224:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11224:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2177,
															"name": "accMarketFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2159,
															"src": "11238:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2168,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "11191:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 401,
														"src": "11191:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11191:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2179,
												"nodeType": "ExpressionStatement",
												"src": "11191:60:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2181,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "11279:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11279:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2183,
															"name": "accMarketFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2159,
															"src": "11293:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2180,
														"name": "WETHWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "11266:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11266:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2185,
												"nodeType": "EmitStatement",
												"src": "11261:45:11"
											}
										]
									},
									"documentation": {
										"id": 2151,
										"nodeType": "StructuredDocumentation",
										"src": "10960:92:11",
										"text": " @dev This function is used to withdraw WETH from contract from Admin only"
									},
									"functionSelector": "2c86714c",
									"id": 2187,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2154,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2153,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "11096:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "11096:9:11"
										},
										{
											"id": 2156,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2155,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 318,
												"src": "11106:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "11106:12:11"
										}
									],
									"name": "AdminWETHWithdraw",
									"nameLocation": "11067:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11084:2:11"
									},
									"returnParameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11119:0:11"
									},
									"scope": 3214,
									"src": "11058:255:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2306,
										"nodeType": "Block",
										"src": "11705:1246:11",
										"statements": [
											{
												"assignments": [
													2201
												],
												"declarations": [
													{
														"constant": false,
														"id": 2201,
														"mutability": "mutable",
														"name": "stakeDetail",
														"nameLocation": "11735:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 2306,
														"src": "11715:31:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
															"typeString": "struct LPStakingV3.stakeDetails"
														},
														"typeName": {
															"id": 2200,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2199,
																"name": "stakeDetails",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1508,
																"src": "11715:12:11"
															},
															"referencedDeclaration": 1508,
															"src": "11715:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeDetails_$1508_storage_ptr",
																"typeString": "struct LPStakingV3.stakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2217,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2202,
															"name": "_stakeHolder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2190,
															"src": "11749:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11773:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11765:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2203,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11765:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11765:10:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "11749:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"baseExpression": {
															"id": 2213,
															"name": "depositDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "11833:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
																"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
															}
														},
														"id": 2215,
														"indexExpression": {
															"id": 2214,
															"name": "_dId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "11848:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11833:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
															"typeString": "struct LPStakingV3.stakeDetails storage ref"
														}
													},
													"id": 2216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11749:104:11",
													"trueExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 2208,
																"name": "deposits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1534,
																"src": "11790:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails storage ref))"
																}
															},
															"id": 2210,
															"indexExpression": {
																"id": 2209,
																"name": "_stakeHolder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2190,
																"src": "11799:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11790:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
																"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
															}
														},
														"id": 2212,
														"indexExpression": {
															"id": 2211,
															"name": "_dId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "11813:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11790:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
															"typeString": "struct LPStakingV3.stakeDetails storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stakeDetails_$1508_storage_ptr",
														"typeString": "struct LPStakingV3.stakeDetails storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11715:138:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2218,
															"name": "stakeDetail",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2201,
															"src": "11868:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																"typeString": "struct LPStakingV3.stakeDetails memory"
															}
														},
														"id": 2219,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "stake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1493,
														"src": "11868:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11888:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11868:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2304,
													"nodeType": "Block",
													"src": "12910:35:11",
													"statements": [
														{
															"expression": {
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2300,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2197,
																	"src": "12924:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12933:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12924:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2303,
															"nodeType": "ExpressionStatement",
															"src": "12924:10:11"
														}
													]
												},
												"id": 2305,
												"nodeType": "IfStatement",
												"src": "11864:1081:11",
												"trueBody": {
													"id": 2299,
													"nodeType": "Block",
													"src": "11891:1013:11",
													"statements": [
														{
															"condition": {
																"id": 2222,
																"name": "isPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1622,
																"src": "12166:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2297,
																"nodeType": "Block",
																"src": "12606:288:11",
																"statements": [
																	{
																		"assignments": [
																			2261
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2261,
																				"mutability": "mutable",
																				"name": "APR",
																				"nameLocation": "12632:3:11",
																				"nodeType": "VariableDeclaration",
																				"scope": 2297,
																				"src": "12624:11:11",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2260,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "12624:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2271,
																		"initialValue": {
																			"condition": {
																				"id": 2262,
																				"name": "isProrata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2194,
																				"src": "12638:9:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"expression": {
																					"id": 2268,
																					"name": "stakeDetail",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2201,
																					"src": "12682:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																						"typeString": "struct LPStakingV3.stakeDetails memory"
																					}
																				},
																				"id": 2269,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "APR",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1497,
																				"src": "12682:15:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "12638:59:11",
																			"trueExpression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2264,
																							"name": "stakeDetail",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2201,
																							"src": "12657:11:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																								"typeString": "struct LPStakingV3.stakeDetails memory"
																							}
																						},
																						"id": 2265,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "poolId",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1503,
																						"src": "12657:18:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 2266,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12677:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 2263,
																					"name": "getAPR",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1954,
																					"src": "12650:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) view returns (uint256)"
																					}
																				},
																				"id": 2267,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12650:29:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12624:73:11"
																	},
																	{
																		"expression": {
																			"id": 2295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2272,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2197,
																				"src": "12715:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"hexValue": "31303030",
																								"id": 2292,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "12856:4:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1000_by_1",
																									"typeString": "int_const 1000"
																								},
																								"value": "1000"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_1000_by_1",
																									"typeString": "int_const 1000"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "313030",
																										"id": 2289,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12847:3:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_100_by_1",
																											"typeString": "int_const 100"
																										},
																										"value": "100"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_100_by_1",
																											"typeString": "int_const 100"
																										}
																									],
																									"expression": {
																										"id": 2287,
																										"name": "APRTime",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1484,
																										"src": "12835:7:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 2288,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1319,
																									"src": "12835:11:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 2290,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12835:16:11",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2291,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1319,
																							"src": "12835:20:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 2293,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "12835:26:11",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"expression": {
																											"id": 2282,
																											"name": "stakeDetail",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2201,
																											"src": "12775:11:11",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																												"typeString": "struct LPStakingV3.stakeDetails memory"
																											}
																										},
																										"id": 2283,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "lastRewardCalculated",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1501,
																										"src": "12775:32:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"expression": {
																											"id": 2279,
																											"name": "block",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967292,
																											"src": "12755:5:11",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_block",
																												"typeString": "block"
																											}
																										},
																										"id": 2280,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "timestamp",
																										"nodeType": "MemberAccess",
																										"src": "12755:15:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 2281,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sub",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1304,
																									"src": "12755:19:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 2284,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12755:53:11",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"id": 2276,
																										"name": "APR",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2261,
																										"src": "12746:3:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"expression": {
																											"id": 2273,
																											"name": "stakeDetail",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2201,
																											"src": "12724:11:11",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																												"typeString": "struct LPStakingV3.stakeDetails memory"
																											}
																										},
																										"id": 2274,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "stake",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1493,
																										"src": "12724:17:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 2275,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1319,
																									"src": "12724:21:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 2277,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12724:26:11",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2278,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1319,
																							"src": "12724:30:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 2285,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "12724:85:11",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2286,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "div",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1334,
																					"src": "12724:89:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2294,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12724:155:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12715:164:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2296,
																		"nodeType": "ExpressionStatement",
																		"src": "12715:164:11"
																	}
																]
															},
															"id": 2298,
															"nodeType": "IfStatement",
															"src": "12162:732:11",
															"trueBody": {
																"id": 2259,
																"nodeType": "Block",
																"src": "12176:424:11",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2223,
																					"name": "stakeDetail",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2201,
																					"src": "12198:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																						"typeString": "struct LPStakingV3.stakeDetails memory"
																					}
																				},
																				"id": 2224,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "lastRewardCalculated",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1501,
																				"src": "12198:32:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 2225,
																				"name": "pausedTimestamp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1624,
																				"src": "12233:15:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12198:50:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 2257,
																			"nodeType": "Block",
																			"src": "12307:279:11",
																			"statements": [
																				{
																					"expression": {
																						"id": 2255,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 2232,
																							"name": "reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2197,
																							"src": "12329:6:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"hexValue": "31303030",
																											"id": 2252,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "12561:4:11",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1000_by_1",
																												"typeString": "int_const 1000"
																											},
																											"value": "1000"
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_rational_1000_by_1",
																												"typeString": "int_const 1000"
																											}
																										],
																										"expression": {
																											"arguments": [
																												{
																													"hexValue": "313030",
																													"id": 2249,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "12552:3:11",
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_100_by_1",
																														"typeString": "int_const 100"
																													},
																													"value": "100"
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_rational_100_by_1",
																														"typeString": "int_const 100"
																													}
																												],
																												"expression": {
																													"id": 2247,
																													"name": "APRTime",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1484,
																													"src": "12540:7:11",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"id": 2248,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "mul",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 1319,
																												"src": "12540:11:11",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																													"typeString": "function (uint256,uint256) pure returns (uint256)"
																												}
																											},
																											"id": 2250,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "12540:16:11",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 2251,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1319,
																										"src": "12540:20:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 2253,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "12540:26:11",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"expression": {
																														"id": 2242,
																														"name": "stakeDetail",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2201,
																														"src": "12476:11:11",
																														"typeDescriptions": {
																															"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																															"typeString": "struct LPStakingV3.stakeDetails memory"
																														}
																													},
																													"id": 2243,
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "lastRewardCalculated",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1501,
																													"src": "12476:32:11",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												],
																												"expression": {
																													"id": 2240,
																													"name": "pausedTimestamp",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1624,
																													"src": "12456:15:11",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"id": 2241,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "sub",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 1304,
																												"src": "12456:19:11",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																													"typeString": "function (uint256,uint256) pure returns (uint256)"
																												}
																											},
																											"id": 2244,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "12456:53:11",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"arguments": [
																												{
																													"expression": {
																														"id": 2236,
																														"name": "stakeDetail",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2201,
																														"src": "12410:11:11",
																														"typeDescriptions": {
																															"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																															"typeString": "struct LPStakingV3.stakeDetails memory"
																														}
																													},
																													"id": 2237,
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "APR",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1497,
																													"src": "12410:15:11",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												],
																												"expression": {
																													"expression": {
																														"id": 2233,
																														"name": "stakeDetail",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2201,
																														"src": "12338:11:11",
																														"typeDescriptions": {
																															"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																															"typeString": "struct LPStakingV3.stakeDetails memory"
																														}
																													},
																													"id": 2234,
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "stake",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1493,
																													"src": "12338:42:11",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"id": 2235,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "mul",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 1319,
																												"src": "12338:71:11",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																													"typeString": "function (uint256,uint256) pure returns (uint256)"
																												}
																											},
																											"id": 2238,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "12338:88:11",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 2239,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1319,
																										"src": "12338:117:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 2245,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "12338:172:11",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2246,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "div",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1334,
																								"src": "12338:201:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2254,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "12338:229:11",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "12329:238:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2256,
																					"nodeType": "ExpressionStatement",
																					"src": "12329:238:11"
																				}
																			]
																		},
																		"id": 2258,
																		"nodeType": "IfStatement",
																		"src": "12194:392:11",
																		"trueBody": {
																			"id": 2231,
																			"nodeType": "Block",
																			"src": "12250:51:11",
																			"statements": [
																				{
																					"expression": {
																						"id": 2229,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 2227,
																							"name": "reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2197,
																							"src": "12272:6:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "30",
																							"id": 2228,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12281:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "12272:10:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2230,
																					"nodeType": "ExpressionStatement",
																					"src": "12272:10:11"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2188,
										"nodeType": "StructuredDocumentation",
										"src": "11319:234:11",
										"text": " @dev This function is used to calculate current reward for stakeHolder\n @param _stakeHolder The address of stakeHolder to calculate reward till current block\n @return reward calculated till current block"
									},
									"id": 2307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateReward",
									"nameLocation": "11567:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "_stakeHolder",
												"nameLocation": "11601:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "11593:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11593:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "_dId",
												"nameLocation": "11631:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "11623:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11623:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "isProrata",
												"nameLocation": "11650:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "11645:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2193,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11645:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11583:82:11"
									},
									"returnParameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "11697:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "11689:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11689:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11688:16:11"
									},
									"scope": 3214,
									"src": "11558:1393:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2339,
										"nodeType": "Block",
										"src": "13424:166:11",
										"statements": [
											{
												"assignments": [
													2321
												],
												"declarations": [
													{
														"constant": false,
														"id": 2321,
														"mutability": "mutable",
														"name": "stakeDetail",
														"nameLocation": "13454:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 2339,
														"src": "13434:31:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
															"typeString": "struct LPStakingV3.stakeDetails"
														},
														"typeName": {
															"id": 2320,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2319,
																"name": "stakeDetails",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1508,
																"src": "13434:12:11"
															},
															"referencedDeclaration": 1508,
															"src": "13434:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeDetails_$1508_storage_ptr",
																"typeString": "struct LPStakingV3.stakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2327,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2322,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "13468:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
																"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails storage ref))"
															}
														},
														"id": 2324,
														"indexExpression": {
															"id": 2323,
															"name": "_stakeHolder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "13477:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13468:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
															"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
														}
													},
													"id": 2326,
													"indexExpression": {
														"id": 2325,
														"name": "_dId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2312,
														"src": "13491:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13468:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
														"typeString": "struct LPStakingV3.stakeDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13434:62:11"
											},
											{
												"expression": {
													"id": 2337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2328,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2317,
														"src": "13506:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2329,
																"name": "stakeDetail",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2321,
																"src": "13515:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																	"typeString": "struct LPStakingV3.stakeDetails memory"
																}
															},
															"id": 2330,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "reward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1495,
															"src": "13515:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"arguments": [
																{
																	"id": 2332,
																	"name": "_stakeHolder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2310,
																	"src": "13553:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2333,
																	"name": "_dId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2312,
																	"src": "13567:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2334,
																	"name": "isProrata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2314,
																	"src": "13573:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 2331,
																"name": "_calculateReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2307,
																"src": "13536:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (address,uint256,bool) view returns (uint256)"
																}
															},
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13536:47:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13515:68:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13506:77:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2338,
												"nodeType": "ExpressionStatement",
												"src": "13506:77:11"
											}
										]
									},
									"documentation": {
										"id": 2308,
										"nodeType": "StructuredDocumentation",
										"src": "12957:318:11",
										"text": " @dev This function is used to calculate Total reward for stakeHolder for pool\n @param _stakeHolder The address of stakeHolder to calculate Total reward\n @param _dId deposit id for reward calculation\n @param isProrata to calculate on prorata basis\n @return reward total reward"
									},
									"functionSelector": "ba41795f",
									"id": 2340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "13289:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "_stakeHolder",
												"nameLocation": "13322:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "13314:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13314:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "_dId",
												"nameLocation": "13352:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "13344:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13344:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "isProrata",
												"nameLocation": "13371:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "13366:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13366:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13304:82:11"
									},
									"returnParameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "13416:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "13408:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13408:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13407:16:11"
									},
									"scope": 3214,
									"src": "13280:310:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2612,
										"nodeType": "Block",
										"src": "14113:1892:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "14131:9:11",
															"subExpression": {
																"id": 2360,
																"name": "isPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1622,
																"src": "14132:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e6720697320706175736564",
															"id": 2362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14142:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e52420b01fcae5b40118d9fd948318b1ceff2980505399729d6fb4b8879ef679",
																"typeString": "literal_string \"Staking is paused\""
															},
															"value": "Staking is paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e52420b01fcae5b40118d9fd948318b1ceff2980505399729d6fb4b8879ef679",
																"typeString": "literal_string \"Staking is paused\""
															}
														],
														"id": 2359,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14123:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14123:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2364,
												"nodeType": "ExpressionStatement",
												"src": "14123:39:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2367,
																		"name": "_poolId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2343,
																		"src": "14236:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2368,
																		"name": "_period",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2347,
																		"src": "14245:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2366,
																	"name": "getAPR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1954,
																	"src": "14229:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14229:24:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14257:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14229:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b696e6720706572696f64",
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14260:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b20d466f3caec787a1cd4be5e23618374546144e86f8c5900c6c061b951dab4",
																"typeString": "literal_string \"Invalid staking period\""
															},
															"value": "Invalid staking period"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b20d466f3caec787a1cd4be5e23618374546144e86f8c5900c6c061b951dab4",
																"typeString": "literal_string \"Invalid staking period\""
															}
														],
														"id": 2365,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14221:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14221:64:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2374,
												"nodeType": "ExpressionStatement",
												"src": "14221:64:11"
											},
											{
												"assignments": [
													null,
													null,
													2376,
													2378,
													null,
													null,
													null,
													2380,
													null,
													null,
													null,
													null
												],
												"declarations": [
													null,
													null,
													{
														"constant": false,
														"id": 2376,
														"mutability": "mutable",
														"name": "weth",
														"nameLocation": "14339:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 2612,
														"src": "14331:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2375,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14331:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2378,
														"mutability": "mutable",
														"name": "mprw",
														"nameLocation": "14354:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 2612,
														"src": "14346:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2377,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14346:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													{
														"constant": false,
														"id": 2380,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "14374:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2612,
														"src": "14366:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 2379,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "14366:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null
												],
												"id": 2385,
												"initialValue": {
													"arguments": [
														{
															"id": 2383,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2345,
															"src": "14408:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2381,
															"name": "uniV3",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "14392:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUNIV3POS_$1466",
																"typeString": "contract IUNIV3POS"
															}
														},
														"id": 2382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "positions",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1465,
														"src": "14392:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint96_$_t_address_$_t_address_$_t_address_$_t_uint24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
															"typeString": "function (uint256) view external returns (uint96,address,address,address,uint24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
														}
													},
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14392:24:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint96_$_t_address_$_t_address_$_t_address_$_t_uint24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
														"typeString": "tuple(uint96,address,address,address,uint24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14327:89:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2389,
																			"name": "WETH",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1489,
																			"src": "14481:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		],
																		"id": 2388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14473:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2387,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14473:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14473:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2391,
																	"name": "weth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2376,
																	"src": "14488:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "14473:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2393,
																			"name": "pools",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1612,
																			"src": "14496:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
																				"typeString": "struct LPStakingV3.stakingPool storage ref[] storage ref"
																			}
																		},
																		"id": 2395,
																		"indexExpression": {
																			"id": 2394,
																			"name": "_poolId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2343,
																			"src": "14502:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14496:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stakingPool_$1603_storage",
																			"typeString": "struct LPStakingV3.stakingPool storage ref"
																		}
																	},
																	"id": 2396,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "reward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1596,
																	"src": "14496:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2397,
																	"name": "mprw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2378,
																	"src": "14520:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "14496:28:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "14473:51:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204c5020706f6f6c",
															"id": 2400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14525:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_21c64ae674a86657d133324f4475f79fddb85db7025311858b33abfc26afefaa",
																"typeString": "literal_string \"Invalid LP pool\""
															},
															"value": "Invalid LP pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_21c64ae674a86657d133324f4475f79fddb85db7025311858b33abfc26afefaa",
																"typeString": "literal_string \"Invalid LP pool\""
															}
														],
														"id": 2386,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14465:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14465:78:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2402,
												"nodeType": "ExpressionStatement",
												"src": "14465:78:11"
											},
											{
												"assignments": [
													2405
												],
												"declarations": [
													{
														"constant": false,
														"id": 2405,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "14572:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2612,
														"src": "14553:24:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721Upgradeable_$742",
															"typeString": "contract IERC721Upgradeable"
														},
														"typeName": {
															"id": 2404,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2403,
																"name": "IERC721Upgradeable",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 742,
																"src": "14553:18:11"
															},
															"referencedDeclaration": 742,
															"src": "14553:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Upgradeable_$742",
																"typeString": "contract IERC721Upgradeable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2412,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 2407,
																	"name": "pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1612,
																	"src": "14599:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
																		"typeString": "struct LPStakingV3.stakingPool storage ref[] storage ref"
																	}
																},
																"id": 2409,
																"indexExpression": {
																	"id": 2408,
																	"name": "_poolId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2343,
																	"src": "14605:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14599:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stakingPool_$1603_storage",
																	"typeString": "struct LPStakingV3.stakingPool storage ref"
																}
															},
															"id": 2410,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1594,
															"src": "14599:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2406,
														"name": "IERC721Upgradeable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "14580:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC721Upgradeable_$742_$",
															"typeString": "type(contract IERC721Upgradeable)"
														}
													},
													"id": 2411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14580:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721Upgradeable_$742",
														"typeString": "contract IERC721Upgradeable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14553:67:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2416,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "14727:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "14727:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2420,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "14747:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																					"typeString": "contract LPStakingV3"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																					"typeString": "contract LPStakingV3"
																				}
																			],
																			"id": 2419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14739:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2418,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "14739:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14739:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2414,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2405,
																		"src": "14704:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Upgradeable_$742",
																			"typeString": "contract IERC721Upgradeable"
																		}
																	},
																	"id": 2415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "isApprovedForAll",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 741,
																	"src": "14704:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view external returns (bool)"
																	}
																},
																"id": 2422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14704:49:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2425,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2345,
																			"src": "14775:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2423,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2405,
																			"src": "14757:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC721Upgradeable_$742",
																				"typeString": "contract IERC721Upgradeable"
																			}
																		},
																		"id": 2424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getApproved",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 731,
																		"src": "14757:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view external returns (address)"
																		}
																	},
																	"id": 2426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14757:26:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 2429,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "14793:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																				"typeString": "contract LPStakingV3"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																				"typeString": "contract LPStakingV3"
																			}
																		],
																		"id": 2428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14785:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2427,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14785:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14785:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "14757:41:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "14704:94:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e673a204e6f7420617070726f766564",
															"id": 2433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14800:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebb0e901d5610eb967346b969e4e2aa58f1094b10dc4811881265481ed3bc297",
																"typeString": "literal_string \"Staking: Not approved\""
															},
															"value": "Staking: Not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebb0e901d5610eb967346b969e4e2aa58f1094b10dc4811881265481ed3bc297",
																"typeString": "literal_string \"Staking: Not approved\""
															}
														],
														"id": 2413,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14696:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14696:128:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2435,
												"nodeType": "ExpressionStatement",
												"src": "14696:128:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2439,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14904:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14904:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2443,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "14924:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																		"typeString": "contract LPStakingV3"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																		"typeString": "contract LPStakingV3"
																	}
																],
																"id": 2442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14916:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2441,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14916:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14916:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2445,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2345,
															"src": "14931:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2436,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2405,
															"src": "14885:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Upgradeable_$742",
																"typeString": "contract IERC721Upgradeable"
															}
														},
														"id": 2438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 707,
														"src": "14885:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 2446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14885:54:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2447,
												"nodeType": "ExpressionStatement",
												"src": "14885:54:11"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2448,
															"name": "_depositIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "14950:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1033_storage",
																"typeString": "struct CountersUpgradeable.Counter storage ref"
															}
														},
														"id": 2450,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1059,
														"src": "14950:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1033_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1033_storage_ptr_$",
															"typeString": "function (struct CountersUpgradeable.Counter storage pointer)"
														}
													},
													"id": 2451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14950:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2452,
												"nodeType": "ExpressionStatement",
												"src": "14950:23:11"
											},
											{
												"assignments": [
													2454
												],
												"declarations": [
													{
														"constant": false,
														"id": 2454,
														"mutability": "mutable",
														"name": "id",
														"nameLocation": "14991:2:11",
														"nodeType": "VariableDeclaration",
														"scope": 2612,
														"src": "14983:10:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2453,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14983:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2458,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2455,
															"name": "_depositIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "14996:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1033_storage",
																"typeString": "struct CountersUpgradeable.Counter storage ref"
															}
														},
														"id": 2456,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1045,
														"src": "14996:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1033_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1033_storage_ptr_$",
															"typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 2457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14996:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14983:34:11"
											},
											{
												"assignments": [
													2460
												],
												"declarations": [
													{
														"constant": false,
														"id": 2460,
														"mutability": "mutable",
														"name": "uncalculatedReward",
														"nameLocation": "15072:18:11",
														"nodeType": "VariableDeclaration",
														"scope": 2612,
														"src": "15064:26:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2459,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15064:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2467,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2462,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15110:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15110:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2464,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "15122:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15126:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2461,
														"name": "_calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2307,
														"src": "15093:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,bool) view returns (uint256)"
														}
													},
													"id": 2466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15093:38:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15064:67:11"
											},
											{
												"expression": {
													"id": 2476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2468,
																	"name": "deposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1534,
																	"src": "15178:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails storage ref))"
																	}
																},
																"id": 2472,
																"indexExpression": {
																	"expression": {
																		"id": 2469,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "15187:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "15187:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15178:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
																	"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
																}
															},
															"id": 2473,
															"indexExpression": {
																"id": 2471,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2454,
																"src": "15199:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15178:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
																"typeString": "struct LPStakingV3.stakeDetails storage ref"
															}
														},
														"id": 2474,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "depositId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1491,
														"src": "15178:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2475,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2454,
														"src": "15215:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15178:39:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2477,
												"nodeType": "ExpressionStatement",
												"src": "15178:39:11"
											},
											{
												"expression": {
													"id": 2486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2478,
																	"name": "deposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1534,
																	"src": "15227:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails storage ref))"
																	}
																},
																"id": 2482,
																"indexExpression": {
																	"expression": {
																		"id": 2479,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "15236:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "15236:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15227:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
																	"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
																}
															},
															"id": 2483,
															"indexExpression": {
																"id": 2481,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2454,
																"src": "15248:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15227:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
																"typeString": "struct LPStakingV3.stakeDetails storage ref"
															}
														},
														"id": 2484,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1493,
														"src": "15227:30:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2485,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2380,
														"src": "15261:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "15227:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2487,
												"nodeType": "ExpressionStatement",
												"src": "15227:40:11"
											},
											{
												"expression": {
													"id": 2496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2488,
																	"name": "deposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1534,
																	"src": "15277:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails storage ref))"
																	}
																},
																"id": 2492,
																"indexExpression": {
																	"expression": {
																		"id": 2489,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "15286:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "15286:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15277:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
																	"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
																}
															},
															"id": 2493,
															"indexExpression": {
																"id": 2491,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2454,
																"src": "15298:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15277:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
																"typeString": "struct LPStakingV3.stakeDetails storage ref"
															}
														},
														"id": 2494,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "reward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1495,
														"src": "15277:31:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2495,
														"name": "uncalculatedReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2460,
														"src": "15312:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15277:53:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2497,
												"nodeType": "ExpressionStatement",
												"src": "15277:53:11"
											},
											{
												"expression": {
													"id": 2507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2498,
																	"name": "deposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1534,
																	"src": "15340:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails storage ref))"
																	}
																},
																"id": 2502,
																"indexExpression": {
																	"expression": {
																		"id": 2499,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "15349:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "15349:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15340:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
																	"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
																}
															},
															"id": 2503,
															"indexExpression": {
																"id": 2501,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2454,
																"src": "15361:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15340:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
																"typeString": "struct LPStakingV3.stakeDetails storage ref"
															}
														},
														"id": 2504,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardCalculated",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1501,
														"src": "15340:45:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2505,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "15388:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "15388:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15340:63:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2508,
												"nodeType": "ExpressionStatement",
												"src": "15340:63:11"
											},
											{
												"expression": {
													"id": 2520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2509,
																	"name": "deposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1534,
																	"src": "15413:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails storage ref))"
																	}
																},
																"id": 2513,
																"indexExpression": {
																	"expression": {
																		"id": 2510,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "15422:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "15422:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15413:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
																	"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
																}
															},
															"id": 2514,
															"indexExpression": {
																"id": 2512,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2454,
																"src": "15434:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15413:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
																"typeString": "struct LPStakingV3.stakeDetails storage ref"
															}
														},
														"id": 2515,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "APR",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1497,
														"src": "15413:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2517,
																"name": "_poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2343,
																"src": "15451:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2518,
																"name": "_period",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2347,
																"src": "15460:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2516,
															"name": "getAPR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1954,
															"src": "15444:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) view returns (uint256)"
															}
														},
														"id": 2519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15444:24:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15413:55:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2521,
												"nodeType": "ExpressionStatement",
												"src": "15413:55:11"
											},
											{
												"expression": {
													"id": 2536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2522,
																	"name": "deposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1534,
																	"src": "15478:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails storage ref))"
																	}
																},
																"id": 2526,
																"indexExpression": {
																	"expression": {
																		"id": 2523,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "15487:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "15487:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15478:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
																	"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
																}
															},
															"id": 2527,
															"indexExpression": {
																"id": 2525,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2454,
																"src": "15499:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15478:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
																"typeString": "struct LPStakingV3.stakeDetails storage ref"
															}
														},
														"id": 2528,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "period",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1499,
														"src": "15478:31:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2529,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "15512:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "15512:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2531,
																		"name": "_period",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2347,
																		"src": "15531:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3330",
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15541:7:11",
																		"subdenomination": "days",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2592000_by_1",
																			"typeString": "int_const 2592000"
																		},
																		"value": "30"
																	},
																	"src": "15531:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2534,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "15530:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "15512:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15478:71:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2537,
												"nodeType": "ExpressionStatement",
												"src": "15478:71:11"
											},
											{
												"expression": {
													"id": 2546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2538,
																	"name": "deposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1534,
																	"src": "15559:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails storage ref))"
																	}
																},
																"id": 2542,
																"indexExpression": {
																	"expression": {
																		"id": 2539,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "15568:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "15568:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15559:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
																	"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
																}
															},
															"id": 2543,
															"indexExpression": {
																"id": 2541,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2454,
																"src": "15580:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15559:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
																"typeString": "struct LPStakingV3.stakeDetails storage ref"
															}
														},
														"id": 2544,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "poolId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1503,
														"src": "15559:31:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2545,
														"name": "_poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2343,
														"src": "15593:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15559:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2547,
												"nodeType": "ExpressionStatement",
												"src": "15559:41:11"
											},
											{
												"expression": {
													"id": 2556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2548,
																	"name": "deposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1534,
																	"src": "15610:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails storage ref))"
																	}
																},
																"id": 2552,
																"indexExpression": {
																	"expression": {
																		"id": 2549,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "15619:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "15619:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15610:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
																	"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
																}
															},
															"id": 2553,
															"indexExpression": {
																"id": 2551,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2454,
																"src": "15631:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15610:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
																"typeString": "struct LPStakingV3.stakeDetails storage ref"
															}
														},
														"id": 2554,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vestedFor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1505,
														"src": "15610:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2555,
														"name": "_period",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2347,
														"src": "15647:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15610:44:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2557,
												"nodeType": "ExpressionStatement",
												"src": "15610:44:11"
											},
											{
												"expression": {
													"id": 2566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2558,
																	"name": "deposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1534,
																	"src": "15664:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails storage ref))"
																	}
																},
																"id": 2562,
																"indexExpression": {
																	"expression": {
																		"id": 2559,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "15673:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "15673:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15664:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
																	"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
																}
															},
															"id": 2563,
															"indexExpression": {
																"id": 2561,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2454,
																"src": "15685:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15664:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
																"typeString": "struct LPStakingV3.stakeDetails storage ref"
															}
														},
														"id": 2564,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "NFTId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1507,
														"src": "15664:30:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2565,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2345,
														"src": "15697:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15664:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2567,
												"nodeType": "ExpressionStatement",
												"src": "15664:40:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2573,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "15747:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2568,
																"name": "userDepositMap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "15715:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 2571,
															"indexExpression": {
																"expression": {
																	"id": 2569,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "15730:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "15730:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15715:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "15715:31:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 2574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15715:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2575,
												"nodeType": "ExpressionStatement",
												"src": "15715:35:11"
											},
											{
												"expression": {
													"id": 2585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2576,
															"name": "depositDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "15760:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
																"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
															}
														},
														"id": 2578,
														"indexExpression": {
															"id": 2577,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "15775:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15760:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
															"typeString": "struct LPStakingV3.stakeDetails storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2579,
																"name": "deposits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1534,
																"src": "15781:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails storage ref))"
																}
															},
															"id": 2582,
															"indexExpression": {
																"expression": {
																	"id": 2580,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "15790:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "15790:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15781:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
																"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
															}
														},
														"id": 2584,
														"indexExpression": {
															"id": 2583,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "15802:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15781:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
															"typeString": "struct LPStakingV3.stakeDetails storage ref"
														}
													},
													"src": "15760:45:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
														"typeString": "struct LPStakingV3.stakeDetails storage ref"
													}
												},
												"id": 2586,
												"nodeType": "ExpressionStatement",
												"src": "15760:45:11"
											},
											{
												"expression": {
													"id": 2592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2587,
																"name": "pools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "15837:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
																	"typeString": "struct LPStakingV3.stakingPool storage ref[] storage ref"
																}
															},
															"id": 2589,
															"indexExpression": {
																"id": 2588,
																"name": "_poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2343,
																"src": "15843:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15837:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakingPool_$1603_storage",
																"typeString": "struct LPStakingV3.stakingPool storage ref"
															}
														},
														"id": 2590,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tvl",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1598,
														"src": "15837:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2591,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2380,
														"src": "15859:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "15837:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2593,
												"nodeType": "ExpressionStatement",
												"src": "15837:28:11"
											},
											{
												"expression": {
													"id": 2599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2594,
																"name": "periodPoolMap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1617,
																"src": "15875:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_periodPool_$1608_storage_$",
																	"typeString": "mapping(uint256 => struct LPStakingV3.periodPool storage ref)"
																}
															},
															"id": 2596,
															"indexExpression": {
																"id": 2595,
																"name": "_period",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2347,
																"src": "15889:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15875:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_periodPool_$1608_storage",
																"typeString": "struct LPStakingV3.periodPool storage ref"
															}
														},
														"id": 2597,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tvl",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1605,
														"src": "15875:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2598,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2380,
														"src": "15905:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "15875:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2600,
												"nodeType": "ExpressionStatement",
												"src": "15875:36:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2602,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15934:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15934:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2604,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2380,
															"src": "15946:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"id": 2605,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2343,
															"src": "15954:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2606,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "15963:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "15963:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2601,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "15927:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 2608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15927:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2609,
												"nodeType": "EmitStatement",
												"src": "15922:57:11"
											},
											{
												"expression": {
													"id": 2610,
													"name": "id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2454,
													"src": "15996:2:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2358,
												"id": 2611,
												"nodeType": "Return",
												"src": "15989:9:11"
											}
										]
									},
									"documentation": {
										"id": 2341,
										"nodeType": "StructuredDocumentation",
										"src": "13596:342:11",
										"text": " @dev Allows user to stake the amount the pool. Calculate the old reward\\\nand updates the reward, staked amount and current APR.\n @notice This function will update your staked amount.\n @param _poolId The pool in which user wants to stake.\n @param tokenId The amount user wants to add into his stake."
									},
									"functionSelector": "a638f2e2",
									"id": 2613,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2350,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2349,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 318,
												"src": "14048:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "14048:12:11"
										},
										{
											"id": 2352,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2351,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2623,
												"src": "14061:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "14061:13:11"
										},
										{
											"arguments": [
												{
													"id": 2354,
													"name": "_poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2343,
													"src": "14086:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2355,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2353,
												"name": "poolExists",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1646,
												"src": "14075:10:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "14075:19:11"
										}
									],
									"name": "stake",
									"nameLocation": "13952:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "13975:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "13967:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13967:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14000:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "13992:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13992:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "_period",
												"nameLocation": "14025:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "14017:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14017:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13957:81:11"
									},
									"returnParameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "14104:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14104:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14103:9:11"
									},
									"scope": 3214,
									"src": "13943:2062:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2622,
										"nodeType": "Block",
										"src": "16036:66:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "16054:9:11",
															"subExpression": {
																"id": 2616,
																"name": "isPaused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1622,
																"src": "16055:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "636f6e74726163742070617573656421",
															"id": 2618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16065:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fd66e8ddbaa4c878ce87f099a1bd3ba5695fd2278729d66c27db0fcb6841600d",
																"typeString": "literal_string \"contract paused!\""
															},
															"value": "contract paused!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fd66e8ddbaa4c878ce87f099a1bd3ba5695fd2278729d66c27db0fcb6841600d",
																"typeString": "literal_string \"contract paused!\""
															}
														],
														"id": 2615,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16046:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16046:38:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2620,
												"nodeType": "ExpressionStatement",
												"src": "16046:38:11"
											},
											{
												"id": 2621,
												"nodeType": "PlaceholderStatement",
												"src": "16094:1:11"
											}
										]
									},
									"id": 2623,
									"name": "whenNotPaused",
									"nameLocation": "16020:13:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16033:2:11"
									},
									"src": "16011:91:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2854,
										"nodeType": "Block",
										"src": "16694:2032:11",
										"statements": [
											{
												"assignments": [
													2642
												],
												"declarations": [
													{
														"constant": false,
														"id": 2642,
														"mutability": "mutable",
														"name": "details",
														"nameLocation": "16724:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2854,
														"src": "16704:27:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
															"typeString": "struct LPStakingV3.stakeDetails"
														},
														"typeName": {
															"id": 2641,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2640,
																"name": "stakeDetails",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1508,
																"src": "16704:12:11"
															},
															"referencedDeclaration": 1508,
															"src": "16704:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeDetails_$1508_storage_ptr",
																"typeString": "struct LPStakingV3.stakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2649,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2643,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "16734:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
																"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails storage ref))"
															}
														},
														"id": 2646,
														"indexExpression": {
															"expression": {
																"id": 2644,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "16743:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16743:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16734:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
															"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
														}
													},
													"id": 2648,
													"indexExpression": {
														"id": 2647,
														"name": "_dId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2628,
														"src": "16755:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16734:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
														"typeString": "struct LPStakingV3.stakeDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16704:56:11"
											},
											{
												"assignments": [
													2651
												],
												"declarations": [
													{
														"constant": false,
														"id": 2651,
														"mutability": "mutable",
														"name": "check",
														"nameLocation": "16775:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2854,
														"src": "16770:10:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2650,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16770:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2660,
												"initialValue": {
													"condition": {
														"id": 2652,
														"name": "isForceWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2630,
														"src": "16783:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2654,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "16808:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "16808:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 2656,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2642,
																"src": "16826:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																	"typeString": "struct LPStakingV3.stakeDetails memory"
																}
															},
															"id": 2657,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "period",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1499,
															"src": "16826:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "16808:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "16783:57:11",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 2653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16801:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16770:70:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2662,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2642,
																	"src": "16858:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																		"typeString": "struct LPStakingV3.stakeDetails memory"
																	}
																},
																"id": 2663,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1493,
																"src": "16858:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16874:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16858:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436c61696d203a204e6f7468696e6720746f20636c61696d",
															"id": 2666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16877:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_adff2dfe1a548b9f723224428b84bd389ae3a606e0a5e95db043f0710044fb5b",
																"typeString": "literal_string \"Claim : Nothing to claim\""
															},
															"value": "Claim : Nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_adff2dfe1a548b9f723224428b84bd389ae3a606e0a5e95db043f0710044fb5b",
																"typeString": "literal_string \"Claim : Nothing to claim\""
															}
														],
														"id": 2661,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16850:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16850:54:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2668,
												"nodeType": "ExpressionStatement",
												"src": "16850:54:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2670,
															"name": "check",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2651,
															"src": "16922:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436c61696d203a2063616e6e6f74207769746864726177206265666f72652076657374696e6720706572696f6420656e6473",
															"id": 2671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16929:52:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ca61385b350ba6b0dce22cedc4db9b186f64d71a596b857ee879c0daa3279d6a",
																"typeString": "literal_string \"Claim : cannot withdraw before vesting period ends\""
															},
															"value": "Claim : cannot withdraw before vesting period ends"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ca61385b350ba6b0dce22cedc4db9b186f64d71a596b857ee879c0daa3279d6a",
																"typeString": "literal_string \"Claim : cannot withdraw before vesting period ends\""
															}
														],
														"id": 2669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16914:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16914:68:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2673,
												"nodeType": "ExpressionStatement",
												"src": "16914:68:11"
											},
											{
												"assignments": [
													2675
												],
												"declarations": [
													{
														"constant": false,
														"id": 2675,
														"mutability": "mutable",
														"name": "uncalculatedReward",
														"nameLocation": "17037:18:11",
														"nodeType": "VariableDeclaration",
														"scope": 2854,
														"src": "17029:26:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2674,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17029:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2682,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2677,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "17075:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "17075:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2679,
															"name": "_dId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2628,
															"src": "17087:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2680,
															"name": "isForceWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2630,
															"src": "17093:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2676,
														"name": "_calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2307,
														"src": "17058:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,bool) view returns (uint256)"
														}
													},
													"id": 2681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17058:51:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17029:80:11"
											},
											{
												"assignments": [
													2684
												],
												"declarations": [
													{
														"constant": false,
														"id": 2684,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "17128:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2854,
														"src": "17120:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2683,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17120:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2689,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2685,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2642,
															"src": "17137:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																"typeString": "struct LPStakingV3.stakeDetails memory"
															}
														},
														"id": 2686,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "reward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1495,
														"src": "17137:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2687,
														"name": "uncalculatedReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2675,
														"src": "17154:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17137:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17120:52:11"
											},
											{
												"assignments": [
													2691
												],
												"declarations": [
													{
														"constant": false,
														"id": 2691,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "17190:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2854,
														"src": "17182:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2690,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17182:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2694,
												"initialValue": {
													"expression": {
														"id": 2692,
														"name": "details",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2642,
														"src": "17199:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
															"typeString": "struct LPStakingV3.stakeDetails memory"
														}
													},
													"id": 2693,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stake",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1493,
													"src": "17199:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17182:30:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2696,
																		"name": "pools",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1612,
																		"src": "17315:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
																			"typeString": "struct LPStakingV3.stakingPool storage ref[] storage ref"
																		}
																	},
																	"id": 2699,
																	"indexExpression": {
																		"expression": {
																			"id": 2697,
																			"name": "details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2642,
																			"src": "17321:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																				"typeString": "struct LPStakingV3.stakeDetails memory"
																			}
																		},
																		"id": 2698,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "poolId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1503,
																		"src": "17321:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17315:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stakingPool_$1603_storage",
																		"typeString": "struct LPStakingV3.stakingPool storage ref"
																	}
																},
																"id": 2700,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalAllotedReward",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1600,
																"src": "17315:40:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2701,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2684,
																"src": "17358:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17315:49:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e673a20496e73756666696369656e742072657761726420616c6c6f77616e63652066726f6d207468652041646d696e",
															"id": 2703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17378:55:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_acc14ac9e54dd8ba4aba0610e1196cf9050e74db5cdb44e739d0cc1c3d3f31c9",
																"typeString": "literal_string \"Staking: Insufficient reward allowance from the Admin\""
															},
															"value": "Staking: Insufficient reward allowance from the Admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_acc14ac9e54dd8ba4aba0610e1196cf9050e74db5cdb44e739d0cc1c3d3f31c9",
																"typeString": "literal_string \"Staking: Insufficient reward allowance from the Admin\""
															}
														],
														"id": 2695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17294:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17294:149:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2705,
												"nodeType": "ExpressionStatement",
												"src": "17294:149:11"
											},
											{
												"assignments": [
													2708
												],
												"declarations": [
													{
														"constant": false,
														"id": 2708,
														"mutability": "mutable",
														"name": "rewardtoken",
														"nameLocation": "17504:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 2854,
														"src": "17486:29:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
															"typeString": "contract IERC20Upgradeable"
														},
														"typeName": {
															"id": 2707,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2706,
																"name": "IERC20Upgradeable",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 402,
																"src": "17486:17:11"
															},
															"referencedDeclaration": 402,
															"src": "17486:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2716,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 2710,
																	"name": "pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1612,
																	"src": "17536:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
																		"typeString": "struct LPStakingV3.stakingPool storage ref[] storage ref"
																	}
																},
																"id": 2713,
																"indexExpression": {
																	"expression": {
																		"id": 2711,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2642,
																		"src": "17542:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																			"typeString": "struct LPStakingV3.stakeDetails memory"
																		}
																	},
																	"id": 2712,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "poolId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1503,
																	"src": "17542:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17536:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stakingPool_$1603_storage",
																	"typeString": "struct LPStakingV3.stakingPool storage ref"
																}
															},
															"id": 2714,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "reward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1596,
															"src": "17536:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2709,
														"name": "IERC20Upgradeable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "17518:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$402_$",
															"typeString": "type(contract IERC20Upgradeable)"
														}
													},
													"id": 2715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17518:47:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17486:79:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2720,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "17596:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "17596:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2722,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2684,
															"src": "17608:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2717,
															"name": "rewardtoken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2708,
															"src": "17575:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "17575:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17575:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2724,
												"nodeType": "ExpressionStatement",
												"src": "17575:40:11"
											},
											{
												"assignments": [
													2727
												],
												"declarations": [
													{
														"constant": false,
														"id": 2727,
														"mutability": "mutable",
														"name": "staketoken",
														"nameLocation": "17695:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 2854,
														"src": "17676:29:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721Upgradeable_$742",
															"typeString": "contract IERC721Upgradeable"
														},
														"typeName": {
															"id": 2726,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2725,
																"name": "IERC721Upgradeable",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 742,
																"src": "17676:18:11"
															},
															"referencedDeclaration": 742,
															"src": "17676:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Upgradeable_$742",
																"typeString": "contract IERC721Upgradeable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2735,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 2729,
																	"name": "pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1612,
																	"src": "17727:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
																		"typeString": "struct LPStakingV3.stakingPool storage ref[] storage ref"
																	}
																},
																"id": 2732,
																"indexExpression": {
																	"expression": {
																		"id": 2730,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2642,
																		"src": "17733:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																			"typeString": "struct LPStakingV3.stakeDetails memory"
																		}
																	},
																	"id": 2731,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "poolId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1503,
																	"src": "17733:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17727:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stakingPool_$1603_storage",
																	"typeString": "struct LPStakingV3.stakingPool storage ref"
																}
															},
															"id": 2733,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1594,
															"src": "17727:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2728,
														"name": "IERC721Upgradeable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "17708:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC721Upgradeable_$742_$",
															"typeString": "type(contract IERC721Upgradeable)"
														}
													},
													"id": 2734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17708:47:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721Upgradeable_$742",
														"typeString": "contract IERC721Upgradeable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17676:79:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2741,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "17797:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																		"typeString": "contract LPStakingV3"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																		"typeString": "contract LPStakingV3"
																	}
																],
																"id": 2740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17789:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2739,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17789:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17789:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2743,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "17803:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "17803:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2745,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2642,
																"src": "17815:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																	"typeString": "struct LPStakingV3.stakeDetails memory"
																}
															},
															"id": 2746,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "NFTId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1507,
															"src": "17815:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2736,
															"name": "staketoken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2727,
															"src": "17765:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Upgradeable_$742",
																"typeString": "contract IERC721Upgradeable"
															}
														},
														"id": 2738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 707,
														"src": "17765:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 2747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17765:64:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2748,
												"nodeType": "ExpressionStatement",
												"src": "17765:64:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "17844:16:11",
														"subExpression": {
															"id": 2749,
															"name": "isForceWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2630,
															"src": "17845:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 2751,
																	"name": "periodPoolMap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "17864:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_periodPool_$1608_storage_$",
																		"typeString": "mapping(uint256 => struct LPStakingV3.periodPool storage ref)"
																	}
																},
																"id": 2754,
																"indexExpression": {
																	"expression": {
																		"id": 2752,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2642,
																		"src": "17878:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																			"typeString": "struct LPStakingV3.stakeDetails memory"
																		}
																	},
																	"id": 2753,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "vestedFor",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1505,
																	"src": "17878:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17864:32:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_periodPool_$1608_storage",
																	"typeString": "struct LPStakingV3.periodPool storage ref"
																}
															},
															"id": 2755,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "totalAllotedFeeReward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1607,
															"src": "17864:54:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17921:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "17864:58:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17844:78:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2766,
												"nodeType": "IfStatement",
												"src": "17840:177:11",
												"trueBody": {
													"id": 2765,
													"nodeType": "Block",
													"src": "17924:93:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2760,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "17989:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "17989:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2762,
																		"name": "_dId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2628,
																		"src": "18001:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2759,
																	"name": "harvestFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2942,
																	"src": "17978:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17978:28:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2764,
															"nodeType": "ExpressionStatement",
															"src": "17978:28:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2767,
																"name": "pools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "18057:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
																	"typeString": "struct LPStakingV3.stakingPool storage ref[] storage ref"
																}
															},
															"id": 2770,
															"indexExpression": {
																"expression": {
																	"id": 2768,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2642,
																	"src": "18063:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																		"typeString": "struct LPStakingV3.stakeDetails memory"
																	}
																},
																"id": 2769,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "poolId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1503,
																"src": "18063:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18057:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakingPool_$1603_storage",
																"typeString": "struct LPStakingV3.stakingPool storage ref"
															}
														},
														"id": 2771,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalAllotedReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1600,
														"src": "18057:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2772,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2684,
														"src": "18101:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18057:50:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2774,
												"nodeType": "ExpressionStatement",
												"src": "18057:50:11"
											},
											{
												"expression": {
													"id": 2781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2775,
																"name": "pools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "18117:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
																	"typeString": "struct LPStakingV3.stakingPool storage ref[] storage ref"
																}
															},
															"id": 2778,
															"indexExpression": {
																"expression": {
																	"id": 2776,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2642,
																	"src": "18123:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																		"typeString": "struct LPStakingV3.stakeDetails memory"
																	}
																},
																"id": 2777,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "poolId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1503,
																"src": "18123:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18117:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakingPool_$1603_storage",
																"typeString": "struct LPStakingV3.stakingPool storage ref"
															}
														},
														"id": 2779,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalClaimedReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1602,
														"src": "18117:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2780,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2684,
														"src": "18161:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18117:50:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2782,
												"nodeType": "ExpressionStatement",
												"src": "18117:50:11"
											},
											{
												"expression": {
													"id": 2790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2783,
																"name": "pools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "18177:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
																	"typeString": "struct LPStakingV3.stakingPool storage ref[] storage ref"
																}
															},
															"id": 2786,
															"indexExpression": {
																"expression": {
																	"id": 2784,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2642,
																	"src": "18183:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																		"typeString": "struct LPStakingV3.stakeDetails memory"
																	}
																},
																"id": 2785,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "poolId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1503,
																"src": "18183:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18177:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakingPool_$1603_storage",
																"typeString": "struct LPStakingV3.stakingPool storage ref"
															}
														},
														"id": 2787,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tvl",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1598,
														"src": "18177:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 2788,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2642,
															"src": "18206:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																"typeString": "struct LPStakingV3.stakeDetails memory"
															}
														},
														"id": 2789,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "stake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1493,
														"src": "18206:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18177:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2791,
												"nodeType": "ExpressionStatement",
												"src": "18177:42:11"
											},
											{
												"expression": {
													"id": 2798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2792,
																"name": "periodPoolMap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1617,
																"src": "18230:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_periodPool_$1608_storage_$",
																	"typeString": "mapping(uint256 => struct LPStakingV3.periodPool storage ref)"
																}
															},
															"id": 2795,
															"indexExpression": {
																"expression": {
																	"id": 2793,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2642,
																	"src": "18244:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																		"typeString": "struct LPStakingV3.stakeDetails memory"
																	}
																},
																"id": 2794,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "vestedFor",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1505,
																"src": "18244:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18230:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_periodPool_$1608_storage",
																"typeString": "struct LPStakingV3.periodPool storage ref"
															}
														},
														"id": 2796,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tvl",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1605,
														"src": "18230:36:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2797,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2691,
														"src": "18270:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18230:46:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2799,
												"nodeType": "ExpressionStatement",
												"src": "18230:46:11"
											},
											{
												"expression": {
													"id": 2808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2800,
																	"name": "deposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1534,
																	"src": "18323:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails storage ref))"
																	}
																},
																"id": 2804,
																"indexExpression": {
																	"expression": {
																		"id": 2801,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "18332:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "18332:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18323:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
																	"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
																}
															},
															"id": 2805,
															"indexExpression": {
																"id": 2803,
																"name": "_dId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "18344:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18323:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
																"typeString": "struct LPStakingV3.stakeDetails storage ref"
															}
														},
														"id": 2806,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "reward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1495,
														"src": "18323:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18359:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18323:37:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2809,
												"nodeType": "ExpressionStatement",
												"src": "18323:37:11"
											},
											{
												"expression": {
													"id": 2818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2810,
																	"name": "deposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1534,
																	"src": "18370:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails storage ref))"
																	}
																},
																"id": 2814,
																"indexExpression": {
																	"expression": {
																		"id": 2811,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "18379:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "18379:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18370:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
																	"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
																}
															},
															"id": 2815,
															"indexExpression": {
																"id": 2813,
																"name": "_dId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "18391:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18370:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
																"typeString": "struct LPStakingV3.stakeDetails storage ref"
															}
														},
														"id": 2816,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1493,
														"src": "18370:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18405:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18370:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2819,
												"nodeType": "ExpressionStatement",
												"src": "18370:36:11"
											},
											{
												"condition": {
													"id": 2820,
													"name": "isPaused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1622,
													"src": "18420:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2843,
													"nodeType": "Block",
													"src": "18526:90:11",
													"statements": [
														{
															"expression": {
																"id": 2841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 2832,
																				"name": "deposits",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1534,
																				"src": "18540:8:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails storage ref))"
																				}
																			},
																			"id": 2836,
																			"indexExpression": {
																				"expression": {
																					"id": 2833,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "18549:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2834,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "18549:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "18540:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
																				"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
																			}
																		},
																		"id": 2837,
																		"indexExpression": {
																			"id": 2835,
																			"name": "_dId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2628,
																			"src": "18561:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "18540:26:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
																			"typeString": "struct LPStakingV3.stakeDetails storage ref"
																		}
																	},
																	"id": 2838,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardCalculated",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1501,
																	"src": "18540:47:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2839,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "18590:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "18590:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18540:65:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2842,
															"nodeType": "ExpressionStatement",
															"src": "18540:65:11"
														}
													]
												},
												"id": 2844,
												"nodeType": "IfStatement",
												"src": "18416:200:11",
												"trueBody": {
													"id": 2831,
													"nodeType": "Block",
													"src": "18430:90:11",
													"statements": [
														{
															"expression": {
																"id": 2829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 2821,
																				"name": "deposits",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1534,
																				"src": "18444:8:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails storage ref))"
																				}
																			},
																			"id": 2825,
																			"indexExpression": {
																				"expression": {
																					"id": 2822,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "18453:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2823,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "18453:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "18444:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
																				"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
																			}
																		},
																		"id": 2826,
																		"indexExpression": {
																			"id": 2824,
																			"name": "_dId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2628,
																			"src": "18465:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "18444:26:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
																			"typeString": "struct LPStakingV3.stakeDetails storage ref"
																		}
																	},
																	"id": 2827,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardCalculated",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1501,
																	"src": "18444:47:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2828,
																	"name": "pausedTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "18494:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18444:65:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2830,
															"nodeType": "ExpressionStatement",
															"src": "18444:65:11"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2846,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "18674:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "18674:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2848,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2684,
															"src": "18686:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2849,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2626,
															"src": "18694:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2850,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "18703:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "18703:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2845,
														"name": "RewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "18660:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 2852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18660:59:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2853,
												"nodeType": "EmitStatement",
												"src": "18655:64:11"
											}
										]
									},
									"documentation": {
										"id": 2624,
										"nodeType": "StructuredDocumentation",
										"src": "16108:424:11",
										"text": " @dev Calculate the current reward and unstake the stake token, Transefer\n it to sender and update reward to 0\n @param _poolId Pool from which user want to claim the reward.\n @param _dId deposit id for getting reward fot deposit.\n @param isForceWithdraw bool flag for emergency withdraw.\n @notice This function will transfer the reward earned till now and staked token amount."
									},
									"functionSelector": "33cfcd3b",
									"id": 2855,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2633,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2632,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 318,
												"src": "16647:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "16647:12:11"
										},
										{
											"id": 2635,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2634,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2623,
												"src": "16660:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "16660:13:11"
										},
										{
											"arguments": [
												{
													"id": 2637,
													"name": "_poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2626,
													"src": "16685:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2638,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2636,
												"name": "poolExists",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1646,
												"src": "16674:10:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "16674:19:11"
										}
									],
									"name": "withdraw",
									"nameLocation": "16546:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "16572:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "16564:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16564:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "_dId",
												"nameLocation": "16597:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "16589:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16589:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2630,
												"mutability": "mutable",
												"name": "isForceWithdraw",
												"nameLocation": "16616:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "16611:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2629,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16611:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16554:83:11"
									},
									"returnParameters": {
										"id": 2639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16694:0:11"
									},
									"scope": 3214,
									"src": "16537:2189:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2941,
										"nodeType": "Block",
										"src": "19035:604:11",
										"statements": [
											{
												"assignments": [
													2865
												],
												"declarations": [
													{
														"constant": false,
														"id": 2865,
														"mutability": "mutable",
														"name": "deposit",
														"nameLocation": "19065:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2941,
														"src": "19045:27:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
															"typeString": "struct LPStakingV3.stakeDetails"
														},
														"typeName": {
															"id": 2864,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2863,
																"name": "stakeDetails",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1508,
																"src": "19045:12:11"
															},
															"referencedDeclaration": 1508,
															"src": "19045:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeDetails_$1508_storage_ptr",
																"typeString": "struct LPStakingV3.stakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2871,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2866,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "19075:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
																"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails storage ref))"
															}
														},
														"id": 2868,
														"indexExpression": {
															"id": 2867,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2858,
															"src": "19084:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19075:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
															"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
														}
													},
													"id": 2870,
													"indexExpression": {
														"id": 2869,
														"name": "_dId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2860,
														"src": "19091:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19075:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
														"typeString": "struct LPStakingV3.stakeDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19045:51:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2873,
																	"name": "deposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2865,
																	"src": "19114:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																		"typeString": "struct LPStakingV3.stakeDetails memory"
																	}
																},
																"id": 2874,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1493,
																"src": "19114:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19130:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19114:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "486172766573743a204e6f742061207374616b6572",
															"id": 2877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19133:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2ee82b03ef71c9514254a3658f8815add1189e02180fc7b188e29598e5a701dd",
																"typeString": "literal_string \"Harvest: Not a staker\""
															},
															"value": "Harvest: Not a staker"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2ee82b03ef71c9514254a3658f8815add1189e02180fc7b188e29598e5a701dd",
																"typeString": "literal_string \"Harvest: Not a staker\""
															}
														],
														"id": 2872,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19106:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19106:51:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2879,
												"nodeType": "ExpressionStatement",
												"src": "19106:51:11"
											},
											{
												"assignments": [
													2881
												],
												"declarations": [
													{
														"constant": false,
														"id": 2881,
														"mutability": "mutable",
														"name": "rewardFee",
														"nameLocation": "19176:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 2941,
														"src": "19168:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2880,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19168:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2886,
												"initialValue": {
													"arguments": [
														{
															"id": 2883,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2858,
															"src": "19204:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2884,
															"name": "_dId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2860,
															"src": "19211:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2882,
														"name": "getHavestAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3056,
														"src": "19188:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 2885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19188:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19168:48:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2887,
															"name": "rewardFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2881,
															"src": "19230:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19243:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "19230:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 2890,
																	"name": "periodPoolMap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "19248:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_periodPool_$1608_storage_$",
																		"typeString": "mapping(uint256 => struct LPStakingV3.periodPool storage ref)"
																	}
																},
																"id": 2893,
																"indexExpression": {
																	"expression": {
																		"id": 2891,
																		"name": "deposit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2865,
																		"src": "19262:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																			"typeString": "struct LPStakingV3.stakeDetails memory"
																		}
																	},
																	"id": 2892,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "vestedFor",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1505,
																	"src": "19262:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19248:32:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_periodPool_$1608_storage",
																	"typeString": "struct LPStakingV3.periodPool storage ref"
																}
															},
															"id": 2894,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "totalAllotedFeeReward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1607,
															"src": "19248:54:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19306:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "19248:59:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19230:77:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2900,
												"nodeType": "IfStatement",
												"src": "19226:114:11",
												"trueBody": {
													"id": 2899,
													"nodeType": "Block",
													"src": "19309:31:11",
													"statements": [
														{
															"functionReturnParameters": 2862,
															"id": 2898,
															"nodeType": "Return",
															"src": "19323:7:11"
														}
													]
												}
											},
											{
												"assignments": [
													2902
												],
												"declarations": [
													{
														"constant": false,
														"id": 2902,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "19358:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2941,
														"src": "19350:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2901,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19350:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2910,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2907,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "19391:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																		"typeString": "contract LPStakingV3"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																		"typeString": "contract LPStakingV3"
																	}
																],
																"id": 2906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19383:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2905,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19383:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19383:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2903,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "19368:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2904,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 359,
														"src": "19368:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19368:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19350:47:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2911,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2902,
														"src": "19412:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19423:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19412:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2916,
												"nodeType": "IfStatement",
												"src": "19408:49:11",
												"trueBody": {
													"id": 2915,
													"nodeType": "Block",
													"src": "19426:31:11",
													"statements": [
														{
															"functionReturnParameters": 2862,
															"id": 2914,
															"nodeType": "Return",
															"src": "19440:7:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2917,
																"name": "periodPoolMap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1617,
																"src": "19466:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_periodPool_$1608_storage_$",
																	"typeString": "mapping(uint256 => struct LPStakingV3.periodPool storage ref)"
																}
															},
															"id": 2920,
															"indexExpression": {
																"expression": {
																	"id": 2918,
																	"name": "deposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2865,
																	"src": "19480:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																		"typeString": "struct LPStakingV3.stakeDetails memory"
																	}
																},
																"id": 2919,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "vestedFor",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1505,
																"src": "19480:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19466:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_periodPool_$1608_storage",
																"typeString": "struct LPStakingV3.periodPool storage ref"
															}
														},
														"id": 2921,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalAllotedFeeReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1607,
														"src": "19466:54:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2922,
														"name": "rewardFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2881,
														"src": "19524:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19466:67:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2924,
												"nodeType": "ExpressionStatement",
												"src": "19466:67:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2930,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "19569:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																		"typeString": "contract LPStakingV3"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																		"typeString": "contract LPStakingV3"
																	}
																],
																"id": 2929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19561:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2928,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19561:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19561:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2932,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2858,
															"src": "19575:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2933,
															"name": "rewardFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2881,
															"src": "19582:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2925,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "19543:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 401,
														"src": "19543:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19543:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2935,
												"nodeType": "ExpressionStatement",
												"src": "19543:49:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2937,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2858,
															"src": "19615:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2938,
															"name": "rewardFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2881,
															"src": "19622:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2936,
														"name": "Harvest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1592,
														"src": "19607:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19607:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2940,
												"nodeType": "EmitStatement",
												"src": "19602:30:11"
											}
										]
									},
									"documentation": {
										"id": 2856,
										"nodeType": "StructuredDocumentation",
										"src": "18733:239:11",
										"text": " @dev Disburse users Depsoits Unclaimed marketfee reward\n @param _user address of the user\n @param _dId deposit id for harvest\n @notice This function will give send user there unclaimed marketfee reward."
									},
									"id": 2942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvestFee",
									"nameLocation": "18986:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2858,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "19005:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2942,
												"src": "18997:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18997:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "_dId",
												"nameLocation": "19020:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2942,
												"src": "19012:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19012:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18996:29:11"
									},
									"returnParameters": {
										"id": 2862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19035:0:11"
									},
									"scope": 3214,
									"src": "18977:662:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3055,
										"nodeType": "Block",
										"src": "19969:796:11",
										"statements": [
											{
												"assignments": [
													2954
												],
												"declarations": [
													{
														"constant": false,
														"id": 2954,
														"mutability": "mutable",
														"name": "deposit",
														"nameLocation": "19999:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 3055,
														"src": "19979:27:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
															"typeString": "struct LPStakingV3.stakeDetails"
														},
														"typeName": {
															"id": 2953,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2952,
																"name": "stakeDetails",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1508,
																"src": "19979:12:11"
															},
															"referencedDeclaration": 1508,
															"src": "19979:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakeDetails_$1508_storage_ptr",
																"typeString": "struct LPStakingV3.stakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2960,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2955,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "20009:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
																"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails storage ref))"
															}
														},
														"id": 2957,
														"indexExpression": {
															"id": 2956,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2945,
															"src": "20018:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "20009:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
															"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
														}
													},
													"id": 2959,
													"indexExpression": {
														"id": 2958,
														"name": "_dId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2947,
														"src": "20025:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20009:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
														"typeString": "struct LPStakingV3.stakeDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19979:51:11"
											},
											{
												"assignments": [
													2962
												],
												"declarations": [
													{
														"constant": false,
														"id": 2962,
														"mutability": "mutable",
														"name": "locktime",
														"nameLocation": "20048:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 3055,
														"src": "20040:16:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2961,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20040:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2965,
												"initialValue": {
													"expression": {
														"id": 2963,
														"name": "deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2954,
														"src": "20059:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
															"typeString": "struct LPStakingV3.stakeDetails memory"
														}
													},
													"id": 2964,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "vestedFor",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1505,
													"src": "20059:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20040:36:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2966,
																"name": "deposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2954,
																"src": "20090:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																	"typeString": "struct LPStakingV3.stakeDetails memory"
																}
															},
															"id": 2967,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stake",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1493,
															"src": "20090:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 2968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20106:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "20090:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 2970,
																	"name": "periodPoolMap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "20111:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_periodPool_$1608_storage_$",
																		"typeString": "mapping(uint256 => struct LPStakingV3.periodPool storage ref)"
																	}
																},
																"id": 2972,
																"indexExpression": {
																	"id": 2971,
																	"name": "locktime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2962,
																	"src": "20125:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20111:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_periodPool_$1608_storage",
																	"typeString": "struct LPStakingV3.periodPool storage ref"
																}
															},
															"id": 2973,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "totalAllotedFeeReward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1607,
															"src": "20111:45:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 2974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20159:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "20111:49:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "20090:70:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2980,
												"nodeType": "IfStatement",
												"src": "20086:109:11",
												"trueBody": {
													"id": 2979,
													"nodeType": "Block",
													"src": "20162:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20183:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2951,
															"id": 2978,
															"nodeType": "Return",
															"src": "20176:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													2982
												],
												"declarations": [
													{
														"constant": false,
														"id": 2982,
														"mutability": "mutable",
														"name": "feeRewardPerSecond",
														"nameLocation": "20213:18:11",
														"nodeType": "VariableDeclaration",
														"scope": 3055,
														"src": "20205:26:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2981,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20205:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2983,
												"nodeType": "VariableDeclarationStatement",
												"src": "20205:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2984,
														"name": "locktime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2962,
														"src": "20245:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2985,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20257:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20245:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3022,
													"nodeType": "Block",
													"src": "20381:122:11",
													"statements": [
														{
															"expression": {
																"id": 3020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3005,
																	"name": "feeRewardPerSecond",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2982,
																	"src": "20395:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3013,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3011,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 3006,
																								"name": "periodPoolMap",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1617,
																								"src": "20416:13:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_periodPool_$1608_storage_$",
																									"typeString": "mapping(uint256 => struct LPStakingV3.periodPool storage ref)"
																								}
																							},
																							"id": 3008,
																							"indexExpression": {
																								"id": 3007,
																								"name": "locktime",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2962,
																								"src": "20430:8:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "20416:23:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_periodPool_$1608_storage",
																								"typeString": "struct LPStakingV3.periodPool storage ref"
																							}
																						},
																						"id": 3009,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "totalAllotedFeeReward",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1607,
																						"src": "20416:45:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"hexValue": "3630",
																						"id": 3010,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "20464:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_60_by_1",
																							"typeString": "int_const 60"
																						},
																						"value": "60"
																					},
																					"src": "20416:50:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "3630",
																					"id": 3012,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "20469:2:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_60_by_1",
																						"typeString": "int_const 60"
																					},
																					"value": "60"
																				},
																				"src": "20416:55:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3234",
																				"id": 3014,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20474:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_24_by_1",
																					"typeString": "int_const 24"
																				},
																				"value": "24"
																			},
																			"src": "20416:60:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "3330",
																			"id": 3016,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20479:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_30_by_1",
																				"typeString": "int_const 30"
																			},
																			"value": "30"
																		},
																		"src": "20416:65:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 3018,
																		"name": "locktime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2962,
																		"src": "20484:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "20416:76:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20395:97:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3021,
															"nodeType": "ExpressionStatement",
															"src": "20395:97:11"
														}
													]
												},
												"id": 3023,
												"nodeType": "IfStatement",
												"src": "20241:262:11",
												"trueBody": {
													"id": 3004,
													"nodeType": "Block",
													"src": "20260:115:11",
													"statements": [
														{
															"expression": {
																"id": 3002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2987,
																	"name": "feeRewardPerSecond",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2982,
																	"src": "20274:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2995,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2993,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 2988,
																								"name": "periodPoolMap",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1617,
																								"src": "20295:13:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_periodPool_$1608_storage_$",
																									"typeString": "mapping(uint256 => struct LPStakingV3.periodPool storage ref)"
																								}
																							},
																							"id": 2990,
																							"indexExpression": {
																								"id": 2989,
																								"name": "locktime",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2962,
																								"src": "20309:8:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "20295:23:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_periodPool_$1608_storage",
																								"typeString": "struct LPStakingV3.periodPool storage ref"
																							}
																						},
																						"id": 2991,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "totalAllotedFeeReward",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1607,
																						"src": "20295:45:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"hexValue": "3630",
																						"id": 2992,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "20343:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_60_by_1",
																							"typeString": "int_const 60"
																						},
																						"value": "60"
																					},
																					"src": "20295:50:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "3630",
																					"id": 2994,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "20348:2:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_60_by_1",
																						"typeString": "int_const 60"
																					},
																					"value": "60"
																				},
																				"src": "20295:55:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3234",
																				"id": 2996,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20353:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_24_by_1",
																					"typeString": "int_const 24"
																				},
																				"value": "24"
																			},
																			"src": "20295:60:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "3330",
																			"id": 2998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20358:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_30_by_1",
																				"typeString": "int_const 30"
																			},
																			"value": "30"
																		},
																		"src": "20295:65:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 3000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20363:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "20295:69:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20274:90:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3003,
															"nodeType": "ExpressionStatement",
															"src": "20274:90:11"
														}
													]
												}
											},
											{
												"assignments": [
													3025
												],
												"declarations": [
													{
														"constant": false,
														"id": 3025,
														"mutability": "mutable",
														"name": "pendingReward",
														"nameLocation": "20520:13:11",
														"nodeType": "VariableDeclaration",
														"scope": 3055,
														"src": "20512:21:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3024,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20512:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3034,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3026,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "20537:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 3027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "20537:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 3028,
																		"name": "deposit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2954,
																		"src": "20555:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																			"typeString": "struct LPStakingV3.stakeDetails memory"
																		}
																	},
																	"id": 3029,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "lastRewardCalculated",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1501,
																	"src": "20555:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20537:46:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3031,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "20536:48:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 3032,
														"name": "feeRewardPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2982,
														"src": "20587:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20536:69:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20512:93:11"
											},
											{
												"assignments": [
													3036
												],
												"declarations": [
													{
														"constant": false,
														"id": 3036,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "20624:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 3055,
														"src": "20616:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3035,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20616:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3050,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 3037,
																					"name": "deposit",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2954,
																					"src": "20635:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																						"typeString": "struct LPStakingV3.stakeDetails memory"
																					}
																				},
																				"id": 3038,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stake",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1493,
																				"src": "20635:13:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 3039,
																				"name": "PRECISION_FACTOR",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1631,
																				"src": "20651:16:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20635:32:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3041,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20634:34:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3042,
																			"name": "periodPoolMap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1617,
																			"src": "20671:13:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_periodPool_$1608_storage_$",
																				"typeString": "mapping(uint256 => struct LPStakingV3.periodPool storage ref)"
																			}
																		},
																		"id": 3044,
																		"indexExpression": {
																			"id": 3043,
																			"name": "locktime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2962,
																			"src": "20685:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "20671:23:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_periodPool_$1608_storage",
																			"typeString": "struct LPStakingV3.periodPool storage ref"
																		}
																	},
																	"id": 3045,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tvl",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1605,
																	"src": "20671:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20634:64:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3047,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "20633:66:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 3048,
														"name": "pendingReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3025,
														"src": "20702:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20633:82:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20616:99:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3051,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3036,
														"src": "20733:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 3052,
														"name": "PRECISION_FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1631,
														"src": "20742:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20733:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2951,
												"id": 3054,
												"nodeType": "Return",
												"src": "20726:32:11"
											}
										]
									},
									"documentation": {
										"id": 2943,
										"nodeType": "StructuredDocumentation",
										"src": "19645:235:11",
										"text": " @dev Calculates users deposits WETH market fee reward\n @notice This function will give you total of unclaimed rewards till now.\n @return reward Total unclaimed WETH reward till now for specific deposit Id"
									},
									"functionSelector": "24a723d4",
									"id": 3056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getHavestAmount",
									"nameLocation": "19894:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2945,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "19918:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "19910:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19910:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2947,
												"mutability": "mutable",
												"name": "_dId",
												"nameLocation": "19933:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "19925:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19925:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19909:29:11"
									},
									"returnParameters": {
										"id": 2951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "19960:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19960:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19959:9:11"
									},
									"scope": 3214,
									"src": "19885:880:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3122,
										"nodeType": "Block",
										"src": "20851:375:11",
										"statements": [
											{
												"assignments": [
													3069
												],
												"declarations": [
													{
														"constant": false,
														"id": 3069,
														"mutability": "mutable",
														"name": "details",
														"nameLocation": "20884:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 3122,
														"src": "20862:29:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_stakeDetails_$1508_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct LPStakingV3.stakeDetails[]"
														},
														"typeName": {
															"baseType": {
																"id": 3067,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3066,
																	"name": "stakeDetails",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1508,
																	"src": "20862:12:11"
																},
																"referencedDeclaration": 1508,
																"src": "20862:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stakeDetails_$1508_storage_ptr",
																	"typeString": "struct LPStakingV3.stakeDetails"
																}
															},
															"id": 3068,
															"nodeType": "ArrayTypeName",
															"src": "20862:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_stakeDetails_$1508_storage_$dyn_storage_ptr",
																"typeString": "struct LPStakingV3.stakeDetails[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3079,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 3074,
																	"name": "userDepositMap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1539,
																	"src": "20913:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																		"typeString": "mapping(address => uint256[] storage ref)"
																	}
																},
																"id": 3076,
																"indexExpression": {
																	"id": 3075,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3058,
																	"src": "20928:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20913:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																	"typeString": "uint256[] storage ref"
																}
															},
															"id": 3077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "20913:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3073,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "20894:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_stakeDetails_$1508_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct LPStakingV3.stakeDetails memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3071,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3070,
																	"name": "stakeDetails",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1508,
																	"src": "20898:12:11"
																},
																"referencedDeclaration": 1508,
																"src": "20898:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stakeDetails_$1508_storage_ptr",
																	"typeString": "struct LPStakingV3.stakeDetails"
																}
															},
															"id": 3072,
															"nodeType": "ArrayTypeName",
															"src": "20898:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_stakeDetails_$1508_storage_$dyn_storage_ptr",
																"typeString": "struct LPStakingV3.stakeDetails[]"
															}
														}
													},
													"id": 3078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20894:48:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_stakeDetails_$1508_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct LPStakingV3.stakeDetails memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20862:80:11"
											},
											{
												"body": {
													"id": 3118,
													"nodeType": "Block",
													"src": "21011:185:11",
													"statements": [
														{
															"assignments": [
																3095
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3095,
																	"mutability": "mutable",
																	"name": "deposit",
																	"nameLocation": "21045:7:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 3118,
																	"src": "21025:27:11",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																		"typeString": "struct LPStakingV3.stakeDetails"
																	},
																	"typeName": {
																		"id": 3094,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 3093,
																			"name": "stakeDetails",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1508,
																			"src": "21025:12:11"
																		},
																		"referencedDeclaration": 1508,
																		"src": "21025:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stakeDetails_$1508_storage_ptr",
																			"typeString": "struct LPStakingV3.stakeDetails"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3105,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 3096,
																		"name": "deposits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1534,
																		"src": "21055:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$_$",
																			"typeString": "mapping(address => mapping(uint256 => struct LPStakingV3.stakeDetails storage ref))"
																		}
																	},
																	"id": 3098,
																	"indexExpression": {
																		"id": 3097,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3058,
																		"src": "21064:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21055:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
																		"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
																	}
																},
																"id": 3104,
																"indexExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 3099,
																			"name": "userDepositMap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1539,
																			"src": "21071:14:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																				"typeString": "mapping(address => uint256[] storage ref)"
																			}
																		},
																		"id": 3101,
																		"indexExpression": {
																			"id": 3100,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3058,
																			"src": "21086:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21071:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 3103,
																	"indexExpression": {
																		"id": 3102,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3081,
																		"src": "21093:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21071:24:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21055:41:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
																	"typeString": "struct LPStakingV3.stakeDetails storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "21025:71:11"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3106,
																		"name": "deposit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3095,
																		"src": "21114:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																			"typeString": "struct LPStakingV3.stakeDetails memory"
																		}
																	},
																	"id": 3107,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stake",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1493,
																	"src": "21114:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21130:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "21114:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3117,
															"nodeType": "IfStatement",
															"src": "21110:76:11",
															"trueBody": {
																"id": 3116,
																"nodeType": "Block",
																"src": "21133:53:11",
																"statements": [
																	{
																		"expression": {
																			"id": 3114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 3110,
																					"name": "details",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3069,
																					"src": "21151:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_stakeDetails_$1508_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct LPStakingV3.stakeDetails memory[] memory"
																					}
																				},
																				"id": 3112,
																				"indexExpression": {
																					"id": 3111,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3081,
																					"src": "21159:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "21151:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																					"typeString": "struct LPStakingV3.stakeDetails memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 3113,
																				"name": "deposit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3095,
																				"src": "21164:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																					"typeString": "struct LPStakingV3.stakeDetails memory"
																				}
																			},
																			"src": "21151:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_stakeDetails_$1508_memory_ptr",
																				"typeString": "struct LPStakingV3.stakeDetails memory"
																			}
																		},
																		"id": 3115,
																		"nodeType": "ExpressionStatement",
																		"src": "21151:20:11"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3084,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3081,
														"src": "20972:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 3085,
																"name": "userDepositMap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "20976:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 3087,
															"indexExpression": {
																"id": 3086,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3058,
																"src": "20991:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20976:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 3088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "20976:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20972:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3119,
												"initializationExpression": {
													"assignments": [
														3081
													],
													"declarations": [
														{
															"constant": false,
															"id": 3081,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "20965:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 3119,
															"src": "20957:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3080,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "20957:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3083,
													"initialValue": {
														"hexValue": "30",
														"id": 3082,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20969:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "20957:13:11"
												},
												"loopExpression": {
													"expression": {
														"id": 3091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "21006:3:11",
														"subExpression": {
															"id": 3090,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3081,
															"src": "21006:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3092,
													"nodeType": "ExpressionStatement",
													"src": "21006:3:11"
												},
												"nodeType": "ForStatement",
												"src": "20952:244:11"
											},
											{
												"expression": {
													"id": 3120,
													"name": "details",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3069,
													"src": "21212:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_stakeDetails_$1508_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct LPStakingV3.stakeDetails memory[] memory"
													}
												},
												"functionReturnParameters": 3064,
												"id": 3121,
												"nodeType": "Return",
												"src": "21205:14:11"
											}
										]
									},
									"functionSelector": "94f649dd",
									"id": 3123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDeposits",
									"nameLocation": "20780:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3058,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "20800:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3123,
												"src": "20792:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20792:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20791:15:11"
									},
									"returnParameters": {
										"id": 3064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3123,
												"src": "20828:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_stakeDetails_$1508_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct LPStakingV3.stakeDetails[]"
												},
												"typeName": {
													"baseType": {
														"id": 3061,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3060,
															"name": "stakeDetails",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1508,
															"src": "20828:12:11"
														},
														"referencedDeclaration": 1508,
														"src": "20828:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stakeDetails_$1508_storage_ptr",
															"typeString": "struct LPStakingV3.stakeDetails"
														}
													},
													"id": 3062,
													"nodeType": "ArrayTypeName",
													"src": "20828:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_stakeDetails_$1508_storage_$dyn_storage_ptr",
														"typeString": "struct LPStakingV3.stakeDetails[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20827:23:11"
									},
									"scope": 3214,
									"src": "20771:455:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3180,
										"nodeType": "Block",
										"src": "21525:332:11",
										"statements": [
											{
												"assignments": [
													3130
												],
												"declarations": [
													{
														"constant": false,
														"id": 3130,
														"mutability": "mutable",
														"name": "sum",
														"nameLocation": "21543:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 3180,
														"src": "21535:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3129,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21535:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3132,
												"initialValue": {
													"hexValue": "30",
													"id": 3131,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21549:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21535:15:11"
											},
											{
												"body": {
													"id": 3174,
													"nodeType": "Block",
													"src": "21613:210:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3145,
																			"name": "depositDetails",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1544,
																			"src": "21631:14:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
																				"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
																			}
																		},
																		"id": 3147,
																		"indexExpression": {
																			"id": 3146,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3134,
																			"src": "21646:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21631:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
																			"typeString": "struct LPStakingV3.stakeDetails storage ref"
																		}
																	},
																	"id": 3148,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stake",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1493,
																	"src": "21631:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21657:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "21631:27:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3173,
															"nodeType": "IfStatement",
															"src": "21627:186:11",
															"trueBody": {
																"id": 3172,
																"nodeType": "Block",
																"src": "21660:153:11",
																"statements": [
																	{
																		"expression": {
																			"id": 3156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3151,
																				"name": "sum",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3130,
																				"src": "21678:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 3152,
																						"name": "depositDetails",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1544,
																						"src": "21685:14:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
																							"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
																						}
																					},
																					"id": 3154,
																					"indexExpression": {
																						"id": 3153,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3134,
																						"src": "21700:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "21685:17:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
																						"typeString": "struct LPStakingV3.stakeDetails storage ref"
																					}
																				},
																				"id": 3155,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "reward",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1495,
																				"src": "21685:24:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21678:31:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3157,
																		"nodeType": "ExpressionStatement",
																		"src": "21678:31:11"
																	},
																	{
																		"expression": {
																			"id": 3170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3158,
																				"name": "sum",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3130,
																				"src": "21727:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"hexValue": "30",
																								"id": 3162,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "21759:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								}
																							],
																							"id": 3161,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "21751:7:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 3160,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "21751:7:11",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 3163,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "21751:10:11",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 3164,
																								"name": "depositDetails",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1544,
																								"src": "21763:14:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stakeDetails_$1508_storage_$",
																									"typeString": "mapping(uint256 => struct LPStakingV3.stakeDetails storage ref)"
																								}
																							},
																							"id": 3166,
																							"indexExpression": {
																								"id": 3165,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3134,
																								"src": "21778:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "21763:17:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_stakeDetails_$1508_storage",
																								"typeString": "struct LPStakingV3.stakeDetails storage ref"
																							}
																						},
																						"id": 3167,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "depositId",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1491,
																						"src": "21763:27:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "66616c7365",
																						"id": 3168,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "bool",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "21792:5:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"value": "false"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					],
																					"id": 3159,
																					"name": "_calculateReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2307,
																					"src": "21734:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
																						"typeString": "function (address,uint256,bool) view returns (uint256)"
																					}
																				},
																				"id": 3169,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "21734:64:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21727:71:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3171,
																		"nodeType": "ExpressionStatement",
																		"src": "21727:71:11"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3137,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3134,
														"src": "21580:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 3138,
																"name": "_depositIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1482,
																"src": "21585:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$1033_storage",
																	"typeString": "struct CountersUpgradeable.Counter storage ref"
																}
															},
															"id": 3139,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1045,
															"src": "21585:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1033_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1033_storage_ptr_$",
																"typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 3140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21585:21:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21580:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3175,
												"initializationExpression": {
													"assignments": [
														3134
													],
													"declarations": [
														{
															"constant": false,
															"id": 3134,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "21573:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 3175,
															"src": "21565:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3133,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "21565:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3136,
													"initialValue": {
														"hexValue": "31",
														"id": 3135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21577:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "21565:13:11"
												},
												"loopExpression": {
													"expression": {
														"id": 3143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "21608:3:11",
														"subExpression": {
															"id": 3142,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3134,
															"src": "21608:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3144,
													"nodeType": "ExpressionStatement",
													"src": "21608:3:11"
												},
												"nodeType": "ForStatement",
												"src": "21560:263:11"
											},
											{
												"expression": {
													"id": 3178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3176,
														"name": "_totalReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3127,
														"src": "21832:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3177,
														"name": "sum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3130,
														"src": "21847:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21832:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3179,
												"nodeType": "ExpressionStatement",
												"src": "21832:18:11"
											}
										]
									},
									"documentation": {
										"id": 3124,
										"nodeType": "StructuredDocumentation",
										"src": "21232:221:11",
										"text": " @dev Calculate and return total undelivered rewards till now.\n @notice This function will give you total of unclaimed rewards till now.\n @return _totalReward Total unclaimed reward till now."
									},
									"functionSelector": "750142e6",
									"id": 3181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalReward",
									"nameLocation": "21468:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21479:2:11"
									},
									"returnParameters": {
										"id": 3128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3127,
												"mutability": "mutable",
												"name": "_totalReward",
												"nameLocation": "21511:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 3181,
												"src": "21503:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21503:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21502:22:11"
									},
									"scope": 3214,
									"src": "21459:398:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3197,
										"nodeType": "Block",
										"src": "22287:74:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 3189,
																"name": "pools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "22304:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_stakingPool_$1603_storage_$dyn_storage",
																	"typeString": "struct LPStakingV3.stakingPool storage ref[] storage ref"
																}
															},
															"id": 3191,
															"indexExpression": {
																"id": 3190,
																"name": "_poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3184,
																"src": "22310:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "22304:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stakingPool_$1603_storage",
																"typeString": "struct LPStakingV3.stakingPool storage ref"
															}
														},
														"id": 3192,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalAllotedReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1600,
														"src": "22304:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3193,
															"name": "totalReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3181,
															"src": "22341:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 3194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22341:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22304:50:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3188,
												"id": 3196,
												"nodeType": "Return",
												"src": "22297:57:11"
											}
										]
									},
									"documentation": {
										"id": 3182,
										"nodeType": "StructuredDocumentation",
										"src": "21863:337:11",
										"text": " @dev Function to check if contract have suffecient reward allowance or not\n @notice This function will return if it has sufficient fund for paying the reward\n @param _poolId The pool for which you want to check reward availibility\n @return True if have sufficient allowance for paying all the rewards"
									},
									"functionSelector": "cf5badc6",
									"id": 3198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "haveSuffecientFundsForReward",
									"nameLocation": "22214:28:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3184,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "22251:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 3198,
												"src": "22243:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22243:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22242:17:11"
									},
									"returnParameters": {
										"id": 3188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3198,
												"src": "22281:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22281:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22280:6:11"
									},
									"scope": 3214,
									"src": "22205:156:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3212,
										"nodeType": "Block",
										"src": "22553:53:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3208,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "22593:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																		"typeString": "contract LPStakingV3"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LPStakingV3_$3214",
																		"typeString": "contract LPStakingV3"
																	}
																],
																"id": 3207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22585:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3206,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22585:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22585:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3204,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "22570:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$402",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 3205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 359,
														"src": "22570:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22570:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3203,
												"id": 3211,
												"nodeType": "Return",
												"src": "22563:36:11"
											}
										]
									},
									"documentation": {
										"id": 3199,
										"nodeType": "StructuredDocumentation",
										"src": "22368:123:11",
										"text": " @dev Function to get balance of this contract WETH market fee\n @return uint balance of weth in wei"
									},
									"functionSelector": "b0203a80",
									"id": 3213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAccMarketFee",
									"nameLocation": "22505:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22520:2:11"
									},
									"returnParameters": {
										"id": 3203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3213,
												"src": "22544:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22544:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22543:9:11"
									},
									"scope": 3214,
									"src": "22496:110:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3215,
							"src": "1433:21175:11",
							"usedErrors": []
						}
					],
					"src": "33:22575:11"
				},
				"id": 11
			}
		}
	}
}